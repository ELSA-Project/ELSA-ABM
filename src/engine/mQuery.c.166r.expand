
;; Function _convert_time (_convert_time, funcdef_no=2, decl_uid=3111, cgraph_uid=2)

_convert_time (char * c)
{
  int f;
  int i;
  int s;
  int m;
  int H;
  long double time;
  long double D.3274;
  long double D.3273;
  long double D.3272;
  long double D.3271;
  long double D.3270;
  long double D.3269;
  double D.3268;
  double D.3267;
  double D.3266;
  double D.3265;
  double D.3264;
  const char * D.3263;
  sizetype D.3262;
  char D.3261;
  char * D.3260;
  sizetype D.3259;
  const char * D.3258;
  sizetype D.3257;
  char D.3256;
  char * D.3255;
  sizetype D.3254;
  const char * D.3253;
  sizetype D.3252;
  char D.3251;
  char * D.3250;
  sizetype D.3249;
  sizetype _7;
  char * _8;
  char _9;
  sizetype _12;
  const char * _13;
  sizetype _15;
  char * _16;
  char _17;
  sizetype _20;
  const char * _21;
  sizetype _23;
  char * _24;
  char _25;
  sizetype _28;
  const char * _29;
  double _31;
  double _32;
  double _33;
  double _34;
  double _35;
  long double _36;
  long double _37;
  long double _38;
  long double _39;
  long double _40;
  long double _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  H_5 = atoi (c_4(D));
  i_6 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  i_10 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_6(2), i_10(3)>
  _7 = (sizetype) i_1;
  _8 = c_4(D) + _7;
  _9 = *_8;
  if (_9 != 58)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  i_11 = i_1 + 1;
  _12 = (sizetype) i_11;
  _13 = c_4(D) + _12;
  m_14 = atoi (_13);
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_18 = i_2 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_11(5), i_18(6)>
  _15 = (sizetype) i_2;
  _16 = c_4(D) + _15;
  _17 = *_16;
  if (_17 != 58)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  i_19 = i_2 + 1;
  _20 = (sizetype) i_19;
  _21 = c_4(D) + _20;
  s_22 = atoi (_21);
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       10
  i_26 = i_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # i_3 = PHI <i_19(8), i_26(9)>
  _23 = (sizetype) i_3;
  _24 = c_4(D) + _23;
  _25 = *_24;
  if (_25 != 58)
    goto <bb 9>;
  else
    goto <bb 11>;
;;    succ:       9
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  i_27 = i_3 + 1;
  _28 = (sizetype) i_27;
  _29 = c_4(D) + _28;
  f_30 = atoi (_29);
  _31 = (double) H_5;
  _32 = _31 * 3.6e+3;
  _33 = (double) m_14;
  _34 = _33 * 6.0e+1;
  _35 = _32 + _34;
  _36 = (long double) _35;
  _37 = (long double) s_22;
  _38 = _36 + _37;
  _39 = (long double) f_30;
  _40 = _39 / 1.0e+6;
  time_41 = _38 + _40;
  _42 = time_41;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L9>:
  return _42;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (c_4(D) - 4 )
Partition 5 (H_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (m_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (s_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (i_26 - 26 )
Partition 27 (i_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (f_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (time_41 - 41 )
Partition 42 (_42 - 42 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (c_4(D) - 4 )
Partition 4 (i_6 - 6 )
Partition 5 (i_10 - 10 )
Partition 6 (i_11 - 11 )
Partition 7 (i_18 - 18 )
Partition 8 (i_19 - 19 )
Partition 9 (i_26 - 26 )
Partition 10 (i_27 - 27 )


Live on entry to BB2 : c_4(D)  

Live on entry to BB3 : i_1  c_4(D)  

Live on entry to BB4 : c_4(D)  

Live on entry to BB5 : i_1  c_4(D)  

Live on entry to BB6 : i_2  c_4(D)  

Live on entry to BB7 : c_4(D)  

Live on entry to BB8 : i_2  c_4(D)  

Live on entry to BB9 : i_3  c_4(D)  

Live on entry to BB10 : c_4(D)  

Live on entry to BB11 : i_3  c_4(D)  

Live on entry to BB12 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_10
(2147483646) i_1 <-> i_11
(2147483646) i_1 <-> i_18
(2147483646) i_1 <-> i_19
(2147483646) i_1 <-> i_26
(2147483646) i_1 <-> i_27
(1) i_2 <-> i_11
(1) i_3 <-> i_19

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (c_4(D) - 4 )
Partition 4 (i_6 - 6 )
Partition 5 (i_10 - 10 )
Partition 6 (i_11 - 11 )
Partition 7 (i_18 - 18 )
Partition 8 (i_19 - 19 )
Partition 9 (i_26 - 26 )
Partition 10 (i_27 - 27 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (6)i_6 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (10)i_10 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (11)i_11 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (18)i_18 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (19)i_19 [map: 0, 8] : Success -> 0
Coalesce list: (1)i_1 & (26)i_26 [map: 0, 9] : Success -> 0
Coalesce list: (1)i_1 & (27)i_27 [map: 0, 10] : Success -> 0
Coalesce list: (2)i_1 & (11)i_1: Already Coalesced.
Coalesce list: (3)i_1 & (19)i_1: Already Coalesced.
Coalesce list: (3)i_1 & (26)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (18)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (10)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 3 6 10 11 18 19 26 27 )
Partition 1 (c_4(D) - 4 )
Partition 2 (H_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_12 - 12 )
Partition 7 (_13 - 13 )
Partition 8 (m_14 - 14 )
Partition 9 (_15 - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_20 - 20 )
Partition 13 (_21 - 21 )
Partition 14 (s_22 - 22 )
Partition 15 (_23 - 23 )
Partition 16 (_24 - 24 )
Partition 17 (_25 - 25 )
Partition 18 (_28 - 28 )
Partition 19 (_29 - 29 )
Partition 20 (f_30 - 30 )
Partition 21 (_31 - 31 )
Partition 22 (_32 - 32 )
Partition 23 (_33 - 33 )
Partition 24 (_34 - 34 )
Partition 25 (_35 - 35 )
Partition 26 (_36 - 36 )
Partition 27 (_37 - 37 )
Partition 28 (_38 - 38 )
Partition 29 (_39 - 39 )
Partition 30 (_40 - 40 )
Partition 31 (time_41 - 41 )
Partition 32 (_42 - 42 )

_convert_time (char * c)
{
  int f;
  int i;
  int s;
  int m;
  int H;
  long double time;
  long double D.3274;
  long double D.3273;
  long double D.3272;
  long double D.3271;
  long double D.3270;
  long double D.3269;
  double D.3268;
  double D.3267;
  double D.3266;
  double D.3265;
  double D.3264;
  const char * D.3263;
  sizetype D.3262;
  char D.3261;
  char * D.3260;
  sizetype D.3259;
  const char * D.3258;
  sizetype D.3257;
  char D.3256;
  char * D.3255;
  sizetype D.3254;
  const char * D.3253;
  sizetype D.3252;
  char D.3251;
  char * D.3250;
  sizetype D.3249;
  sizetype _7;
  char * _8;
  char _9;
  sizetype _12;
  const char * _13;
  sizetype _15;
  char * _16;
  char _17;
  sizetype _20;
  const char * _21;
  sizetype _23;
  char * _24;
  char _25;
  sizetype _28;
  const char * _29;
  double _31;
  double _32;
  double _33;
  double _34;
  double _35;
  long double _36;
  long double _37;
  long double _38;
  long double _39;
  long double _40;
  long double _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  H_5 = atoi (c_4(D));
  i_6 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  i_10 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_6(2), i_10(3)>
  _7 = (sizetype) i_1;
  _8 = c_4(D) + _7;
  _9 = *_8;
  if (_9 != 58)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  i_11 = i_1 + 1;
  _12 = (sizetype) i_11;
  _13 = c_4(D) + _12;
  m_14 = atoi (_13);
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_18 = i_2 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_11(5), i_18(6)>
  _15 = (sizetype) i_2;
  _16 = c_4(D) + _15;
  _17 = *_16;
  if (_17 != 58)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  i_19 = i_2 + 1;
  _20 = (sizetype) i_19;
  _21 = c_4(D) + _20;
  s_22 = atoi (_21);
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       10
  i_26 = i_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # i_3 = PHI <i_19(8), i_26(9)>
  _23 = (sizetype) i_3;
  _24 = c_4(D) + _23;
  _25 = *_24;
  if (_25 != 58)
    goto <bb 9>;
  else
    goto <bb 11>;
;;    succ:       9
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  i_27 = i_3 + 1;
  _28 = (sizetype) i_27;
  _29 = c_4(D) + _28;
  f_30 = atoi (_29);
  _31 = (double) H_5;
  _32 = _31 * 3.6e+3;
  _33 = (double) m_14;
  _34 = _33 * 6.0e+1;
  _35 = _32 + _34;
  _36 = (long double) _35;
  _37 = (long double) s_22;
  _38 = _36 + _37;
  _39 = (long double) f_30;
  _40 = _39 / 1.0e+6;
  time_41 = _38 + _40;
  _42 = time_41;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L9>:
  return _42;
;;    succ:       EXIT

}


Partition 5: size 16 align 16
	time_41
Partition 4: size 4 align 4
	f_30
Partition 3: size 4 align 4
	s_22
Partition 2: size 4 align 4
	m_14
Partition 1: size 4 align 4
	H_5
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; H_5 = atoi (c_4(D));

(insn 6 5 7 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:24 -1
     (nil))

(insn 7 6 8 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:24 -1
     (nil))

(call_insn/i 8 7 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:24 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 9 8 10 (set (reg:SI 87)
        (reg:SI 0 ax)) mQuery.c:24 -1
     (nil))

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32])
        (reg:SI 87)) mQuery.c:24 -1
     (nil))

;; i_6 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:25 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i_10 = i_1 + 1;

(insn 15 14 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 16 15 17 2 "" [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = (sizetype) i_1;

(insn 18 17 19 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:25 -1
     (nil))

(insn 19 18 0 (set (reg:DI 59 [ D.3671 ])
        (sign_extend:DI (reg:SI 88))) mQuery.c:25 -1
     (nil))

;; _8 = c_4(D) + _7;

(insn 20 19 21 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:25 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg/f:DI 60 [ D.3672 ])
                (plus:DI (reg:DI 59 [ D.3671 ])
                    (reg/f:DI 89)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 59 [ D.3671 ]))
        (nil)))

;; _9 = *_8;

(insn 22 21 0 (set (reg:QI 61 [ D.3673 ])
        (mem:QI (reg/f:DI 60 [ D.3672 ]) [0 *_8+0 S1 A8])) mQuery.c:25 -1
     (nil))

;; if (_9 != 58)

(insn 24 22 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:25 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) mQuery.c:25 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; i_11 = i_1 + 1;

(insn 27 26 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 -1
     (nil))

;; _12 = (sizetype) i_11;

(insn 28 27 29 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:26 -1
     (nil))

(insn 29 28 0 (set (reg:DI 62 [ D.3671 ])
        (sign_extend:DI (reg:SI 90))) mQuery.c:26 -1
     (nil))

;; _13 = c_4(D) + _12;

(insn 30 29 31 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:26 -1
     (nil))

(insn 31 30 0 (parallel [
            (set (reg/f:DI 63 [ D.3674 ])
                (plus:DI (reg:DI 62 [ D.3671 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 62 [ D.3671 ]))
        (nil)))

;; m_14 = atoi (_13);

(insn 32 31 33 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.3674 ])) mQuery.c:26 -1
     (nil))

(call_insn/i 33 32 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:26 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 34 33 35 (set (reg:SI 92)
        (reg:SI 0 ax)) mQuery.c:26 -1
     (nil))

(insn 35 34 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32])
        (reg:SI 92)) mQuery.c:26 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_18 = i_2 + 1;

(insn 39 38 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 4 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = (sizetype) i_2;

(insn 42 41 43 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:27 -1
     (nil))

(insn 43 42 0 (set (reg:DI 64 [ D.3671 ])
        (sign_extend:DI (reg:SI 93))) mQuery.c:27 -1
     (nil))

;; _16 = c_4(D) + _15;

(insn 44 43 45 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:27 -1
     (nil))

(insn 45 44 0 (parallel [
            (set (reg/f:DI 65 [ D.3672 ])
                (plus:DI (reg:DI 64 [ D.3671 ])
                    (reg/f:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 64 [ D.3671 ]))
        (nil)))

;; _17 = *_16;

(insn 46 45 0 (set (reg:QI 66 [ D.3673 ])
        (mem:QI (reg/f:DI 65 [ D.3672 ]) [0 *_16+0 S1 A8])) mQuery.c:27 -1
     (nil))

;; if (_17 != 58)

(insn 48 46 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:27 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) mQuery.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; i_19 = i_2 + 1;

(insn 51 50 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 -1
     (nil))

;; _20 = (sizetype) i_19;

(insn 52 51 53 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:28 -1
     (nil))

(insn 53 52 0 (set (reg:DI 67 [ D.3671 ])
        (sign_extend:DI (reg:SI 95))) mQuery.c:28 -1
     (nil))

;; _21 = c_4(D) + _20;

(insn 54 53 55 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:28 -1
     (nil))

(insn 55 54 0 (parallel [
            (set (reg/f:DI 68 [ D.3674 ])
                (plus:DI (reg:DI 67 [ D.3671 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 67 [ D.3671 ]))
        (nil)))

;; s_22 = atoi (_21);

(insn 56 55 57 (set (reg:DI 5 di)
        (reg/f:DI 68 [ D.3674 ])) mQuery.c:28 -1
     (nil))

(call_insn/i 57 56 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:28 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 58 57 59 (set (reg:SI 97)
        (reg:SI 0 ax)) mQuery.c:28 -1
     (nil))

(insn 59 58 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32])
        (reg:SI 97)) mQuery.c:28 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; i_26 = i_3 + 1;

(insn 63 62 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 64 63 65 6 "" [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)

;; _23 = (sizetype) i_3;

(insn 66 65 67 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:29 -1
     (nil))

(insn 67 66 0 (set (reg:DI 69 [ D.3671 ])
        (sign_extend:DI (reg:SI 98))) mQuery.c:29 -1
     (nil))

;; _24 = c_4(D) + _23;

(insn 68 67 69 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:29 -1
     (nil))

(insn 69 68 0 (parallel [
            (set (reg/f:DI 70 [ D.3672 ])
                (plus:DI (reg:DI 69 [ D.3671 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 69 [ D.3671 ]))
        (nil)))

;; _25 = *_24;

(insn 70 69 0 (set (reg:QI 71 [ D.3673 ])
        (mem:QI (reg/f:DI 70 [ D.3672 ]) [0 *_24+0 S1 A8])) mQuery.c:29 -1
     (nil))

;; if (_25 != 58)

(insn 72 70 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:29 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mQuery.c:29 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; i_27 = i_3 + 1;

(insn 75 74 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 -1
     (nil))

;; _28 = (sizetype) i_27;

(insn 76 75 77 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:30 -1
     (nil))

(insn 77 76 0 (set (reg:DI 72 [ D.3671 ])
        (sign_extend:DI (reg:SI 100))) mQuery.c:30 -1
     (nil))

;; _29 = c_4(D) + _28;

(insn 78 77 79 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:30 -1
     (nil))

(insn 79 78 0 (parallel [
            (set (reg/f:DI 73 [ D.3674 ])
                (plus:DI (reg:DI 72 [ D.3671 ])
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 72 [ D.3671 ]))
        (nil)))

;; f_30 = atoi (_29);

(insn 80 79 81 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3674 ])) mQuery.c:30 -1
     (nil))

(call_insn/i 81 80 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 82 81 83 (set (reg:SI 102)
        (reg:SI 0 ax)) mQuery.c:30 -1
     (nil))

(insn 83 82 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32])
        (reg:SI 102)) mQuery.c:30 -1
     (nil))

;; _31 = (double) H_5;

(insn 84 83 0 (set (reg:DF 74 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32]))) mQuery.c:32 -1
     (nil))

;; _32 = _31 * 3.6e+3;

(insn 85 84 86 (set (reg:DF 103)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))

(insn 86 85 0 (set (reg:DF 75 [ D.3675 ])
        (mult:DF (reg:DF 74 [ D.3675 ])
            (reg:DF 103))) mQuery.c:32 -1
     (nil))

;; _33 = (double) m_14;

(insn 87 86 0 (set (reg:DF 76 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32]))) mQuery.c:32 -1
     (nil))

;; _34 = _33 * 6.0e+1;

(insn 88 87 89 (set (reg:DF 104)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))

(insn 89 88 0 (set (reg:DF 77 [ D.3675 ])
        (mult:DF (reg:DF 76 [ D.3675 ])
            (reg:DF 104))) mQuery.c:32 -1
     (nil))

;; _35 = _32 + _34;

(insn 90 89 0 (set (reg:DF 78 [ D.3675 ])
        (plus:DF (reg:DF 75 [ D.3675 ])
            (reg:DF 77 [ D.3675 ]))) mQuery.c:32 -1
     (nil))

;; _36 = (long double) _35;

(insn 91 90 0 (set (reg:XF 79 [ D.3676 ])
        (float_extend:XF (reg:DF 78 [ D.3675 ]))) mQuery.c:32 -1
     (nil))

;; _37 = (long double) s_22;

(insn 92 91 0 (set (reg:XF 80 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32]))) mQuery.c:32 -1
     (nil))

;; _38 = _36 + _37;

(insn 93 92 0 (set (reg:XF 81 [ D.3676 ])
        (plus:XF (reg:XF 79 [ D.3676 ])
            (reg:XF 80 [ D.3676 ]))) mQuery.c:32 -1
     (nil))

;; _39 = (long double) f_30;

(insn 94 93 0 (set (reg:XF 82 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32]))) mQuery.c:32 -1
     (nil))

;; _40 = _39 / 1.0e+6;

(insn 95 94 96 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))

(insn 96 95 0 (set (reg:XF 83 [ D.3676 ])
        (div:XF (reg:XF 82 [ D.3676 ])
            (reg:XF 105))) mQuery.c:32 -1
     (nil))

;; time_41 = _38 + _40;

(insn 97 96 98 (set (reg:XF 106)
        (plus:XF (reg:XF 81 [ D.3676 ])
            (reg:XF 83 [ D.3676 ]))) mQuery.c:32 -1
     (nil))

(insn 98 97 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])
        (reg:XF 106)) mQuery.c:32 -1
     (nil))

;; _42 = time_41;

(insn 99 98 0 (set (reg:XF 84 [ D.3676 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])) mQuery.c:34 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; <L9>:

(code_label 100 99 101 8 "" [0 uses])

(note 101 100 0 NOTE_INSN_BASIC_BLOCK)

;; return _42;

(insn 102 101 103 (set (reg:XF 85 [ <retval> ])
        (reg:XF 84 [ D.3676 ])) mQuery.c:34 -1
     (nil))

(jump_insn 103 102 104 (set (pc)
        (label_ref 0)) mQuery.c:34 -1
     (nil))

(barrier 104 103 0)
deleting block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
        (reg:DI 5 di [ c ])) mQuery.c:20 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:24 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:24 -1
     (nil))
(call_insn/i 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:24 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 87)
        (reg:SI 0 ax)) mQuery.c:24 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32])
        (reg:SI 87)) mQuery.c:24 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:25 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 16)) mQuery.c:25 -1
     (nil)
 -> 16)
;;  succ:       5

(barrier 13 12 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 23 13 14 4 3 "" [1 uses])
(note 14 23 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 16 15 17 5 2 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:25 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 59 [ D.3671 ])
        (sign_extend:DI (reg:SI 88))) mQuery.c:25 -1
     (nil))
(insn 20 19 21 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:25 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/f:DI 60 [ D.3672 ])
                (plus:DI (reg:DI 59 [ D.3671 ])
                    (reg/f:DI 89)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 59 [ D.3671 ]))
        (nil)))
(insn 22 21 24 5 (set (reg:QI 61 [ D.3673 ])
        (mem:QI (reg/f:DI 60 [ D.3672 ]) [0 *_8+0 S1 A8])) mQuery.c:25 -1
     (nil))
(insn 24 22 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:25 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) mQuery.c:25 -1
     (nil)
 -> 23)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 -1
     (nil))
(insn 28 27 29 6 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:26 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 62 [ D.3671 ])
        (sign_extend:DI (reg:SI 90))) mQuery.c:26 -1
     (nil))
(insn 30 29 31 6 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:26 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 63 [ D.3674 ])
                (plus:DI (reg:DI 62 [ D.3671 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 62 [ D.3671 ]))
        (nil)))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.3674 ])) mQuery.c:26 -1
     (nil))
(call_insn/i 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:26 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 6 (set (reg:SI 92)
        (reg:SI 0 ax)) mQuery.c:26 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32])
        (reg:SI 92)) mQuery.c:26 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 40)) mQuery.c:27 -1
     (nil)
 -> 40)
;;  succ:       8

(barrier 37 36 47)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 47 37 38 7 5 "" [1 uses])
(note 38 47 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 40 39 41 8 4 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:27 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 64 [ D.3671 ])
        (sign_extend:DI (reg:SI 93))) mQuery.c:27 -1
     (nil))
(insn 44 43 45 8 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:27 -1
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:DI 65 [ D.3672 ])
                (plus:DI (reg:DI 64 [ D.3671 ])
                    (reg/f:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 64 [ D.3671 ]))
        (nil)))
(insn 46 45 48 8 (set (reg:QI 66 [ D.3673 ])
        (mem:QI (reg/f:DI 65 [ D.3672 ]) [0 *_16+0 S1 A8])) mQuery.c:27 -1
     (nil))
(insn 48 46 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:27 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) mQuery.c:27 -1
     (nil)
 -> 47)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 -1
     (nil))
(insn 52 51 53 9 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:28 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 67 [ D.3671 ])
        (sign_extend:DI (reg:SI 95))) mQuery.c:28 -1
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:28 -1
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg/f:DI 68 [ D.3674 ])
                (plus:DI (reg:DI 67 [ D.3671 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 67 [ D.3671 ]))
        (nil)))
(insn 56 55 57 9 (set (reg:DI 5 di)
        (reg/f:DI 68 [ D.3674 ])) mQuery.c:28 -1
     (nil))
(call_insn/i 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:28 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 9 (set (reg:SI 97)
        (reg:SI 0 ax)) mQuery.c:28 -1
     (nil))
(insn 59 58 60 9 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32])
        (reg:SI 97)) mQuery.c:28 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (label_ref 64)) mQuery.c:29 -1
     (nil)
 -> 64)
;;  succ:       11

(barrier 61 60 71)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 71 61 62 10 7 "" [1 uses])
(note 62 71 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 64 63 65 11 6 "" [1 uses])
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:29 -1
     (nil))
(insn 67 66 68 11 (set (reg:DI 69 [ D.3671 ])
        (sign_extend:DI (reg:SI 98))) mQuery.c:29 -1
     (nil))
(insn 68 67 69 11 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:29 -1
     (nil))
(insn 69 68 70 11 (parallel [
            (set (reg/f:DI 70 [ D.3672 ])
                (plus:DI (reg:DI 69 [ D.3671 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 69 [ D.3671 ]))
        (nil)))
(insn 70 69 72 11 (set (reg:QI 71 [ D.3673 ])
        (mem:QI (reg/f:DI 70 [ D.3672 ]) [0 *_24+0 S1 A8])) mQuery.c:29 -1
     (nil))
(insn 72 70 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:29 -1
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mQuery.c:29 -1
     (nil)
 -> 71)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 -1
     (nil))
(insn 76 75 77 12 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:30 -1
     (nil))
(insn 77 76 78 12 (set (reg:DI 72 [ D.3671 ])
        (sign_extend:DI (reg:SI 100))) mQuery.c:30 -1
     (nil))
(insn 78 77 79 12 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:30 -1
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg/f:DI 73 [ D.3674 ])
                (plus:DI (reg:DI 72 [ D.3671 ])
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 72 [ D.3671 ]))
        (nil)))
(insn 80 79 81 12 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3674 ])) mQuery.c:30 -1
     (nil))
(call_insn/i 81 80 82 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 12 (set (reg:SI 102)
        (reg:SI 0 ax)) mQuery.c:30 -1
     (nil))
(insn 83 82 84 12 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32])
        (reg:SI 102)) mQuery.c:30 -1
     (nil))
(insn 84 83 85 12 (set (reg:DF 74 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32]))) mQuery.c:32 -1
     (nil))
(insn 85 84 86 12 (set (reg:DF 103)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 86 85 87 12 (set (reg:DF 75 [ D.3675 ])
        (mult:DF (reg:DF 74 [ D.3675 ])
            (reg:DF 103))) mQuery.c:32 -1
     (nil))
(insn 87 86 88 12 (set (reg:DF 76 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32]))) mQuery.c:32 -1
     (nil))
(insn 88 87 89 12 (set (reg:DF 104)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 89 88 90 12 (set (reg:DF 77 [ D.3675 ])
        (mult:DF (reg:DF 76 [ D.3675 ])
            (reg:DF 104))) mQuery.c:32 -1
     (nil))
(insn 90 89 91 12 (set (reg:DF 78 [ D.3675 ])
        (plus:DF (reg:DF 75 [ D.3675 ])
            (reg:DF 77 [ D.3675 ]))) mQuery.c:32 -1
     (nil))
(insn 91 90 92 12 (set (reg:XF 79 [ D.3676 ])
        (float_extend:XF (reg:DF 78 [ D.3675 ]))) mQuery.c:32 -1
     (nil))
(insn 92 91 93 12 (set (reg:XF 80 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32]))) mQuery.c:32 -1
     (nil))
(insn 93 92 94 12 (set (reg:XF 81 [ D.3676 ])
        (plus:XF (reg:XF 79 [ D.3676 ])
            (reg:XF 80 [ D.3676 ]))) mQuery.c:32 -1
     (nil))
(insn 94 93 95 12 (set (reg:XF 82 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32]))) mQuery.c:32 -1
     (nil))
(insn 95 94 96 12 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mQuery.c:32 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 96 95 97 12 (set (reg:XF 83 [ D.3676 ])
        (div:XF (reg:XF 82 [ D.3676 ])
            (reg:XF 105))) mQuery.c:32 -1
     (nil))
(insn 97 96 98 12 (set (reg:XF 106)
        (plus:XF (reg:XF 81 [ D.3676 ])
            (reg:XF 83 [ D.3676 ]))) mQuery.c:32 -1
     (nil))
(insn 98 97 99 12 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])
        (reg:XF 106)) mQuery.c:32 -1
     (nil))
(insn 99 98 102 12 (set (reg:XF 84 [ D.3676 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])) mQuery.c:34 -1
     (nil))
(insn 102 99 106 12 (set (reg:XF 85 [ <retval> ])
        (reg:XF 84 [ D.3676 ])) mQuery.c:34 -1
     (nil))
(insn 106 102 109 12 (set (reg/i:XF 8 st)
        (reg:XF 85 [ <retval> ])) mQuery.c:35 -1
     (nil))
(insn 109 106 0 12 (use (reg/i:XF 8 st)) mQuery.c:35 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _calculate_velocity (_calculate_velocity, funcdef_no=3, decl_uid=3130, cgraph_uid=3)

_calculate_velocity (struct Aircraft_t * flight, int Nflight)
{
  long double t;
  int j;
  int i;
  int D.3352;
  int D.3351;
  int D.3350;
  struct Aircraft_t * D.3349;
  long unsigned int D.3348;
  long unsigned int D.3347;
  long double D.3346;
  long double * D.3345;
  long double * * D.3344;
  long unsigned int D.3343;
  long unsigned int D.3342;
  long double * * D.3341;
  struct Aircraft_t * D.3340;
  long unsigned int D.3339;
  long unsigned int D.3338;
  long double * D.3337;
  long double * * D.3336;
  sizetype D.3335;
  sizetype D.3334;
  sizetype D.3333;
  long double * * D.3332;
  struct Aircraft_t * D.3331;
  long unsigned int D.3330;
  long unsigned int D.3329;
  long double * D.3328;
  long unsigned int D.3327;
  long unsigned int D.3326;
  long double * D.3325;
  struct Aircraft_t * D.3324;
  long unsigned int D.3323;
  long unsigned int D.3322;
  long double D.3320;
  long double D.3319;
  long double * D.3318;
  long double * * D.3317;
  long unsigned int D.3316;
  long unsigned int D.3315;
  long double * * D.3314;
  struct Aircraft_t * D.3313;
  long unsigned int D.3312;
  long unsigned int D.3311;
  long double * D.3310;
  long double * * D.3309;
  sizetype D.3308;
  sizetype D.3307;
  sizetype D.3306;
  long double * * D.3305;
  struct Aircraft_t * D.3304;
  long unsigned int D.3303;
  long unsigned int D.3302;
  long double * D.3301;
  long unsigned int D.3300;
  long unsigned int D.3299;
  long double * D.3298;
  struct Aircraft_t * D.3297;
  long unsigned int D.3296;
  long unsigned int D.3295;
  long double D.3292;
  long double * D.3291;
  long unsigned int D.3290;
  long unsigned int D.3289;
  long double * D.3288;
  struct Aircraft_t * D.3287;
  long unsigned int D.3286;
  long unsigned int D.3285;
  long double D.3284;
  long double * D.3283;
  sizetype D.3282;
  sizetype D.3281;
  sizetype D.3280;
  long double * D.3279;
  struct Aircraft_t * D.3278;
  long unsigned int D.3277;
  long unsigned int D.3276;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _9;
  int _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  struct Aircraft_t * _14;
  long double * _15;
  sizetype _16;
  sizetype _17;
  sizetype _18;
  long double * _19;
  long double _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  long double * _24;
  long unsigned int _25;
  long unsigned int _26;
  long double * _27;
  long double _28;
  long unsigned int _30;
  long unsigned int _31;
  struct Aircraft_t * _32;
  long double * _33;
  long unsigned int _34;
  long unsigned int _35;
  long double * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct Aircraft_t * _39;
  long double * * _40;
  sizetype _41;
  sizetype _42;
  sizetype _43;
  long double * * _44;
  long double * _45;
  long unsigned int _46;
  long unsigned int _47;
  struct Aircraft_t * _48;
  long double * * _49;
  long unsigned int _50;
  long unsigned int _51;
  long double * * _52;
  long double * _53;
  long double _54;
  long double _55;
  long unsigned int _56;
  long unsigned int _57;
  struct Aircraft_t * _58;
  long double * _59;
  long unsigned int _60;
  long unsigned int _61;
  long double * _62;
  long unsigned int _63;
  long unsigned int _64;
  struct Aircraft_t * _65;
  long double * * _66;
  sizetype _67;
  sizetype _68;
  sizetype _69;
  long double * * _70;
  long double * _71;
  long unsigned int _72;
  long unsigned int _73;
  struct Aircraft_t * _74;
  long double * * _75;
  long unsigned int _76;
  long unsigned int _77;
  long double * * _78;
  long double * _79;
  long double _80;
  int _83;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 3, loop depth 0
;;    pred:       10
  j_5 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       8
  _12 = (long unsigned int) i_1;
  _13 = _12 * 160;
  _14 = flight_8(D) + _13;
  _15 = _14->time;
  _16 = (sizetype) j_2;
  _17 = _16 + 1;
  _18 = _17 * 16;
  _19 = _15 + _18;
  _20 = *_19;
  _21 = (long unsigned int) i_1;
  _22 = _21 * 160;
  _23 = flight_8(D) + _22;
  _24 = _23->time;
  _25 = (long unsigned int) j_2;
  _26 = _25 * 16;
  _27 = _24 + _26;
  _28 = *_27;
  t_29 = _20 - _28;
  if (t_29 > 1.00000000000000002081668171172168513294309377670288085938e-3)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _30 = (long unsigned int) i_1;
  _31 = _30 * 160;
  _32 = flight_8(D) + _31;
  _33 = _32->vel;
  _34 = (long unsigned int) j_2;
  _35 = _34 * 16;
  _36 = _33 + _35;
  _37 = (long unsigned int) i_1;
  _38 = _37 * 160;
  _39 = flight_8(D) + _38;
  _40 = _39->nvp;
  _41 = (sizetype) j_2;
  _42 = _41 + 1;
  _43 = _42 * 8;
  _44 = _40 + _43;
  _45 = *_44;
  _46 = (long unsigned int) i_1;
  _47 = _46 * 160;
  _48 = flight_8(D) + _47;
  _49 = _48->nvp;
  _50 = (long unsigned int) j_2;
  _51 = _50 * 8;
  _52 = _49 + _51;
  _53 = *_52;
  _54 = haversine_distance (_53, _45);
  _55 = _54 / t_29;
  *_36 = _55;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _56 = (long unsigned int) i_1;
  _57 = _56 * 160;
  _58 = flight_8(D) + _57;
  _59 = _58->vel;
  _60 = (long unsigned int) j_2;
  _61 = _60 * 16;
  _62 = _59 + _61;
  _63 = (long unsigned int) i_1;
  _64 = _63 * 160;
  _65 = flight_8(D) + _64;
  _66 = _65->nvp;
  _67 = (sizetype) j_2;
  _68 = _67 + 1;
  _69 = _68 * 8;
  _70 = _66 + _69;
  _71 = *_70;
  _72 = (long unsigned int) i_1;
  _73 = _72 * 160;
  _74 = flight_8(D) + _73;
  _75 = _74->nvp;
  _76 = (long unsigned int) j_2;
  _77 = _76 * 8;
  _78 = _75 + _77;
  _79 = *_78;
  _80 = haversine_distance (_79, _71);
  *_62 = _80;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  j_81 = j_2 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # j_2 = PHI <j_5(3), j_81(7)>
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _9 = flight_8(D) + _7;
  _10 = _9->n_nvp;
  _11 = _10 + -1;
  if (_11 > j_2)
    goto <bb 4>;
  else
    goto <bb 9>;
;;    succ:       4
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  i_82 = i_1 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       2
;;                9
  # i_1 = PHI <i_3(2), i_82(9)>
  if (i_1 < Nflight_4(D))
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  _83 = 1;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L9>:
  return _83;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (Nflight_4(D) - 4 )
Partition 5 (j_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (flight_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (t_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (j_81 - 81 )
Partition 82 (i_82 - 82 )
Partition 83 (_83 - 83 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (Nflight_4(D) - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (flight_8(D) - 8 )
Partition 6 (j_81 - 81 )
Partition 7 (i_82 - 82 )


Live on entry to BB2 : Nflight_4(D)  flight_8(D)  

Live on entry to BB3 : i_1  Nflight_4(D)  flight_8(D)  

Live on entry to BB4 : i_1  j_2  Nflight_4(D)  flight_8(D)  

Live on entry to BB5 : i_1  j_2  Nflight_4(D)  flight_8(D)  

Live on entry to BB6 : i_1  j_2  Nflight_4(D)  flight_8(D)  

Live on entry to BB7 : i_1  j_2  Nflight_4(D)  flight_8(D)  

Live on entry to BB8 : i_1  Nflight_4(D)  flight_8(D)  

Live on entry to BB9 : i_1  Nflight_4(D)  flight_8(D)  

Live on entry to BB10 : Nflight_4(D)  flight_8(D)  

Live on entry to BB11 : 

Live on entry to BB12 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_82
(2147483646) j_2 <-> j_5
(2147483646) j_2 <-> j_81

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (Nflight_4(D) - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (flight_8(D) - 8 )
Partition 6 (j_81 - 81 )
Partition 7 (i_82 - 82 )

Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (82)i_82 [map: 0, 7] : Success -> 0
Coalesce list: (2)j_2 & (5)j_5 [map: 1, 4] : Success -> 1
Coalesce list: (2)j_2 & (81)j_81 [map: 1, 6] : Success -> 1
Coalesce list: (1)i_1 & (82)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (81)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (5)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 82 )
Partition 1 (j_2 - 2 5 81 )
Partition 2 (Nflight_4(D) - 4 )
Partition 3 (_6 - 6 )
Partition 4 (_7 - 7 )
Partition 5 (flight_8(D) - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_15 - 15 )
Partition 13 (_16 - 16 )
Partition 14 (_17 - 17 )
Partition 15 (_18 - 18 )
Partition 16 (_19 - 19 )
Partition 17 (_20 - 20 )
Partition 18 (_21 - 21 )
Partition 19 (_22 - 22 )
Partition 20 (_23 - 23 )
Partition 21 (_24 - 24 )
Partition 22 (_25 - 25 )
Partition 23 (_26 - 26 )
Partition 24 (_27 - 27 )
Partition 25 (_28 - 28 )
Partition 26 (t_29 - 29 )
Partition 27 (_30 - 30 )
Partition 28 (_31 - 31 )
Partition 29 (_32 - 32 )
Partition 30 (_33 - 33 )
Partition 31 (_34 - 34 )
Partition 32 (_35 - 35 )
Partition 33 (_36 - 36 )
Partition 34 (_37 - 37 )
Partition 35 (_38 - 38 )
Partition 36 (_39 - 39 )
Partition 37 (_40 - 40 )
Partition 38 (_41 - 41 )
Partition 39 (_42 - 42 )
Partition 40 (_43 - 43 )
Partition 41 (_44 - 44 )
Partition 42 (_45 - 45 )
Partition 43 (_46 - 46 )
Partition 44 (_47 - 47 )
Partition 45 (_48 - 48 )
Partition 46 (_49 - 49 )
Partition 47 (_50 - 50 )
Partition 48 (_51 - 51 )
Partition 49 (_52 - 52 )
Partition 50 (_53 - 53 )
Partition 51 (_54 - 54 )
Partition 52 (_55 - 55 )
Partition 53 (_56 - 56 )
Partition 54 (_57 - 57 )
Partition 55 (_58 - 58 )
Partition 56 (_59 - 59 )
Partition 57 (_60 - 60 )
Partition 58 (_61 - 61 )
Partition 59 (_62 - 62 )
Partition 60 (_63 - 63 )
Partition 61 (_64 - 64 )
Partition 62 (_65 - 65 )
Partition 63 (_66 - 66 )
Partition 64 (_67 - 67 )
Partition 65 (_68 - 68 )
Partition 66 (_69 - 69 )
Partition 67 (_70 - 70 )
Partition 68 (_71 - 71 )
Partition 69 (_72 - 72 )
Partition 70 (_73 - 73 )
Partition 71 (_74 - 74 )
Partition 72 (_75 - 75 )
Partition 73 (_76 - 76 )
Partition 74 (_77 - 77 )
Partition 75 (_78 - 78 )
Partition 76 (_79 - 79 )
Partition 77 (_80 - 80 )
Partition 78 (_83 - 83 )

_calculate_velocity (struct Aircraft_t * flight, int Nflight)
{
  long double t;
  int j;
  int i;
  int D.3352;
  int D.3351;
  int D.3350;
  struct Aircraft_t * D.3349;
  long unsigned int D.3348;
  long unsigned int D.3347;
  long double D.3346;
  long double * D.3345;
  long double * * D.3344;
  long unsigned int D.3343;
  long unsigned int D.3342;
  long double * * D.3341;
  struct Aircraft_t * D.3340;
  long unsigned int D.3339;
  long unsigned int D.3338;
  long double * D.3337;
  long double * * D.3336;
  sizetype D.3335;
  sizetype D.3334;
  sizetype D.3333;
  long double * * D.3332;
  struct Aircraft_t * D.3331;
  long unsigned int D.3330;
  long unsigned int D.3329;
  long double * D.3328;
  long unsigned int D.3327;
  long unsigned int D.3326;
  long double * D.3325;
  struct Aircraft_t * D.3324;
  long unsigned int D.3323;
  long unsigned int D.3322;
  long double D.3320;
  long double D.3319;
  long double * D.3318;
  long double * * D.3317;
  long unsigned int D.3316;
  long unsigned int D.3315;
  long double * * D.3314;
  struct Aircraft_t * D.3313;
  long unsigned int D.3312;
  long unsigned int D.3311;
  long double * D.3310;
  long double * * D.3309;
  sizetype D.3308;
  sizetype D.3307;
  sizetype D.3306;
  long double * * D.3305;
  struct Aircraft_t * D.3304;
  long unsigned int D.3303;
  long unsigned int D.3302;
  long double * D.3301;
  long unsigned int D.3300;
  long unsigned int D.3299;
  long double * D.3298;
  struct Aircraft_t * D.3297;
  long unsigned int D.3296;
  long unsigned int D.3295;
  long double D.3292;
  long double * D.3291;
  long unsigned int D.3290;
  long unsigned int D.3289;
  long double * D.3288;
  struct Aircraft_t * D.3287;
  long unsigned int D.3286;
  long unsigned int D.3285;
  long double D.3284;
  long double * D.3283;
  sizetype D.3282;
  sizetype D.3281;
  sizetype D.3280;
  long double * D.3279;
  struct Aircraft_t * D.3278;
  long unsigned int D.3277;
  long unsigned int D.3276;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _9;
  int _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  struct Aircraft_t * _14;
  long double * _15;
  sizetype _16;
  sizetype _17;
  sizetype _18;
  long double * _19;
  long double _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  long double * _24;
  long unsigned int _25;
  long unsigned int _26;
  long double * _27;
  long double _28;
  long unsigned int _30;
  long unsigned int _31;
  struct Aircraft_t * _32;
  long double * _33;
  long unsigned int _34;
  long unsigned int _35;
  long double * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct Aircraft_t * _39;
  long double * * _40;
  sizetype _41;
  sizetype _42;
  sizetype _43;
  long double * * _44;
  long double * _45;
  long unsigned int _46;
  long unsigned int _47;
  struct Aircraft_t * _48;
  long double * * _49;
  long unsigned int _50;
  long unsigned int _51;
  long double * * _52;
  long double * _53;
  long double _54;
  long double _55;
  long unsigned int _56;
  long unsigned int _57;
  struct Aircraft_t * _58;
  long double * _59;
  long unsigned int _60;
  long unsigned int _61;
  long double * _62;
  long unsigned int _63;
  long unsigned int _64;
  struct Aircraft_t * _65;
  long double * * _66;
  sizetype _67;
  sizetype _68;
  sizetype _69;
  long double * * _70;
  long double * _71;
  long unsigned int _72;
  long unsigned int _73;
  struct Aircraft_t * _74;
  long double * * _75;
  long unsigned int _76;
  long unsigned int _77;
  long double * * _78;
  long double * _79;
  long double _80;
  int _83;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 3, loop depth 0
;;    pred:       10
  j_5 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       8
  _12 = (long unsigned int) i_1;
  _13 = _12 * 160;
  _14 = flight_8(D) + _13;
  _15 = _14->time;
  _16 = (sizetype) j_2;
  _17 = _16 + 1;
  _18 = _17 * 16;
  _19 = _15 + _18;
  _20 = *_19;
  _21 = (long unsigned int) i_1;
  _22 = _21 * 160;
  _23 = flight_8(D) + _22;
  _24 = _23->time;
  _25 = (long unsigned int) j_2;
  _26 = _25 * 16;
  _27 = _24 + _26;
  _28 = *_27;
  t_29 = _20 - _28;
  if (t_29 > 1.00000000000000002081668171172168513294309377670288085938e-3)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _30 = (long unsigned int) i_1;
  _31 = _30 * 160;
  _32 = flight_8(D) + _31;
  _33 = _32->vel;
  _34 = (long unsigned int) j_2;
  _35 = _34 * 16;
  _36 = _33 + _35;
  _37 = (long unsigned int) i_1;
  _38 = _37 * 160;
  _39 = flight_8(D) + _38;
  _40 = _39->nvp;
  _41 = (sizetype) j_2;
  _42 = _41 + 1;
  _43 = _42 * 8;
  _44 = _40 + _43;
  _45 = *_44;
  _46 = (long unsigned int) i_1;
  _47 = _46 * 160;
  _48 = flight_8(D) + _47;
  _49 = _48->nvp;
  _50 = (long unsigned int) j_2;
  _51 = _50 * 8;
  _52 = _49 + _51;
  _53 = *_52;
  _54 = haversine_distance (_53, _45);
  _55 = _54 / t_29;
  *_36 = _55;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _56 = (long unsigned int) i_1;
  _57 = _56 * 160;
  _58 = flight_8(D) + _57;
  _59 = _58->vel;
  _60 = (long unsigned int) j_2;
  _61 = _60 * 16;
  _62 = _59 + _61;
  _63 = (long unsigned int) i_1;
  _64 = _63 * 160;
  _65 = flight_8(D) + _64;
  _66 = _65->nvp;
  _67 = (sizetype) j_2;
  _68 = _67 + 1;
  _69 = _68 * 8;
  _70 = _66 + _69;
  _71 = *_70;
  _72 = (long unsigned int) i_1;
  _73 = _72 * 160;
  _74 = flight_8(D) + _73;
  _75 = _74->nvp;
  _76 = (long unsigned int) j_2;
  _77 = _76 * 8;
  _78 = _75 + _77;
  _79 = *_78;
  _80 = haversine_distance (_79, _71);
  *_62 = _80;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  j_81 = j_2 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # j_2 = PHI <j_5(3), j_81(7)>
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _9 = flight_8(D) + _7;
  _10 = _9->n_nvp;
  _11 = _10 + -1;
  if (_11 > j_2)
    goto <bb 4>;
  else
    goto <bb 9>;
;;    succ:       4
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  i_82 = i_1 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       2
;;                9
  # i_1 = PHI <i_3(2), i_82(9)>
  if (i_1 < Nflight_4(D))
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  _83 = 1;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L9>:
  return _83;
;;    succ:       EXIT

}


Partition 2: size 16 align 16
	t_29
Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:40 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_5 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:41 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _12 = (long unsigned int) i_1;

(insn 15 14 16 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 -1
     (nil))

(insn 16 15 0 (set (reg:DI 64 [ D.3678 ])
        (sign_extend:DI (reg:SI 134))) mQuery.c:42 -1
     (nil))

;; _13 = _12 * 160;

(insn 17 16 18 (set (reg:DI 135)
        (reg:DI 64 [ D.3678 ])) mQuery.c:42 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 135)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

(insn 19 18 20 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 135)
                    (reg:DI 64 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 20 19 21 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

(insn 21 20 22 (set (reg:DI 135)
        (reg:DI 136)) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 22 21 0 (set (reg:DI 65 [ D.3678 ])
        (reg:DI 135)) mQuery.c:42 -1
     (nil))

;; _14 = flight_8(D) + _13;

(insn 23 22 24 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 -1
     (nil))

(insn 24 23 0 (parallel [
            (set (reg/f:DI 66 [ D.3679 ])
                (plus:DI (reg:DI 65 [ D.3678 ])
                    (reg/f:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 65 [ D.3678 ]))
        (nil)))

;; _15 = _14->time;

(insn 25 24 0 (set (reg/f:DI 67 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.3679 ])
                (const_int 16 [0x10])) [0 _14->time+0 S8 A128])) mQuery.c:42 -1
     (nil))

;; _16 = (sizetype) j_2;

(insn 26 25 27 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 -1
     (nil))

(insn 27 26 0 (set (reg:DI 68 [ D.3682 ])
        (sign_extend:DI (reg:SI 138))) mQuery.c:42 -1
     (nil))

;; _17 = _16 + 1;

(insn 28 27 0 (parallel [
            (set (reg:DI 69 [ D.3682 ])
                (plus:DI (reg:DI 68 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

;; _18 = _17 * 16;

(insn 29 28 0 (parallel [
            (set (reg:DI 70 [ D.3682 ])
                (ashift:DI (reg:DI 69 [ D.3682 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

;; _19 = _15 + _18;

(insn 30 29 0 (parallel [
            (set (reg/f:DI 71 [ D.3681 ])
                (plus:DI (reg/f:DI 67 [ D.3681 ])
                    (reg:DI 70 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

;; _20 = *_19;

(insn 31 30 0 (set (reg:XF 72 [ D.3683 ])
        (mem:XF (reg/f:DI 71 [ D.3681 ]) [0 *_19+0 S16 A128])) mQuery.c:42 -1
     (nil))

;; _21 = (long unsigned int) i_1;

(insn 32 31 33 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 -1
     (nil))

(insn 33 32 0 (set (reg:DI 73 [ D.3678 ])
        (sign_extend:DI (reg:SI 139))) mQuery.c:42 -1
     (nil))

;; _22 = _21 * 160;

(insn 34 33 35 (set (reg:DI 140)
        (reg:DI 73 [ D.3678 ])) mQuery.c:42 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:DI 140)
                (ashift:DI (reg:DI 140)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg:DI 140)
                    (reg:DI 73 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 37 36 38 (parallel [
            (set (reg:DI 141)
                (ashift:DI (reg:DI 140)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

(insn 38 37 39 (set (reg:DI 140)
        (reg:DI 141)) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 39 38 0 (set (reg:DI 74 [ D.3678 ])
        (reg:DI 140)) mQuery.c:42 -1
     (nil))

;; _23 = flight_8(D) + _22;

(insn 40 39 41 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 -1
     (nil))

(insn 41 40 0 (parallel [
            (set (reg/f:DI 75 [ D.3679 ])
                (plus:DI (reg:DI 74 [ D.3678 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 74 [ D.3678 ]))
        (nil)))

;; _24 = _23->time;

(insn 42 41 0 (set (reg/f:DI 76 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 75 [ D.3679 ])
                (const_int 16 [0x10])) [0 _23->time+0 S8 A128])) mQuery.c:42 -1
     (nil))

;; _25 = (long unsigned int) j_2;

(insn 43 42 44 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 -1
     (nil))

(insn 44 43 0 (set (reg:DI 77 [ D.3678 ])
        (sign_extend:DI (reg:SI 143))) mQuery.c:42 -1
     (nil))

;; _26 = _25 * 16;

(insn 45 44 0 (parallel [
            (set (reg:DI 78 [ D.3678 ])
                (ashift:DI (reg:DI 77 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

;; _27 = _24 + _26;

(insn 46 45 0 (parallel [
            (set (reg/f:DI 79 [ D.3681 ])
                (plus:DI (reg/f:DI 76 [ D.3681 ])
                    (reg:DI 78 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))

;; _28 = *_27;

(insn 47 46 0 (set (reg:XF 80 [ D.3683 ])
        (mem:XF (reg/f:DI 79 [ D.3681 ]) [0 *_27+0 S16 A128])) mQuery.c:42 -1
     (nil))

;; t_29 = _20 - _28;

(insn 48 47 49 (set (reg:XF 144)
        (minus:XF (reg:XF 72 [ D.3683 ])
            (reg:XF 80 [ D.3683 ]))) mQuery.c:42 -1
     (nil))

(insn 49 48 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])
        (reg:XF 144)) mQuery.c:42 -1
     (nil))

;; if (t_29 > 1.00000000000000002081668171172168513294309377670288085938e-3)

(insn 50 49 51 (set (reg:XF 145)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 -1
     (nil))

(insn 51 50 52 (set (reg:XF 146)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S16 A128])) mQuery.c:43 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0000000000000000208166817117216851329430937767028809e-3 [0x0.83126e978d4fep-9])
        (nil)))

(insn 52 51 53 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 145)
            (reg:XF 146))) mQuery.c:43 -1
     (nil))

(jump_insn 53 52 54 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) mQuery.c:43 -1
     (nil))

(jump_insn 54 53 55 (set (pc)
        (label_ref 0)) mQuery.c:43 -1
     (nil))

(barrier 55 54 56)

(code_label 56 55 0 13 "" [0 uses])

;; Generating RTL for gimple basic block 5

;; _30 = (long unsigned int) i_1;

(insn 58 57 59 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 59 58 0 (set (reg:DI 81 [ D.3678 ])
        (sign_extend:DI (reg:SI 147))) mQuery.c:43 -1
     (nil))

;; _31 = _30 * 160;

(insn 60 59 61 (set (reg:DI 148)
        (reg:DI 81 [ D.3678 ])) mQuery.c:43 -1
     (nil))

(insn 61 60 62 (parallel [
            (set (reg:DI 148)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 62 61 63 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 148)
                    (reg:DI 81 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 63 62 64 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 64 63 65 (set (reg:DI 148)
        (reg:DI 149)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 65 64 0 (set (reg:DI 82 [ D.3678 ])
        (reg:DI 148)) mQuery.c:43 -1
     (nil))

;; _32 = flight_8(D) + _31;

(insn 66 65 67 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))

(insn 67 66 0 (parallel [
            (set (reg/f:DI 83 [ D.3679 ])
                (plus:DI (reg:DI 82 [ D.3678 ])
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 82 [ D.3678 ]))
        (nil)))

;; _33 = _32->vel;

(insn 68 67 0 (set (reg/f:DI 84 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 83 [ D.3679 ])
                (const_int 24 [0x18])) [0 _32->vel+0 S8 A64])) mQuery.c:43 -1
     (nil))

;; _34 = (long unsigned int) j_2;

(insn 69 68 70 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 70 69 0 (set (reg:DI 85 [ D.3678 ])
        (sign_extend:DI (reg:SI 151))) mQuery.c:43 -1
     (nil))

;; _35 = _34 * 16;

(insn 71 70 0 (parallel [
            (set (reg:DI 86 [ D.3678 ])
                (ashift:DI (reg:DI 85 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _36 = _33 + _35;

(insn 72 71 0 (parallel [
            (set (reg/f:DI 87 [ D.3681 ])
                (plus:DI (reg/f:DI 84 [ D.3681 ])
                    (reg:DI 86 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _37 = (long unsigned int) i_1;

(insn 73 72 74 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 74 73 0 (set (reg:DI 88 [ D.3678 ])
        (sign_extend:DI (reg:SI 152))) mQuery.c:43 -1
     (nil))

;; _38 = _37 * 160;

(insn 75 74 76 (set (reg:DI 153)
        (reg:DI 88 [ D.3678 ])) mQuery.c:43 -1
     (nil))

(insn 76 75 77 (parallel [
            (set (reg:DI 153)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 77 76 78 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg:DI 153)
                    (reg:DI 88 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 78 77 79 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 153)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 79 78 80 (set (reg:DI 153)
        (reg:DI 154)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 80 79 0 (set (reg:DI 89 [ D.3678 ])
        (reg:DI 153)) mQuery.c:43 -1
     (nil))

;; _39 = flight_8(D) + _38;

(insn 81 80 82 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))

(insn 82 81 0 (parallel [
            (set (reg/f:DI 90 [ D.3679 ])
                (plus:DI (reg:DI 89 [ D.3678 ])
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 89 [ D.3678 ]))
        (nil)))

;; _40 = _39->nvp;

(insn 83 82 0 (set (reg/f:DI 91 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90 [ D.3679 ])
                (const_int 8 [0x8])) [0 _39->nvp+0 S8 A64])) mQuery.c:43 -1
     (nil))

;; _41 = (sizetype) j_2;

(insn 84 83 85 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 85 84 0 (set (reg:DI 92 [ D.3682 ])
        (sign_extend:DI (reg:SI 156))) mQuery.c:43 -1
     (nil))

;; _42 = _41 + 1;

(insn 86 85 0 (parallel [
            (set (reg:DI 93 [ D.3682 ])
                (plus:DI (reg:DI 92 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _43 = _42 * 8;

(insn 87 86 0 (parallel [
            (set (reg:DI 94 [ D.3682 ])
                (ashift:DI (reg:DI 93 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _44 = _40 + _43;

(insn 88 87 0 (parallel [
            (set (reg/f:DI 95 [ D.3684 ])
                (plus:DI (reg/f:DI 91 [ D.3684 ])
                    (reg:DI 94 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _45 = *_44;

(insn 89 88 0 (set (reg/f:DI 96 [ D.3681 ])
        (mem/f:DI (reg/f:DI 95 [ D.3684 ]) [0 *_44+0 S8 A64])) mQuery.c:43 -1
     (nil))

;; _46 = (long unsigned int) i_1;

(insn 90 89 91 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 91 90 0 (set (reg:DI 97 [ D.3678 ])
        (sign_extend:DI (reg:SI 157))) mQuery.c:43 -1
     (nil))

;; _47 = _46 * 160;

(insn 92 91 93 (set (reg:DI 158)
        (reg:DI 97 [ D.3678 ])) mQuery.c:43 -1
     (nil))

(insn 93 92 94 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 158)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 94 93 95 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 158)
                    (reg:DI 97 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 95 94 96 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 158)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

(insn 96 95 97 (set (reg:DI 158)
        (reg:DI 159)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 97 96 0 (set (reg:DI 98 [ D.3678 ])
        (reg:DI 158)) mQuery.c:43 -1
     (nil))

;; _48 = flight_8(D) + _47;

(insn 98 97 99 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))

(insn 99 98 0 (parallel [
            (set (reg/f:DI 99 [ D.3679 ])
                (plus:DI (reg:DI 98 [ D.3678 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 98 [ D.3678 ]))
        (nil)))

;; _49 = _48->nvp;

(insn 100 99 0 (set (reg/f:DI 100 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 99 [ D.3679 ])
                (const_int 8 [0x8])) [0 _48->nvp+0 S8 A64])) mQuery.c:43 -1
     (nil))

;; _50 = (long unsigned int) j_2;

(insn 101 100 102 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))

(insn 102 101 0 (set (reg:DI 101 [ D.3678 ])
        (sign_extend:DI (reg:SI 161))) mQuery.c:43 -1
     (nil))

;; _51 = _50 * 8;

(insn 103 102 0 (parallel [
            (set (reg:DI 102 [ D.3678 ])
                (ashift:DI (reg:DI 101 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _52 = _49 + _51;

(insn 104 103 0 (parallel [
            (set (reg/f:DI 103 [ D.3684 ])
                (plus:DI (reg/f:DI 100 [ D.3684 ])
                    (reg:DI 102 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))

;; _53 = *_52;

(insn 105 104 0 (set (reg/f:DI 104 [ D.3681 ])
        (mem/f:DI (reg/f:DI 103 [ D.3684 ]) [0 *_52+0 S8 A64])) mQuery.c:43 -1
     (nil))

;; _54 = haversine_distance (_53, _45);

(insn 106 105 107 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.3681 ])) mQuery.c:43 -1
     (nil))

(insn 107 106 108 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.3681 ])) mQuery.c:43 -1
     (nil))

(call_insn 108 107 109 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:43 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 109 108 0 (set (reg:XF 105 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:43 -1
     (nil))

;; _55 = _54 / t_29;

(insn 110 109 111 (set (reg:XF 162)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 -1
     (nil))

(insn 111 110 0 (set (reg:XF 106 [ D.3683 ])
        (div:XF (reg:XF 105 [ D.3683 ])
            (reg:XF 162))) mQuery.c:43 -1
     (nil))

;; *_36 = _55;

(insn 112 111 0 (set (mem:XF (reg/f:DI 87 [ D.3681 ]) [0 *_36+0 S16 A128])
        (reg:XF 106 [ D.3683 ])) mQuery.c:43 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 115 114 116 12 "" [0 uses])

(note 116 115 0 NOTE_INSN_BASIC_BLOCK)

;; _56 = (long unsigned int) i_1;

(insn 117 116 118 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 118 117 0 (set (reg:DI 107 [ D.3678 ])
        (sign_extend:DI (reg:SI 163))) mQuery.c:44 -1
     (nil))

;; _57 = _56 * 160;

(insn 119 118 120 (set (reg:DI 164)
        (reg:DI 107 [ D.3678 ])) mQuery.c:44 -1
     (nil))

(insn 120 119 121 (parallel [
            (set (reg:DI 164)
                (ashift:DI (reg:DI 164)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 121 120 122 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 164)
                    (reg:DI 107 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 122 121 123 (parallel [
            (set (reg:DI 165)
                (ashift:DI (reg:DI 164)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 123 122 124 (set (reg:DI 164)
        (reg:DI 165)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 124 123 0 (set (reg:DI 108 [ D.3678 ])
        (reg:DI 164)) mQuery.c:44 -1
     (nil))

;; _58 = flight_8(D) + _57;

(insn 125 124 126 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))

(insn 126 125 0 (parallel [
            (set (reg/f:DI 109 [ D.3679 ])
                (plus:DI (reg:DI 108 [ D.3678 ])
                    (reg/f:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 108 [ D.3678 ]))
        (nil)))

;; _59 = _58->vel;

(insn 127 126 0 (set (reg/f:DI 110 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 109 [ D.3679 ])
                (const_int 24 [0x18])) [0 _58->vel+0 S8 A64])) mQuery.c:44 -1
     (nil))

;; _60 = (long unsigned int) j_2;

(insn 128 127 129 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 129 128 0 (set (reg:DI 111 [ D.3678 ])
        (sign_extend:DI (reg:SI 167))) mQuery.c:44 -1
     (nil))

;; _61 = _60 * 16;

(insn 130 129 0 (parallel [
            (set (reg:DI 112 [ D.3678 ])
                (ashift:DI (reg:DI 111 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _62 = _59 + _61;

(insn 131 130 0 (parallel [
            (set (reg/f:DI 113 [ D.3681 ])
                (plus:DI (reg/f:DI 110 [ D.3681 ])
                    (reg:DI 112 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _63 = (long unsigned int) i_1;

(insn 132 131 133 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 133 132 0 (set (reg:DI 114 [ D.3678 ])
        (sign_extend:DI (reg:SI 168))) mQuery.c:44 -1
     (nil))

;; _64 = _63 * 160;

(insn 134 133 135 (set (reg:DI 169)
        (reg:DI 114 [ D.3678 ])) mQuery.c:44 -1
     (nil))

(insn 135 134 136 (parallel [
            (set (reg:DI 169)
                (ashift:DI (reg:DI 169)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 136 135 137 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg:DI 169)
                    (reg:DI 114 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 137 136 138 (parallel [
            (set (reg:DI 170)
                (ashift:DI (reg:DI 169)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 138 137 139 (set (reg:DI 169)
        (reg:DI 170)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 139 138 0 (set (reg:DI 115 [ D.3678 ])
        (reg:DI 169)) mQuery.c:44 -1
     (nil))

;; _65 = flight_8(D) + _64;

(insn 140 139 141 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))

(insn 141 140 0 (parallel [
            (set (reg/f:DI 116 [ D.3679 ])
                (plus:DI (reg:DI 115 [ D.3678 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 115 [ D.3678 ]))
        (nil)))

;; _66 = _65->nvp;

(insn 142 141 0 (set (reg/f:DI 117 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 116 [ D.3679 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mQuery.c:44 -1
     (nil))

;; _67 = (sizetype) j_2;

(insn 143 142 144 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 144 143 0 (set (reg:DI 118 [ D.3682 ])
        (sign_extend:DI (reg:SI 172))) mQuery.c:44 -1
     (nil))

;; _68 = _67 + 1;

(insn 145 144 0 (parallel [
            (set (reg:DI 119 [ D.3682 ])
                (plus:DI (reg:DI 118 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _69 = _68 * 8;

(insn 146 145 0 (parallel [
            (set (reg:DI 120 [ D.3682 ])
                (ashift:DI (reg:DI 119 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _70 = _66 + _69;

(insn 147 146 0 (parallel [
            (set (reg/f:DI 121 [ D.3684 ])
                (plus:DI (reg/f:DI 117 [ D.3684 ])
                    (reg:DI 120 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _71 = *_70;

(insn 148 147 0 (set (reg/f:DI 122 [ D.3681 ])
        (mem/f:DI (reg/f:DI 121 [ D.3684 ]) [0 *_70+0 S8 A64])) mQuery.c:44 -1
     (nil))

;; _72 = (long unsigned int) i_1;

(insn 149 148 150 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 150 149 0 (set (reg:DI 123 [ D.3678 ])
        (sign_extend:DI (reg:SI 173))) mQuery.c:44 -1
     (nil))

;; _73 = _72 * 160;

(insn 151 150 152 (set (reg:DI 174)
        (reg:DI 123 [ D.3678 ])) mQuery.c:44 -1
     (nil))

(insn 152 151 153 (parallel [
            (set (reg:DI 174)
                (ashift:DI (reg:DI 174)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 153 152 154 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg:DI 174)
                    (reg:DI 123 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 154 153 155 (parallel [
            (set (reg:DI 175)
                (ashift:DI (reg:DI 174)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

(insn 155 154 156 (set (reg:DI 174)
        (reg:DI 175)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 156 155 0 (set (reg:DI 124 [ D.3678 ])
        (reg:DI 174)) mQuery.c:44 -1
     (nil))

;; _74 = flight_8(D) + _73;

(insn 157 156 158 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))

(insn 158 157 0 (parallel [
            (set (reg/f:DI 125 [ D.3679 ])
                (plus:DI (reg:DI 124 [ D.3678 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 124 [ D.3678 ]))
        (nil)))

;; _75 = _74->nvp;

(insn 159 158 0 (set (reg/f:DI 126 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 125 [ D.3679 ])
                (const_int 8 [0x8])) [0 _74->nvp+0 S8 A64])) mQuery.c:44 -1
     (nil))

;; _76 = (long unsigned int) j_2;

(insn 160 159 161 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))

(insn 161 160 0 (set (reg:DI 127 [ D.3678 ])
        (sign_extend:DI (reg:SI 177))) mQuery.c:44 -1
     (nil))

;; _77 = _76 * 8;

(insn 162 161 0 (parallel [
            (set (reg:DI 128 [ D.3678 ])
                (ashift:DI (reg:DI 127 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _78 = _75 + _77;

(insn 163 162 0 (parallel [
            (set (reg/f:DI 129 [ D.3684 ])
                (plus:DI (reg/f:DI 126 [ D.3684 ])
                    (reg:DI 128 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))

;; _79 = *_78;

(insn 164 163 0 (set (reg/f:DI 130 [ D.3681 ])
        (mem/f:DI (reg/f:DI 129 [ D.3684 ]) [0 *_78+0 S8 A64])) mQuery.c:44 -1
     (nil))

;; _80 = haversine_distance (_79, _71);

(insn 165 164 166 (set (reg:DI 4 si)
        (reg/f:DI 122 [ D.3681 ])) mQuery.c:44 -1
     (nil))

(insn 166 165 167 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.3681 ])) mQuery.c:44 -1
     (nil))

(call_insn 167 166 168 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:44 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 168 167 0 (set (reg:XF 131 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:44 -1
     (nil))

;; *_62 = _80;

(insn 169 168 0 (set (mem:XF (reg/f:DI 113 [ D.3681 ]) [0 *_62+0 S16 A128])
        (reg:XF 131 [ D.3683 ])) mQuery.c:44 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 170 169 171 14 "" [0 uses])

(note 171 170 0 NOTE_INSN_BASIC_BLOCK)

;; j_81 = j_2 + 1;

(insn 172 171 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 173 172 174 11 "" [0 uses])

(note 174 173 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = (long unsigned int) i_1;

(insn 175 174 176 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:41 -1
     (nil))

(insn 176 175 0 (set (reg:DI 59 [ D.3678 ])
        (sign_extend:DI (reg:SI 178))) mQuery.c:41 -1
     (nil))

;; _7 = _6 * 160;

(insn 177 176 178 (set (reg:DI 179)
        (reg:DI 59 [ D.3678 ])) mQuery.c:41 -1
     (nil))

(insn 178 177 179 (parallel [
            (set (reg:DI 179)
                (ashift:DI (reg:DI 179)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))

(insn 179 178 180 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 179)
                    (reg:DI 59 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 180 179 181 (parallel [
            (set (reg:DI 180)
                (ashift:DI (reg:DI 179)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))

(insn 181 180 182 (set (reg:DI 179)
        (reg:DI 180)) mQuery.c:41 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 182 181 0 (set (reg:DI 60 [ D.3678 ])
        (reg:DI 179)) mQuery.c:41 -1
     (nil))

;; _9 = flight_8(D) + _7;

(insn 183 182 184 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:41 -1
     (nil))

(insn 184 183 0 (parallel [
            (set (reg/f:DI 61 [ D.3679 ])
                (plus:DI (reg:DI 60 [ D.3678 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.3678 ]))
        (nil)))

;; _10 = _9->n_nvp;

(insn 185 184 0 (set (reg:SI 62 [ D.3680 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.3679 ])
                (const_int 4 [0x4])) [0 _9->n_nvp+0 S4 A32])) mQuery.c:41 -1
     (nil))

;; _11 = _10 + -1;

(insn 186 185 0 (parallel [
            (set (reg:SI 63 [ D.3680 ])
                (plus:SI (reg:SI 62 [ D.3680 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))

;; if (_11 > j_2)

(insn 188 186 189 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.3680 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32]))) mQuery.c:41 -1
     (nil))

(jump_insn 189 188 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) mQuery.c:41 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; i_82 = i_1 + 1;

(insn 191 190 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:40 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 192 191 193 10 "" [0 uses])

(note 193 192 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < Nflight_4(D))

(insn 195 193 196 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:40 -1
     (nil))

(insn 196 195 197 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 182)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 Nflight+0 S4 A32]))) mQuery.c:40 -1
     (nil))

(jump_insn 197 196 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) mQuery.c:40 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _83 = 1;

(insn 199 198 0 (set (reg:SI 132 [ D.3680 ])
        (const_int 1 [0x1])) mQuery.c:47 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; <L9>:

(code_label 200 199 201 17 "" [0 uses])

(note 201 200 0 NOTE_INSN_BASIC_BLOCK)

;; return _83;

(insn 202 201 203 (set (reg:SI 133 [ <retval> ])
        (reg:SI 132 [ D.3680 ])) mQuery.c:47 -1
     (nil))

(jump_insn 203 202 204 (set (pc)
        (label_ref 0)) mQuery.c:47 -1
     (nil))

(barrier 204 203 0)
Purged non-fallthru edges from bb 16
deleting block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 5->6 to 9 failed.
Forwarding edge 5->6 to 9 failed.
deleting block 7
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mQuery.c:37 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mQuery.c:37 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:40 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 192)) mQuery.c:40 -1
     (nil)
 -> 192)
;;  succ:       13

(barrier 9 8 194)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 194 9 10 4 16 "" [1 uses])
(note 10 194 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:41 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (label_ref 173)) mQuery.c:41 -1
     (nil)
 -> 173)
;;  succ:       11

(barrier 13 12 187)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
(code_label 187 13 14 5 15 "" [1 uses])
(note 14 187 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 64 [ D.3678 ])
        (sign_extend:DI (reg:SI 134))) mQuery.c:42 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 135)
        (reg:DI 64 [ D.3678 ])) mQuery.c:42 -1
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 135)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 135)
                    (reg:DI 64 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 135)
        (reg:DI 136)) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 65 [ D.3678 ])
        (reg:DI 135)) mQuery.c:42 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 66 [ D.3679 ])
                (plus:DI (reg:DI 65 [ D.3678 ])
                    (reg/f:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 65 [ D.3678 ]))
        (nil)))
(insn 25 24 26 5 (set (reg/f:DI 67 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.3679 ])
                (const_int 16 [0x10])) [0 _14->time+0 S8 A128])) mQuery.c:42 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 68 [ D.3682 ])
        (sign_extend:DI (reg:SI 138))) mQuery.c:42 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 69 [ D.3682 ])
                (plus:DI (reg:DI 68 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 70 [ D.3682 ])
                (ashift:DI (reg:DI 69 [ D.3682 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 71 [ D.3681 ])
                (plus:DI (reg/f:DI 67 [ D.3681 ])
                    (reg:DI 70 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 31 30 32 5 (set (reg:XF 72 [ D.3683 ])
        (mem:XF (reg/f:DI 71 [ D.3681 ]) [0 *_19+0 S16 A128])) mQuery.c:42 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 73 [ D.3678 ])
        (sign_extend:DI (reg:SI 139))) mQuery.c:42 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 140)
        (reg:DI 73 [ D.3678 ])) mQuery.c:42 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 140)
                (ashift:DI (reg:DI 140)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg:DI 140)
                    (reg:DI 73 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 141)
                (ashift:DI (reg:DI 140)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 140)
        (reg:DI 141)) mQuery.c:42 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 5 (set (reg:DI 74 [ D.3678 ])
        (reg:DI 140)) mQuery.c:42 -1
     (nil))
(insn 40 39 41 5 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 75 [ D.3679 ])
                (plus:DI (reg:DI 74 [ D.3678 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 74 [ D.3678 ]))
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 76 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 75 [ D.3679 ])
                (const_int 16 [0x10])) [0 _23->time+0 S8 A128])) mQuery.c:42 -1
     (nil))
(insn 43 42 44 5 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 -1
     (nil))
(insn 44 43 45 5 (set (reg:DI 77 [ D.3678 ])
        (sign_extend:DI (reg:SI 143))) mQuery.c:42 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 78 [ D.3678 ])
                (ashift:DI (reg:DI 77 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 79 [ D.3681 ])
                (plus:DI (reg/f:DI 76 [ D.3681 ])
                    (reg:DI 78 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 -1
     (nil))
(insn 47 46 48 5 (set (reg:XF 80 [ D.3683 ])
        (mem:XF (reg/f:DI 79 [ D.3681 ]) [0 *_27+0 S16 A128])) mQuery.c:42 -1
     (nil))
(insn 48 47 49 5 (set (reg:XF 144)
        (minus:XF (reg:XF 72 [ D.3683 ])
            (reg:XF 80 [ D.3683 ]))) mQuery.c:42 -1
     (nil))
(insn 49 48 50 5 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])
        (reg:XF 144)) mQuery.c:42 -1
     (nil))
(insn 50 49 51 5 (set (reg:XF 145)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 -1
     (nil))
(insn 51 50 52 5 (set (reg:XF 146)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S16 A128])) mQuery.c:43 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0000000000000000208166817117216851329430937767028809e-3 [0x0.83126e978d4fep-9])
        (nil)))
(insn 52 51 53 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 145)
            (reg:XF 146))) mQuery.c:43 -1
     (nil))
(jump_insn 53 52 211 5 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 214)
            (pc))) mQuery.c:43 612 {*jcc_1}
     (nil)
 -> 214)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 211 53 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 54 211 55 6 (set (pc)
        (label_ref 115)) mQuery.c:43 -1
     (nil)
 -> 115)
;;  succ:       9

(barrier 55 54 214)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 214 55 57 8 18 "" [1 uses])
(note 57 214 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 59 58 60 8 (set (reg:DI 81 [ D.3678 ])
        (sign_extend:DI (reg:SI 147))) mQuery.c:43 -1
     (nil))
(insn 60 59 61 8 (set (reg:DI 148)
        (reg:DI 81 [ D.3678 ])) mQuery.c:43 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:DI 148)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 148)
                    (reg:DI 81 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 63 62 64 8 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 64 63 65 8 (set (reg:DI 148)
        (reg:DI 149)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 65 64 66 8 (set (reg:DI 82 [ D.3678 ])
        (reg:DI 148)) mQuery.c:43 -1
     (nil))
(insn 66 65 67 8 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 83 [ D.3679 ])
                (plus:DI (reg:DI 82 [ D.3678 ])
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 82 [ D.3678 ]))
        (nil)))
(insn 68 67 69 8 (set (reg/f:DI 84 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 83 [ D.3679 ])
                (const_int 24 [0x18])) [0 _32->vel+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 69 68 70 8 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 70 69 71 8 (set (reg:DI 85 [ D.3678 ])
        (sign_extend:DI (reg:SI 151))) mQuery.c:43 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 86 [ D.3678 ])
                (ashift:DI (reg:DI 85 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg/f:DI 87 [ D.3681 ])
                (plus:DI (reg/f:DI 84 [ D.3681 ])
                    (reg:DI 86 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 73 72 74 8 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 74 73 75 8 (set (reg:DI 88 [ D.3678 ])
        (sign_extend:DI (reg:SI 152))) mQuery.c:43 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 153)
        (reg:DI 88 [ D.3678 ])) mQuery.c:43 -1
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:DI 153)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg:DI 153)
                    (reg:DI 88 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 78 77 79 8 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 153)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 79 78 80 8 (set (reg:DI 153)
        (reg:DI 154)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 80 79 81 8 (set (reg:DI 89 [ D.3678 ])
        (reg:DI 153)) mQuery.c:43 -1
     (nil))
(insn 81 80 82 8 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 82 81 83 8 (parallel [
            (set (reg/f:DI 90 [ D.3679 ])
                (plus:DI (reg:DI 89 [ D.3678 ])
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 89 [ D.3678 ]))
        (nil)))
(insn 83 82 84 8 (set (reg/f:DI 91 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90 [ D.3679 ])
                (const_int 8 [0x8])) [0 _39->nvp+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 84 83 85 8 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 85 84 86 8 (set (reg:DI 92 [ D.3682 ])
        (sign_extend:DI (reg:SI 156))) mQuery.c:43 -1
     (nil))
(insn 86 85 87 8 (parallel [
            (set (reg:DI 93 [ D.3682 ])
                (plus:DI (reg:DI 92 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 87 86 88 8 (parallel [
            (set (reg:DI 94 [ D.3682 ])
                (ashift:DI (reg:DI 93 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 88 87 89 8 (parallel [
            (set (reg/f:DI 95 [ D.3684 ])
                (plus:DI (reg/f:DI 91 [ D.3684 ])
                    (reg:DI 94 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 89 88 90 8 (set (reg/f:DI 96 [ D.3681 ])
        (mem/f:DI (reg/f:DI 95 [ D.3684 ]) [0 *_44+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 90 89 91 8 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 91 90 92 8 (set (reg:DI 97 [ D.3678 ])
        (sign_extend:DI (reg:SI 157))) mQuery.c:43 -1
     (nil))
(insn 92 91 93 8 (set (reg:DI 158)
        (reg:DI 97 [ D.3678 ])) mQuery.c:43 -1
     (nil))
(insn 93 92 94 8 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 158)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 158)
                    (reg:DI 97 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 95 94 96 8 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 158)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 96 95 97 8 (set (reg:DI 158)
        (reg:DI 159)) mQuery.c:43 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 97 96 98 8 (set (reg:DI 98 [ D.3678 ])
        (reg:DI 158)) mQuery.c:43 -1
     (nil))
(insn 98 97 99 8 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 99 98 100 8 (parallel [
            (set (reg/f:DI 99 [ D.3679 ])
                (plus:DI (reg:DI 98 [ D.3678 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 98 [ D.3678 ]))
        (nil)))
(insn 100 99 101 8 (set (reg/f:DI 100 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 99 [ D.3679 ])
                (const_int 8 [0x8])) [0 _48->nvp+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 101 100 102 8 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 -1
     (nil))
(insn 102 101 103 8 (set (reg:DI 101 [ D.3678 ])
        (sign_extend:DI (reg:SI 161))) mQuery.c:43 -1
     (nil))
(insn 103 102 104 8 (parallel [
            (set (reg:DI 102 [ D.3678 ])
                (ashift:DI (reg:DI 101 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 104 103 105 8 (parallel [
            (set (reg/f:DI 103 [ D.3684 ])
                (plus:DI (reg/f:DI 100 [ D.3684 ])
                    (reg:DI 102 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 -1
     (nil))
(insn 105 104 106 8 (set (reg/f:DI 104 [ D.3681 ])
        (mem/f:DI (reg/f:DI 103 [ D.3684 ]) [0 *_52+0 S8 A64])) mQuery.c:43 -1
     (nil))
(insn 106 105 107 8 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.3681 ])) mQuery.c:43 -1
     (nil))
(insn 107 106 108 8 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.3681 ])) mQuery.c:43 -1
     (nil))
(call_insn 108 107 109 8 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:43 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 109 108 110 8 (set (reg:XF 105 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:43 -1
     (nil))
(insn 110 109 111 8 (set (reg:XF 162)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 -1
     (nil))
(insn 111 110 112 8 (set (reg:XF 106 [ D.3683 ])
        (div:XF (reg:XF 105 [ D.3683 ])
            (reg:XF 162))) mQuery.c:43 -1
     (nil))
(insn 112 111 113 8 (set (mem:XF (reg/f:DI 87 [ D.3681 ]) [0 *_36+0 S16 A128])
        (reg:XF 106 [ D.3683 ])) mQuery.c:43 -1
     (nil))
(jump_insn 113 112 114 8 (set (pc)
        (label_ref 170)) -1
     (nil)
 -> 170)
;;  succ:       10

(barrier 114 113 115)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 115 114 116 9 12 "" [1 uses])
(note 116 115 117 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 9 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 118 117 119 9 (set (reg:DI 107 [ D.3678 ])
        (sign_extend:DI (reg:SI 163))) mQuery.c:44 -1
     (nil))
(insn 119 118 120 9 (set (reg:DI 164)
        (reg:DI 107 [ D.3678 ])) mQuery.c:44 -1
     (nil))
(insn 120 119 121 9 (parallel [
            (set (reg:DI 164)
                (ashift:DI (reg:DI 164)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 121 120 122 9 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 164)
                    (reg:DI 107 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 122 121 123 9 (parallel [
            (set (reg:DI 165)
                (ashift:DI (reg:DI 164)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 123 122 124 9 (set (reg:DI 164)
        (reg:DI 165)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 124 123 125 9 (set (reg:DI 108 [ D.3678 ])
        (reg:DI 164)) mQuery.c:44 -1
     (nil))
(insn 125 124 126 9 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 126 125 127 9 (parallel [
            (set (reg/f:DI 109 [ D.3679 ])
                (plus:DI (reg:DI 108 [ D.3678 ])
                    (reg/f:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 108 [ D.3678 ]))
        (nil)))
(insn 127 126 128 9 (set (reg/f:DI 110 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 109 [ D.3679 ])
                (const_int 24 [0x18])) [0 _58->vel+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 128 127 129 9 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 129 128 130 9 (set (reg:DI 111 [ D.3678 ])
        (sign_extend:DI (reg:SI 167))) mQuery.c:44 -1
     (nil))
(insn 130 129 131 9 (parallel [
            (set (reg:DI 112 [ D.3678 ])
                (ashift:DI (reg:DI 111 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 131 130 132 9 (parallel [
            (set (reg/f:DI 113 [ D.3681 ])
                (plus:DI (reg/f:DI 110 [ D.3681 ])
                    (reg:DI 112 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 132 131 133 9 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 133 132 134 9 (set (reg:DI 114 [ D.3678 ])
        (sign_extend:DI (reg:SI 168))) mQuery.c:44 -1
     (nil))
(insn 134 133 135 9 (set (reg:DI 169)
        (reg:DI 114 [ D.3678 ])) mQuery.c:44 -1
     (nil))
(insn 135 134 136 9 (parallel [
            (set (reg:DI 169)
                (ashift:DI (reg:DI 169)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 136 135 137 9 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg:DI 169)
                    (reg:DI 114 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 137 136 138 9 (parallel [
            (set (reg:DI 170)
                (ashift:DI (reg:DI 169)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 138 137 139 9 (set (reg:DI 169)
        (reg:DI 170)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 139 138 140 9 (set (reg:DI 115 [ D.3678 ])
        (reg:DI 169)) mQuery.c:44 -1
     (nil))
(insn 140 139 141 9 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 141 140 142 9 (parallel [
            (set (reg/f:DI 116 [ D.3679 ])
                (plus:DI (reg:DI 115 [ D.3678 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 115 [ D.3678 ]))
        (nil)))
(insn 142 141 143 9 (set (reg/f:DI 117 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 116 [ D.3679 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 143 142 144 9 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 144 143 145 9 (set (reg:DI 118 [ D.3682 ])
        (sign_extend:DI (reg:SI 172))) mQuery.c:44 -1
     (nil))
(insn 145 144 146 9 (parallel [
            (set (reg:DI 119 [ D.3682 ])
                (plus:DI (reg:DI 118 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 146 145 147 9 (parallel [
            (set (reg:DI 120 [ D.3682 ])
                (ashift:DI (reg:DI 119 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 147 146 148 9 (parallel [
            (set (reg/f:DI 121 [ D.3684 ])
                (plus:DI (reg/f:DI 117 [ D.3684 ])
                    (reg:DI 120 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 148 147 149 9 (set (reg/f:DI 122 [ D.3681 ])
        (mem/f:DI (reg/f:DI 121 [ D.3684 ]) [0 *_70+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 149 148 150 9 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 150 149 151 9 (set (reg:DI 123 [ D.3678 ])
        (sign_extend:DI (reg:SI 173))) mQuery.c:44 -1
     (nil))
(insn 151 150 152 9 (set (reg:DI 174)
        (reg:DI 123 [ D.3678 ])) mQuery.c:44 -1
     (nil))
(insn 152 151 153 9 (parallel [
            (set (reg:DI 174)
                (ashift:DI (reg:DI 174)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 153 152 154 9 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg:DI 174)
                    (reg:DI 123 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 154 153 155 9 (parallel [
            (set (reg:DI 175)
                (ashift:DI (reg:DI 174)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 155 154 156 9 (set (reg:DI 174)
        (reg:DI 175)) mQuery.c:44 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 156 155 157 9 (set (reg:DI 124 [ D.3678 ])
        (reg:DI 174)) mQuery.c:44 -1
     (nil))
(insn 157 156 158 9 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 158 157 159 9 (parallel [
            (set (reg/f:DI 125 [ D.3679 ])
                (plus:DI (reg:DI 124 [ D.3678 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 124 [ D.3678 ]))
        (nil)))
(insn 159 158 160 9 (set (reg/f:DI 126 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 125 [ D.3679 ])
                (const_int 8 [0x8])) [0 _74->nvp+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 160 159 161 9 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 -1
     (nil))
(insn 161 160 162 9 (set (reg:DI 127 [ D.3678 ])
        (sign_extend:DI (reg:SI 177))) mQuery.c:44 -1
     (nil))
(insn 162 161 163 9 (parallel [
            (set (reg:DI 128 [ D.3678 ])
                (ashift:DI (reg:DI 127 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 163 162 164 9 (parallel [
            (set (reg/f:DI 129 [ D.3684 ])
                (plus:DI (reg/f:DI 126 [ D.3684 ])
                    (reg:DI 128 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 -1
     (nil))
(insn 164 163 165 9 (set (reg/f:DI 130 [ D.3681 ])
        (mem/f:DI (reg/f:DI 129 [ D.3684 ]) [0 *_78+0 S8 A64])) mQuery.c:44 -1
     (nil))
(insn 165 164 166 9 (set (reg:DI 4 si)
        (reg/f:DI 122 [ D.3681 ])) mQuery.c:44 -1
     (nil))
(insn 166 165 167 9 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.3681 ])) mQuery.c:44 -1
     (nil))
(call_insn 167 166 168 9 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:44 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 168 167 169 9 (set (reg:XF 131 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:44 -1
     (nil))
(insn 169 168 170 9 (set (mem:XF (reg/f:DI 113 [ D.3681 ]) [0 *_62+0 S16 A128])
        (reg:XF 131 [ D.3683 ])) mQuery.c:44 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 170 169 171 10 14 "" [1 uses])
(note 171 170 172 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              10 (FALLTHRU,DFS_BACK)
(code_label 173 172 174 11 11 "" [1 uses])
(note 174 173 175 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 11 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:41 -1
     (nil))
(insn 176 175 177 11 (set (reg:DI 59 [ D.3678 ])
        (sign_extend:DI (reg:SI 178))) mQuery.c:41 -1
     (nil))
(insn 177 176 178 11 (set (reg:DI 179)
        (reg:DI 59 [ D.3678 ])) mQuery.c:41 -1
     (nil))
(insn 178 177 179 11 (parallel [
            (set (reg:DI 179)
                (ashift:DI (reg:DI 179)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))
(insn 179 178 180 11 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 179)
                    (reg:DI 59 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 180 179 181 11 (parallel [
            (set (reg:DI 180)
                (ashift:DI (reg:DI 179)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))
(insn 181 180 182 11 (set (reg:DI 179)
        (reg:DI 180)) mQuery.c:41 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 182 181 183 11 (set (reg:DI 60 [ D.3678 ])
        (reg:DI 179)) mQuery.c:41 -1
     (nil))
(insn 183 182 184 11 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:41 -1
     (nil))
(insn 184 183 185 11 (parallel [
            (set (reg/f:DI 61 [ D.3679 ])
                (plus:DI (reg:DI 60 [ D.3678 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.3678 ]))
        (nil)))
(insn 185 184 186 11 (set (reg:SI 62 [ D.3680 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.3679 ])
                (const_int 4 [0x4])) [0 _9->n_nvp+0 S4 A32])) mQuery.c:41 -1
     (nil))
(insn 186 185 188 11 (parallel [
            (set (reg:SI 63 [ D.3680 ])
                (plus:SI (reg:SI 62 [ D.3680 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 -1
     (nil))
(insn 188 186 189 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.3680 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32]))) mQuery.c:41 -1
     (nil))
(jump_insn 189 188 190 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) mQuery.c:41 -1
     (nil)
 -> 187)
;;  succ:       5
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 190 189 191 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:40 -1
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              12 (FALLTHRU,DFS_BACK)
(code_label 192 191 193 13 10 "" [1 uses])
(note 193 192 195 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 195 193 196 13 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:40 -1
     (nil))
(insn 196 195 197 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 182)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 Nflight+0 S4 A32]))) mQuery.c:40 -1
     (nil))
(jump_insn 197 196 198 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) mQuery.c:40 -1
     (nil)
 -> 194)
;;  succ:       4
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
(note 198 197 199 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 202 14 (set (reg:SI 132 [ D.3680 ])
        (const_int 1 [0x1])) mQuery.c:47 -1
     (nil))
(insn 202 199 206 14 (set (reg:SI 133 [ <retval> ])
        (reg:SI 132 [ D.3680 ])) mQuery.c:47 -1
     (nil))
(insn 206 202 209 14 (set (reg/i:SI 0 ax)
        (reg:SI 133 [ <retval> ])) mQuery.c:48 -1
     (nil))
(insn 209 206 0 14 (use (reg/i:SI 0 ax)) mQuery.c:48 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_M1 (get_M1, funcdef_no=4, decl_uid=1760, cgraph_uid=4)

get_M1 (char * m1_file, struct Aircraft_t * * flight)
{
  int h;
  int j;
  int i;
  int Nflight;
  char c[50000];
  struct FILE * rstream;
  int D.3497;
  struct Aircraft_t * D.3496;
  int D.3495;
  struct Aircraft_t * D.3494;
  long unsigned int D.3493;
  long unsigned int D.3492;
  struct Aircraft_t * D.3491;
  long double D.3490;
  char * D.3489;
  long double * D.3488;
  long unsigned int D.3487;
  long unsigned int D.3486;
  long double * D.3485;
  struct Aircraft_t * D.3484;
  long unsigned int D.3483;
  long unsigned int D.3482;
  struct Aircraft_t * D.3481;
  char D.3478;
  char D.3477;
  char D.3475;
  char D.3472;
  char D.3471;
  char D.3469;
  long double D.3468;
  double D.3467;
  char * D.3466;
  long double * D.3465;
  long double * D.3464;
  long double * * D.3463;
  long unsigned int D.3462;
  long unsigned int D.3461;
  long double * * D.3460;
  struct Aircraft_t * D.3459;
  long unsigned int D.3458;
  long unsigned int D.3457;
  struct Aircraft_t * D.3456;
  char D.3453;
  char D.3452;
  char D.3450;
  char D.3448;
  long double D.3447;
  double D.3446;
  char * D.3445;
  long double * D.3444;
  long double * D.3443;
  long double * * D.3442;
  long unsigned int D.3441;
  long unsigned int D.3440;
  long double * * D.3439;
  struct Aircraft_t * D.3438;
  long unsigned int D.3437;
  long unsigned int D.3436;
  struct Aircraft_t * D.3435;
  char D.3432;
  char D.3431;
  char D.3429;
  char D.3427;
  long double D.3426;
  double D.3425;
  char * D.3424;
  long double * D.3423;
  long double * * D.3422;
  long unsigned int D.3421;
  long unsigned int D.3420;
  long double * * D.3419;
  struct Aircraft_t * D.3418;
  long unsigned int D.3417;
  long unsigned int D.3416;
  struct Aircraft_t * D.3415;
  char D.3414;
  char D.3412;
  char D.3409;
  char D.3407;
  char D.3405;
  long double * D.3404;
  int D.3403;
  int D.3402;
  struct Aircraft_t * D.3401;
  long unsigned int D.3400;
  long unsigned int D.3399;
  struct Aircraft_t * D.3398;
  struct Aircraft_t * D.3397;
  long unsigned int D.3396;
  long unsigned int D.3395;
  struct Aircraft_t * D.3394;
  long double * D.3393;
  int D.3392;
  struct Aircraft_t * D.3391;
  long unsigned int D.3390;
  long unsigned int D.3389;
  struct Aircraft_t * D.3388;
  struct Aircraft_t * D.3387;
  long unsigned int D.3386;
  long unsigned int D.3385;
  struct Aircraft_t * D.3384;
  long double * * D.3383;
  int D.3382;
  struct Aircraft_t * D.3381;
  long unsigned int D.3380;
  long unsigned int D.3379;
  struct Aircraft_t * D.3378;
  struct Aircraft_t * D.3377;
  long unsigned int D.3376;
  long unsigned int D.3375;
  struct Aircraft_t * D.3374;
  int D.3373;
  char * D.3372;
  struct Aircraft_t * D.3371;
  long unsigned int D.3370;
  long unsigned int D.3369;
  struct Aircraft_t * D.3368;
  char D.3367;
  int D.3366;
  struct Aircraft_t * D.3365;
  long unsigned int D.3364;
  long unsigned int D.3363;
  struct Aircraft_t * D.3362;
  char * D.3359;
  void * D.3358;
  long unsigned int D.3357;
  long unsigned int D.3356;
  long unsigned int _13;
  long unsigned int _14;
  void * _15;
  char * _18;
  struct Aircraft_t * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct Aircraft_t * _22;
  int _23;
  char _25;
  struct Aircraft_t * _27;
  long unsigned int _28;
  long unsigned int _29;
  struct Aircraft_t * _30;
  char * _32;
  int _33;
  struct Aircraft_t * _34;
  long unsigned int _35;
  long unsigned int _36;
  struct Aircraft_t * _37;
  struct Aircraft_t * _38;
  long unsigned int _39;
  long unsigned int _40;
  struct Aircraft_t * _41;
  int _42;
  long double * * _43;
  struct Aircraft_t * _44;
  long unsigned int _45;
  long unsigned int _46;
  struct Aircraft_t * _47;
  struct Aircraft_t * _48;
  long unsigned int _49;
  long unsigned int _50;
  struct Aircraft_t * _51;
  int _52;
  long double * _53;
  struct Aircraft_t * _54;
  long unsigned int _55;
  long unsigned int _56;
  struct Aircraft_t * _57;
  struct Aircraft_t * _58;
  long unsigned int _59;
  long unsigned int _60;
  struct Aircraft_t * _61;
  int _62;
  int _63;
  long double * _64;
  struct Aircraft_t * _66;
  long unsigned int _67;
  long unsigned int _68;
  struct Aircraft_t * _69;
  int _70;
  char _72;
  char _73;
  char _74;
  char _76;
  char _77;
  struct Aircraft_t * _78;
  long unsigned int _79;
  long unsigned int _80;
  struct Aircraft_t * _81;
  long double * * _82;
  long unsigned int _83;
  long unsigned int _84;
  long double * * _85;
  long double * _86;
  char * _88;
  double _89;
  long double _90;
  char _92;
  char _93;
  char _94;
  char _96;
  struct Aircraft_t * _97;
  long unsigned int _98;
  long unsigned int _99;
  struct Aircraft_t * _100;
  long double * * _101;
  long unsigned int _102;
  long unsigned int _103;
  long double * * _104;
  long double * _105;
  long double * _106;
  char * _108;
  double _109;
  long double _110;
  char _112;
  char _113;
  char _114;
  char _116;
  struct Aircraft_t * _117;
  long unsigned int _118;
  long unsigned int _119;
  struct Aircraft_t * _120;
  long double * * _121;
  long unsigned int _122;
  long unsigned int _123;
  long double * * _124;
  long double * _125;
  long double * _126;
  char * _128;
  double _129;
  long double _130;
  char _132;
  char _133;
  char _135;
  char _137;
  char _138;
  char _140;
  struct Aircraft_t * _141;
  long unsigned int _142;
  long unsigned int _143;
  struct Aircraft_t * _144;
  long double * _145;
  long unsigned int _146;
  long unsigned int _147;
  long double * _148;
  char * _150;
  long double _151;
  struct Aircraft_t * _154;
  int _155;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_11 = fopen (m1_file_10(D), "r");
  if (rstream_11 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("M1 File doesn\'t exist\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  fgets (&c, 50000, rstream_11);
  Nflight_12 = atoi (&c);
  _13 = (long unsigned int) Nflight_12;
  _14 = _13 * 160;
  _15 = malloc (_14);
  *flight_16(D) = _15;
  i_17 = 0;
  goto <bb 48>;
;;    succ:       48

;;   basic block 5, loop depth 0
;;    pred:       48
  _18 = fgets (&c, 50000, rstream_11);
  if (_18 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  BuG ("BUG in M1 File -lx0\n");
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  _19 = *flight_16(D);
  _20 = (long unsigned int) i_1;
  _21 = _20 * 160;
  _22 = _19 + _21;
  _23 = atoi (&c);
  _22->ID = _23;
  j_24 = 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       9
  j_26 = j_2 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # j_2 = PHI <j_24(7), j_26(8)>
  _25 = c[j_2];
  if (_25 != 9)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  _27 = *flight_16(D);
  _28 = (long unsigned int) i_1;
  _29 = _28 * 160;
  _30 = _27 + _29;
  j_31 = j_2 + 1;
  _32 = &c[j_31];
  _33 = atoi (_32);
  _30->n_nvp = _33;
  _34 = *flight_16(D);
  _35 = (long unsigned int) i_1;
  _36 = _35 * 160;
  _37 = _34 + _36;
  _38 = *flight_16(D);
  _39 = (long unsigned int) i_1;
  _40 = _39 * 160;
  _41 = _38 + _40;
  _42 = _41->n_nvp;
  _43 = falloc_matrix (_42, 4);
  _37->nvp = _43;
  _44 = *flight_16(D);
  _45 = (long unsigned int) i_1;
  _46 = _45 * 160;
  _47 = _44 + _46;
  _48 = *flight_16(D);
  _49 = (long unsigned int) i_1;
  _50 = _49 * 160;
  _51 = _48 + _50;
  _52 = _51->n_nvp;
  _53 = falloc_vec (_52);
  _47->time = _53;
  _54 = *flight_16(D);
  _55 = (long unsigned int) i_1;
  _56 = _55 * 160;
  _57 = _54 + _56;
  _58 = *flight_16(D);
  _59 = (long unsigned int) i_1;
  _60 = _59 * 160;
  _61 = _58 + _60;
  _62 = _61->n_nvp;
  _63 = _62 + -1;
  _64 = falloc_vec (_63);
  _57->vel = _64;
  h_65 = 0;
  goto <bb 46>;
;;    succ:       46

;;   basic block 11, loop depth 0
;;    pred:       46
  j_71 = j_8 + 1;
  goto <bb 13>;
;;    succ:       13

;;   basic block 12, loop depth 0
;;    pred:       15
  j_75 = j_3 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  # j_3 = PHI <j_71(11), j_75(12)>
  _72 = c[j_3];
  if (_72 != 9)
    goto <bb 14>;
  else
    goto <bb 16>;
;;    succ:       14
;;                16

;;   basic block 14, loop depth 0
;;    pred:       13
  _73 = c[j_3];
  if (_73 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _74 = c[j_3];
  if (_74 != 10)
    goto <bb 12>;
  else
    goto <bb 16>;
;;    succ:       12
;;                16

;;   basic block 16, loop depth 0
;;    pred:       13
;;                14
;;                15
  _76 = c[j_3];
  if (_76 == 0)
    goto <bb 18>;
  else
    goto <bb 17>;
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  _77 = c[j_3];
  if (_77 == 10)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  BuG ("BUG in M1 File -lx1\n");
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       17
;;                18
  _78 = *flight_16(D);
  _79 = (long unsigned int) i_1;
  _80 = _79 * 160;
  _81 = _78 + _80;
  _82 = _81->nvp;
  _83 = (long unsigned int) h_9;
  _84 = _83 * 8;
  _85 = _82 + _84;
  _86 = *_85;
  j_87 = j_3 + 1;
  _88 = &c[j_87];
  _89 = atof (_88);
  _90 = (long double) _89;
  *_86 = _90;
  j_91 = j_87 + 1;
  goto <bb 21>;
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       23
  j_95 = j_4 + 1;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       19
;;                20
  # j_4 = PHI <j_91(19), j_95(20)>
  _92 = c[j_4];
  if (_92 != 44)
    goto <bb 22>;
  else
    goto <bb 24>;
;;    succ:       22
;;                24

;;   basic block 22, loop depth 0
;;    pred:       21
  _93 = c[j_4];
  if (_93 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
  _94 = c[j_4];
  if (_94 != 10)
    goto <bb 20>;
  else
    goto <bb 24>;
;;    succ:       20
;;                24

;;   basic block 24, loop depth 0
;;    pred:       21
;;                22
;;                23
  _96 = c[j_4];
  if (_96 == 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  BuG ("BUG in M1 File -lx2\n");
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       24
;;                25
  _97 = *flight_16(D);
  _98 = (long unsigned int) i_1;
  _99 = _98 * 160;
  _100 = _97 + _99;
  _101 = _100->nvp;
  _102 = (long unsigned int) h_9;
  _103 = _102 * 8;
  _104 = _101 + _103;
  _105 = *_104;
  _106 = _105 + 16;
  j_107 = j_4 + 1;
  _108 = &c[j_107];
  _109 = atof (_108);
  _110 = (long double) _109;
  *_106 = _110;
  j_111 = j_107 + 1;
  goto <bb 28>;
;;    succ:       28

;;   basic block 27, loop depth 0
;;    pred:       30
  j_115 = j_5 + 1;
;;    succ:       28

;;   basic block 28, loop depth 0
;;    pred:       26
;;                27
  # j_5 = PHI <j_111(26), j_115(27)>
  _112 = c[j_5];
  if (_112 != 44)
    goto <bb 29>;
  else
    goto <bb 31>;
;;    succ:       29
;;                31

;;   basic block 29, loop depth 0
;;    pred:       28
  _113 = c[j_5];
  if (_113 != 0)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30
;;                31

;;   basic block 30, loop depth 0
;;    pred:       29
  _114 = c[j_5];
  if (_114 != 10)
    goto <bb 27>;
  else
    goto <bb 31>;
;;    succ:       27
;;                31

;;   basic block 31, loop depth 0
;;    pred:       28
;;                29
;;                30
  _116 = c[j_5];
  if (_116 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32
;;                33

;;   basic block 32, loop depth 0
;;    pred:       31
  BuG ("BUG in M1 File -lx3\n");
;;    succ:       33

;;   basic block 33, loop depth 0
;;    pred:       31
;;                32
  _117 = *flight_16(D);
  _118 = (long unsigned int) i_1;
  _119 = _118 * 160;
  _120 = _117 + _119;
  _121 = _120->nvp;
  _122 = (long unsigned int) h_9;
  _123 = _122 * 8;
  _124 = _121 + _123;
  _125 = *_124;
  _126 = _125 + 32;
  j_127 = j_5 + 1;
  _128 = &c[j_127];
  _129 = atof (_128);
  _130 = (long double) _129;
  *_126 = _130;
  j_131 = j_127 + 1;
  goto <bb 35>;
;;    succ:       35

;;   basic block 34, loop depth 0
;;    pred:       36
  j_134 = j_6 + 1;
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       33
;;                34
  # j_6 = PHI <j_131(33), j_134(34)>
  _132 = c[j_6];
  if (_132 != 44)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36
;;                37

;;   basic block 36, loop depth 0
;;    pred:       35
  _133 = c[j_6];
  if (_133 != 0)
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 37, loop depth 0
;;    pred:       35
;;                36
  _135 = c[j_6];
  if (_135 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38
;;                39

;;   basic block 38, loop depth 0
;;    pred:       37
  BuG ("BUG in M1 File -lx4\n");
;;    succ:       39

;;   basic block 39, loop depth 0
;;    pred:       37
;;                38
  j_136 = j_6 + 1;
  goto <bb 41>;
;;    succ:       41

;;   basic block 40, loop depth 0
;;    pred:       42
  j_139 = j_7 + 1;
;;    succ:       41

;;   basic block 41, loop depth 0
;;    pred:       39
;;                40
  # j_7 = PHI <j_136(39), j_139(40)>
  _137 = c[j_7];
  if (_137 != 32)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42
;;                43

;;   basic block 42, loop depth 0
;;    pred:       41
  _138 = c[j_7];
  if (_138 != 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 43, loop depth 0
;;    pred:       41
;;                42
  _140 = c[j_7];
  if (_140 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44
;;                45

;;   basic block 44, loop depth 0
;;    pred:       43
  BuG ("BUG in M1 File -lx5\n");
;;    succ:       45

;;   basic block 45, loop depth 0
;;    pred:       43
;;                44
  _141 = *flight_16(D);
  _142 = (long unsigned int) i_1;
  _143 = _142 * 160;
  _144 = _141 + _143;
  _145 = _144->time;
  _146 = (long unsigned int) h_9;
  _147 = _146 * 16;
  _148 = _145 + _147;
  j_149 = j_7 + 1;
  _150 = &c[j_149];
  _151 = _convert_time (_150);
  *_148 = _151;
  h_152 = h_9 + 1;
;;    succ:       46

;;   basic block 46, loop depth 0
;;    pred:       10
;;                45
  # j_8 = PHI <j_31(10), j_149(45)>
  # h_9 = PHI <h_65(10), h_152(45)>
  _66 = *flight_16(D);
  _67 = (long unsigned int) i_1;
  _68 = _67 * 160;
  _69 = _66 + _68;
  _70 = _69->n_nvp;
  if (_70 > h_9)
    goto <bb 11>;
  else
    goto <bb 47>;
;;    succ:       11
;;                47

;;   basic block 47, loop depth 0
;;    pred:       46
  i_153 = i_1 + 1;
;;    succ:       48

;;   basic block 48, loop depth 0
;;    pred:       4
;;                47
  # i_1 = PHI <i_17(4), i_153(47)>
  if (i_1 < Nflight_12)
    goto <bb 5>;
  else
    goto <bb 49>;
;;    succ:       5
;;                49

;;   basic block 49, loop depth 0
;;    pred:       48
  _154 = *flight_16(D);
  _calculate_velocity (_154, Nflight_12);
  _155 = Nflight_12;
  c ={v} {CLOBBER};
;;    succ:       50

;;   basic block 50, loop depth 0
;;    pred:       49
<L48>:
  return _155;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (j_3 - 3 )
Partition 4 (j_4 - 4 )
Partition 5 (j_5 - 5 )
Partition 6 (j_6 - 6 )
Partition 7 (j_7 - 7 )
Partition 8 (j_8 - 8 )
Partition 9 (h_9 - 9 )
Partition 10 (m1_file_10(D) - 10 )
Partition 11 (rstream_11 - 11 )
Partition 12 (Nflight_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (flight_16(D) - 16 )
Partition 17 (i_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (j_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (j_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (j_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (h_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (j_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (j_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (j_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (j_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (j_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (j_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (j_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (j_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (j_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (j_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (j_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (j_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (j_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (j_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (h_152 - 152 )
Partition 153 (i_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (j_7 - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (h_9 - 9 )
Partition 9 (m1_file_10(D) - 10 )
Partition 10 (flight_16(D) - 16 )
Partition 11 (i_17 - 17 )
Partition 12 (j_24 - 24 )
Partition 13 (j_26 - 26 )
Partition 14 (j_31 - 31 )
Partition 15 (h_65 - 65 )
Partition 16 (j_71 - 71 )
Partition 17 (j_75 - 75 )
Partition 18 (j_87 - 87 )
Partition 19 (j_91 - 91 )
Partition 20 (j_95 - 95 )
Partition 21 (j_107 - 107 )
Partition 22 (j_111 - 111 )
Partition 23 (j_115 - 115 )
Partition 24 (j_127 - 127 )
Partition 25 (j_131 - 131 )
Partition 26 (j_134 - 134 )
Partition 27 (j_136 - 136 )
Partition 28 (j_139 - 139 )
Partition 29 (j_149 - 149 )
Partition 30 (h_152 - 152 )
Partition 31 (i_153 - 153 )


Live on entry to BB2 : m1_file_10(D)  flight_16(D)  

Live on entry to BB3 : flight_16(D)  

Live on entry to BB4 : flight_16(D)  

Live on entry to BB5 : i_1  flight_16(D)  

Live on entry to BB6 : i_1  flight_16(D)  

Live on entry to BB7 : i_1  flight_16(D)  

Live on entry to BB8 : i_1  j_2  flight_16(D)  

Live on entry to BB9 : i_1  flight_16(D)  

Live on entry to BB10 : i_1  j_2  flight_16(D)  

Live on entry to BB11 : i_1  j_8  h_9  flight_16(D)  

Live on entry to BB12 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB13 : i_1  h_9  flight_16(D)  

Live on entry to BB14 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB15 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB16 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB17 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB18 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB19 : i_1  j_3  h_9  flight_16(D)  

Live on entry to BB20 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB21 : i_1  h_9  flight_16(D)  

Live on entry to BB22 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB23 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB24 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB25 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB26 : i_1  j_4  h_9  flight_16(D)  

Live on entry to BB27 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB28 : i_1  h_9  flight_16(D)  

Live on entry to BB29 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB30 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB31 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB32 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB33 : i_1  j_5  h_9  flight_16(D)  

Live on entry to BB34 : i_1  j_6  h_9  flight_16(D)  

Live on entry to BB35 : i_1  h_9  flight_16(D)  

Live on entry to BB36 : i_1  j_6  h_9  flight_16(D)  

Live on entry to BB37 : i_1  j_6  h_9  flight_16(D)  

Live on entry to BB38 : i_1  j_6  h_9  flight_16(D)  

Live on entry to BB39 : i_1  j_6  h_9  flight_16(D)  

Live on entry to BB40 : i_1  j_7  h_9  flight_16(D)  

Live on entry to BB41 : i_1  h_9  flight_16(D)  

Live on entry to BB42 : i_1  j_7  h_9  flight_16(D)  

Live on entry to BB43 : i_1  j_7  h_9  flight_16(D)  

Live on entry to BB44 : i_1  j_7  h_9  flight_16(D)  

Live on entry to BB45 : i_1  j_7  h_9  flight_16(D)  

Live on entry to BB46 : i_1  flight_16(D)  

Live on entry to BB47 : i_1  flight_16(D)  

Live on entry to BB48 : flight_16(D)  

Live on entry to BB49 : flight_16(D)  

Live on entry to BB50 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_17
(2147483646) i_1 <-> i_153
(2147483646) j_2 <-> j_3
(2147483646) j_2 <-> j_4
(2147483646) j_2 <-> j_5
(2147483646) j_2 <-> j_6
(2147483646) j_2 <-> j_7
(2147483646) j_2 <-> j_8
(2147483646) j_2 <-> j_24
(2147483646) j_2 <-> j_26
(2147483646) j_2 <-> j_31
(2147483646) j_2 <-> j_71
(2147483646) j_2 <-> j_75
(2147483646) j_2 <-> j_87
(2147483646) j_2 <-> j_91
(2147483646) j_2 <-> j_95
(2147483646) j_2 <-> j_107
(2147483646) j_2 <-> j_111
(2147483646) j_2 <-> j_115
(2147483646) j_2 <-> j_127
(2147483646) j_2 <-> j_131
(2147483646) j_2 <-> j_134
(2147483646) j_2 <-> j_136
(2147483646) j_2 <-> j_139
(2147483646) j_2 <-> j_149
(2147483646) h_9 <-> h_65
(2147483646) h_9 <-> h_152
(1) j_8 <-> j_31
(1) j_8 <-> j_149

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (j_7 - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (h_9 - 9 )
Partition 9 (m1_file_10(D) - 10 )
Partition 10 (flight_16(D) - 16 )
Partition 11 (i_17 - 17 )
Partition 12 (j_24 - 24 )
Partition 13 (j_26 - 26 )
Partition 14 (j_31 - 31 )
Partition 15 (h_65 - 65 )
Partition 16 (j_71 - 71 )
Partition 17 (j_75 - 75 )
Partition 18 (j_87 - 87 )
Partition 19 (j_91 - 91 )
Partition 20 (j_95 - 95 )
Partition 21 (j_107 - 107 )
Partition 22 (j_111 - 111 )
Partition 23 (j_115 - 115 )
Partition 24 (j_127 - 127 )
Partition 25 (j_131 - 131 )
Partition 26 (j_134 - 134 )
Partition 27 (j_136 - 136 )
Partition 28 (j_139 - 139 )
Partition 29 (j_149 - 149 )
Partition 30 (h_152 - 152 )
Partition 31 (i_153 - 153 )

Coalesce list: (1)i_1 & (17)i_17 [map: 0, 11] : Success -> 0
Coalesce list: (1)i_1 & (153)i_153 [map: 0, 31] : Success -> 0
Coalesce list: (2)j_2 & (3)j_3 [map: 1, 2] : Success -> 1
Coalesce list: (2)j_2 & (4)j_4 [map: 1, 3] : Success -> 1
Coalesce list: (2)j_2 & (5)j_5 [map: 1, 4] : Success -> 1
Coalesce list: (2)j_2 & (6)j_6 [map: 1, 5] : Success -> 1
Coalesce list: (2)j_2 & (7)j_7 [map: 1, 6] : Success -> 1
Coalesce list: (2)j_2 & (8)j_8 [map: 1, 7] : Success -> 1
Coalesce list: (2)j_2 & (24)j_24 [map: 1, 12] : Success -> 1
Coalesce list: (2)j_2 & (26)j_26 [map: 1, 13] : Success -> 1
Coalesce list: (2)j_2 & (31)j_31 [map: 1, 14] : Success -> 1
Coalesce list: (2)j_2 & (71)j_71 [map: 1, 16] : Success -> 1
Coalesce list: (2)j_2 & (75)j_75 [map: 1, 17] : Success -> 1
Coalesce list: (2)j_2 & (87)j_87 [map: 1, 18] : Success -> 1
Coalesce list: (2)j_2 & (91)j_91 [map: 1, 19] : Success -> 1
Coalesce list: (2)j_2 & (95)j_95 [map: 1, 20] : Success -> 1
Coalesce list: (2)j_2 & (107)j_107 [map: 1, 21] : Success -> 1
Coalesce list: (2)j_2 & (111)j_111 [map: 1, 22] : Success -> 1
Coalesce list: (2)j_2 & (115)j_115 [map: 1, 23] : Success -> 1
Coalesce list: (2)j_2 & (127)j_127 [map: 1, 24] : Success -> 1
Coalesce list: (2)j_2 & (131)j_131 [map: 1, 25] : Success -> 1
Coalesce list: (2)j_2 & (134)j_134 [map: 1, 26] : Success -> 1
Coalesce list: (2)j_2 & (136)j_136 [map: 1, 27] : Success -> 1
Coalesce list: (2)j_2 & (139)j_139 [map: 1, 28] : Success -> 1
Coalesce list: (2)j_2 & (149)j_149 [map: 1, 29] : Success -> 1
Coalesce list: (9)h_9 & (65)h_65 [map: 8, 15] : Success -> 8
Coalesce list: (9)h_9 & (152)h_152 [map: 8, 30] : Success -> 8
Coalesce list: (8)j_2 & (31)j_2: Already Coalesced.
Coalesce list: (8)j_2 & (149)j_2: Already Coalesced.
Coalesce list: (1)i_1 & (153)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (17)i_1: Already Coalesced.
Coalesce list: (9)h_9 & (152)h_9: Already Coalesced.
Coalesce list: (9)h_9 & (65)h_9: Already Coalesced.
Coalesce list: (7)j_2 & (139)j_2: Already Coalesced.
Coalesce list: (7)j_2 & (136)j_2: Already Coalesced.
Coalesce list: (6)j_2 & (134)j_2: Already Coalesced.
Coalesce list: (6)j_2 & (131)j_2: Already Coalesced.
Coalesce list: (5)j_2 & (115)j_2: Already Coalesced.
Coalesce list: (5)j_2 & (111)j_2: Already Coalesced.
Coalesce list: (4)j_2 & (95)j_2: Already Coalesced.
Coalesce list: (4)j_2 & (91)j_2: Already Coalesced.
Coalesce list: (3)j_2 & (75)j_2: Already Coalesced.
Coalesce list: (3)j_2 & (71)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (26)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (24)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 17 153 )
Partition 1 (j_2 - 2 3 4 5 6 7 8 24 26 31 71 75 87 91 95 107 111 115 127 131 134 136 139 149 )
Partition 2 (h_9 - 9 65 152 )
Partition 3 (m1_file_10(D) - 10 )
Partition 4 (rstream_11 - 11 )
Partition 5 (Nflight_12 - 12 )
Partition 6 (_13 - 13 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (flight_16(D) - 16 )
Partition 10 (_18 - 18 )
Partition 11 (_19 - 19 )
Partition 12 (_20 - 20 )
Partition 13 (_21 - 21 )
Partition 14 (_22 - 22 )
Partition 15 (_23 - 23 )
Partition 16 (_25 - 25 )
Partition 17 (_27 - 27 )
Partition 18 (_28 - 28 )
Partition 19 (_29 - 29 )
Partition 20 (_30 - 30 )
Partition 21 (_32 - 32 )
Partition 22 (_33 - 33 )
Partition 23 (_34 - 34 )
Partition 24 (_35 - 35 )
Partition 25 (_36 - 36 )
Partition 26 (_37 - 37 )
Partition 27 (_38 - 38 )
Partition 28 (_39 - 39 )
Partition 29 (_40 - 40 )
Partition 30 (_41 - 41 )
Partition 31 (_42 - 42 )
Partition 32 (_43 - 43 )
Partition 33 (_44 - 44 )
Partition 34 (_45 - 45 )
Partition 35 (_46 - 46 )
Partition 36 (_47 - 47 )
Partition 37 (_48 - 48 )
Partition 38 (_49 - 49 )
Partition 39 (_50 - 50 )
Partition 40 (_51 - 51 )
Partition 41 (_52 - 52 )
Partition 42 (_53 - 53 )
Partition 43 (_54 - 54 )
Partition 44 (_55 - 55 )
Partition 45 (_56 - 56 )
Partition 46 (_57 - 57 )
Partition 47 (_58 - 58 )
Partition 48 (_59 - 59 )
Partition 49 (_60 - 60 )
Partition 50 (_61 - 61 )
Partition 51 (_62 - 62 )
Partition 52 (_63 - 63 )
Partition 53 (_64 - 64 )
Partition 54 (_66 - 66 )
Partition 55 (_67 - 67 )
Partition 56 (_68 - 68 )
Partition 57 (_69 - 69 )
Partition 58 (_70 - 70 )
Partition 59 (_72 - 72 )
Partition 60 (_73 - 73 )
Partition 61 (_74 - 74 )
Partition 62 (_76 - 76 )
Partition 63 (_77 - 77 )
Partition 64 (_78 - 78 )
Partition 65 (_79 - 79 )
Partition 66 (_80 - 80 )
Partition 67 (_81 - 81 )
Partition 68 (_82 - 82 )
Partition 69 (_83 - 83 )
Partition 70 (_84 - 84 )
Partition 71 (_85 - 85 )
Partition 72 (_86 - 86 )
Partition 73 (_88 - 88 )
Partition 74 (_89 - 89 )
Partition 75 (_90 - 90 )
Partition 76 (_92 - 92 )
Partition 77 (_93 - 93 )
Partition 78 (_94 - 94 )
Partition 79 (_96 - 96 )
Partition 80 (_97 - 97 )
Partition 81 (_98 - 98 )
Partition 82 (_99 - 99 )
Partition 83 (_100 - 100 )
Partition 84 (_101 - 101 )
Partition 85 (_102 - 102 )
Partition 86 (_103 - 103 )
Partition 87 (_104 - 104 )
Partition 88 (_105 - 105 )
Partition 89 (_106 - 106 )
Partition 90 (_108 - 108 )
Partition 91 (_109 - 109 )
Partition 92 (_110 - 110 )
Partition 93 (_112 - 112 )
Partition 94 (_113 - 113 )
Partition 95 (_114 - 114 )
Partition 96 (_116 - 116 )
Partition 97 (_117 - 117 )
Partition 98 (_118 - 118 )
Partition 99 (_119 - 119 )
Partition 100 (_120 - 120 )
Partition 101 (_121 - 121 )
Partition 102 (_122 - 122 )
Partition 103 (_123 - 123 )
Partition 104 (_124 - 124 )
Partition 105 (_125 - 125 )
Partition 106 (_126 - 126 )
Partition 107 (_128 - 128 )
Partition 108 (_129 - 129 )
Partition 109 (_130 - 130 )
Partition 110 (_132 - 132 )
Partition 111 (_133 - 133 )
Partition 112 (_135 - 135 )
Partition 113 (_137 - 137 )
Partition 114 (_138 - 138 )
Partition 115 (_140 - 140 )
Partition 116 (_141 - 141 )
Partition 117 (_142 - 142 )
Partition 118 (_143 - 143 )
Partition 119 (_144 - 144 )
Partition 120 (_145 - 145 )
Partition 121 (_146 - 146 )
Partition 122 (_147 - 147 )
Partition 123 (_148 - 148 )
Partition 124 (_150 - 150 )
Partition 125 (_151 - 151 )
Partition 126 (_154 - 154 )
Partition 127 (_155 - 155 )

get_M1 (char * m1_file, struct Aircraft_t * * flight)
{
  int h;
  int j;
  int i;
  int Nflight;
  char c[50000];
  struct FILE * rstream;
  int D.3497;
  struct Aircraft_t * D.3496;
  int D.3495;
  struct Aircraft_t * D.3494;
  long unsigned int D.3493;
  long unsigned int D.3492;
  struct Aircraft_t * D.3491;
  long double D.3490;
  char * D.3489;
  long double * D.3488;
  long unsigned int D.3487;
  long unsigned int D.3486;
  long double * D.3485;
  struct Aircraft_t * D.3484;
  long unsigned int D.3483;
  long unsigned int D.3482;
  struct Aircraft_t * D.3481;
  char D.3478;
  char D.3477;
  char D.3475;
  char D.3472;
  char D.3471;
  char D.3469;
  long double D.3468;
  double D.3467;
  char * D.3466;
  long double * D.3465;
  long double * D.3464;
  long double * * D.3463;
  long unsigned int D.3462;
  long unsigned int D.3461;
  long double * * D.3460;
  struct Aircraft_t * D.3459;
  long unsigned int D.3458;
  long unsigned int D.3457;
  struct Aircraft_t * D.3456;
  char D.3453;
  char D.3452;
  char D.3450;
  char D.3448;
  long double D.3447;
  double D.3446;
  char * D.3445;
  long double * D.3444;
  long double * D.3443;
  long double * * D.3442;
  long unsigned int D.3441;
  long unsigned int D.3440;
  long double * * D.3439;
  struct Aircraft_t * D.3438;
  long unsigned int D.3437;
  long unsigned int D.3436;
  struct Aircraft_t * D.3435;
  char D.3432;
  char D.3431;
  char D.3429;
  char D.3427;
  long double D.3426;
  double D.3425;
  char * D.3424;
  long double * D.3423;
  long double * * D.3422;
  long unsigned int D.3421;
  long unsigned int D.3420;
  long double * * D.3419;
  struct Aircraft_t * D.3418;
  long unsigned int D.3417;
  long unsigned int D.3416;
  struct Aircraft_t * D.3415;
  char D.3414;
  char D.3412;
  char D.3409;
  char D.3407;
  char D.3405;
  long double * D.3404;
  int D.3403;
  int D.3402;
  struct Aircraft_t * D.3401;
  long unsigned int D.3400;
  long unsigned int D.3399;
  struct Aircraft_t * D.3398;
  struct Aircraft_t * D.3397;
  long unsigned int D.3396;
  long unsigned int D.3395;
  struct Aircraft_t * D.3394;
  long double * D.3393;
  int D.3392;
  struct Aircraft_t * D.3391;
  long unsigned int D.3390;
  long unsigned int D.3389;
  struct Aircraft_t * D.3388;
  struct Aircraft_t * D.3387;
  long unsigned int D.3386;
  long unsigned int D.3385;
  struct Aircraft_t * D.3384;
  long double * * D.3383;
  int D.3382;
  struct Aircraft_t * D.3381;
  long unsigned int D.3380;
  long unsigned int D.3379;
  struct Aircraft_t * D.3378;
  struct Aircraft_t * D.3377;
  long unsigned int D.3376;
  long unsigned int D.3375;
  struct Aircraft_t * D.3374;
  int D.3373;
  char * D.3372;
  struct Aircraft_t * D.3371;
  long unsigned int D.3370;
  long unsigned int D.3369;
  struct Aircraft_t * D.3368;
  char D.3367;
  int D.3366;
  struct Aircraft_t * D.3365;
  long unsigned int D.3364;
  long unsigned int D.3363;
  struct Aircraft_t * D.3362;
  char * D.3359;
  void * D.3358;
  long unsigned int D.3357;
  long unsigned int D.3356;
  long unsigned int _13;
  long unsigned int _14;
  void * _15;
  char * _18;
  struct Aircraft_t * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct Aircraft_t * _22;
  int _23;
  char _25;
  struct Aircraft_t * _27;
  long unsigned int _28;
  long unsigned int _29;
  struct Aircraft_t * _30;
  char * _32;
  int _33;
  struct Aircraft_t * _34;
  long unsigned int _35;
  long unsigned int _36;
  struct Aircraft_t * _37;
  struct Aircraft_t * _38;
  long unsigned int _39;
  long unsigned int _40;
  struct Aircraft_t * _41;
  int _42;
  long double * * _43;
  struct Aircraft_t * _44;
  long unsigned int _45;
  long unsigned int _46;
  struct Aircraft_t * _47;
  struct Aircraft_t * _48;
  long unsigned int _49;
  long unsigned int _50;
  struct Aircraft_t * _51;
  int _52;
  long double * _53;
  struct Aircraft_t * _54;
  long unsigned int _55;
  long unsigned int _56;
  struct Aircraft_t * _57;
  struct Aircraft_t * _58;
  long unsigned int _59;
  long unsigned int _60;
  struct Aircraft_t * _61;
  int _62;
  int _63;
  long double * _64;
  struct Aircraft_t * _66;
  long unsigned int _67;
  long unsigned int _68;
  struct Aircraft_t * _69;
  int _70;
  char _72;
  char _73;
  char _74;
  char _76;
  char _77;
  struct Aircraft_t * _78;
  long unsigned int _79;
  long unsigned int _80;
  struct Aircraft_t * _81;
  long double * * _82;
  long unsigned int _83;
  long unsigned int _84;
  long double * * _85;
  long double * _86;
  char * _88;
  double _89;
  long double _90;
  char _92;
  char _93;
  char _94;
  char _96;
  struct Aircraft_t * _97;
  long unsigned int _98;
  long unsigned int _99;
  struct Aircraft_t * _100;
  long double * * _101;
  long unsigned int _102;
  long unsigned int _103;
  long double * * _104;
  long double * _105;
  long double * _106;
  char * _108;
  double _109;
  long double _110;
  char _112;
  char _113;
  char _114;
  char _116;
  struct Aircraft_t * _117;
  long unsigned int _118;
  long unsigned int _119;
  struct Aircraft_t * _120;
  long double * * _121;
  long unsigned int _122;
  long unsigned int _123;
  long double * * _124;
  long double * _125;
  long double * _126;
  char * _128;
  double _129;
  long double _130;
  char _132;
  char _133;
  char _135;
  char _137;
  char _138;
  char _140;
  struct Aircraft_t * _141;
  long unsigned int _142;
  long unsigned int _143;
  struct Aircraft_t * _144;
  long double * _145;
  long unsigned int _146;
  long unsigned int _147;
  long double * _148;
  char * _150;
  long double _151;
  struct Aircraft_t * _154;
  int _155;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_11 = fopen (m1_file_10(D), "r");
  if (rstream_11 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("M1 File doesn\'t exist\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  fgets (&c, 50000, rstream_11);
  Nflight_12 = atoi (&c);
  _13 = (long unsigned int) Nflight_12;
  _14 = _13 * 160;
  _15 = malloc (_14);
  *flight_16(D) = _15;
  i_17 = 0;
  goto <bb 48>;
;;    succ:       48

;;   basic block 5, loop depth 0
;;    pred:       48
  _18 = fgets (&c, 50000, rstream_11);
  if (_18 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  BuG ("BUG in M1 File -lx0\n");
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  _19 = *flight_16(D);
  _20 = (long unsigned int) i_1;
  _21 = _20 * 160;
  _22 = _19 + _21;
  _23 = atoi (&c);
  _22->ID = _23;
  j_24 = 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       9
  j_26 = j_2 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # j_2 = PHI <j_24(7), j_26(8)>
  _25 = c[j_2];
  if (_25 != 9)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  _27 = *flight_16(D);
  _28 = (long unsigned int) i_1;
  _29 = _28 * 160;
  _30 = _27 + _29;
  j_31 = j_2 + 1;
  _32 = &c[j_31];
  _33 = atoi (_32);
  _30->n_nvp = _33;
  _34 = *flight_16(D);
  _35 = (long unsigned int) i_1;
  _36 = _35 * 160;
  _37 = _34 + _36;
  _38 = *flight_16(D);
  _39 = (long unsigned int) i_1;
  _40 = _39 * 160;
  _41 = _38 + _40;
  _42 = _41->n_nvp;
  _43 = falloc_matrix (_42, 4);
  _37->nvp = _43;
  _44 = *flight_16(D);
  _45 = (long unsigned int) i_1;
  _46 = _45 * 160;
  _47 = _44 + _46;
  _48 = *flight_16(D);
  _49 = (long unsigned int) i_1;
  _50 = _49 * 160;
  _51 = _48 + _50;
  _52 = _51->n_nvp;
  _53 = falloc_vec (_52);
  _47->time = _53;
  _54 = *flight_16(D);
  _55 = (long unsigned int) i_1;
  _56 = _55 * 160;
  _57 = _54 + _56;
  _58 = *flight_16(D);
  _59 = (long unsigned int) i_1;
  _60 = _59 * 160;
  _61 = _58 + _60;
  _62 = _61->n_nvp;
  _63 = _62 + -1;
  _64 = falloc_vec (_63);
  _57->vel = _64;
  h_65 = 0;
  goto <bb 46>;
;;    succ:       46

;;   basic block 11, loop depth 0
;;    pred:       46
  j_71 = j_8 + 1;
  goto <bb 13>;
;;    succ:       13

;;   basic block 12, loop depth 0
;;    pred:       15
  j_75 = j_3 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  # j_3 = PHI <j_71(11), j_75(12)>
  _72 = c[j_3];
  if (_72 != 9)
    goto <bb 14>;
  else
    goto <bb 16>;
;;    succ:       14
;;                16

;;   basic block 14, loop depth 0
;;    pred:       13
  _73 = c[j_3];
  if (_73 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _74 = c[j_3];
  if (_74 != 10)
    goto <bb 12>;
  else
    goto <bb 16>;
;;    succ:       12
;;                16

;;   basic block 16, loop depth 0
;;    pred:       13
;;                14
;;                15
  _76 = c[j_3];
  if (_76 == 0)
    goto <bb 18>;
  else
    goto <bb 17>;
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  _77 = c[j_3];
  if (_77 == 10)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  BuG ("BUG in M1 File -lx1\n");
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       17
;;                18
  _78 = *flight_16(D);
  _79 = (long unsigned int) i_1;
  _80 = _79 * 160;
  _81 = _78 + _80;
  _82 = _81->nvp;
  _83 = (long unsigned int) h_9;
  _84 = _83 * 8;
  _85 = _82 + _84;
  _86 = *_85;
  j_87 = j_3 + 1;
  _88 = &c[j_87];
  _89 = atof (_88);
  _90 = (long double) _89;
  *_86 = _90;
  j_91 = j_87 + 1;
  goto <bb 21>;
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       23
  j_95 = j_4 + 1;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       19
;;                20
  # j_4 = PHI <j_91(19), j_95(20)>
  _92 = c[j_4];
  if (_92 != 44)
    goto <bb 22>;
  else
    goto <bb 24>;
;;    succ:       22
;;                24

;;   basic block 22, loop depth 0
;;    pred:       21
  _93 = c[j_4];
  if (_93 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
  _94 = c[j_4];
  if (_94 != 10)
    goto <bb 20>;
  else
    goto <bb 24>;
;;    succ:       20
;;                24

;;   basic block 24, loop depth 0
;;    pred:       21
;;                22
;;                23
  _96 = c[j_4];
  if (_96 == 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  BuG ("BUG in M1 File -lx2\n");
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       24
;;                25
  _97 = *flight_16(D);
  _98 = (long unsigned int) i_1;
  _99 = _98 * 160;
  _100 = _97 + _99;
  _101 = _100->nvp;
  _102 = (long unsigned int) h_9;
  _103 = _102 * 8;
  _104 = _101 + _103;
  _105 = *_104;
  _106 = _105 + 16;
  j_107 = j_4 + 1;
  _108 = &c[j_107];
  _109 = atof (_108);
  _110 = (long double) _109;
  *_106 = _110;
  j_111 = j_107 + 1;
  goto <bb 28>;
;;    succ:       28

;;   basic block 27, loop depth 0
;;    pred:       30
  j_115 = j_5 + 1;
;;    succ:       28

;;   basic block 28, loop depth 0
;;    pred:       26
;;                27
  # j_5 = PHI <j_111(26), j_115(27)>
  _112 = c[j_5];
  if (_112 != 44)
    goto <bb 29>;
  else
    goto <bb 31>;
;;    succ:       29
;;                31

;;   basic block 29, loop depth 0
;;    pred:       28
  _113 = c[j_5];
  if (_113 != 0)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30
;;                31

;;   basic block 30, loop depth 0
;;    pred:       29
  _114 = c[j_5];
  if (_114 != 10)
    goto <bb 27>;
  else
    goto <bb 31>;
;;    succ:       27
;;                31

;;   basic block 31, loop depth 0
;;    pred:       28
;;                29
;;                30
  _116 = c[j_5];
  if (_116 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32
;;                33

;;   basic block 32, loop depth 0
;;    pred:       31
  BuG ("BUG in M1 File -lx3\n");
;;    succ:       33

;;   basic block 33, loop depth 0
;;    pred:       31
;;                32
  _117 = *flight_16(D);
  _118 = (long unsigned int) i_1;
  _119 = _118 * 160;
  _120 = _117 + _119;
  _121 = _120->nvp;
  _122 = (long unsigned int) h_9;
  _123 = _122 * 8;
  _124 = _121 + _123;
  _125 = *_124;
  _126 = _125 + 32;
  j_127 = j_5 + 1;
  _128 = &c[j_127];
  _129 = atof (_128);
  _130 = (long double) _129;
  *_126 = _130;
  j_131 = j_127 + 1;
  goto <bb 35>;
;;    succ:       35

;;   basic block 34, loop depth 0
;;    pred:       36
  j_134 = j_6 + 1;
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       33
;;                34
  # j_6 = PHI <j_131(33), j_134(34)>
  _132 = c[j_6];
  if (_132 != 44)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36
;;                37

;;   basic block 36, loop depth 0
;;    pred:       35
  _133 = c[j_6];
  if (_133 != 0)
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 37, loop depth 0
;;    pred:       35
;;                36
  _135 = c[j_6];
  if (_135 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38
;;                39

;;   basic block 38, loop depth 0
;;    pred:       37
  BuG ("BUG in M1 File -lx4\n");
;;    succ:       39

;;   basic block 39, loop depth 0
;;    pred:       37
;;                38
  j_136 = j_6 + 1;
  goto <bb 41>;
;;    succ:       41

;;   basic block 40, loop depth 0
;;    pred:       42
  j_139 = j_7 + 1;
;;    succ:       41

;;   basic block 41, loop depth 0
;;    pred:       39
;;                40
  # j_7 = PHI <j_136(39), j_139(40)>
  _137 = c[j_7];
  if (_137 != 32)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42
;;                43

;;   basic block 42, loop depth 0
;;    pred:       41
  _138 = c[j_7];
  if (_138 != 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 43, loop depth 0
;;    pred:       41
;;                42
  _140 = c[j_7];
  if (_140 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44
;;                45

;;   basic block 44, loop depth 0
;;    pred:       43
  BuG ("BUG in M1 File -lx5\n");
;;    succ:       45

;;   basic block 45, loop depth 0
;;    pred:       43
;;                44
  _141 = *flight_16(D);
  _142 = (long unsigned int) i_1;
  _143 = _142 * 160;
  _144 = _141 + _143;
  _145 = _144->time;
  _146 = (long unsigned int) h_9;
  _147 = _146 * 16;
  _148 = _145 + _147;
  j_149 = j_7 + 1;
  _150 = &c[j_149];
  _151 = _convert_time (_150);
  *_148 = _151;
  h_152 = h_9 + 1;
;;    succ:       46

;;   basic block 46, loop depth 0
;;    pred:       10
;;                45
  # j_8 = PHI <j_31(10), j_149(45)>
  # h_9 = PHI <h_65(10), h_152(45)>
  _66 = *flight_16(D);
  _67 = (long unsigned int) i_1;
  _68 = _67 * 160;
  _69 = _66 + _68;
  _70 = _69->n_nvp;
  if (_70 > h_9)
    goto <bb 11>;
  else
    goto <bb 47>;
;;    succ:       11
;;                47

;;   basic block 47, loop depth 0
;;    pred:       46
  i_153 = i_1 + 1;
;;    succ:       48

;;   basic block 48, loop depth 0
;;    pred:       4
;;                47
  # i_1 = PHI <i_17(4), i_153(47)>
  if (i_1 < Nflight_12)
    goto <bb 5>;
  else
    goto <bb 49>;
;;    succ:       5
;;                49

;;   basic block 49, loop depth 0
;;    pred:       48
  _154 = *flight_16(D);
  _calculate_velocity (_154, Nflight_12);
  _155 = Nflight_12;
  c ={v} {CLOBBER};
;;    succ:       50

;;   basic block 50, loop depth 0
;;    pred:       49
<L48>:
  return _155;
;;    succ:       EXIT

}


Partition 5: size 50000 align 16
	c
Partition 3: size 8 align 8
	rstream_11
Partition 4: size 4 align 4
	Nflight_12
Partition 2: size 4 align 4
	h_9
Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; rstream_11 = fopen (m1_file_10(D), "r");

(insn 8 7 9 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 m1_file+0 S8 A64])) mQuery.c:54 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:54 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 181)) mQuery.c:54 -1
     (nil))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:54 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 12 11 13 (set (reg:DI 182)
        (reg:DI 0 ax)) mQuery.c:54 -1
     (nil))

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 182)) mQuery.c:54 -1
     (nil))

;; if (rstream_11 == 0B)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:55 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:55 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("M1 File doesn\'t exist\n");

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8734751e40 *.LC6>)) mQuery.c:55 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:55 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 21 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; fgets (&c, 50000, rstream_11);

(insn 21 20 22 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:58 -1
     (nil))

(insn 22 21 23 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:58 -1
     (nil))

(insn 23 22 24 (set (reg:DI 1 dx)
        (reg:DI 183)) mQuery.c:58 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:58 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg:DI 184)) mQuery.c:58 -1
     (nil))

(call_insn 26 25 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:58 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; Nflight_12 = atoi (&c);

(insn 27 26 28 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:60 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg:DI 185)) mQuery.c:60 -1
     (nil))

(call_insn/i 29 28 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 30 29 31 (set (reg:SI 186)
        (reg:SI 0 ax)) mQuery.c:60 -1
     (nil))

(insn 31 30 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])
        (reg:SI 186)) mQuery.c:60 -1
     (nil))

;; _13 = (long unsigned int) Nflight_12;

(insn 32 31 33 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:64 -1
     (nil))

(insn 33 32 0 (set (reg:DI 59 [ D.3685 ])
        (sign_extend:DI (reg:SI 187))) mQuery.c:64 -1
     (nil))

;; _14 = _13 * 160;

(insn 34 33 35 (set (reg:DI 188)
        (reg:DI 59 [ D.3685 ])) mQuery.c:64 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:DI 188)
                (ashift:DI (reg:DI 188)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 188)
                    (reg:DI 59 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 37 36 38 (parallel [
            (set (reg:DI 189)
                (ashift:DI (reg:DI 188)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (nil))

(insn 38 37 39 (set (reg:DI 188)
        (reg:DI 189)) mQuery.c:64 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 39 38 0 (set (reg:DI 60 [ D.3685 ])
        (reg:DI 188)) mQuery.c:64 -1
     (nil))

;; _15 = malloc (_14);

(insn 40 39 41 (set (reg:DI 5 di)
        (reg:DI 60 [ D.3685 ])) mQuery.c:64 -1
     (nil))

(call_insn 41 40 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f8734961b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mQuery.c:64 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 42 41 43 (set (reg/f:DI 190)
        (reg:DI 0 ax)) mQuery.c:64 -1
     (expr_list:REG_NOALIAS (reg/f:DI 190)
        (nil)))

(insn 43 42 0 (set (reg/f:DI 61 [ D.3686 ])
        (reg/f:DI 190)) mQuery.c:64 -1
     (nil))

;; *flight_16(D) = _15;

(insn 44 43 45 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:64 -1
     (nil))

(insn 45 44 0 (set (mem/f:DI (reg/f:DI 191) [0 *flight_16(D)+0 S8 A64])
        (reg/f:DI 61 [ D.3686 ])) mQuery.c:64 -1
     (nil))

;; i_17 = 0;

(insn 46 45 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:66 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _18 = fgets (&c, 50000, rstream_11);

(insn 50 49 51 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:67 -1
     (nil))

(insn 51 50 52 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:67 -1
     (nil))

(insn 52 51 53 (set (reg:DI 1 dx)
        (reg:DI 192)) mQuery.c:67 -1
     (nil))

(insn 53 52 54 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:67 -1
     (nil))

(insn 54 53 55 (set (reg:DI 5 di)
        (reg:DI 193)) mQuery.c:67 -1
     (nil))

(call_insn 55 54 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 56 55 0 (set (reg/f:DI 62 [ D.3687 ])
        (reg:DI 0 ax)) mQuery.c:67 -1
     (nil))

;; if (_18 == 0B)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3687 ])
            (const_int 0 [0]))) mQuery.c:67 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:67 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; BuG ("BUG in M1 File -lx0\n");

(insn 60 59 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8734751ed8 *.LC7>)) mQuery.c:67 -1
     (nil))

(call_insn 61 60 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 7

;; 

(code_label 62 61 63 23 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; _19 = *flight_16(D);

(insn 64 63 65 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:69 -1
     (nil))

(insn 65 64 0 (set (reg/f:DI 63 [ D.3688 ])
        (mem/f:DI (reg/f:DI 194) [0 *flight_16(D)+0 S8 A64])) mQuery.c:69 -1
     (nil))

;; _20 = (long unsigned int) i_1;

(insn 66 65 67 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:69 -1
     (nil))

(insn 67 66 0 (set (reg:DI 64 [ D.3685 ])
        (sign_extend:DI (reg:SI 195))) mQuery.c:69 -1
     (nil))

;; _21 = _20 * 160;

(insn 68 67 69 (set (reg:DI 196)
        (reg:DI 64 [ D.3685 ])) mQuery.c:69 -1
     (nil))

(insn 69 68 70 (parallel [
            (set (reg:DI 196)
                (ashift:DI (reg:DI 196)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))

(insn 70 69 71 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 196)
                    (reg:DI 64 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 71 70 72 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 196)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))

(insn 72 71 73 (set (reg:DI 196)
        (reg:DI 197)) mQuery.c:69 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 73 72 0 (set (reg:DI 65 [ D.3685 ])
        (reg:DI 196)) mQuery.c:69 -1
     (nil))

;; _22 = _19 + _21;

(insn 74 73 0 (parallel [
            (set (reg/f:DI 66 [ D.3688 ])
                (plus:DI (reg/f:DI 63 [ D.3688 ])
                    (reg:DI 65 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))

;; _23 = atoi (&c);

(insn 75 74 76 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))

(insn 76 75 77 (set (reg:DI 5 di)
        (reg:DI 198)) mQuery.c:69 -1
     (nil))

(call_insn/i 77 76 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:69 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 78 77 0 (set (reg:SI 67 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:69 -1
     (nil))

;; _22->ID = _23;

(insn 79 78 0 (set (mem/j:SI (reg/f:DI 66 [ D.3688 ]) [0 _22->ID+0 S4 A128])
        (reg:SI 67 [ D.3689 ])) mQuery.c:69 -1
     (nil))

;; j_24 = 1;

(insn 80 79 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mQuery.c:70 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; j_26 = j_2 + 1;

(insn 84 83 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:70 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 85 84 86 24 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; _25 = c[j_2];

(insn 87 86 88 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:70 -1
     (nil))

(insn 88 87 89 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 200))) mQuery.c:70 -1
     (nil))

(insn 89 88 0 (set (reg:QI 68 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 199))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:70 -1
     (nil))

;; if (_25 != 9)

(insn 91 89 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:70 -1
     (nil))

(jump_insn 92 91 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mQuery.c:70 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _27 = *flight_16(D);

(insn 94 93 95 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:72 -1
     (nil))

(insn 95 94 0 (set (reg/f:DI 69 [ D.3688 ])
        (mem/f:DI (reg/f:DI 201) [0 *flight_16(D)+0 S8 A64])) mQuery.c:72 -1
     (nil))

;; _28 = (long unsigned int) i_1;

(insn 96 95 97 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:72 -1
     (nil))

(insn 97 96 0 (set (reg:DI 70 [ D.3685 ])
        (sign_extend:DI (reg:SI 202))) mQuery.c:72 -1
     (nil))

;; _29 = _28 * 160;

(insn 98 97 99 (set (reg:DI 203)
        (reg:DI 70 [ D.3685 ])) mQuery.c:72 -1
     (nil))

(insn 99 98 100 (parallel [
            (set (reg:DI 203)
                (ashift:DI (reg:DI 203)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

(insn 100 99 101 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg:DI 203)
                    (reg:DI 70 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 101 100 102 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 203)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

(insn 102 101 103 (set (reg:DI 203)
        (reg:DI 204)) mQuery.c:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 103 102 0 (set (reg:DI 71 [ D.3685 ])
        (reg:DI 203)) mQuery.c:72 -1
     (nil))

;; _30 = _27 + _29;

(insn 104 103 0 (parallel [
            (set (reg/f:DI 72 [ D.3688 ])
                (plus:DI (reg/f:DI 69 [ D.3688 ])
                    (reg:DI 71 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

;; j_31 = j_2 + 1;

(insn 105 104 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

;; _32 = &c[j_31];

(insn 106 105 107 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

(insn 107 106 108 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:72 -1
     (nil))

(insn 108 107 109 (set (reg:DI 206)
        (sign_extend:DI (reg:SI 207))) mQuery.c:72 -1
     (nil))

(insn 109 108 0 (parallel [
            (set (reg/f:DI 73 [ D.3687 ])
                (plus:DI (reg:DI 205)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))

;; _33 = atoi (_32);

(insn 110 109 111 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3687 ])) mQuery.c:72 -1
     (nil))

(call_insn/i 111 110 112 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 112 111 0 (set (reg:SI 74 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:72 -1
     (nil))

;; _30->n_nvp = _33;

(insn 113 112 0 (set (mem/j:SI (plus:DI (reg/f:DI 72 [ D.3688 ])
                (const_int 4 [0x4])) [0 _30->n_nvp+0 S4 A32])
        (reg:SI 74 [ D.3689 ])) mQuery.c:72 -1
     (nil))

;; _34 = *flight_16(D);

(insn 114 113 115 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 -1
     (nil))

(insn 115 114 0 (set (reg/f:DI 75 [ D.3688 ])
        (mem/f:DI (reg/f:DI 208) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 -1
     (nil))

;; _35 = (long unsigned int) i_1;

(insn 116 115 117 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 -1
     (nil))

(insn 117 116 0 (set (reg:DI 76 [ D.3685 ])
        (sign_extend:DI (reg:SI 209))) mQuery.c:74 -1
     (nil))

;; _36 = _35 * 160;

(insn 118 117 119 (set (reg:DI 210)
        (reg:DI 76 [ D.3685 ])) mQuery.c:74 -1
     (nil))

(insn 119 118 120 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 210)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

(insn 120 119 121 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg:DI 210)
                    (reg:DI 76 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 121 120 122 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

(insn 122 121 123 (set (reg:DI 210)
        (reg:DI 211)) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 123 122 0 (set (reg:DI 77 [ D.3685 ])
        (reg:DI 210)) mQuery.c:74 -1
     (nil))

;; _37 = _34 + _36;

(insn 124 123 0 (parallel [
            (set (reg/f:DI 78 [ D.3688 ])
                (plus:DI (reg/f:DI 75 [ D.3688 ])
                    (reg:DI 77 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

;; _38 = *flight_16(D);

(insn 125 124 126 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 -1
     (nil))

(insn 126 125 0 (set (reg/f:DI 79 [ D.3688 ])
        (mem/f:DI (reg/f:DI 212) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 -1
     (nil))

;; _39 = (long unsigned int) i_1;

(insn 127 126 128 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 -1
     (nil))

(insn 128 127 0 (set (reg:DI 80 [ D.3685 ])
        (sign_extend:DI (reg:SI 213))) mQuery.c:74 -1
     (nil))

;; _40 = _39 * 160;

(insn 129 128 130 (set (reg:DI 214)
        (reg:DI 80 [ D.3685 ])) mQuery.c:74 -1
     (nil))

(insn 130 129 131 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 214)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

(insn 131 130 132 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 214)
                    (reg:DI 80 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 132 131 133 (parallel [
            (set (reg:DI 215)
                (ashift:DI (reg:DI 214)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

(insn 133 132 134 (set (reg:DI 214)
        (reg:DI 215)) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 134 133 0 (set (reg:DI 81 [ D.3685 ])
        (reg:DI 214)) mQuery.c:74 -1
     (nil))

;; _41 = _38 + _40;

(insn 135 134 0 (parallel [
            (set (reg/f:DI 82 [ D.3688 ])
                (plus:DI (reg/f:DI 79 [ D.3688 ])
                    (reg:DI 81 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))

;; _42 = _41->n_nvp;

(insn 136 135 0 (set (reg:SI 83 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 82 [ D.3688 ])
                (const_int 4 [0x4])) [0 _41->n_nvp+0 S4 A32])) mQuery.c:74 -1
     (nil))

;; _43 = falloc_matrix (_42, 4);

(insn 137 136 138 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mQuery.c:74 -1
     (nil))

(insn 138 137 139 (set (reg:SI 5 di)
        (reg:SI 83 [ D.3689 ])) mQuery.c:74 -1
     (nil))

(call_insn 139 138 140 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:74 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 140 139 0 (set (reg/f:DI 84 [ D.3691 ])
        (reg:DI 0 ax)) mQuery.c:74 -1
     (nil))

;; _37->nvp = _43;

(insn 141 140 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 78 [ D.3688 ])
                (const_int 8 [0x8])) [0 _37->nvp+0 S8 A64])
        (reg/f:DI 84 [ D.3691 ])) mQuery.c:74 -1
     (nil))

;; _44 = *flight_16(D);

(insn 142 141 143 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 -1
     (nil))

(insn 143 142 0 (set (reg/f:DI 85 [ D.3688 ])
        (mem/f:DI (reg/f:DI 216) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 -1
     (nil))

;; _45 = (long unsigned int) i_1;

(insn 144 143 145 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 -1
     (nil))

(insn 145 144 0 (set (reg:DI 86 [ D.3685 ])
        (sign_extend:DI (reg:SI 217))) mQuery.c:75 -1
     (nil))

;; _46 = _45 * 160;

(insn 146 145 147 (set (reg:DI 218)
        (reg:DI 86 [ D.3685 ])) mQuery.c:75 -1
     (nil))

(insn 147 146 148 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 218)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

(insn 148 147 149 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 218)
                    (reg:DI 86 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 149 148 150 (parallel [
            (set (reg:DI 219)
                (ashift:DI (reg:DI 218)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

(insn 150 149 151 (set (reg:DI 218)
        (reg:DI 219)) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 151 150 0 (set (reg:DI 87 [ D.3685 ])
        (reg:DI 218)) mQuery.c:75 -1
     (nil))

;; _47 = _44 + _46;

(insn 152 151 0 (parallel [
            (set (reg/f:DI 88 [ D.3688 ])
                (plus:DI (reg/f:DI 85 [ D.3688 ])
                    (reg:DI 87 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

;; _48 = *flight_16(D);

(insn 153 152 154 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 -1
     (nil))

(insn 154 153 0 (set (reg/f:DI 89 [ D.3688 ])
        (mem/f:DI (reg/f:DI 220) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 -1
     (nil))

;; _49 = (long unsigned int) i_1;

(insn 155 154 156 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 -1
     (nil))

(insn 156 155 0 (set (reg:DI 90 [ D.3685 ])
        (sign_extend:DI (reg:SI 221))) mQuery.c:75 -1
     (nil))

;; _50 = _49 * 160;

(insn 157 156 158 (set (reg:DI 222)
        (reg:DI 90 [ D.3685 ])) mQuery.c:75 -1
     (nil))

(insn 158 157 159 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 222)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

(insn 159 158 160 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg:DI 222)
                    (reg:DI 90 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 160 159 161 (parallel [
            (set (reg:DI 223)
                (ashift:DI (reg:DI 222)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

(insn 161 160 162 (set (reg:DI 222)
        (reg:DI 223)) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 162 161 0 (set (reg:DI 91 [ D.3685 ])
        (reg:DI 222)) mQuery.c:75 -1
     (nil))

;; _51 = _48 + _50;

(insn 163 162 0 (parallel [
            (set (reg/f:DI 92 [ D.3688 ])
                (plus:DI (reg/f:DI 89 [ D.3688 ])
                    (reg:DI 91 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))

;; _52 = _51->n_nvp;

(insn 164 163 0 (set (reg:SI 93 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 92 [ D.3688 ])
                (const_int 4 [0x4])) [0 _51->n_nvp+0 S4 A32])) mQuery.c:75 -1
     (nil))

;; _53 = falloc_vec (_52);

(insn 165 164 166 (set (reg:SI 5 di)
        (reg:SI 93 [ D.3689 ])) mQuery.c:75 -1
     (nil))

(call_insn 166 165 167 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:75 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(insn 167 166 0 (set (reg/f:DI 94 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:75 -1
     (nil))

;; _47->time = _53;

(insn 168 167 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 88 [ D.3688 ])
                (const_int 16 [0x10])) [0 _47->time+0 S8 A128])
        (reg/f:DI 94 [ D.3692 ])) mQuery.c:75 -1
     (nil))

;; _54 = *flight_16(D);

(insn 169 168 170 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 -1
     (nil))

(insn 170 169 0 (set (reg/f:DI 95 [ D.3688 ])
        (mem/f:DI (reg/f:DI 224) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 -1
     (nil))

;; _55 = (long unsigned int) i_1;

(insn 171 170 172 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 -1
     (nil))

(insn 172 171 0 (set (reg:DI 96 [ D.3685 ])
        (sign_extend:DI (reg:SI 225))) mQuery.c:76 -1
     (nil))

;; _56 = _55 * 160;

(insn 173 172 174 (set (reg:DI 226)
        (reg:DI 96 [ D.3685 ])) mQuery.c:76 -1
     (nil))

(insn 174 173 175 (parallel [
            (set (reg:DI 226)
                (ashift:DI (reg:DI 226)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

(insn 175 174 176 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 226)
                    (reg:DI 96 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 176 175 177 (parallel [
            (set (reg:DI 227)
                (ashift:DI (reg:DI 226)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

(insn 177 176 178 (set (reg:DI 226)
        (reg:DI 227)) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 178 177 0 (set (reg:DI 97 [ D.3685 ])
        (reg:DI 226)) mQuery.c:76 -1
     (nil))

;; _57 = _54 + _56;

(insn 179 178 0 (parallel [
            (set (reg/f:DI 98 [ D.3688 ])
                (plus:DI (reg/f:DI 95 [ D.3688 ])
                    (reg:DI 97 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

;; _58 = *flight_16(D);

(insn 180 179 181 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 -1
     (nil))

(insn 181 180 0 (set (reg/f:DI 99 [ D.3688 ])
        (mem/f:DI (reg/f:DI 228) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 -1
     (nil))

;; _59 = (long unsigned int) i_1;

(insn 182 181 183 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 -1
     (nil))

(insn 183 182 0 (set (reg:DI 100 [ D.3685 ])
        (sign_extend:DI (reg:SI 229))) mQuery.c:76 -1
     (nil))

;; _60 = _59 * 160;

(insn 184 183 185 (set (reg:DI 230)
        (reg:DI 100 [ D.3685 ])) mQuery.c:76 -1
     (nil))

(insn 185 184 186 (parallel [
            (set (reg:DI 230)
                (ashift:DI (reg:DI 230)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

(insn 186 185 187 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg:DI 230)
                    (reg:DI 100 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 187 186 188 (parallel [
            (set (reg:DI 231)
                (ashift:DI (reg:DI 230)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

(insn 188 187 189 (set (reg:DI 230)
        (reg:DI 231)) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 189 188 0 (set (reg:DI 101 [ D.3685 ])
        (reg:DI 230)) mQuery.c:76 -1
     (nil))

;; _61 = _58 + _60;

(insn 190 189 0 (parallel [
            (set (reg/f:DI 102 [ D.3688 ])
                (plus:DI (reg/f:DI 99 [ D.3688 ])
                    (reg:DI 101 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

;; _62 = _61->n_nvp;

(insn 191 190 0 (set (reg:SI 103 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 102 [ D.3688 ])
                (const_int 4 [0x4])) [0 _61->n_nvp+0 S4 A32])) mQuery.c:76 -1
     (nil))

;; _63 = _62 + -1;

(insn 192 191 0 (parallel [
            (set (reg:SI 104 [ D.3689 ])
                (plus:SI (reg:SI 103 [ D.3689 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))

;; _64 = falloc_vec (_63);

(insn 193 192 194 (set (reg:SI 5 di)
        (reg:SI 104 [ D.3689 ])) mQuery.c:76 -1
     (nil))

(call_insn 194 193 195 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:76 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(insn 195 194 0 (set (reg/f:DI 105 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:76 -1
     (nil))

;; _57->vel = _64;

(insn 196 195 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 98 [ D.3688 ])
                (const_int 24 [0x18])) [0 _57->vel+0 S8 A64])
        (reg/f:DI 105 [ D.3692 ])) mQuery.c:76 -1
     (nil))

;; h_65 = 0;

(insn 197 196 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
        (const_int 0 [0])) mQuery.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; j_71 = j_8 + 1;

(insn 201 200 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; j_75 = j_3 + 1;

(insn 205 204 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 206 205 207 27 "" [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; _72 = c[j_3];

(insn 208 207 209 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))

(insn 209 208 210 (set (reg:DI 232)
        (sign_extend:DI (reg:SI 233))) mQuery.c:79 -1
     (nil))

(insn 210 209 0 (set (reg:QI 111 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 232))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))

;; if (_72 != 9)

(insn 211 210 212 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 111 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:79 -1
     (nil))

(jump_insn 212 211 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:79 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _73 = c[j_3];

(insn 214 213 215 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))

(insn 215 214 216 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 235))) mQuery.c:79 -1
     (nil))

(insn 216 215 0 (set (reg:QI 112 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 234))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))

;; if (_73 != 0)

(insn 217 216 218 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:79 -1
     (nil))

(jump_insn 218 217 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:79 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _74 = c[j_3];

(insn 220 219 221 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))

(insn 221 220 222 (set (reg:DI 236)
        (sign_extend:DI (reg:SI 237))) mQuery.c:79 -1
     (nil))

(insn 222 221 0 (set (reg:QI 113 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 236))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))

;; if (_74 != 10)

(insn 224 222 225 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:79 -1
     (nil))

(jump_insn 225 224 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) mQuery.c:79 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 226 225 227 28 "" [0 uses])

(note 227 226 0 NOTE_INSN_BASIC_BLOCK)

;; _76 = c[j_3];

(insn 228 227 229 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 -1
     (nil))

(insn 229 228 230 (set (reg:DI 238)
        (sign_extend:DI (reg:SI 239))) mQuery.c:80 -1
     (nil))

(insn 230 229 0 (set (reg:QI 114 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 238))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 -1
     (nil))

;; if (_76 == 0)

(insn 231 230 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:80 -1
     (nil))

(jump_insn 232 231 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:80 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _77 = c[j_3];

(insn 234 233 235 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 -1
     (nil))

(insn 235 234 236 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 241))) mQuery.c:80 -1
     (nil))

(insn 236 235 0 (set (reg:QI 115 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 240))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 -1
     (nil))

;; if (_77 == 10)

(insn 237 236 238 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:80 -1
     (nil))

(jump_insn 238 237 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:80 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 239 238 240 30 "" [0 uses])

(note 240 239 0 NOTE_INSN_BASIC_BLOCK)

;; BuG ("BUG in M1 File -lx1\n");

(insn 241 240 242 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f873475f000 *.LC8>)) mQuery.c:80 -1
     (nil))

(call_insn 242 241 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:80 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 19

;; 

(code_label 243 242 244 31 "" [0 uses])

(note 244 243 0 NOTE_INSN_BASIC_BLOCK)

;; _78 = *flight_16(D);

(insn 245 244 246 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:81 -1
     (nil))

(insn 246 245 0 (set (reg/f:DI 116 [ D.3688 ])
        (mem/f:DI (reg/f:DI 242) [0 *flight_16(D)+0 S8 A64])) mQuery.c:81 -1
     (nil))

;; _79 = (long unsigned int) i_1;

(insn 247 246 248 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:81 -1
     (nil))

(insn 248 247 0 (set (reg:DI 117 [ D.3685 ])
        (sign_extend:DI (reg:SI 243))) mQuery.c:81 -1
     (nil))

;; _80 = _79 * 160;

(insn 249 248 250 (set (reg:DI 244)
        (reg:DI 117 [ D.3685 ])) mQuery.c:81 -1
     (nil))

(insn 250 249 251 (parallel [
            (set (reg:DI 244)
                (ashift:DI (reg:DI 244)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

(insn 251 250 252 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 244)
                    (reg:DI 117 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 252 251 253 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 244)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

(insn 253 252 254 (set (reg:DI 244)
        (reg:DI 245)) mQuery.c:81 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 254 253 0 (set (reg:DI 118 [ D.3685 ])
        (reg:DI 244)) mQuery.c:81 -1
     (nil))

;; _81 = _78 + _80;

(insn 255 254 0 (parallel [
            (set (reg/f:DI 119 [ D.3688 ])
                (plus:DI (reg/f:DI 116 [ D.3688 ])
                    (reg:DI 118 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

;; _82 = _81->nvp;

(insn 256 255 0 (set (reg/f:DI 120 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 119 [ D.3688 ])
                (const_int 8 [0x8])) [0 _81->nvp+0 S8 A64])) mQuery.c:81 -1
     (nil))

;; _83 = (long unsigned int) h_9;

(insn 257 256 258 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:81 -1
     (nil))

(insn 258 257 0 (set (reg:DI 121 [ D.3685 ])
        (sign_extend:DI (reg:SI 246))) mQuery.c:81 -1
     (nil))

;; _84 = _83 * 8;

(insn 259 258 0 (parallel [
            (set (reg:DI 122 [ D.3685 ])
                (ashift:DI (reg:DI 121 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

;; _85 = _82 + _84;

(insn 260 259 0 (parallel [
            (set (reg/f:DI 123 [ D.3691 ])
                (plus:DI (reg/f:DI 120 [ D.3691 ])
                    (reg:DI 122 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

;; _86 = *_85;

(insn 261 260 0 (set (reg/f:DI 124 [ D.3692 ])
        (mem/f:DI (reg/f:DI 123 [ D.3691 ]) [0 *_85+0 S8 A64])) mQuery.c:81 -1
     (nil))

;; j_87 = j_3 + 1;

(insn 262 261 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

;; _88 = &c[j_87];

(insn 263 262 264 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

(insn 264 263 265 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:81 -1
     (nil))

(insn 265 264 266 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) mQuery.c:81 -1
     (nil))

(insn 266 265 0 (parallel [
            (set (reg/f:DI 125 [ D.3687 ])
                (plus:DI (reg:DI 247)
                    (reg:DI 248)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))

;; _89 = atof (_88);

(insn 267 266 268 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.3687 ])) mQuery.c:81 -1
     (nil))

(call_insn/i 268 267 269 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 269 268 0 (set (reg:DF 126 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:81 -1
     (nil))

;; _90 = (long double) _89;

(insn 270 269 0 (set (reg:XF 127 [ D.3694 ])
        (float_extend:XF (reg:DF 126 [ D.3693 ]))) mQuery.c:81 -1
     (nil))

;; *_86 = _90;

(insn 271 270 0 (set (mem:XF (reg/f:DI 124 [ D.3692 ]) [0 *_86+0 S16 A128])
        (reg:XF 127 [ D.3694 ])) mQuery.c:81 -1
     (nil))

;; j_91 = j_87 + 1;

(insn 272 271 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; j_95 = j_4 + 1;

(insn 276 275 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 277 276 278 32 "" [0 uses])

(note 278 277 0 NOTE_INSN_BASIC_BLOCK)

;; _92 = c[j_4];

(insn 279 278 280 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))

(insn 280 279 281 (set (reg:DI 250)
        (sign_extend:DI (reg:SI 251))) mQuery.c:83 -1
     (nil))

(insn 281 280 0 (set (reg:QI 128 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 250))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))

;; if (_92 != 44)

(insn 282 281 283 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:83 -1
     (nil))

(jump_insn 283 282 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:83 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _93 = c[j_4];

(insn 285 284 286 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))

(insn 286 285 287 (set (reg:DI 252)
        (sign_extend:DI (reg:SI 253))) mQuery.c:83 -1
     (nil))

(insn 287 286 0 (set (reg:QI 129 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 252))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))

;; if (_93 != 0)

(insn 288 287 289 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:83 -1
     (nil))

(jump_insn 289 288 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:83 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; _94 = c[j_4];

(insn 291 290 292 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))

(insn 292 291 293 (set (reg:DI 254)
        (sign_extend:DI (reg:SI 255))) mQuery.c:83 -1
     (nil))

(insn 293 292 0 (set (reg:QI 130 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 254))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))

;; if (_94 != 10)

(insn 295 293 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:83 -1
     (nil))

(jump_insn 296 295 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) mQuery.c:83 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 297 296 298 33 "" [0 uses])

(note 298 297 0 NOTE_INSN_BASIC_BLOCK)

;; _96 = c[j_4];

(insn 299 298 300 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:84 -1
     (nil))

(insn 300 299 301 (set (reg:DI 256)
        (sign_extend:DI (reg:SI 257))) mQuery.c:84 -1
     (nil))

(insn 301 300 0 (set (reg:QI 131 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 256))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:84 -1
     (nil))

;; if (_96 == 0)

(insn 302 301 303 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 131 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:84 -1
     (nil))

(jump_insn 303 302 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:84 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; BuG ("BUG in M1 File -lx2\n");

(insn 305 304 306 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f873475f098 *.LC9>)) mQuery.c:84 -1
     (nil))

(call_insn 306 305 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:84 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 26

;; 

(code_label 307 306 308 35 "" [0 uses])

(note 308 307 0 NOTE_INSN_BASIC_BLOCK)

;; _97 = *flight_16(D);

(insn 309 308 310 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:85 -1
     (nil))

(insn 310 309 0 (set (reg/f:DI 132 [ D.3688 ])
        (mem/f:DI (reg/f:DI 258) [0 *flight_16(D)+0 S8 A64])) mQuery.c:85 -1
     (nil))

;; _98 = (long unsigned int) i_1;

(insn 311 310 312 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:85 -1
     (nil))

(insn 312 311 0 (set (reg:DI 133 [ D.3685 ])
        (sign_extend:DI (reg:SI 259))) mQuery.c:85 -1
     (nil))

;; _99 = _98 * 160;

(insn 313 312 314 (set (reg:DI 260)
        (reg:DI 133 [ D.3685 ])) mQuery.c:85 -1
     (nil))

(insn 314 313 315 (parallel [
            (set (reg:DI 260)
                (ashift:DI (reg:DI 260)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

(insn 315 314 316 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg:DI 260)
                    (reg:DI 133 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 316 315 317 (parallel [
            (set (reg:DI 261)
                (ashift:DI (reg:DI 260)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

(insn 317 316 318 (set (reg:DI 260)
        (reg:DI 261)) mQuery.c:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 318 317 0 (set (reg:DI 134 [ D.3685 ])
        (reg:DI 260)) mQuery.c:85 -1
     (nil))

;; _100 = _97 + _99;

(insn 319 318 0 (parallel [
            (set (reg/f:DI 135 [ D.3688 ])
                (plus:DI (reg/f:DI 132 [ D.3688 ])
                    (reg:DI 134 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; _101 = _100->nvp;

(insn 320 319 0 (set (reg/f:DI 136 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 135 [ D.3688 ])
                (const_int 8 [0x8])) [0 _100->nvp+0 S8 A64])) mQuery.c:85 -1
     (nil))

;; _102 = (long unsigned int) h_9;

(insn 321 320 322 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:85 -1
     (nil))

(insn 322 321 0 (set (reg:DI 137 [ D.3685 ])
        (sign_extend:DI (reg:SI 262))) mQuery.c:85 -1
     (nil))

;; _103 = _102 * 8;

(insn 323 322 0 (parallel [
            (set (reg:DI 138 [ D.3685 ])
                (ashift:DI (reg:DI 137 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; _104 = _101 + _103;

(insn 324 323 0 (parallel [
            (set (reg/f:DI 139 [ D.3691 ])
                (plus:DI (reg/f:DI 136 [ D.3691 ])
                    (reg:DI 138 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; _105 = *_104;

(insn 325 324 0 (set (reg/f:DI 140 [ D.3692 ])
        (mem/f:DI (reg/f:DI 139 [ D.3691 ]) [0 *_104+0 S8 A64])) mQuery.c:85 -1
     (nil))

;; _106 = _105 + 16;

(insn 326 325 0 (parallel [
            (set (reg/f:DI 141 [ D.3692 ])
                (plus:DI (reg/f:DI 140 [ D.3692 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; j_107 = j_4 + 1;

(insn 327 326 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; _108 = &c[j_107];

(insn 328 327 329 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

(insn 329 328 330 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:85 -1
     (nil))

(insn 330 329 331 (set (reg:DI 264)
        (sign_extend:DI (reg:SI 265))) mQuery.c:85 -1
     (nil))

(insn 331 330 0 (parallel [
            (set (reg/f:DI 142 [ D.3687 ])
                (plus:DI (reg:DI 263)
                    (reg:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))

;; _109 = atof (_108);

(insn 332 331 333 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.3687 ])) mQuery.c:85 -1
     (nil))

(call_insn/i 333 332 334 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:85 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 334 333 0 (set (reg:DF 143 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:85 -1
     (nil))

;; _110 = (long double) _109;

(insn 335 334 0 (set (reg:XF 144 [ D.3694 ])
        (float_extend:XF (reg:DF 143 [ D.3693 ]))) mQuery.c:85 -1
     (nil))

;; *_106 = _110;

(insn 336 335 0 (set (mem:XF (reg/f:DI 141 [ D.3692 ]) [0 *_106+0 S16 A128])
        (reg:XF 144 [ D.3694 ])) mQuery.c:85 -1
     (nil))

;; j_111 = j_107 + 1;

(insn 337 336 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; j_115 = j_5 + 1;

(insn 341 340 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 342 341 343 36 "" [0 uses])

(note 343 342 0 NOTE_INSN_BASIC_BLOCK)

;; _112 = c[j_5];

(insn 344 343 345 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))

(insn 345 344 346 (set (reg:DI 266)
        (sign_extend:DI (reg:SI 267))) mQuery.c:87 -1
     (nil))

(insn 346 345 0 (set (reg:QI 145 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 266))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))

;; if (_112 != 44)

(insn 347 346 348 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:87 -1
     (nil))

(jump_insn 348 347 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; _113 = c[j_5];

(insn 350 349 351 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))

(insn 351 350 352 (set (reg:DI 268)
        (sign_extend:DI (reg:SI 269))) mQuery.c:87 -1
     (nil))

(insn 352 351 0 (set (reg:QI 146 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 268))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))

;; if (_113 != 0)

(insn 353 352 354 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:87 -1
     (nil))

(jump_insn 354 353 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _114 = c[j_5];

(insn 356 355 357 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))

(insn 357 356 358 (set (reg:DI 270)
        (sign_extend:DI (reg:SI 271))) mQuery.c:87 -1
     (nil))

(insn 358 357 0 (set (reg:QI 147 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 270))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))

;; if (_114 != 10)

(insn 360 358 361 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:87 -1
     (nil))

(jump_insn 361 360 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) mQuery.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 362 361 363 37 "" [0 uses])

(note 363 362 0 NOTE_INSN_BASIC_BLOCK)

;; _116 = c[j_5];

(insn 364 363 365 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:88 -1
     (nil))

(insn 365 364 366 (set (reg:DI 272)
        (sign_extend:DI (reg:SI 273))) mQuery.c:88 -1
     (nil))

(insn 366 365 0 (set (reg:QI 148 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 272))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:88 -1
     (nil))

;; if (_116 == 0)

(insn 367 366 368 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:88 -1
     (nil))

(jump_insn 368 367 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:88 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; BuG ("BUG in M1 File -lx3\n");

(insn 370 369 371 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f873475f130 *.LC10>)) mQuery.c:88 -1
     (nil))

(call_insn 371 370 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:88 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 33

;; 

(code_label 372 371 373 39 "" [0 uses])

(note 373 372 0 NOTE_INSN_BASIC_BLOCK)

;; _117 = *flight_16(D);

(insn 374 373 375 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:89 -1
     (nil))

(insn 375 374 0 (set (reg/f:DI 149 [ D.3688 ])
        (mem/f:DI (reg/f:DI 274) [0 *flight_16(D)+0 S8 A64])) mQuery.c:89 -1
     (nil))

;; _118 = (long unsigned int) i_1;

(insn 376 375 377 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:89 -1
     (nil))

(insn 377 376 0 (set (reg:DI 150 [ D.3685 ])
        (sign_extend:DI (reg:SI 275))) mQuery.c:89 -1
     (nil))

;; _119 = _118 * 160;

(insn 378 377 379 (set (reg:DI 276)
        (reg:DI 150 [ D.3685 ])) mQuery.c:89 -1
     (nil))

(insn 379 378 380 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 276)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

(insn 380 379 381 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg:DI 276)
                    (reg:DI 150 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 381 380 382 (parallel [
            (set (reg:DI 277)
                (ashift:DI (reg:DI 276)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

(insn 382 381 383 (set (reg:DI 276)
        (reg:DI 277)) mQuery.c:89 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 383 382 0 (set (reg:DI 151 [ D.3685 ])
        (reg:DI 276)) mQuery.c:89 -1
     (nil))

;; _120 = _117 + _119;

(insn 384 383 0 (parallel [
            (set (reg/f:DI 152 [ D.3688 ])
                (plus:DI (reg/f:DI 149 [ D.3688 ])
                    (reg:DI 151 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; _121 = _120->nvp;

(insn 385 384 0 (set (reg/f:DI 153 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 152 [ D.3688 ])
                (const_int 8 [0x8])) [0 _120->nvp+0 S8 A64])) mQuery.c:89 -1
     (nil))

;; _122 = (long unsigned int) h_9;

(insn 386 385 387 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:89 -1
     (nil))

(insn 387 386 0 (set (reg:DI 154 [ D.3685 ])
        (sign_extend:DI (reg:SI 278))) mQuery.c:89 -1
     (nil))

;; _123 = _122 * 8;

(insn 388 387 0 (parallel [
            (set (reg:DI 155 [ D.3685 ])
                (ashift:DI (reg:DI 154 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; _124 = _121 + _123;

(insn 389 388 0 (parallel [
            (set (reg/f:DI 156 [ D.3691 ])
                (plus:DI (reg/f:DI 153 [ D.3691 ])
                    (reg:DI 155 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; _125 = *_124;

(insn 390 389 0 (set (reg/f:DI 157 [ D.3692 ])
        (mem/f:DI (reg/f:DI 156 [ D.3691 ]) [0 *_124+0 S8 A64])) mQuery.c:89 -1
     (nil))

;; _126 = _125 + 32;

(insn 391 390 0 (parallel [
            (set (reg/f:DI 158 [ D.3692 ])
                (plus:DI (reg/f:DI 157 [ D.3692 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; j_127 = j_5 + 1;

(insn 392 391 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; _128 = &c[j_127];

(insn 393 392 394 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

(insn 394 393 395 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:89 -1
     (nil))

(insn 395 394 396 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 281))) mQuery.c:89 -1
     (nil))

(insn 396 395 0 (parallel [
            (set (reg/f:DI 159 [ D.3687 ])
                (plus:DI (reg:DI 279)
                    (reg:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))

;; _129 = atof (_128);

(insn 397 396 398 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.3687 ])) mQuery.c:89 -1
     (nil))

(call_insn/i 398 397 399 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:89 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 399 398 0 (set (reg:DF 160 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:89 -1
     (nil))

;; _130 = (long double) _129;

(insn 400 399 0 (set (reg:XF 161 [ D.3694 ])
        (float_extend:XF (reg:DF 160 [ D.3693 ]))) mQuery.c:89 -1
     (nil))

;; *_126 = _130;

(insn 401 400 0 (set (mem:XF (reg/f:DI 158 [ D.3692 ]) [0 *_126+0 S16 A128])
        (reg:XF 161 [ D.3694 ])) mQuery.c:89 -1
     (nil))

;; j_131 = j_127 + 1;

(insn 402 401 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; j_134 = j_6 + 1;

(insn 406 405 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 407 406 408 40 "" [0 uses])

(note 408 407 0 NOTE_INSN_BASIC_BLOCK)

;; _132 = c[j_6];

(insn 409 408 410 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 -1
     (nil))

(insn 410 409 411 (set (reg:DI 282)
        (sign_extend:DI (reg:SI 283))) mQuery.c:92 -1
     (nil))

(insn 411 410 0 (set (reg:QI 162 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 282))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 -1
     (nil))

;; if (_132 != 44)

(insn 412 411 413 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:92 -1
     (nil))

(jump_insn 413 412 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; _133 = c[j_6];

(insn 415 414 416 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 -1
     (nil))

(insn 416 415 417 (set (reg:DI 284)
        (sign_extend:DI (reg:SI 285))) mQuery.c:92 -1
     (nil))

(insn 417 416 0 (set (reg:QI 163 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 284))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 -1
     (nil))

;; if (_133 != 0)

(insn 419 417 420 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:92 -1
     (nil))

(jump_insn 420 419 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 418)
            (pc))) mQuery.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 421 420 422 41 "" [0 uses])

(note 422 421 0 NOTE_INSN_BASIC_BLOCK)

;; _135 = c[j_6];

(insn 423 422 424 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:93 -1
     (nil))

(insn 424 423 425 (set (reg:DI 286)
        (sign_extend:DI (reg:SI 287))) mQuery.c:93 -1
     (nil))

(insn 425 424 0 (set (reg:QI 164 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 286))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:93 -1
     (nil))

;; if (_135 == 0)

(insn 426 425 427 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 164 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:93 -1
     (nil))

(jump_insn 427 426 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:93 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; BuG ("BUG in M1 File -lx4\n");

(insn 429 428 430 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f873475f1c8 *.LC11>)) mQuery.c:93 -1
     (nil))

(call_insn 430 429 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:93 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 39

;; 

(code_label 431 430 432 43 "" [0 uses])

(note 432 431 0 NOTE_INSN_BASIC_BLOCK)

;; j_136 = j_6 + 1;

(insn 433 432 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; j_139 = j_7 + 1;

(insn 437 436 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; 

(code_label 438 437 439 44 "" [0 uses])

(note 439 438 0 NOTE_INSN_BASIC_BLOCK)

;; _137 = c[j_7];

(insn 440 439 441 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 -1
     (nil))

(insn 441 440 442 (set (reg:DI 288)
        (sign_extend:DI (reg:SI 289))) mQuery.c:94 -1
     (nil))

(insn 442 441 0 (set (reg:QI 165 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 288))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 -1
     (nil))

;; if (_137 != 32)

(insn 443 442 444 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.3690 ])
            (const_int 32 [0x20]))) mQuery.c:94 -1
     (nil))

(jump_insn 444 443 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:94 -1
     (nil))

;; Generating RTL for gimple basic block 42

;; _138 = c[j_7];

(insn 446 445 447 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 -1
     (nil))

(insn 447 446 448 (set (reg:DI 290)
        (sign_extend:DI (reg:SI 291))) mQuery.c:94 -1
     (nil))

(insn 448 447 0 (set (reg:QI 166 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 290))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 -1
     (nil))

;; if (_138 != 0)

(insn 450 448 451 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:94 -1
     (nil))

(jump_insn 451 450 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) mQuery.c:94 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; 

(code_label 452 451 453 45 "" [0 uses])

(note 453 452 0 NOTE_INSN_BASIC_BLOCK)

;; _140 = c[j_7];

(insn 454 453 455 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:95 -1
     (nil))

(insn 455 454 456 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 293))) mQuery.c:95 -1
     (nil))

(insn 456 455 0 (set (reg:QI 167 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 292))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:95 -1
     (nil))

;; if (_140 == 0)

(insn 457 456 458 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:95 -1
     (nil))

(jump_insn 458 457 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:95 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; BuG ("BUG in M1 File -lx5\n");

(insn 460 459 461 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f873475f260 *.LC12>)) mQuery.c:95 -1
     (nil))

(call_insn 461 460 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:95 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 45

;; 

(code_label 462 461 463 47 "" [0 uses])

(note 463 462 0 NOTE_INSN_BASIC_BLOCK)

;; _141 = *flight_16(D);

(insn 464 463 465 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:96 -1
     (nil))

(insn 465 464 0 (set (reg/f:DI 168 [ D.3688 ])
        (mem/f:DI (reg/f:DI 294) [0 *flight_16(D)+0 S8 A64])) mQuery.c:96 -1
     (nil))

;; _142 = (long unsigned int) i_1;

(insn 466 465 467 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:96 -1
     (nil))

(insn 467 466 0 (set (reg:DI 169 [ D.3685 ])
        (sign_extend:DI (reg:SI 295))) mQuery.c:96 -1
     (nil))

;; _143 = _142 * 160;

(insn 468 467 469 (set (reg:DI 296)
        (reg:DI 169 [ D.3685 ])) mQuery.c:96 -1
     (nil))

(insn 469 468 470 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 296)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

(insn 470 469 471 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 296)
                    (reg:DI 169 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 471 470 472 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 296)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

(insn 472 471 473 (set (reg:DI 296)
        (reg:DI 297)) mQuery.c:96 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 473 472 0 (set (reg:DI 170 [ D.3685 ])
        (reg:DI 296)) mQuery.c:96 -1
     (nil))

;; _144 = _141 + _143;

(insn 474 473 0 (parallel [
            (set (reg/f:DI 171 [ D.3688 ])
                (plus:DI (reg/f:DI 168 [ D.3688 ])
                    (reg:DI 170 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

;; _145 = _144->time;

(insn 475 474 0 (set (reg/f:DI 172 [ D.3692 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 171 [ D.3688 ])
                (const_int 16 [0x10])) [0 _144->time+0 S8 A128])) mQuery.c:96 -1
     (nil))

;; _146 = (long unsigned int) h_9;

(insn 476 475 477 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:96 -1
     (nil))

(insn 477 476 0 (set (reg:DI 173 [ D.3685 ])
        (sign_extend:DI (reg:SI 298))) mQuery.c:96 -1
     (nil))

;; _147 = _146 * 16;

(insn 478 477 0 (parallel [
            (set (reg:DI 174 [ D.3685 ])
                (ashift:DI (reg:DI 173 [ D.3685 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

;; _148 = _145 + _147;

(insn 479 478 0 (parallel [
            (set (reg/f:DI 175 [ D.3692 ])
                (plus:DI (reg/f:DI 172 [ D.3692 ])
                    (reg:DI 174 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

;; j_149 = j_7 + 1;

(insn 480 479 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

;; _150 = &c[j_149];

(insn 481 480 482 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

(insn 482 481 483 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:96 -1
     (nil))

(insn 483 482 484 (set (reg:DI 300)
        (sign_extend:DI (reg:SI 301))) mQuery.c:96 -1
     (nil))

(insn 484 483 0 (parallel [
            (set (reg/f:DI 176 [ D.3687 ])
                (plus:DI (reg:DI 299)
                    (reg:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))

;; _151 = _convert_time (_150);

(insn 485 484 486 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.3687 ])) mQuery.c:96 -1
     (nil))

(call_insn 486 485 487 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_convert_time") [flags 0x3]  <function_decl 0x7f87346baf00 _convert_time>) [0 _convert_time S1 A8])
            (const_int 0 [0]))) mQuery.c:96 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 487 486 0 (set (reg:XF 177 [ D.3694 ])
        (reg:XF 8 st)) mQuery.c:96 -1
     (nil))

;; *_148 = _151;

(insn 488 487 0 (set (mem:XF (reg/f:DI 175 [ D.3692 ]) [0 *_148+0 S16 A128])
        (reg:XF 177 [ D.3694 ])) mQuery.c:96 -1
     (nil))

;; h_152 = h_9 + 1;

(insn 489 488 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; 

(code_label 490 489 491 26 "" [0 uses])

(note 491 490 0 NOTE_INSN_BASIC_BLOCK)

;; _66 = *flight_16(D);

(insn 492 491 493 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:78 -1
     (nil))

(insn 493 492 0 (set (reg/f:DI 106 [ D.3688 ])
        (mem/f:DI (reg/f:DI 302) [0 *flight_16(D)+0 S8 A64])) mQuery.c:78 -1
     (nil))

;; _67 = (long unsigned int) i_1;

(insn 494 493 495 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:78 -1
     (nil))

(insn 495 494 0 (set (reg:DI 107 [ D.3685 ])
        (sign_extend:DI (reg:SI 303))) mQuery.c:78 -1
     (nil))

;; _68 = _67 * 160;

(insn 496 495 497 (set (reg:DI 304)
        (reg:DI 107 [ D.3685 ])) mQuery.c:78 -1
     (nil))

(insn 497 496 498 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))

(insn 498 497 499 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 107 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 499 498 500 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))

(insn 500 499 501 (set (reg:DI 304)
        (reg:DI 305)) mQuery.c:78 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 501 500 0 (set (reg:DI 108 [ D.3685 ])
        (reg:DI 304)) mQuery.c:78 -1
     (nil))

;; _69 = _66 + _68;

(insn 502 501 0 (parallel [
            (set (reg/f:DI 109 [ D.3688 ])
                (plus:DI (reg/f:DI 106 [ D.3688 ])
                    (reg:DI 108 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))

;; _70 = _69->n_nvp;

(insn 503 502 0 (set (reg:SI 110 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 109 [ D.3688 ])
                (const_int 4 [0x4])) [0 _69->n_nvp+0 S4 A32])) mQuery.c:78 -1
     (nil))

;; if (_70 > h_9)

(insn 505 503 506 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110 [ D.3689 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32]))) mQuery.c:78 -1
     (nil))

(jump_insn 506 505 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) mQuery.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; i_153 = i_1 + 1;

(insn 508 507 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:66 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; 

(code_label 509 508 510 22 "" [0 uses])

(note 510 509 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < Nflight_12)

(insn 512 510 513 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:66 -1
     (nil))

(insn 513 512 514 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 306)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32]))) mQuery.c:66 -1
     (nil))

(jump_insn 514 513 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) mQuery.c:66 -1
     (nil))

;; Generating RTL for gimple basic block 49

;; _154 = *flight_16(D);

(insn 516 515 517 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:100 -1
     (nil))

(insn 517 516 0 (set (reg/f:DI 178 [ D.3688 ])
        (mem/f:DI (reg/f:DI 307) [0 *flight_16(D)+0 S8 A64])) mQuery.c:100 -1
     (nil))

;; _calculate_velocity (_154, Nflight_12);

(insn 518 517 519 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:100 -1
     (nil))

(insn 519 518 520 (set (reg:SI 4 si)
        (reg:SI 308)) mQuery.c:100 -1
     (nil))

(insn 520 519 521 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.3688 ])) mQuery.c:100 -1
     (nil))

(call_insn 521 520 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_calculate_velocity") [flags 0x3]  <function_decl 0x7f87346c5000 _calculate_velocity>) [0 _calculate_velocity S1 A8])
            (const_int 0 [0]))) mQuery.c:100 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

;; _155 = Nflight_12;

(insn 522 521 0 (set (reg:SI 179 [ D.3689 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:107 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 50

;; <L48>:

(code_label 523 522 524 50 "" [0 uses])

(note 524 523 0 NOTE_INSN_BASIC_BLOCK)

;; return _155;

(insn 525 524 526 (set (reg:SI 180 [ <retval> ])
        (reg:SI 179 [ D.3689 ])) mQuery.c:107 -1
     (nil))

(jump_insn 526 525 527 (set (pc)
        (label_ref 0)) mQuery.c:107 -1
     (nil))

(barrier 527 526 0)
deleting block 52


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 51 into block 50...
Merged blocks 50 and 51.
Merged 50 and 51 without moving.
Merging block 52 into block 50...
Merged blocks 50 and 52.
Merged 50 and 52 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 m1_file+0 S8 A64])
        (reg:DI 5 di [ m1_file ])) mQuery.c:50 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])
        (reg:DI 4 si [ flight ])) mQuery.c:50 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3695+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:50 -1
     (nil))
(insn 8 5 9 2 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 m1_file+0 S8 A64])) mQuery.c:54 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:54 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 181)) mQuery.c:54 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:54 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 182)
        (reg:DI 0 ax)) mQuery.c:54 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 182)) mQuery.c:54 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:55 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:55 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8734751e40 *.LC6>)) mQuery.c:55 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:55 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 21 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:58 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:58 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 1 dx)
        (reg:DI 183)) mQuery.c:58 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:58 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg:DI 184)) mQuery.c:58 -1
     (nil))
(call_insn 26 25 27 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:58 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:60 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg:DI 185)) mQuery.c:60 -1
     (nil))
(call_insn/i 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 5 (set (reg:SI 186)
        (reg:SI 0 ax)) mQuery.c:60 -1
     (nil))
(insn 31 30 32 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])
        (reg:SI 186)) mQuery.c:60 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:64 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 59 [ D.3685 ])
        (sign_extend:DI (reg:SI 187))) mQuery.c:64 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 188)
        (reg:DI 59 [ D.3685 ])) mQuery.c:64 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 188)
                (ashift:DI (reg:DI 188)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 188)
                    (reg:DI 59 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 189)
                (ashift:DI (reg:DI 188)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 188)
        (reg:DI 189)) mQuery.c:64 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 5 (set (reg:DI 60 [ D.3685 ])
        (reg:DI 188)) mQuery.c:64 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 60 [ D.3685 ])) mQuery.c:64 -1
     (nil))
(call_insn 41 40 42 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f8734961b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mQuery.c:64 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 190)
        (reg:DI 0 ax)) mQuery.c:64 -1
     (expr_list:REG_NOALIAS (reg/f:DI 190)
        (nil)))
(insn 43 42 44 5 (set (reg/f:DI 61 [ D.3686 ])
        (reg/f:DI 190)) mQuery.c:64 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:64 -1
     (nil))
(insn 45 44 46 5 (set (mem/f:DI (reg/f:DI 191) [0 *flight_16(D)+0 S8 A64])
        (reg/f:DI 61 [ D.3686 ])) mQuery.c:64 -1
     (nil))
(insn 46 45 47 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:66 -1
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (label_ref 509)) mQuery.c:66 -1
     (nil)
 -> 509)
;;  succ:       49

(barrier 48 47 511)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       49
(code_label 511 48 49 6 49 "" [1 uses])
(note 49 511 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:67 -1
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:67 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 1 dx)
        (reg:DI 192)) mQuery.c:67 -1
     (nil))
(insn 53 52 54 6 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:67 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg:DI 193)) mQuery.c:67 -1
     (nil))
(call_insn 55 54 56 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 56 55 57 6 (set (reg/f:DI 62 [ D.3687 ])
        (reg:DI 0 ax)) mQuery.c:67 -1
     (nil))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3687 ])
            (const_int 0 [0]))) mQuery.c:67 -1
     (nil))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mQuery.c:67 -1
     (nil)
 -> 62)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8734751ed8 *.LC7>)) mQuery.c:67 -1
     (nil))
(call_insn 61 60 62 7 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 62 61 63 8 23 "" [1 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:69 -1
     (nil))
(insn 65 64 66 8 (set (reg/f:DI 63 [ D.3688 ])
        (mem/f:DI (reg/f:DI 194) [0 *flight_16(D)+0 S8 A64])) mQuery.c:69 -1
     (nil))
(insn 66 65 67 8 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:69 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 64 [ D.3685 ])
        (sign_extend:DI (reg:SI 195))) mQuery.c:69 -1
     (nil))
(insn 68 67 69 8 (set (reg:DI 196)
        (reg:DI 64 [ D.3685 ])) mQuery.c:69 -1
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:DI 196)
                (ashift:DI (reg:DI 196)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 196)
                    (reg:DI 64 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 196)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 196)
        (reg:DI 197)) mQuery.c:69 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 73 72 74 8 (set (reg:DI 65 [ D.3685 ])
        (reg:DI 196)) mQuery.c:69 -1
     (nil))
(insn 74 73 75 8 (parallel [
            (set (reg/f:DI 66 [ D.3688 ])
                (plus:DI (reg/f:DI 63 [ D.3688 ])
                    (reg:DI 65 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))
(insn 75 74 76 8 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 -1
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (reg:DI 198)) mQuery.c:69 -1
     (nil))
(call_insn/i 77 76 78 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:69 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 8 (set (reg:SI 67 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:69 -1
     (nil))
(insn 79 78 80 8 (set (mem/j:SI (reg/f:DI 66 [ D.3688 ]) [0 _22->ID+0 S4 A128])
        (reg:SI 67 [ D.3689 ])) mQuery.c:69 -1
     (nil))
(insn 80 79 81 8 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mQuery.c:70 -1
     (nil))
(jump_insn 81 80 82 8 (set (pc)
        (label_ref 85)) mQuery.c:70 -1
     (nil)
 -> 85)
;;  succ:       10

(barrier 82 81 90)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 90 82 83 9 25 "" [1 uses])
(note 83 90 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:70 -1
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU,DFS_BACK)
(code_label 85 84 86 10 24 "" [1 uses])
(note 86 85 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 10 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:70 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 200))) mQuery.c:70 -1
     (nil))
(insn 89 88 91 10 (set (reg:QI 68 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 199))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:70 -1
     (nil))
(insn 91 89 92 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:70 -1
     (nil))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mQuery.c:70 -1
     (nil)
 -> 90)
;;  succ:       9
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:72 -1
     (nil))
(insn 95 94 96 11 (set (reg/f:DI 69 [ D.3688 ])
        (mem/f:DI (reg/f:DI 201) [0 *flight_16(D)+0 S8 A64])) mQuery.c:72 -1
     (nil))
(insn 96 95 97 11 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:72 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 70 [ D.3685 ])
        (sign_extend:DI (reg:SI 202))) mQuery.c:72 -1
     (nil))
(insn 98 97 99 11 (set (reg:DI 203)
        (reg:DI 70 [ D.3685 ])) mQuery.c:72 -1
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg:DI 203)
                (ashift:DI (reg:DI 203)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg:DI 203)
                    (reg:DI 70 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 101 100 102 11 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 203)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 102 101 103 11 (set (reg:DI 203)
        (reg:DI 204)) mQuery.c:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 103 102 104 11 (set (reg:DI 71 [ D.3685 ])
        (reg:DI 203)) mQuery.c:72 -1
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg/f:DI 72 [ D.3688 ])
                (plus:DI (reg/f:DI 69 [ D.3688 ])
                    (reg:DI 71 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 106 105 107 11 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 107 106 108 11 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:72 -1
     (nil))
(insn 108 107 109 11 (set (reg:DI 206)
        (sign_extend:DI (reg:SI 207))) mQuery.c:72 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg/f:DI 73 [ D.3687 ])
                (plus:DI (reg:DI 205)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3687 ])) mQuery.c:72 -1
     (nil))
(call_insn/i 111 110 112 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 11 (set (reg:SI 74 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:72 -1
     (nil))
(insn 113 112 114 11 (set (mem/j:SI (plus:DI (reg/f:DI 72 [ D.3688 ])
                (const_int 4 [0x4])) [0 _30->n_nvp+0 S4 A32])
        (reg:SI 74 [ D.3689 ])) mQuery.c:72 -1
     (nil))
(insn 114 113 115 11 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 -1
     (nil))
(insn 115 114 116 11 (set (reg/f:DI 75 [ D.3688 ])
        (mem/f:DI (reg/f:DI 208) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 -1
     (nil))
(insn 116 115 117 11 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 -1
     (nil))
(insn 117 116 118 11 (set (reg:DI 76 [ D.3685 ])
        (sign_extend:DI (reg:SI 209))) mQuery.c:74 -1
     (nil))
(insn 118 117 119 11 (set (reg:DI 210)
        (reg:DI 76 [ D.3685 ])) mQuery.c:74 -1
     (nil))
(insn 119 118 120 11 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 210)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 120 119 121 11 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg:DI 210)
                    (reg:DI 76 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 121 120 122 11 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 122 121 123 11 (set (reg:DI 210)
        (reg:DI 211)) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 123 122 124 11 (set (reg:DI 77 [ D.3685 ])
        (reg:DI 210)) mQuery.c:74 -1
     (nil))
(insn 124 123 125 11 (parallel [
            (set (reg/f:DI 78 [ D.3688 ])
                (plus:DI (reg/f:DI 75 [ D.3688 ])
                    (reg:DI 77 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 125 124 126 11 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 -1
     (nil))
(insn 126 125 127 11 (set (reg/f:DI 79 [ D.3688 ])
        (mem/f:DI (reg/f:DI 212) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 -1
     (nil))
(insn 127 126 128 11 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 -1
     (nil))
(insn 128 127 129 11 (set (reg:DI 80 [ D.3685 ])
        (sign_extend:DI (reg:SI 213))) mQuery.c:74 -1
     (nil))
(insn 129 128 130 11 (set (reg:DI 214)
        (reg:DI 80 [ D.3685 ])) mQuery.c:74 -1
     (nil))
(insn 130 129 131 11 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 214)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 131 130 132 11 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 214)
                    (reg:DI 80 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 132 131 133 11 (parallel [
            (set (reg:DI 215)
                (ashift:DI (reg:DI 214)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 133 132 134 11 (set (reg:DI 214)
        (reg:DI 215)) mQuery.c:74 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 134 133 135 11 (set (reg:DI 81 [ D.3685 ])
        (reg:DI 214)) mQuery.c:74 -1
     (nil))
(insn 135 134 136 11 (parallel [
            (set (reg/f:DI 82 [ D.3688 ])
                (plus:DI (reg/f:DI 79 [ D.3688 ])
                    (reg:DI 81 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 -1
     (nil))
(insn 136 135 137 11 (set (reg:SI 83 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 82 [ D.3688 ])
                (const_int 4 [0x4])) [0 _41->n_nvp+0 S4 A32])) mQuery.c:74 -1
     (nil))
(insn 137 136 138 11 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mQuery.c:74 -1
     (nil))
(insn 138 137 139 11 (set (reg:SI 5 di)
        (reg:SI 83 [ D.3689 ])) mQuery.c:74 -1
     (nil))
(call_insn 139 138 140 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:74 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 140 139 141 11 (set (reg/f:DI 84 [ D.3691 ])
        (reg:DI 0 ax)) mQuery.c:74 -1
     (nil))
(insn 141 140 142 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 78 [ D.3688 ])
                (const_int 8 [0x8])) [0 _37->nvp+0 S8 A64])
        (reg/f:DI 84 [ D.3691 ])) mQuery.c:74 -1
     (nil))
(insn 142 141 143 11 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 -1
     (nil))
(insn 143 142 144 11 (set (reg/f:DI 85 [ D.3688 ])
        (mem/f:DI (reg/f:DI 216) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 -1
     (nil))
(insn 144 143 145 11 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 -1
     (nil))
(insn 145 144 146 11 (set (reg:DI 86 [ D.3685 ])
        (sign_extend:DI (reg:SI 217))) mQuery.c:75 -1
     (nil))
(insn 146 145 147 11 (set (reg:DI 218)
        (reg:DI 86 [ D.3685 ])) mQuery.c:75 -1
     (nil))
(insn 147 146 148 11 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 218)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 148 147 149 11 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 218)
                    (reg:DI 86 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 149 148 150 11 (parallel [
            (set (reg:DI 219)
                (ashift:DI (reg:DI 218)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 150 149 151 11 (set (reg:DI 218)
        (reg:DI 219)) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 151 150 152 11 (set (reg:DI 87 [ D.3685 ])
        (reg:DI 218)) mQuery.c:75 -1
     (nil))
(insn 152 151 153 11 (parallel [
            (set (reg/f:DI 88 [ D.3688 ])
                (plus:DI (reg/f:DI 85 [ D.3688 ])
                    (reg:DI 87 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 153 152 154 11 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 -1
     (nil))
(insn 154 153 155 11 (set (reg/f:DI 89 [ D.3688 ])
        (mem/f:DI (reg/f:DI 220) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 -1
     (nil))
(insn 155 154 156 11 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 -1
     (nil))
(insn 156 155 157 11 (set (reg:DI 90 [ D.3685 ])
        (sign_extend:DI (reg:SI 221))) mQuery.c:75 -1
     (nil))
(insn 157 156 158 11 (set (reg:DI 222)
        (reg:DI 90 [ D.3685 ])) mQuery.c:75 -1
     (nil))
(insn 158 157 159 11 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 222)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 159 158 160 11 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg:DI 222)
                    (reg:DI 90 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 160 159 161 11 (parallel [
            (set (reg:DI 223)
                (ashift:DI (reg:DI 222)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 161 160 162 11 (set (reg:DI 222)
        (reg:DI 223)) mQuery.c:75 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 162 161 163 11 (set (reg:DI 91 [ D.3685 ])
        (reg:DI 222)) mQuery.c:75 -1
     (nil))
(insn 163 162 164 11 (parallel [
            (set (reg/f:DI 92 [ D.3688 ])
                (plus:DI (reg/f:DI 89 [ D.3688 ])
                    (reg:DI 91 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 -1
     (nil))
(insn 164 163 165 11 (set (reg:SI 93 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 92 [ D.3688 ])
                (const_int 4 [0x4])) [0 _51->n_nvp+0 S4 A32])) mQuery.c:75 -1
     (nil))
(insn 165 164 166 11 (set (reg:SI 5 di)
        (reg:SI 93 [ D.3689 ])) mQuery.c:75 -1
     (nil))
(call_insn 166 165 167 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:75 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 167 166 168 11 (set (reg/f:DI 94 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:75 -1
     (nil))
(insn 168 167 169 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 88 [ D.3688 ])
                (const_int 16 [0x10])) [0 _47->time+0 S8 A128])
        (reg/f:DI 94 [ D.3692 ])) mQuery.c:75 -1
     (nil))
(insn 169 168 170 11 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 -1
     (nil))
(insn 170 169 171 11 (set (reg/f:DI 95 [ D.3688 ])
        (mem/f:DI (reg/f:DI 224) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 -1
     (nil))
(insn 171 170 172 11 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 -1
     (nil))
(insn 172 171 173 11 (set (reg:DI 96 [ D.3685 ])
        (sign_extend:DI (reg:SI 225))) mQuery.c:76 -1
     (nil))
(insn 173 172 174 11 (set (reg:DI 226)
        (reg:DI 96 [ D.3685 ])) mQuery.c:76 -1
     (nil))
(insn 174 173 175 11 (parallel [
            (set (reg:DI 226)
                (ashift:DI (reg:DI 226)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 175 174 176 11 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 226)
                    (reg:DI 96 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 176 175 177 11 (parallel [
            (set (reg:DI 227)
                (ashift:DI (reg:DI 226)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 177 176 178 11 (set (reg:DI 226)
        (reg:DI 227)) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 178 177 179 11 (set (reg:DI 97 [ D.3685 ])
        (reg:DI 226)) mQuery.c:76 -1
     (nil))
(insn 179 178 180 11 (parallel [
            (set (reg/f:DI 98 [ D.3688 ])
                (plus:DI (reg/f:DI 95 [ D.3688 ])
                    (reg:DI 97 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 180 179 181 11 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 -1
     (nil))
(insn 181 180 182 11 (set (reg/f:DI 99 [ D.3688 ])
        (mem/f:DI (reg/f:DI 228) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 -1
     (nil))
(insn 182 181 183 11 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 -1
     (nil))
(insn 183 182 184 11 (set (reg:DI 100 [ D.3685 ])
        (sign_extend:DI (reg:SI 229))) mQuery.c:76 -1
     (nil))
(insn 184 183 185 11 (set (reg:DI 230)
        (reg:DI 100 [ D.3685 ])) mQuery.c:76 -1
     (nil))
(insn 185 184 186 11 (parallel [
            (set (reg:DI 230)
                (ashift:DI (reg:DI 230)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 186 185 187 11 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg:DI 230)
                    (reg:DI 100 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 187 186 188 11 (parallel [
            (set (reg:DI 231)
                (ashift:DI (reg:DI 230)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 188 187 189 11 (set (reg:DI 230)
        (reg:DI 231)) mQuery.c:76 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 189 188 190 11 (set (reg:DI 101 [ D.3685 ])
        (reg:DI 230)) mQuery.c:76 -1
     (nil))
(insn 190 189 191 11 (parallel [
            (set (reg/f:DI 102 [ D.3688 ])
                (plus:DI (reg/f:DI 99 [ D.3688 ])
                    (reg:DI 101 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 191 190 192 11 (set (reg:SI 103 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 102 [ D.3688 ])
                (const_int 4 [0x4])) [0 _61->n_nvp+0 S4 A32])) mQuery.c:76 -1
     (nil))
(insn 192 191 193 11 (parallel [
            (set (reg:SI 104 [ D.3689 ])
                (plus:SI (reg:SI 103 [ D.3689 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 -1
     (nil))
(insn 193 192 194 11 (set (reg:SI 5 di)
        (reg:SI 104 [ D.3689 ])) mQuery.c:76 -1
     (nil))
(call_insn 194 193 195 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:76 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 195 194 196 11 (set (reg/f:DI 105 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:76 -1
     (nil))
(insn 196 195 197 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 98 [ D.3688 ])
                (const_int 24 [0x18])) [0 _57->vel+0 S8 A64])
        (reg/f:DI 105 [ D.3692 ])) mQuery.c:76 -1
     (nil))
(insn 197 196 198 11 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
        (const_int 0 [0])) mQuery.c:78 -1
     (nil))
(jump_insn 198 197 199 11 (set (pc)
        (label_ref 490)) mQuery.c:78 -1
     (nil)
 -> 490)
;;  succ:       47

(barrier 199 198 504)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       47
(code_label 504 199 200 12 48 "" [1 uses])
(note 200 504 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 -1
     (nil))
(jump_insn 202 201 203 12 (set (pc)
        (label_ref 206)) mQuery.c:79 -1
     (nil)
 -> 206)
;;  succ:       14

(barrier 203 202 223)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 223 203 204 13 29 "" [1 uses])
(note 204 223 205 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 -1
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13 (FALLTHRU,DFS_BACK)
(code_label 206 205 207 14 27 "" [1 uses])
(note 207 206 208 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 14 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))
(insn 209 208 210 14 (set (reg:DI 232)
        (sign_extend:DI (reg:SI 233))) mQuery.c:79 -1
     (nil))
(insn 210 209 211 14 (set (reg:QI 111 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 232))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))
(insn 211 210 212 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 111 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:79 -1
     (nil))
(jump_insn 212 211 213 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 -1
     (nil)
 -> 226)
;;  succ:       15 (FALLTHRU)
;;              17

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 213 212 214 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 15 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))
(insn 215 214 216 15 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 235))) mQuery.c:79 -1
     (nil))
(insn 216 215 217 15 (set (reg:QI 112 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 234))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))
(insn 217 216 218 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:79 -1
     (nil))
(jump_insn 218 217 219 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 -1
     (nil)
 -> 226)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 219 218 220 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 16 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 -1
     (nil))
(insn 221 220 222 16 (set (reg:DI 236)
        (sign_extend:DI (reg:SI 237))) mQuery.c:79 -1
     (nil))
(insn 222 221 224 16 (set (reg:QI 113 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 236))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 -1
     (nil))
(insn 224 222 225 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:79 -1
     (nil))
(jump_insn 225 224 226 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) mQuery.c:79 -1
     (nil)
 -> 223)
;;  succ:       13
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15
;;              16 (FALLTHRU)
(code_label 226 225 227 17 28 "" [2 uses])
(note 227 226 228 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 17 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 -1
     (nil))
(insn 229 228 230 17 (set (reg:DI 238)
        (sign_extend:DI (reg:SI 239))) mQuery.c:80 -1
     (nil))
(insn 230 229 231 17 (set (reg:QI 114 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 238))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 -1
     (nil))
(insn 231 230 232 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:80 -1
     (nil))
(jump_insn 232 231 233 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) mQuery.c:80 -1
     (nil)
 -> 239)
;;  succ:       19
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 233 232 234 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 18 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 -1
     (nil))
(insn 235 234 236 18 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 241))) mQuery.c:80 -1
     (nil))
(insn 236 235 237 18 (set (reg:QI 115 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 240))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 -1
     (nil))
(insn 237 236 238 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:80 -1
     (nil))
(jump_insn 238 237 239 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) mQuery.c:80 -1
     (nil)
 -> 243)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 239 238 240 19 30 "" [1 uses])
(note 240 239 241 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f873475f000 *.LC8>)) mQuery.c:80 -1
     (nil))
(call_insn 242 241 243 19 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:80 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              19 (FALLTHRU)
(code_label 243 242 244 20 31 "" [1 uses])
(note 244 243 245 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 20 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:81 -1
     (nil))
(insn 246 245 247 20 (set (reg/f:DI 116 [ D.3688 ])
        (mem/f:DI (reg/f:DI 242) [0 *flight_16(D)+0 S8 A64])) mQuery.c:81 -1
     (nil))
(insn 247 246 248 20 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:81 -1
     (nil))
(insn 248 247 249 20 (set (reg:DI 117 [ D.3685 ])
        (sign_extend:DI (reg:SI 243))) mQuery.c:81 -1
     (nil))
(insn 249 248 250 20 (set (reg:DI 244)
        (reg:DI 117 [ D.3685 ])) mQuery.c:81 -1
     (nil))
(insn 250 249 251 20 (parallel [
            (set (reg:DI 244)
                (ashift:DI (reg:DI 244)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 251 250 252 20 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 244)
                    (reg:DI 117 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 252 251 253 20 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 244)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 253 252 254 20 (set (reg:DI 244)
        (reg:DI 245)) mQuery.c:81 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 254 253 255 20 (set (reg:DI 118 [ D.3685 ])
        (reg:DI 244)) mQuery.c:81 -1
     (nil))
(insn 255 254 256 20 (parallel [
            (set (reg/f:DI 119 [ D.3688 ])
                (plus:DI (reg/f:DI 116 [ D.3688 ])
                    (reg:DI 118 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 256 255 257 20 (set (reg/f:DI 120 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 119 [ D.3688 ])
                (const_int 8 [0x8])) [0 _81->nvp+0 S8 A64])) mQuery.c:81 -1
     (nil))
(insn 257 256 258 20 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:81 -1
     (nil))
(insn 258 257 259 20 (set (reg:DI 121 [ D.3685 ])
        (sign_extend:DI (reg:SI 246))) mQuery.c:81 -1
     (nil))
(insn 259 258 260 20 (parallel [
            (set (reg:DI 122 [ D.3685 ])
                (ashift:DI (reg:DI 121 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 260 259 261 20 (parallel [
            (set (reg/f:DI 123 [ D.3691 ])
                (plus:DI (reg/f:DI 120 [ D.3691 ])
                    (reg:DI 122 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 261 260 262 20 (set (reg/f:DI 124 [ D.3692 ])
        (mem/f:DI (reg/f:DI 123 [ D.3691 ]) [0 *_85+0 S8 A64])) mQuery.c:81 -1
     (nil))
(insn 262 261 263 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 263 262 264 20 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 264 263 265 20 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:81 -1
     (nil))
(insn 265 264 266 20 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) mQuery.c:81 -1
     (nil))
(insn 266 265 267 20 (parallel [
            (set (reg/f:DI 125 [ D.3687 ])
                (plus:DI (reg:DI 247)
                    (reg:DI 248)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 -1
     (nil))
(insn 267 266 268 20 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.3687 ])) mQuery.c:81 -1
     (nil))
(call_insn/i 268 267 269 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 269 268 270 20 (set (reg:DF 126 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:81 -1
     (nil))
(insn 270 269 271 20 (set (reg:XF 127 [ D.3694 ])
        (float_extend:XF (reg:DF 126 [ D.3693 ]))) mQuery.c:81 -1
     (nil))
(insn 271 270 272 20 (set (mem:XF (reg/f:DI 124 [ D.3692 ]) [0 *_86+0 S16 A128])
        (reg:XF 127 [ D.3694 ])) mQuery.c:81 -1
     (nil))
(insn 272 271 273 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 -1
     (nil))
(jump_insn 273 272 274 20 (set (pc)
        (label_ref 277)) mQuery.c:83 -1
     (nil)
 -> 277)
;;  succ:       22

(barrier 274 273 294)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 294 274 275 21 34 "" [1 uses])
(note 275 294 276 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 -1
     (nil))
;;  succ:       22 (FALLTHRU,DFS_BACK)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
;;              21 (FALLTHRU,DFS_BACK)
(code_label 277 276 278 22 32 "" [1 uses])
(note 278 277 279 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 22 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))
(insn 280 279 281 22 (set (reg:DI 250)
        (sign_extend:DI (reg:SI 251))) mQuery.c:83 -1
     (nil))
(insn 281 280 282 22 (set (reg:QI 128 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 250))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))
(insn 282 281 283 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:83 -1
     (nil))
(jump_insn 283 282 284 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 -1
     (nil)
 -> 297)
;;  succ:       23 (FALLTHRU)
;;              25

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 284 283 285 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 23 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))
(insn 286 285 287 23 (set (reg:DI 252)
        (sign_extend:DI (reg:SI 253))) mQuery.c:83 -1
     (nil))
(insn 287 286 288 23 (set (reg:QI 129 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 252))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))
(insn 288 287 289 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:83 -1
     (nil))
(jump_insn 289 288 290 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 -1
     (nil)
 -> 297)
;;  succ:       24 (FALLTHRU)
;;              25

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 290 289 291 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 24 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 -1
     (nil))
(insn 292 291 293 24 (set (reg:DI 254)
        (sign_extend:DI (reg:SI 255))) mQuery.c:83 -1
     (nil))
(insn 293 292 295 24 (set (reg:QI 130 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 254))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 -1
     (nil))
(insn 295 293 296 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:83 -1
     (nil))
(jump_insn 296 295 297 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) mQuery.c:83 -1
     (nil)
 -> 294)
;;  succ:       21
;;              25 (FALLTHRU)

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              23
;;              24 (FALLTHRU)
(code_label 297 296 298 25 33 "" [2 uses])
(note 298 297 299 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 25 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:84 -1
     (nil))
(insn 300 299 301 25 (set (reg:DI 256)
        (sign_extend:DI (reg:SI 257))) mQuery.c:84 -1
     (nil))
(insn 301 300 302 25 (set (reg:QI 131 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 256))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:84 -1
     (nil))
(insn 302 301 303 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 131 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:84 -1
     (nil))
(jump_insn 303 302 304 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) mQuery.c:84 -1
     (nil)
 -> 307)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 304 303 305 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f873475f098 *.LC9>)) mQuery.c:84 -1
     (nil))
(call_insn 306 305 307 26 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:84 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              26 (FALLTHRU)
(code_label 307 306 308 27 35 "" [1 uses])
(note 308 307 309 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 27 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:85 -1
     (nil))
(insn 310 309 311 27 (set (reg/f:DI 132 [ D.3688 ])
        (mem/f:DI (reg/f:DI 258) [0 *flight_16(D)+0 S8 A64])) mQuery.c:85 -1
     (nil))
(insn 311 310 312 27 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:85 -1
     (nil))
(insn 312 311 313 27 (set (reg:DI 133 [ D.3685 ])
        (sign_extend:DI (reg:SI 259))) mQuery.c:85 -1
     (nil))
(insn 313 312 314 27 (set (reg:DI 260)
        (reg:DI 133 [ D.3685 ])) mQuery.c:85 -1
     (nil))
(insn 314 313 315 27 (parallel [
            (set (reg:DI 260)
                (ashift:DI (reg:DI 260)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 315 314 316 27 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg:DI 260)
                    (reg:DI 133 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 316 315 317 27 (parallel [
            (set (reg:DI 261)
                (ashift:DI (reg:DI 260)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 317 316 318 27 (set (reg:DI 260)
        (reg:DI 261)) mQuery.c:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 318 317 319 27 (set (reg:DI 134 [ D.3685 ])
        (reg:DI 260)) mQuery.c:85 -1
     (nil))
(insn 319 318 320 27 (parallel [
            (set (reg/f:DI 135 [ D.3688 ])
                (plus:DI (reg/f:DI 132 [ D.3688 ])
                    (reg:DI 134 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 320 319 321 27 (set (reg/f:DI 136 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 135 [ D.3688 ])
                (const_int 8 [0x8])) [0 _100->nvp+0 S8 A64])) mQuery.c:85 -1
     (nil))
(insn 321 320 322 27 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:85 -1
     (nil))
(insn 322 321 323 27 (set (reg:DI 137 [ D.3685 ])
        (sign_extend:DI (reg:SI 262))) mQuery.c:85 -1
     (nil))
(insn 323 322 324 27 (parallel [
            (set (reg:DI 138 [ D.3685 ])
                (ashift:DI (reg:DI 137 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 324 323 325 27 (parallel [
            (set (reg/f:DI 139 [ D.3691 ])
                (plus:DI (reg/f:DI 136 [ D.3691 ])
                    (reg:DI 138 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 325 324 326 27 (set (reg/f:DI 140 [ D.3692 ])
        (mem/f:DI (reg/f:DI 139 [ D.3691 ]) [0 *_104+0 S8 A64])) mQuery.c:85 -1
     (nil))
(insn 326 325 327 27 (parallel [
            (set (reg/f:DI 141 [ D.3692 ])
                (plus:DI (reg/f:DI 140 [ D.3692 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 327 326 328 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 328 327 329 27 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 329 328 330 27 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:85 -1
     (nil))
(insn 330 329 331 27 (set (reg:DI 264)
        (sign_extend:DI (reg:SI 265))) mQuery.c:85 -1
     (nil))
(insn 331 330 332 27 (parallel [
            (set (reg/f:DI 142 [ D.3687 ])
                (plus:DI (reg:DI 263)
                    (reg:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 -1
     (nil))
(insn 332 331 333 27 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.3687 ])) mQuery.c:85 -1
     (nil))
(call_insn/i 333 332 334 27 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:85 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 334 333 335 27 (set (reg:DF 143 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:85 -1
     (nil))
(insn 335 334 336 27 (set (reg:XF 144 [ D.3694 ])
        (float_extend:XF (reg:DF 143 [ D.3693 ]))) mQuery.c:85 -1
     (nil))
(insn 336 335 337 27 (set (mem:XF (reg/f:DI 141 [ D.3692 ]) [0 *_106+0 S16 A128])
        (reg:XF 144 [ D.3694 ])) mQuery.c:85 -1
     (nil))
(insn 337 336 338 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 -1
     (nil))
(jump_insn 338 337 339 27 (set (pc)
        (label_ref 342)) mQuery.c:87 -1
     (nil)
 -> 342)
;;  succ:       29

(barrier 339 338 359)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
(code_label 359 339 340 28 38 "" [1 uses])
(note 340 359 341 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 -1
     (nil))
;;  succ:       29 (FALLTHRU,DFS_BACK)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
;;              28 (FALLTHRU,DFS_BACK)
(code_label 342 341 343 29 36 "" [1 uses])
(note 343 342 344 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 29 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))
(insn 345 344 346 29 (set (reg:DI 266)
        (sign_extend:DI (reg:SI 267))) mQuery.c:87 -1
     (nil))
(insn 346 345 347 29 (set (reg:QI 145 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 266))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))
(insn 347 346 348 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:87 -1
     (nil))
(jump_insn 348 347 349 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 -1
     (nil)
 -> 362)
;;  succ:       30 (FALLTHRU)
;;              32

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 349 348 350 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 30 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))
(insn 351 350 352 30 (set (reg:DI 268)
        (sign_extend:DI (reg:SI 269))) mQuery.c:87 -1
     (nil))
(insn 352 351 353 30 (set (reg:QI 146 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 268))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))
(insn 353 352 354 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:87 -1
     (nil))
(jump_insn 354 353 355 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 -1
     (nil)
 -> 362)
;;  succ:       31 (FALLTHRU)
;;              32

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 355 354 356 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 31 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 -1
     (nil))
(insn 357 356 358 31 (set (reg:DI 270)
        (sign_extend:DI (reg:SI 271))) mQuery.c:87 -1
     (nil))
(insn 358 357 360 31 (set (reg:QI 147 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 270))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 -1
     (nil))
(insn 360 358 361 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:87 -1
     (nil))
(jump_insn 361 360 362 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) mQuery.c:87 -1
     (nil)
 -> 359)
;;  succ:       28
;;              32 (FALLTHRU)

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
;;              30
;;              31 (FALLTHRU)
(code_label 362 361 363 32 37 "" [2 uses])
(note 363 362 364 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 32 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:88 -1
     (nil))
(insn 365 364 366 32 (set (reg:DI 272)
        (sign_extend:DI (reg:SI 273))) mQuery.c:88 -1
     (nil))
(insn 366 365 367 32 (set (reg:QI 148 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 272))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:88 -1
     (nil))
(insn 367 366 368 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:88 -1
     (nil))
(jump_insn 368 367 369 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) mQuery.c:88 -1
     (nil)
 -> 372)
;;  succ:       33 (FALLTHRU)
;;              34

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 369 368 370 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f873475f130 *.LC10>)) mQuery.c:88 -1
     (nil))
(call_insn 371 370 372 33 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:88 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       34 (FALLTHRU)

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
;;              33 (FALLTHRU)
(code_label 372 371 373 34 39 "" [1 uses])
(note 373 372 374 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 34 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:89 -1
     (nil))
(insn 375 374 376 34 (set (reg/f:DI 149 [ D.3688 ])
        (mem/f:DI (reg/f:DI 274) [0 *flight_16(D)+0 S8 A64])) mQuery.c:89 -1
     (nil))
(insn 376 375 377 34 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:89 -1
     (nil))
(insn 377 376 378 34 (set (reg:DI 150 [ D.3685 ])
        (sign_extend:DI (reg:SI 275))) mQuery.c:89 -1
     (nil))
(insn 378 377 379 34 (set (reg:DI 276)
        (reg:DI 150 [ D.3685 ])) mQuery.c:89 -1
     (nil))
(insn 379 378 380 34 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 276)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 380 379 381 34 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg:DI 276)
                    (reg:DI 150 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 381 380 382 34 (parallel [
            (set (reg:DI 277)
                (ashift:DI (reg:DI 276)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 382 381 383 34 (set (reg:DI 276)
        (reg:DI 277)) mQuery.c:89 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 383 382 384 34 (set (reg:DI 151 [ D.3685 ])
        (reg:DI 276)) mQuery.c:89 -1
     (nil))
(insn 384 383 385 34 (parallel [
            (set (reg/f:DI 152 [ D.3688 ])
                (plus:DI (reg/f:DI 149 [ D.3688 ])
                    (reg:DI 151 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 385 384 386 34 (set (reg/f:DI 153 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 152 [ D.3688 ])
                (const_int 8 [0x8])) [0 _120->nvp+0 S8 A64])) mQuery.c:89 -1
     (nil))
(insn 386 385 387 34 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:89 -1
     (nil))
(insn 387 386 388 34 (set (reg:DI 154 [ D.3685 ])
        (sign_extend:DI (reg:SI 278))) mQuery.c:89 -1
     (nil))
(insn 388 387 389 34 (parallel [
            (set (reg:DI 155 [ D.3685 ])
                (ashift:DI (reg:DI 154 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 389 388 390 34 (parallel [
            (set (reg/f:DI 156 [ D.3691 ])
                (plus:DI (reg/f:DI 153 [ D.3691 ])
                    (reg:DI 155 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 390 389 391 34 (set (reg/f:DI 157 [ D.3692 ])
        (mem/f:DI (reg/f:DI 156 [ D.3691 ]) [0 *_124+0 S8 A64])) mQuery.c:89 -1
     (nil))
(insn 391 390 392 34 (parallel [
            (set (reg/f:DI 158 [ D.3692 ])
                (plus:DI (reg/f:DI 157 [ D.3692 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 392 391 393 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 393 392 394 34 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 394 393 395 34 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:89 -1
     (nil))
(insn 395 394 396 34 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 281))) mQuery.c:89 -1
     (nil))
(insn 396 395 397 34 (parallel [
            (set (reg/f:DI 159 [ D.3687 ])
                (plus:DI (reg:DI 279)
                    (reg:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 -1
     (nil))
(insn 397 396 398 34 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.3687 ])) mQuery.c:89 -1
     (nil))
(call_insn/i 398 397 399 34 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:89 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 399 398 400 34 (set (reg:DF 160 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:89 -1
     (nil))
(insn 400 399 401 34 (set (reg:XF 161 [ D.3694 ])
        (float_extend:XF (reg:DF 160 [ D.3693 ]))) mQuery.c:89 -1
     (nil))
(insn 401 400 402 34 (set (mem:XF (reg/f:DI 158 [ D.3692 ]) [0 *_126+0 S16 A128])
        (reg:XF 161 [ D.3694 ])) mQuery.c:89 -1
     (nil))
(insn 402 401 403 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 -1
     (nil))
(jump_insn 403 402 404 34 (set (pc)
        (label_ref 407)) mQuery.c:92 -1
     (nil)
 -> 407)
;;  succ:       36

(barrier 404 403 418)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 418 404 405 35 42 "" [1 uses])
(note 405 418 406 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 -1
     (nil))
;;  succ:       36 (FALLTHRU,DFS_BACK)

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       34
;;              35 (FALLTHRU,DFS_BACK)
(code_label 407 406 408 36 40 "" [1 uses])
(note 408 407 409 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 36 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 -1
     (nil))
(insn 410 409 411 36 (set (reg:DI 282)
        (sign_extend:DI (reg:SI 283))) mQuery.c:92 -1
     (nil))
(insn 411 410 412 36 (set (reg:QI 162 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 282))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 -1
     (nil))
(insn 412 411 413 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:92 -1
     (nil))
(jump_insn 413 412 414 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) mQuery.c:92 -1
     (nil)
 -> 421)
;;  succ:       37 (FALLTHRU)
;;              38

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 414 413 415 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 37 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 -1
     (nil))
(insn 416 415 417 37 (set (reg:DI 284)
        (sign_extend:DI (reg:SI 285))) mQuery.c:92 -1
     (nil))
(insn 417 416 419 37 (set (reg:QI 163 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 284))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 -1
     (nil))
(insn 419 417 420 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:92 -1
     (nil))
(jump_insn 420 419 421 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 418)
            (pc))) mQuery.c:92 -1
     (nil)
 -> 418)
;;  succ:       35
;;              38 (FALLTHRU)

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
;;              37 (FALLTHRU)
(code_label 421 420 422 38 41 "" [1 uses])
(note 422 421 423 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 38 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:93 -1
     (nil))
(insn 424 423 425 38 (set (reg:DI 286)
        (sign_extend:DI (reg:SI 287))) mQuery.c:93 -1
     (nil))
(insn 425 424 426 38 (set (reg:QI 164 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 286))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:93 -1
     (nil))
(insn 426 425 427 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 164 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:93 -1
     (nil))
(jump_insn 427 426 428 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) mQuery.c:93 -1
     (nil)
 -> 431)
;;  succ:       39 (FALLTHRU)
;;              40

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 (FALLTHRU)
(note 428 427 429 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f873475f1c8 *.LC11>)) mQuery.c:93 -1
     (nil))
(call_insn 430 429 431 39 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:93 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 (FALLTHRU)

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       38
;;              39 (FALLTHRU)
(code_label 431 430 432 40 43 "" [1 uses])
(note 432 431 433 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 -1
     (nil))
(jump_insn 434 433 435 40 (set (pc)
        (label_ref 438)) mQuery.c:94 -1
     (nil)
 -> 438)
;;  succ:       42

(barrier 435 434 449)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
(code_label 449 435 436 41 46 "" [1 uses])
(note 436 449 437 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 41 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 -1
     (nil))
;;  succ:       42 (FALLTHRU,DFS_BACK)

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
;;              41 (FALLTHRU,DFS_BACK)
(code_label 438 437 439 42 44 "" [1 uses])
(note 439 438 440 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 42 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 -1
     (nil))
(insn 441 440 442 42 (set (reg:DI 288)
        (sign_extend:DI (reg:SI 289))) mQuery.c:94 -1
     (nil))
(insn 442 441 443 42 (set (reg:QI 165 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 288))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 -1
     (nil))
(insn 443 442 444 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.3690 ])
            (const_int 32 [0x20]))) mQuery.c:94 -1
     (nil))
(jump_insn 444 443 445 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) mQuery.c:94 -1
     (nil)
 -> 452)
;;  succ:       43 (FALLTHRU)
;;              44

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 (FALLTHRU)
(note 445 444 446 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 43 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 -1
     (nil))
(insn 447 446 448 43 (set (reg:DI 290)
        (sign_extend:DI (reg:SI 291))) mQuery.c:94 -1
     (nil))
(insn 448 447 450 43 (set (reg:QI 166 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 290))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 -1
     (nil))
(insn 450 448 451 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:94 -1
     (nil))
(jump_insn 451 450 452 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) mQuery.c:94 -1
     (nil)
 -> 449)
;;  succ:       41
;;              44 (FALLTHRU)

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       42
;;              43 (FALLTHRU)
(code_label 452 451 453 44 45 "" [1 uses])
(note 453 452 454 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 44 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:95 -1
     (nil))
(insn 455 454 456 44 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 293))) mQuery.c:95 -1
     (nil))
(insn 456 455 457 44 (set (reg:QI 167 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 292))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:95 -1
     (nil))
(insn 457 456 458 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:95 -1
     (nil))
(jump_insn 458 457 459 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) mQuery.c:95 -1
     (nil)
 -> 462)
;;  succ:       45 (FALLTHRU)
;;              46

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 459 458 460 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f873475f260 *.LC12>)) mQuery.c:95 -1
     (nil))
(call_insn 461 460 462 45 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:95 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 (FALLTHRU)

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
;;              45 (FALLTHRU)
(code_label 462 461 463 46 47 "" [1 uses])
(note 463 462 464 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 46 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:96 -1
     (nil))
(insn 465 464 466 46 (set (reg/f:DI 168 [ D.3688 ])
        (mem/f:DI (reg/f:DI 294) [0 *flight_16(D)+0 S8 A64])) mQuery.c:96 -1
     (nil))
(insn 466 465 467 46 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:96 -1
     (nil))
(insn 467 466 468 46 (set (reg:DI 169 [ D.3685 ])
        (sign_extend:DI (reg:SI 295))) mQuery.c:96 -1
     (nil))
(insn 468 467 469 46 (set (reg:DI 296)
        (reg:DI 169 [ D.3685 ])) mQuery.c:96 -1
     (nil))
(insn 469 468 470 46 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 296)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 470 469 471 46 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 296)
                    (reg:DI 169 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 471 470 472 46 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 296)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 472 471 473 46 (set (reg:DI 296)
        (reg:DI 297)) mQuery.c:96 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 473 472 474 46 (set (reg:DI 170 [ D.3685 ])
        (reg:DI 296)) mQuery.c:96 -1
     (nil))
(insn 474 473 475 46 (parallel [
            (set (reg/f:DI 171 [ D.3688 ])
                (plus:DI (reg/f:DI 168 [ D.3688 ])
                    (reg:DI 170 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 475 474 476 46 (set (reg/f:DI 172 [ D.3692 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 171 [ D.3688 ])
                (const_int 16 [0x10])) [0 _144->time+0 S8 A128])) mQuery.c:96 -1
     (nil))
(insn 476 475 477 46 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:96 -1
     (nil))
(insn 477 476 478 46 (set (reg:DI 173 [ D.3685 ])
        (sign_extend:DI (reg:SI 298))) mQuery.c:96 -1
     (nil))
(insn 478 477 479 46 (parallel [
            (set (reg:DI 174 [ D.3685 ])
                (ashift:DI (reg:DI 173 [ D.3685 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 479 478 480 46 (parallel [
            (set (reg/f:DI 175 [ D.3692 ])
                (plus:DI (reg/f:DI 172 [ D.3692 ])
                    (reg:DI 174 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 480 479 481 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 481 480 482 46 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 482 481 483 46 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:96 -1
     (nil))
(insn 483 482 484 46 (set (reg:DI 300)
        (sign_extend:DI (reg:SI 301))) mQuery.c:96 -1
     (nil))
(insn 484 483 485 46 (parallel [
            (set (reg/f:DI 176 [ D.3687 ])
                (plus:DI (reg:DI 299)
                    (reg:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 -1
     (nil))
(insn 485 484 486 46 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.3687 ])) mQuery.c:96 -1
     (nil))
(call_insn 486 485 487 46 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_convert_time") [flags 0x3]  <function_decl 0x7f87346baf00 _convert_time>) [0 _convert_time S1 A8])
            (const_int 0 [0]))) mQuery.c:96 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 46 (set (reg:XF 177 [ D.3694 ])
        (reg:XF 8 st)) mQuery.c:96 -1
     (nil))
(insn 488 487 489 46 (set (mem:XF (reg/f:DI 175 [ D.3692 ]) [0 *_148+0 S16 A128])
        (reg:XF 177 [ D.3694 ])) mQuery.c:96 -1
     (nil))
(insn 489 488 490 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))
;;  succ:       47 (FALLTHRU,DFS_BACK)

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              46 (FALLTHRU,DFS_BACK)
(code_label 490 489 491 47 26 "" [1 uses])
(note 491 490 492 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 47 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:78 -1
     (nil))
(insn 493 492 494 47 (set (reg/f:DI 106 [ D.3688 ])
        (mem/f:DI (reg/f:DI 302) [0 *flight_16(D)+0 S8 A64])) mQuery.c:78 -1
     (nil))
(insn 494 493 495 47 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:78 -1
     (nil))
(insn 495 494 496 47 (set (reg:DI 107 [ D.3685 ])
        (sign_extend:DI (reg:SI 303))) mQuery.c:78 -1
     (nil))
(insn 496 495 497 47 (set (reg:DI 304)
        (reg:DI 107 [ D.3685 ])) mQuery.c:78 -1
     (nil))
(insn 497 496 498 47 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))
(insn 498 497 499 47 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 107 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 499 498 500 47 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))
(insn 500 499 501 47 (set (reg:DI 304)
        (reg:DI 305)) mQuery.c:78 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 501 500 502 47 (set (reg:DI 108 [ D.3685 ])
        (reg:DI 304)) mQuery.c:78 -1
     (nil))
(insn 502 501 503 47 (parallel [
            (set (reg/f:DI 109 [ D.3688 ])
                (plus:DI (reg/f:DI 106 [ D.3688 ])
                    (reg:DI 108 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 -1
     (nil))
(insn 503 502 505 47 (set (reg:SI 110 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 109 [ D.3688 ])
                (const_int 4 [0x4])) [0 _69->n_nvp+0 S4 A32])) mQuery.c:78 -1
     (nil))
(insn 505 503 506 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110 [ D.3689 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32]))) mQuery.c:78 -1
     (nil))
(jump_insn 506 505 507 47 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) mQuery.c:78 -1
     (nil)
 -> 504)
;;  succ:       12
;;              48 (FALLTHRU)

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
(note 507 506 508 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:66 -1
     (nil))
;;  succ:       49 (FALLTHRU,DFS_BACK)

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              48 (FALLTHRU,DFS_BACK)
(code_label 509 508 510 49 22 "" [1 uses])
(note 510 509 512 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 512 510 513 49 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:66 -1
     (nil))
(insn 513 512 514 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 306)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32]))) mQuery.c:66 -1
     (nil))
(jump_insn 514 513 515 49 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) mQuery.c:66 -1
     (nil)
 -> 511)
;;  succ:       6
;;              50 (FALLTHRU)

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
(note 515 514 516 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 50 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:100 -1
     (nil))
(insn 517 516 518 50 (set (reg/f:DI 178 [ D.3688 ])
        (mem/f:DI (reg/f:DI 307) [0 *flight_16(D)+0 S8 A64])) mQuery.c:100 -1
     (nil))
(insn 518 517 519 50 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:100 -1
     (nil))
(insn 519 518 520 50 (set (reg:SI 4 si)
        (reg:SI 308)) mQuery.c:100 -1
     (nil))
(insn 520 519 521 50 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.3688 ])) mQuery.c:100 -1
     (nil))
(call_insn 521 520 522 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_calculate_velocity") [flags 0x3]  <function_decl 0x7f87346c5000 _calculate_velocity>) [0 _calculate_velocity S1 A8])
            (const_int 0 [0]))) mQuery.c:100 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 522 521 525 50 (set (reg:SI 179 [ D.3689 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:107 -1
     (nil))
(insn 525 522 529 50 (set (reg:SI 180 [ <retval> ])
        (reg:SI 179 [ D.3689 ])) mQuery.c:107 -1
     (nil))
(insn 529 525 532 50 (set (reg/i:SI 0 ax)
        (reg:SI 180 [ <retval> ])) mQuery.c:108 -1
     (nil))
(insn 532 529 533 50 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3695+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:108 -1
     (nil))
(jump_insn 533 532 540 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) mQuery.c:108 -1
     (nil)
 -> 536)
;;  succ:       54
;;              53 (FALLTHRU)

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
(note 540 533 534 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn 534 540 535 53 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:108 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 535 534 536)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       50
(code_label 536 535 541 54 51 "" [1 uses])
(note 541 536 537 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 537 541 0 54 (use (reg/i:SI 0 ax)) mQuery.c:108 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _find_value_string (_find_value_string, funcdef_no=5, decl_uid=3177, cgraph_uid=5)

_find_value_string (char * config_file, char * label)
{
  int lsize;
  int i;
  char c[50000];
  struct FILE * rstream;
  char * D.3525;
  double D.3524;
  long double D.3523;
  int D.3520;
  char * D.3519;
  long unsigned int D.3518;
  char D.3515;
  char D.3514;
  char D.3512;
  char D.3511;
  char D.3509;
  char D.3507;
  char D.3504;
  char * D.3503;
  sizetype D.3502;
  sizetype _6;
  char * _8;
  char _9;
  char * _11;
  char _12;
  char _13;
  char _14;
  char _16;
  char _17;
  char _19;
  long unsigned int _20;
  char * _22;
  int _23;
  double _24;
  long double _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_4 = fopen (config_file_3(D), "r");
  if (rstream_4 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("BUG - configuration file doesn\'t exist\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  lsize_5 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  lsize_10 = lsize_2 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # lsize_2 = PHI <lsize_5(4), lsize_10(5)>
  _6 = (sizetype) lsize_2;
  _8 = label_7(D) + _6;
  _9 = *_8;
  if (_9 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  goto <bb 20>;
;;    succ:       20

;;   basic block 8, loop depth 0
;;    pred:       20
  _12 = c[0];
  if (_12 == 35)
    goto <bb 11>;
  else
    goto <bb 9>;
;;    succ:       11
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _13 = c[0];
  if (_13 == 10)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  _14 = c[0];
  if (_14 == 32)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       8
;;                9
;;                10
  // predicted unlikely by continue predictor.
  goto <bb 20>;
;;    succ:       20

;;   basic block 12, loop depth 0
;;    pred:       10
  i_15 = 0;
  goto <bb 14>;
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       15
  i_18 = i_1 + 1;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  # i_1 = PHI <i_15(12), i_18(13)>
  _16 = c[i_1];
  if (_16 != 35)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _17 = c[i_1];
  if (_17 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;
;;    succ:       13
;;                16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  _19 = c[i_1];
  if (_19 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  BuG ("configuration file not standard\n");
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  _20 = (long unsigned int) lsize_2;
  i_21 = i_1 + 1;
  _22 = &c[i_21];
  _23 = memcmp (_22, label_7(D), _20);
  if (_23 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  fclose (rstream_4);
  _24 = atof (&c);
  _25 = (long double) _24;
  c ={v} {CLOBBER};
  goto <bb 22> (<L21>);
;;    succ:       22

;;   basic block 20, loop depth 0
;;    pred:       7
;;                11
;;                18
  _11 = fgets (&c, 50000, rstream_4);
  if (_11 != 0B)
    goto <bb 8>;
  else
    goto <bb 21>;
;;    succ:       8
;;                21

;;   basic block 21, loop depth 0
;;    pred:       20
  fclose (rstream_4);
  printf ("Impossible to fine %s in config-file\n", label_7(D));
  exit (0);
;;    succ:      

;;   basic block 22, loop depth 0
;;    pred:       19
<L21>:
  return _25;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (lsize_2 - 2 )
Partition 3 (config_file_3(D) - 3 )
Partition 4 (rstream_4 - 4 )
Partition 5 (lsize_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (label_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (lsize_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (i_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (i_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (lsize_2 - 2 )
Partition 2 (config_file_3(D) - 3 )
Partition 3 (lsize_5 - 5 )
Partition 4 (label_7(D) - 7 )
Partition 5 (lsize_10 - 10 )
Partition 6 (i_15 - 15 )
Partition 7 (i_18 - 18 )
Partition 8 (i_21 - 21 )


Live on entry to BB2 : config_file_3(D)  label_7(D)  

Live on entry to BB3 : label_7(D)  

Live on entry to BB4 : label_7(D)  

Live on entry to BB5 : lsize_2  label_7(D)  

Live on entry to BB6 : label_7(D)  

Live on entry to BB7 : lsize_2  label_7(D)  

Live on entry to BB8 : lsize_2  label_7(D)  

Live on entry to BB9 : lsize_2  label_7(D)  

Live on entry to BB10 : lsize_2  label_7(D)  

Live on entry to BB11 : lsize_2  label_7(D)  

Live on entry to BB12 : lsize_2  label_7(D)  

Live on entry to BB13 : i_1  lsize_2  label_7(D)  

Live on entry to BB14 : lsize_2  label_7(D)  

Live on entry to BB15 : i_1  lsize_2  label_7(D)  

Live on entry to BB16 : i_1  lsize_2  label_7(D)  

Live on entry to BB17 : i_1  lsize_2  label_7(D)  

Live on entry to BB18 : i_1  lsize_2  label_7(D)  

Live on entry to BB19 : 

Live on entry to BB20 : lsize_2  label_7(D)  

Live on entry to BB21 : label_7(D)  

Live on entry to BB22 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_15
(2147483646) i_1 <-> i_18
(2147483646) i_1 <-> i_21
(2147483646) lsize_2 <-> lsize_5
(2147483646) lsize_2 <-> lsize_10

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (lsize_2 - 2 )
Partition 2 (config_file_3(D) - 3 )
Partition 3 (lsize_5 - 5 )
Partition 4 (label_7(D) - 7 )
Partition 5 (lsize_10 - 10 )
Partition 6 (i_15 - 15 )
Partition 7 (i_18 - 18 )
Partition 8 (i_21 - 21 )

Coalesce list: (1)i_1 & (15)i_15 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (18)i_18 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (21)i_21 [map: 0, 8] : Success -> 0
Coalesce list: (2)lsize_2 & (5)lsize_5 [map: 1, 3] : Success -> 1
Coalesce list: (2)lsize_2 & (10)lsize_10 [map: 1, 5] : Success -> 1
Coalesce list: (1)i_1 & (18)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (15)i_1: Already Coalesced.
Coalesce list: (2)lsize_2 & (10)lsize_2: Already Coalesced.
Coalesce list: (2)lsize_2 & (5)lsize_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 15 18 21 )
Partition 1 (lsize_2 - 2 5 10 )
Partition 2 (config_file_3(D) - 3 )
Partition 3 (rstream_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (label_7(D) - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_16 - 16 )
Partition 13 (_17 - 17 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_24 - 24 )
Partition 19 (_25 - 25 )

_find_value_string (char * config_file, char * label)
{
  int lsize;
  int i;
  char c[50000];
  struct FILE * rstream;
  char * D.3525;
  double D.3524;
  long double D.3523;
  int D.3520;
  char * D.3519;
  long unsigned int D.3518;
  char D.3515;
  char D.3514;
  char D.3512;
  char D.3511;
  char D.3509;
  char D.3507;
  char D.3504;
  char * D.3503;
  sizetype D.3502;
  sizetype _6;
  char * _8;
  char _9;
  char * _11;
  char _12;
  char _13;
  char _14;
  char _16;
  char _17;
  char _19;
  long unsigned int _20;
  char * _22;
  int _23;
  double _24;
  long double _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_4 = fopen (config_file_3(D), "r");
  if (rstream_4 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("BUG - configuration file doesn\'t exist\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  lsize_5 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  lsize_10 = lsize_2 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # lsize_2 = PHI <lsize_5(4), lsize_10(5)>
  _6 = (sizetype) lsize_2;
  _8 = label_7(D) + _6;
  _9 = *_8;
  if (_9 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  goto <bb 20>;
;;    succ:       20

;;   basic block 8, loop depth 0
;;    pred:       20
  _12 = c[0];
  if (_12 == 35)
    goto <bb 11>;
  else
    goto <bb 9>;
;;    succ:       11
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _13 = c[0];
  if (_13 == 10)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  _14 = c[0];
  if (_14 == 32)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       8
;;                9
;;                10
  // predicted unlikely by continue predictor.
  goto <bb 20>;
;;    succ:       20

;;   basic block 12, loop depth 0
;;    pred:       10
  i_15 = 0;
  goto <bb 14>;
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       15
  i_18 = i_1 + 1;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  # i_1 = PHI <i_15(12), i_18(13)>
  _16 = c[i_1];
  if (_16 != 35)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _17 = c[i_1];
  if (_17 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;
;;    succ:       13
;;                16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  _19 = c[i_1];
  if (_19 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  BuG ("configuration file not standard\n");
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  _20 = (long unsigned int) lsize_2;
  i_21 = i_1 + 1;
  _22 = &c[i_21];
  _23 = memcmp (_22, label_7(D), _20);
  if (_23 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  fclose (rstream_4);
  _24 = atof (&c);
  _25 = (long double) _24;
  c ={v} {CLOBBER};
  goto <bb 22> (<L21>);
;;    succ:       22

;;   basic block 20, loop depth 0
;;    pred:       7
;;                11
;;                18
  _11 = fgets (&c, 50000, rstream_4);
  if (_11 != 0B)
    goto <bb 8>;
  else
    goto <bb 21>;
;;    succ:       8
;;                21

;;   basic block 21, loop depth 0
;;    pred:       20
  fclose (rstream_4);
  printf ("Impossible to fine %s in config-file\n", label_7(D));
  exit (0);
;;    succ:      

;;   basic block 22, loop depth 0
;;    pred:       19
<L21>:
  return _25;
;;    succ:       EXIT

}


Partition 3: size 50000 align 16
	c
Partition 2: size 8 align 8
	rstream_4
Partition 1: size 4 align 4
	lsize_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; rstream_4 = fopen (config_file_3(D), "r");

(insn 8 7 9 (set (reg:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])) mQuery.c:114 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:114 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 75)) mQuery.c:114 -1
     (nil))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:114 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 12 11 13 (set (reg:DI 76)
        (reg:DI 0 ax)) mQuery.c:114 -1
     (nil))

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 76)) mQuery.c:114 -1
     (nil))

;; if (rstream_4 == 0B)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:115 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:115 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("BUG - configuration file doesn\'t exist\n");

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8734780000 *.LC13>)) mQuery.c:115 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:115 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 53 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; lsize_5 = 0;

(insn 21 20 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
        (const_int 0 [0])) mQuery.c:120 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; lsize_10 = lsize_2 + 1;

(insn 25 24 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 26 25 27 54 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = (sizetype) lsize_2;

(insn 28 27 29 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:120 -1
     (nil))

(insn 29 28 0 (set (reg:DI 59 [ D.3706 ])
        (sign_extend:DI (reg:SI 77))) mQuery.c:120 -1
     (nil))

;; _8 = label_7(D) + _6;

(insn 30 29 31 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:120 -1
     (nil))

(insn 31 30 0 (parallel [
            (set (reg/f:DI 60 [ D.3707 ])
                (plus:DI (reg:DI 59 [ D.3706 ])
                    (reg/f:DI 78)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
            (reg:DI 59 [ D.3706 ]))
        (nil)))

;; _9 = *_8;

(insn 32 31 0 (set (reg:QI 61 [ D.3708 ])
        (mem:QI (reg/f:DI 60 [ D.3707 ]) [0 *_8+0 S1 A8])) mQuery.c:120 -1
     (nil))

;; if (_9 != 0)

(insn 34 32 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:120 -1
     (nil))

(jump_insn 35 34 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:120 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; _12 = c[0];

(insn 40 39 0 (set (reg:QI 63 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))

;; if (_12 == 35)

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:123 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:123 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _13 = c[0];

(insn 44 43 0 (set (reg:QI 64 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))

;; if (_13 == 10)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3708 ])
            (const_int 10 [0xa]))) mQuery.c:123 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:123 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _14 = c[0];

(insn 48 47 0 (set (reg:QI 65 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))

;; if (_14 == 32)

(insn 49 48 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.3708 ])
            (const_int 32 [0x20]))) mQuery.c:123 -1
     (nil))

(jump_insn 50 49 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:123 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 51 50 52 57 "" [0 uses])

(note 52 51 0 NOTE_INSN_BASIC_BLOCK)

;; // predicted unlikely by continue predictor.

(nil)

;; Generating RTL for gimple basic block 12

;; 

(code_label 55 54 56 58 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; i_15 = 0;

(insn 57 56 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:124 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; i_18 = i_1 + 1;

(insn 61 60 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:124 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 62 61 63 59 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; _16 = c[i_1];

(insn 64 63 65 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 -1
     (nil))

(insn 65 64 66 (set (reg:DI 79)
        (sign_extend:DI (reg:SI 80))) mQuery.c:124 -1
     (nil))

(insn 66 65 0 (set (reg:QI 66 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 79))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 -1
     (nil))

;; if (_16 != 35)

(insn 67 66 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:124 -1
     (nil))

(jump_insn 68 67 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:124 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _17 = c[i_1];

(insn 70 69 71 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 -1
     (nil))

(insn 71 70 72 (set (reg:DI 81)
        (sign_extend:DI (reg:SI 82))) mQuery.c:124 -1
     (nil))

(insn 72 71 0 (set (reg:QI 67 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 81))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 -1
     (nil))

;; if (_17 != 0)

(insn 74 72 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 67 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:124 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) mQuery.c:124 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 76 75 77 60 "" [0 uses])

(note 77 76 0 NOTE_INSN_BASIC_BLOCK)

;; _19 = c[i_1];

(insn 78 77 79 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:125 -1
     (nil))

(insn 79 78 80 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 84))) mQuery.c:125 -1
     (nil))

(insn 80 79 0 (set (reg:QI 68 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 83))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:125 -1
     (nil))

;; if (_19 == 0)

(insn 81 80 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:125 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:125 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; BuG ("configuration file not standard\n");

(insn 84 83 85 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8734780098 *.LC14>)) mQuery.c:125 -1
     (nil))

(call_insn 85 84 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:125 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 18

;; 

(code_label 86 85 87 62 "" [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; _20 = (long unsigned int) lsize_2;

(insn 88 87 89 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:126 -1
     (nil))

(insn 89 88 0 (set (reg:DI 69 [ D.3709 ])
        (sign_extend:DI (reg:SI 85))) mQuery.c:126 -1
     (nil))

;; i_21 = i_1 + 1;

(insn 90 89 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))

;; _22 = &c[i_21];

(insn 91 90 92 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))

(insn 92 91 93 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:126 -1
     (nil))

(insn 93 92 94 (set (reg:DI 87)
        (sign_extend:DI (reg:SI 88))) mQuery.c:126 -1
     (nil))

(insn 94 93 0 (parallel [
            (set (reg/f:DI 70 [ D.3707 ])
                (plus:DI (reg:DI 86)
                    (reg:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))

;; _23 = memcmp (_22, label_7(D), _20);

(insn 95 94 96 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:126 -1
     (nil))

(insn 96 95 97 (set (reg:DI 1 dx)
        (reg:DI 69 [ D.3709 ])) mQuery.c:126 -1
     (nil))

(insn 97 96 98 (set (reg:DI 4 si)
        (reg:DI 89)) mQuery.c:126 -1
     (nil))

(insn 98 97 99 (set (reg:DI 5 di)
        (reg/f:DI 70 [ D.3707 ])) mQuery.c:126 -1
     (nil))

(call_insn/i 99 98 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f8734935700 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) mQuery.c:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 100 99 0 (set (reg:SI 71 [ D.3710 ])
        (reg:SI 0 ax)) mQuery.c:126 -1
     (nil))

;; if (_23 == 0)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.3710 ])
            (const_int 0 [0]))) mQuery.c:126 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; fclose (rstream_4);

(insn 104 103 105 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:127 -1
     (nil))

(insn 105 104 106 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:127 -1
     (nil))

(call_insn 106 105 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:127 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _24 = atof (&c);

(insn 107 106 108 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:128 -1
     (nil))

(insn 108 107 109 (set (reg:DI 5 di)
        (reg:DI 91)) mQuery.c:128 -1
     (nil))

(call_insn/i 109 108 110 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:128 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 110 109 0 (set (reg:DF 72 [ D.3711 ])
        (reg:DF 21 xmm0)) mQuery.c:128 -1
     (nil))

;; _25 = (long double) _24;

(insn 111 110 0 (set (reg:XF 73 [ D.3712 ])
        (float_extend:XF (reg:DF 72 [ D.3711 ]))) mQuery.c:128 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 20

;; 

(code_label 114 113 115 56 "" [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = fgets (&c, 50000, rstream_4);

(insn 116 115 117 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:122 -1
     (nil))

(insn 117 116 118 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:122 -1
     (nil))

(insn 118 117 119 (set (reg:DI 1 dx)
        (reg:DI 92)) mQuery.c:122 -1
     (nil))

(insn 119 118 120 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:122 -1
     (nil))

(insn 120 119 121 (set (reg:DI 5 di)
        (reg:DI 93)) mQuery.c:122 -1
     (nil))

(call_insn 121 120 122 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:122 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 122 121 0 (set (reg/f:DI 62 [ D.3707 ])
        (reg:DI 0 ax)) mQuery.c:122 -1
     (nil))

;; if (_11 != 0B)

(insn 124 122 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3707 ])
            (const_int 0 [0]))) mQuery.c:122 -1
     (nil))

(jump_insn 125 124 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) mQuery.c:122 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; fclose (rstream_4);

(insn 127 126 128 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:132 -1
     (nil))

(insn 128 127 129 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:132 -1
     (nil))

(call_insn 129 128 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:132 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; printf ("Impossible to fine %s in config-file\n", label_7(D));

(insn 130 129 131 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:133 -1
     (nil))

(insn 131 130 132 (set (reg:DI 4 si)
        (reg:DI 95)) mQuery.c:133 -1
     (nil))

(insn 132 131 133 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8734780130 *.LC15>)) mQuery.c:133 -1
     (nil))

(insn 133 132 134 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:133 -1
     (nil))

(call_insn 134 133 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8734941f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mQuery.c:133 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))

;; exit (0);

(insn 135 134 136 (set (reg:SI 5 di)
        (const_int 0 [0])) mQuery.c:134 -1
     (nil))

(call_insn 136 135 137 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8734955f00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mQuery.c:134 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(barrier 137 136 0)

;; Generating RTL for gimple basic block 22

;; <L21>:

(code_label 138 137 139 63 "" [0 uses])

(note 139 138 0 NOTE_INSN_BASIC_BLOCK)

;; return _25;

(insn 140 139 141 (set (reg:XF 74 [ <retval> ])
        (reg:XF 73 [ D.3712 ])) mQuery.c:128 -1
     (nil))

(jump_insn 141 140 142 (set (pc)
        (label_ref 0)) mQuery.c:128 -1
     (nil))

(barrier 142 141 0)
deleting block 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:112 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
        (reg:DI 4 si [ label ])) mQuery.c:112 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:112 -1
     (nil))
(insn 8 5 9 2 (set (reg:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])) mQuery.c:114 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:114 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 75)) mQuery.c:114 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:114 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 76)
        (reg:DI 0 ax)) mQuery.c:114 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 76)) mQuery.c:114 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:115 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:115 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8734780000 *.LC13>)) mQuery.c:115 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:115 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 53 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
        (const_int 0 [0])) mQuery.c:120 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 26)) mQuery.c:120 -1
     (nil)
 -> 26)
;;  succ:       7

(barrier 23 22 33)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 33 23 24 6 55 "" [1 uses])
(note 24 33 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 26 25 27 7 54 "" [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:120 -1
     (nil))
(insn 29 28 30 7 (set (reg:DI 59 [ D.3706 ])
        (sign_extend:DI (reg:SI 77))) mQuery.c:120 -1
     (nil))
(insn 30 29 31 7 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:120 -1
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg/f:DI 60 [ D.3707 ])
                (plus:DI (reg:DI 59 [ D.3706 ])
                    (reg/f:DI 78)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
            (reg:DI 59 [ D.3706 ]))
        (nil)))
(insn 32 31 34 7 (set (reg:QI 61 [ D.3708 ])
        (mem:QI (reg/f:DI 60 [ D.3707 ]) [0 *_8+0 S1 A8])) mQuery.c:120 -1
     (nil))
(insn 34 32 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:120 -1
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:120 -1
     (nil)
 -> 33)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 36 38 8 (set (pc)
        (label_ref 114)) mQuery.c:122 -1
     (nil)
 -> 114)
;;  succ:       21

(barrier 38 37 123)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 123 38 39 9 64 "" [1 uses])
(note 39 123 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:QI 63 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))
(insn 41 40 42 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:123 -1
     (nil))
(jump_insn 42 41 43 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 -1
     (nil)
 -> 51)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 10 (set (reg:QI 64 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))
(insn 45 44 46 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3708 ])
            (const_int 10 [0xa]))) mQuery.c:123 -1
     (nil))
(jump_insn 46 45 47 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 -1
     (nil)
 -> 51)
;;  succ:       12
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 47 46 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 11 (set (reg:QI 65 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 -1
     (nil))
(insn 49 48 50 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.3708 ])
            (const_int 32 [0x20]))) mQuery.c:123 -1
     (nil))
(jump_insn 50 49 51 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) mQuery.c:123 -1
     (nil)
 -> 55)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10
;;              11 (FALLTHRU)
(code_label 51 50 52 12 57 "" [2 uses])
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 53 52 54 12 (set (pc)
        (label_ref 114)) mQuery.c:123 -1
     (nil)
 -> 114)
;;  succ:       21 (DFS_BACK)

(barrier 54 53 55)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 55 54 56 13 58 "" [1 uses])
(note 56 55 57 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 13 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:124 -1
     (nil))
(jump_insn 58 57 59 13 (set (pc)
        (label_ref 62)) mQuery.c:124 -1
     (nil)
 -> 62)
;;  succ:       15

(barrier 59 58 73)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 73 59 60 14 61 "" [1 uses])
(note 60 73 61 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:124 -1
     (nil))
;;  succ:       15 (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              14 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 15 59 "" [1 uses])
(note 63 62 64 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 15 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 -1
     (nil))
(insn 65 64 66 15 (set (reg:DI 79)
        (sign_extend:DI (reg:SI 80))) mQuery.c:124 -1
     (nil))
(insn 66 65 67 15 (set (reg:QI 66 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 79))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 -1
     (nil))
(insn 67 66 68 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:124 -1
     (nil))
(jump_insn 68 67 69 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) mQuery.c:124 -1
     (nil)
 -> 76)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 69 68 70 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 16 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 -1
     (nil))
(insn 71 70 72 16 (set (reg:DI 81)
        (sign_extend:DI (reg:SI 82))) mQuery.c:124 -1
     (nil))
(insn 72 71 74 16 (set (reg:QI 67 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 81))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 -1
     (nil))
(insn 74 72 75 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 67 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:124 -1
     (nil))
(jump_insn 75 74 76 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) mQuery.c:124 -1
     (nil)
 -> 73)
;;  succ:       14
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 76 75 77 17 60 "" [1 uses])
(note 77 76 78 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 17 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:125 -1
     (nil))
(insn 79 78 80 17 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 84))) mQuery.c:125 -1
     (nil))
(insn 80 79 81 17 (set (reg:QI 68 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 83))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:125 -1
     (nil))
(insn 81 80 82 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:125 -1
     (nil))
(jump_insn 82 81 83 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mQuery.c:125 -1
     (nil)
 -> 86)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 83 82 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8734780098 *.LC14>)) mQuery.c:125 -1
     (nil))
(call_insn 85 84 86 18 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:125 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 86 85 87 19 62 "" [1 uses])
(note 87 86 88 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 19 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:126 -1
     (nil))
(insn 89 88 90 19 (set (reg:DI 69 [ D.3709 ])
        (sign_extend:DI (reg:SI 85))) mQuery.c:126 -1
     (nil))
(insn 90 89 91 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))
(insn 91 90 92 19 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))
(insn 92 91 93 19 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:126 -1
     (nil))
(insn 93 92 94 19 (set (reg:DI 87)
        (sign_extend:DI (reg:SI 88))) mQuery.c:126 -1
     (nil))
(insn 94 93 95 19 (parallel [
            (set (reg/f:DI 70 [ D.3707 ])
                (plus:DI (reg:DI 86)
                    (reg:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 -1
     (nil))
(insn 95 94 96 19 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:126 -1
     (nil))
(insn 96 95 97 19 (set (reg:DI 1 dx)
        (reg:DI 69 [ D.3709 ])) mQuery.c:126 -1
     (nil))
(insn 97 96 98 19 (set (reg:DI 4 si)
        (reg:DI 89)) mQuery.c:126 -1
     (nil))
(insn 98 97 99 19 (set (reg:DI 5 di)
        (reg/f:DI 70 [ D.3707 ])) mQuery.c:126 -1
     (nil))
(call_insn/i 99 98 100 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f8734935700 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) mQuery.c:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 100 99 101 19 (set (reg:SI 71 [ D.3710 ])
        (reg:SI 0 ax)) mQuery.c:126 -1
     (nil))
(insn 101 100 102 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.3710 ])
            (const_int 0 [0]))) mQuery.c:126 -1
     (nil))
(jump_insn 102 101 103 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:126 -1
     (nil)
 -> 114)
;;  succ:       20 (FALLTHRU)
;;              21 (DFS_BACK)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 103 102 104 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 20 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:127 -1
     (nil))
(insn 105 104 106 20 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:127 -1
     (nil))
(call_insn 106 105 107 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:127 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 20 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:128 -1
     (nil))
(insn 108 107 109 20 (set (reg:DI 5 di)
        (reg:DI 91)) mQuery.c:128 -1
     (nil))
(call_insn/i 109 108 110 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:128 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 111 20 (set (reg:DF 72 [ D.3711 ])
        (reg:DF 21 xmm0)) mQuery.c:128 -1
     (nil))
(insn 111 110 112 20 (set (reg:XF 73 [ D.3712 ])
        (float_extend:XF (reg:DF 72 [ D.3711 ]))) mQuery.c:128 -1
     (nil))
(jump_insn 112 111 113 20 (set (pc)
        (label_ref 138)) -1
     (nil)
 -> 138)
;;  succ:       23

(barrier 113 112 114)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              12 (DFS_BACK)
;;              19 (DFS_BACK)
(code_label 114 113 115 21 56 "" [3 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 21 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:122 -1
     (nil))
(insn 117 116 118 21 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:122 -1
     (nil))
(insn 118 117 119 21 (set (reg:DI 1 dx)
        (reg:DI 92)) mQuery.c:122 -1
     (nil))
(insn 119 118 120 21 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:122 -1
     (nil))
(insn 120 119 121 21 (set (reg:DI 5 di)
        (reg:DI 93)) mQuery.c:122 -1
     (nil))
(call_insn 121 120 122 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:122 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 122 121 124 21 (set (reg/f:DI 62 [ D.3707 ])
        (reg:DI 0 ax)) mQuery.c:122 -1
     (nil))
(insn 124 122 125 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3707 ])
            (const_int 0 [0]))) mQuery.c:122 -1
     (nil))
(jump_insn 125 124 126 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) mQuery.c:122 -1
     (nil)
 -> 123)
;;  succ:       9
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 22 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:132 -1
     (nil))
(insn 128 127 129 22 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:132 -1
     (nil))
(call_insn 129 128 130 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:132 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 130 129 131 22 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:133 -1
     (nil))
(insn 131 130 132 22 (set (reg:DI 4 si)
        (reg:DI 95)) mQuery.c:133 -1
     (nil))
(insn 132 131 133 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8734780130 *.LC15>)) mQuery.c:133 -1
     (nil))
(insn 133 132 134 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:133 -1
     (nil))
(call_insn 134 133 135 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8734941f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mQuery.c:133 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 135 134 136 22 (set (reg:SI 5 di)
        (const_int 0 [0])) mQuery.c:134 -1
     (nil))
(call_insn 136 135 137 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8734955f00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mQuery.c:134 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 137 136 138)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
(code_label 138 137 139 23 63 "" [1 uses])
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 144 23 (set (reg:XF 74 [ <retval> ])
        (reg:XF 73 [ D.3712 ])) mQuery.c:128 -1
     (nil))
(insn 144 140 147 23 (set (reg/i:XF 8 st)
        (reg:XF 74 [ <retval> ])) mQuery.c:136 -1
     (nil))
(insn 147 144 148 23 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:136 -1
     (nil))
(jump_insn 148 147 155 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) mQuery.c:136 -1
     (nil)
 -> 151)
;;  succ:       26
;;              25 (FALLTHRU)

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
(note 155 148 149 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn 149 155 150 25 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:136 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 150 149 151)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 151 150 156 26 65 "" [1 uses])
(note 156 151 152 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 152 156 0 26 (use (reg/i:XF 8 st)) mQuery.c:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_configuration (get_configuration, funcdef_no=6, decl_uid=1766, cgraph_uid=6)

get_configuration (char * config_file, struct CONF_t * config)
{
  int D.3553;
  long double D.3552;
  int D.3551;
  long double D.3550;
  long double D.3549;
  long double D.3548;
  long double D.3547;
  int D.3546;
  long double D.3545;
  int D.3544;
  long double D.3543;
  long double D.3542;
  long double D.3541;
  int D.3540;
  long double D.3539;
  long double D.3538;
  int D.3537;
  long double D.3536;
  int D.3535;
  long double D.3534;
  long double D.3533;
  long double D.3532;
  long double D.3531;
  int D.3530;
  long double D.3529;
  long double D.3528;
  long double _2;
  long double _4;
  int _5;
  long double _6;
  long double _7;
  long double _8;
  long double _9;
  int _10;
  long double _11;
  int _12;
  long double _13;
  long double _14;
  int _15;
  long double _16;
  long double _17;
  long double _18;
  int _19;
  long double _20;
  int _21;
  long double _22;
  long double _23;
  long double _24;
  long double _25;
  int _26;
  long double _27;
  int _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = _find_value_string (config_file_1(D), "max_ang");
  config_3(D)->max_ang = _2;
  _4 = _find_value_string (config_file_1(D), "nsim");
  _5 = (int) _4;
  config_3(D)->nsim = _5;
  _6 = _find_value_string (config_file_1(D), "direct_thr");
  config_3(D)->direct_thr = _6;
  _7 = _find_value_string (config_file_1(D), "xdelay");
  config_3(D)->xdelay = _7;
  _8 = _find_value_string (config_file_1(D), "pdelay");
  config_3(D)->pdelay = _8;
  _9 = _find_value_string (config_file_1(D), "laplacian_vel");
  _10 = (int) _9;
  config_3(D)->laplacian_vel = _10;
  _11 = _find_value_string (config_file_1(D), "Nm_shock");
  _12 = (int) _11;
  config_3(D)->Nm_shock = _12;
  _13 = _find_value_string (config_file_1(D), "radius");
  config_3(D)->radius = _13;
  _14 = _find_value_string (config_file_1(D), "t_w");
  _15 = (int) _14;
  config_3(D)->t_w = _15;
  _16 = _find_value_string (config_file_1(D), "t_i");
  config_3(D)->t_i = _16;
  _17 = _find_value_string (config_file_1(D), "t_r");
  config_3(D)->t_r = _17;
  _18 = _find_value_string (config_file_1(D), "shortest_path");
  _19 = (int) _18;
  config_3(D)->shortest_path = _19;
  _20 = _find_value_string (config_file_1(D), "d_thr");
  _21 = (int) _20;
  _22 = (long double) _21;
  config_3(D)->d_thr = _22;
  _23 = _find_value_string (config_file_1(D), "shock_f_lvl_min");
  config_3(D)->f_lvl[0] = _23;
  _24 = _find_value_string (config_file_1(D), "shock_f_lvl_max");
  config_3(D)->f_lvl[1] = _24;
  _25 = _find_value_string (config_file_1(D), "geom");
  _26 = (int) _25;
  config_3(D)->geom = _26;
  _27 = _find_value_string (config_file_1(D), "sig_V");
  config_3(D)->sig_V = _27;
  _28 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _28;
;;    succ:       EXIT

}



Partition map 

Partition 1 (config_file_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (config_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )


Partition map 

Partition 0 (config_file_1(D) - 1 )
Partition 1 (config_3(D) - 3 )


Live on entry to BB2 : config_file_1(D)  config_3(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (config_file_1(D) - 1 )
Partition 1 (config_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (config_file_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (config_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )

get_configuration (char * config_file, struct CONF_t * config)
{
  int D.3553;
  long double D.3552;
  int D.3551;
  long double D.3550;
  long double D.3549;
  long double D.3548;
  long double D.3547;
  int D.3546;
  long double D.3545;
  int D.3544;
  long double D.3543;
  long double D.3542;
  long double D.3541;
  int D.3540;
  long double D.3539;
  long double D.3538;
  int D.3537;
  long double D.3536;
  int D.3535;
  long double D.3534;
  long double D.3533;
  long double D.3532;
  long double D.3531;
  int D.3530;
  long double D.3529;
  long double D.3528;
  long double _2;
  long double _4;
  int _5;
  long double _6;
  long double _7;
  long double _8;
  long double _9;
  int _10;
  long double _11;
  int _12;
  long double _13;
  long double _14;
  int _15;
  long double _16;
  long double _17;
  long double _18;
  int _19;
  long double _20;
  int _21;
  long double _22;
  long double _23;
  long double _24;
  long double _25;
  int _26;
  long double _27;
  int _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = _find_value_string (config_file_1(D), "max_ang");
  config_3(D)->max_ang = _2;
  _4 = _find_value_string (config_file_1(D), "nsim");
  _5 = (int) _4;
  config_3(D)->nsim = _5;
  _6 = _find_value_string (config_file_1(D), "direct_thr");
  config_3(D)->direct_thr = _6;
  _7 = _find_value_string (config_file_1(D), "xdelay");
  config_3(D)->xdelay = _7;
  _8 = _find_value_string (config_file_1(D), "pdelay");
  config_3(D)->pdelay = _8;
  _9 = _find_value_string (config_file_1(D), "laplacian_vel");
  _10 = (int) _9;
  config_3(D)->laplacian_vel = _10;
  _11 = _find_value_string (config_file_1(D), "Nm_shock");
  _12 = (int) _11;
  config_3(D)->Nm_shock = _12;
  _13 = _find_value_string (config_file_1(D), "radius");
  config_3(D)->radius = _13;
  _14 = _find_value_string (config_file_1(D), "t_w");
  _15 = (int) _14;
  config_3(D)->t_w = _15;
  _16 = _find_value_string (config_file_1(D), "t_i");
  config_3(D)->t_i = _16;
  _17 = _find_value_string (config_file_1(D), "t_r");
  config_3(D)->t_r = _17;
  _18 = _find_value_string (config_file_1(D), "shortest_path");
  _19 = (int) _18;
  config_3(D)->shortest_path = _19;
  _20 = _find_value_string (config_file_1(D), "d_thr");
  _21 = (int) _20;
  _22 = (long double) _21;
  config_3(D)->d_thr = _22;
  _23 = _find_value_string (config_file_1(D), "shock_f_lvl_min");
  config_3(D)->f_lvl[0] = _23;
  _24 = _find_value_string (config_file_1(D), "shock_f_lvl_max");
  config_3(D)->f_lvl[1] = _24;
  _25 = _find_value_string (config_file_1(D), "geom");
  _26 = (int) _25;
  config_3(D)->geom = _26;
  _27 = _find_value_string (config_file_1(D), "sig_V");
  config_3(D)->sig_V = _27;
  _28 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _28;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = _find_value_string (config_file_1(D), "max_ang");

(insn 7 6 8 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:139 -1
     (nil))

(insn 8 7 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f873478a5f0 *.LC16>)) mQuery.c:139 -1
     (nil))

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:139 -1
     (nil))

(call_insn 10 9 11 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:139 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 11 10 0 (set (reg:XF 59 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:139 -1
     (nil))

;; config_3(D)->max_ang = _2;

(insn 12 11 13 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:139 -1
     (nil))

(insn 13 12 0 (set (mem/j:XF (plus:DI (reg/f:DI 87)
                (const_int 16 [0x10])) [0 config_3(D)->max_ang+0 S16 A128])
        (reg:XF 59 [ D.3717 ])) mQuery.c:139 -1
     (nil))

;; _4 = _find_value_string (config_file_1(D), "nsim");

(insn 14 13 15 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:140 -1
     (nil))

(insn 15 14 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f873478a688 *.LC17>)) mQuery.c:140 -1
     (nil))

(insn 16 15 17 (set (reg:DI 5 di)
        (reg:DI 88)) mQuery.c:140 -1
     (nil))

(call_insn 17 16 18 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:140 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 18 17 0 (set (reg:XF 60 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:140 -1
     (nil))

;; _5 = (int) _4;

(insn 19 18 0 (parallel [
            (set (reg:SI 61 [ D.3718 ])
                (fix:SI (reg:XF 60 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:140 -1
     (nil))

;; config_3(D)->nsim = _5;

(insn 20 19 21 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:140 -1
     (nil))

(insn 21 20 0 (set (mem/j:SI (plus:DI (reg/f:DI 89)
                (const_int 32 [0x20])) [0 config_3(D)->nsim+0 S4 A128])
        (reg:SI 61 [ D.3718 ])) mQuery.c:140 -1
     (nil))

;; _6 = _find_value_string (config_file_1(D), "direct_thr");

(insn 22 21 23 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:141 -1
     (nil))

(insn 23 22 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f873478a720 *.LC18>)) mQuery.c:141 -1
     (nil))

(insn 24 23 25 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:141 -1
     (nil))

(call_insn 25 24 26 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:141 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 26 25 0 (set (reg:XF 62 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:141 -1
     (nil))

;; config_3(D)->direct_thr = _6;

(insn 27 26 28 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:141 -1
     (nil))

(insn 28 27 0 (set (mem/j:XF (plus:DI (reg/f:DI 91)
                (const_int 64 [0x40])) [0 config_3(D)->direct_thr+0 S16 A128])
        (reg:XF 62 [ D.3717 ])) mQuery.c:141 -1
     (nil))

;; _7 = _find_value_string (config_file_1(D), "xdelay");

(insn 29 28 30 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:142 -1
     (nil))

(insn 30 29 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f873478a7b8 *.LC19>)) mQuery.c:142 -1
     (nil))

(insn 31 30 32 (set (reg:DI 5 di)
        (reg:DI 92)) mQuery.c:142 -1
     (nil))

(call_insn 32 31 33 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:142 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 33 32 0 (set (reg:XF 63 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:142 -1
     (nil))

;; config_3(D)->xdelay = _7;

(insn 34 33 35 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:142 -1
     (nil))

(insn 35 34 0 (set (mem/j:XF (plus:DI (reg/f:DI 93)
                (const_int 80 [0x50])) [0 config_3(D)->xdelay+0 S16 A128])
        (reg:XF 63 [ D.3717 ])) mQuery.c:142 -1
     (nil))

;; _8 = _find_value_string (config_file_1(D), "pdelay");

(insn 36 35 37 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:143 -1
     (nil))

(insn 37 36 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f873478a850 *.LC20>)) mQuery.c:143 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:143 -1
     (nil))

(call_insn 39 38 40 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:143 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 40 39 0 (set (reg:XF 64 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:143 -1
     (nil))

;; config_3(D)->pdelay = _8;

(insn 41 40 42 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:143 -1
     (nil))

(insn 42 41 0 (set (mem/j:XF (plus:DI (reg/f:DI 95)
                (const_int 96 [0x60])) [0 config_3(D)->pdelay+0 S16 A128])
        (reg:XF 64 [ D.3717 ])) mQuery.c:143 -1
     (nil))

;; _9 = _find_value_string (config_file_1(D), "laplacian_vel");

(insn 43 42 44 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:144 -1
     (nil))

(insn 44 43 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f873478a8e8 *.LC21>)) mQuery.c:144 -1
     (nil))

(insn 45 44 46 (set (reg:DI 5 di)
        (reg:DI 96)) mQuery.c:144 -1
     (nil))

(call_insn 46 45 47 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:144 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 47 46 0 (set (reg:XF 65 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:144 -1
     (nil))

;; _10 = (int) _9;

(insn 48 47 0 (parallel [
            (set (reg:SI 66 [ D.3718 ])
                (fix:SI (reg:XF 65 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:144 -1
     (nil))

;; config_3(D)->laplacian_vel = _10;

(insn 49 48 50 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:144 -1
     (nil))

(insn 50 49 0 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 112 [0x70])) [0 config_3(D)->laplacian_vel+0 S4 A128])
        (reg:SI 66 [ D.3718 ])) mQuery.c:144 -1
     (nil))

;; _11 = _find_value_string (config_file_1(D), "Nm_shock");

(insn 51 50 52 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:145 -1
     (nil))

(insn 52 51 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f873478a980 *.LC22>)) mQuery.c:145 -1
     (nil))

(insn 53 52 54 (set (reg:DI 5 di)
        (reg:DI 98)) mQuery.c:145 -1
     (nil))

(call_insn 54 53 55 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:145 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 55 54 0 (set (reg:XF 67 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:145 -1
     (nil))

;; _12 = (int) _11;

(insn 56 55 0 (parallel [
            (set (reg:SI 68 [ D.3718 ])
                (fix:SI (reg:XF 67 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:145 -1
     (nil))

;; config_3(D)->Nm_shock = _12;

(insn 57 56 58 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:145 -1
     (nil))

(insn 58 57 0 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 116 [0x74])) [0 config_3(D)->Nm_shock+0 S4 A32])
        (reg:SI 68 [ D.3718 ])) mQuery.c:145 -1
     (nil))

;; _13 = _find_value_string (config_file_1(D), "radius");

(insn 59 58 60 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:146 -1
     (nil))

(insn 60 59 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f873478aa18 *.LC23>)) mQuery.c:146 -1
     (nil))

(insn 61 60 62 (set (reg:DI 5 di)
        (reg:DI 100)) mQuery.c:146 -1
     (nil))

(call_insn 62 61 63 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:146 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 63 62 0 (set (reg:XF 69 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:146 -1
     (nil))

;; config_3(D)->radius = _13;

(insn 64 63 65 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:146 -1
     (nil))

(insn 65 64 0 (set (mem/j:XF (plus:DI (reg/f:DI 101)
                (const_int 144 [0x90])) [0 config_3(D)->radius+0 S16 A128])
        (reg:XF 69 [ D.3717 ])) mQuery.c:146 -1
     (nil))

;; _14 = _find_value_string (config_file_1(D), "t_w");

(insn 66 65 67 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:147 -1
     (nil))

(insn 67 66 68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f873478aab0 *.LC24>)) mQuery.c:147 -1
     (nil))

(insn 68 67 69 (set (reg:DI 5 di)
        (reg:DI 102)) mQuery.c:147 -1
     (nil))

(call_insn 69 68 70 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:147 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 70 69 0 (set (reg:XF 70 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:147 -1
     (nil))

;; _15 = (int) _14;

(insn 71 70 0 (parallel [
            (set (reg:SI 71 [ D.3718 ])
                (fix:SI (reg:XF 70 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:147 -1
     (nil))

;; config_3(D)->t_w = _15;

(insn 72 71 73 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:147 -1
     (nil))

(insn 73 72 0 (set (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 192 [0xc0])) [0 config_3(D)->t_w+0 S4 A128])
        (reg:SI 71 [ D.3718 ])) mQuery.c:147 -1
     (nil))

;; _16 = _find_value_string (config_file_1(D), "t_i");

(insn 74 73 75 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:148 -1
     (nil))

(insn 75 74 76 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f873478ab48 *.LC25>)) mQuery.c:148 -1
     (nil))

(insn 76 75 77 (set (reg:DI 5 di)
        (reg:DI 104)) mQuery.c:148 -1
     (nil))

(call_insn 77 76 78 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:148 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 78 77 0 (set (reg:XF 72 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:148 -1
     (nil))

;; config_3(D)->t_i = _16;

(insn 79 78 80 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:148 -1
     (nil))

(insn 80 79 0 (set (mem/j:XF (plus:DI (reg/f:DI 105)
                (const_int 208 [0xd0])) [0 config_3(D)->t_i+0 S16 A128])
        (reg:XF 72 [ D.3717 ])) mQuery.c:148 -1
     (nil))

;; _17 = _find_value_string (config_file_1(D), "t_r");

(insn 81 80 82 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:149 -1
     (nil))

(insn 82 81 83 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f873478abe0 *.LC26>)) mQuery.c:149 -1
     (nil))

(insn 83 82 84 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:149 -1
     (nil))

(call_insn 84 83 85 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:149 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 85 84 0 (set (reg:XF 73 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:149 -1
     (nil))

;; config_3(D)->t_r = _17;

(insn 86 85 87 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:149 -1
     (nil))

(insn 87 86 0 (set (mem/j:XF (plus:DI (reg/f:DI 107)
                (const_int 224 [0xe0])) [0 config_3(D)->t_r+0 S16 A128])
        (reg:XF 73 [ D.3717 ])) mQuery.c:149 -1
     (nil))

;; _18 = _find_value_string (config_file_1(D), "shortest_path");

(insn 88 87 89 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:150 -1
     (nil))

(insn 89 88 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f873478ac78 *.LC27>)) mQuery.c:150 -1
     (nil))

(insn 90 89 91 (set (reg:DI 5 di)
        (reg:DI 108)) mQuery.c:150 -1
     (nil))

(call_insn 91 90 92 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:150 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 92 91 0 (set (reg:XF 74 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:150 -1
     (nil))

;; _19 = (int) _18;

(insn 93 92 0 (parallel [
            (set (reg:SI 75 [ D.3718 ])
                (fix:SI (reg:XF 74 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:150 -1
     (nil))

;; config_3(D)->shortest_path = _19;

(insn 94 93 95 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:150 -1
     (nil))

(insn 95 94 0 (set (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 240 [0xf0])) [0 config_3(D)->shortest_path+0 S4 A128])
        (reg:SI 75 [ D.3718 ])) mQuery.c:150 -1
     (nil))

;; _20 = _find_value_string (config_file_1(D), "d_thr");

(insn 96 95 97 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:151 -1
     (nil))

(insn 97 96 98 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f873478ad10 *.LC28>)) mQuery.c:151 -1
     (nil))

(insn 98 97 99 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:151 -1
     (nil))

(call_insn 99 98 100 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:151 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 100 99 0 (set (reg:XF 76 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:151 -1
     (nil))

;; _21 = (int) _20;

(insn 101 100 0 (parallel [
            (set (reg:SI 77 [ D.3718 ])
                (fix:SI (reg:XF 76 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:151 -1
     (nil))

;; _22 = (long double) _21;

(insn 102 101 0 (set (reg:XF 78 [ D.3717 ])
        (float:XF (reg:SI 77 [ D.3718 ]))) mQuery.c:151 -1
     (nil))

;; config_3(D)->d_thr = _22;

(insn 103 102 104 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:151 -1
     (nil))

(insn 104 103 0 (set (mem/j:XF (plus:DI (reg/f:DI 111)
                (const_int 256 [0x100])) [0 config_3(D)->d_thr+0 S16 A128])
        (reg:XF 78 [ D.3717 ])) mQuery.c:151 -1
     (nil))

;; _23 = _find_value_string (config_file_1(D), "shock_f_lvl_min");

(insn 105 104 106 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:152 -1
     (nil))

(insn 106 105 107 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f873478ada8 *.LC29>)) mQuery.c:152 -1
     (nil))

(insn 107 106 108 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:152 -1
     (nil))

(call_insn 108 107 109 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:152 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 109 108 0 (set (reg:XF 79 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:152 -1
     (nil))

;; config_3(D)->f_lvl[0] = _23;

(insn 110 109 111 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:152 -1
     (nil))

(insn 111 110 0 (set (mem/j:XF (plus:DI (reg/f:DI 113)
                (const_int 160 [0xa0])) [0 config_3(D)->f_lvl+0 S16 A128])
        (reg:XF 79 [ D.3717 ])) mQuery.c:152 -1
     (nil))

;; _24 = _find_value_string (config_file_1(D), "shock_f_lvl_max");

(insn 112 111 113 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:153 -1
     (nil))

(insn 113 112 114 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f873478ae40 *.LC30>)) mQuery.c:153 -1
     (nil))

(insn 114 113 115 (set (reg:DI 5 di)
        (reg:DI 114)) mQuery.c:153 -1
     (nil))

(call_insn 115 114 116 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:153 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 116 115 0 (set (reg:XF 80 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:153 -1
     (nil))

;; config_3(D)->f_lvl[1] = _24;

(insn 117 116 118 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:153 -1
     (nil))

(insn 118 117 0 (set (mem/j:XF (plus:DI (reg/f:DI 115)
                (const_int 176 [0xb0])) [0 config_3(D)->f_lvl+16 S16 A128])
        (reg:XF 80 [ D.3717 ])) mQuery.c:153 -1
     (nil))

;; _25 = _find_value_string (config_file_1(D), "geom");

(insn 119 118 120 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:154 -1
     (nil))

(insn 120 119 121 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f873478aed8 *.LC31>)) mQuery.c:154 -1
     (nil))

(insn 121 120 122 (set (reg:DI 5 di)
        (reg:DI 116)) mQuery.c:154 -1
     (nil))

(call_insn 122 121 123 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:154 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 123 122 0 (set (reg:XF 81 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:154 -1
     (nil))

;; _26 = (int) _25;

(insn 124 123 0 (parallel [
            (set (reg:SI 82 [ D.3718 ])
                (fix:SI (reg:XF 81 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:154 -1
     (nil))

;; config_3(D)->geom = _26;

(insn 125 124 126 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:154 -1
     (nil))

(insn 126 125 0 (set (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 272 [0x110])) [0 config_3(D)->geom+0 S4 A128])
        (reg:SI 82 [ D.3718 ])) mQuery.c:154 -1
     (nil))

;; _27 = _find_value_string (config_file_1(D), "sig_V");

(insn 127 126 128 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:155 -1
     (nil))

(insn 128 127 129 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8734794000 *.LC32>)) mQuery.c:155 -1
     (nil))

(insn 129 128 130 (set (reg:DI 5 di)
        (reg:DI 118)) mQuery.c:155 -1
     (nil))

(call_insn 130 129 131 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:155 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 131 130 0 (set (reg:XF 83 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:155 -1
     (nil))

;; config_3(D)->sig_V = _27;

(insn 132 131 133 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:155 -1
     (nil))

(insn 133 132 0 (set (mem/j:XF (plus:DI (reg/f:DI 119)
                (const_int 288 [0x120])) [0 config_3(D)->sig_V+0 S16 A128])
        (reg:XF 83 [ D.3717 ])) mQuery.c:155 -1
     (nil))

;; _28 = 1;

(insn 134 133 0 (set (reg:SI 84 [ D.3718 ])
        (const_int 1 [0x1])) mQuery.c:156 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 135 134 136 68 "" [0 uses])

(note 136 135 0 NOTE_INSN_BASIC_BLOCK)

;; return _28;

(insn 137 136 138 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ D.3718 ])) mQuery.c:156 -1
     (nil))

(jump_insn 138 137 139 (set (pc)
        (label_ref 0)) mQuery.c:156 -1
     (nil))

(barrier 139 138 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:137 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:137 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:139 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f873478a5f0 *.LC16>)) mQuery.c:139 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:139 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:139 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:XF 59 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:139 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:139 -1
     (nil))
(insn 13 12 14 2 (set (mem/j:XF (plus:DI (reg/f:DI 87)
                (const_int 16 [0x10])) [0 config_3(D)->max_ang+0 S16 A128])
        (reg:XF 59 [ D.3717 ])) mQuery.c:139 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:140 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f873478a688 *.LC17>)) mQuery.c:140 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 88)) mQuery.c:140 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:140 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:XF 60 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:140 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 61 [ D.3718 ])
                (fix:SI (reg:XF 60 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:140 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:140 -1
     (nil))
(insn 21 20 22 2 (set (mem/j:SI (plus:DI (reg/f:DI 89)
                (const_int 32 [0x20])) [0 config_3(D)->nsim+0 S4 A128])
        (reg:SI 61 [ D.3718 ])) mQuery.c:140 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:141 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f873478a720 *.LC18>)) mQuery.c:141 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:141 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:141 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:XF 62 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:141 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:141 -1
     (nil))
(insn 28 27 29 2 (set (mem/j:XF (plus:DI (reg/f:DI 91)
                (const_int 64 [0x40])) [0 config_3(D)->direct_thr+0 S16 A128])
        (reg:XF 62 [ D.3717 ])) mQuery.c:141 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:142 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f873478a7b8 *.LC19>)) mQuery.c:142 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 92)) mQuery.c:142 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:142 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg:XF 63 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:142 -1
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:142 -1
     (nil))
(insn 35 34 36 2 (set (mem/j:XF (plus:DI (reg/f:DI 93)
                (const_int 80 [0x50])) [0 config_3(D)->xdelay+0 S16 A128])
        (reg:XF 63 [ D.3717 ])) mQuery.c:142 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:143 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f873478a850 *.LC20>)) mQuery.c:143 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:143 -1
     (nil))
(call_insn 39 38 40 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:143 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 40 39 41 2 (set (reg:XF 64 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:143 -1
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:143 -1
     (nil))
(insn 42 41 43 2 (set (mem/j:XF (plus:DI (reg/f:DI 95)
                (const_int 96 [0x60])) [0 config_3(D)->pdelay+0 S16 A128])
        (reg:XF 64 [ D.3717 ])) mQuery.c:143 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:144 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f873478a8e8 *.LC21>)) mQuery.c:144 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 96)) mQuery.c:144 -1
     (nil))
(call_insn 46 45 47 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:144 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 47 46 48 2 (set (reg:XF 65 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:144 -1
     (nil))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 66 [ D.3718 ])
                (fix:SI (reg:XF 65 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:144 -1
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:144 -1
     (nil))
(insn 50 49 51 2 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 112 [0x70])) [0 config_3(D)->laplacian_vel+0 S4 A128])
        (reg:SI 66 [ D.3718 ])) mQuery.c:144 -1
     (nil))
(insn 51 50 52 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:145 -1
     (nil))
(insn 52 51 53 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f873478a980 *.LC22>)) mQuery.c:145 -1
     (nil))
(insn 53 52 54 2 (set (reg:DI 5 di)
        (reg:DI 98)) mQuery.c:145 -1
     (nil))
(call_insn 54 53 55 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:145 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 55 54 56 2 (set (reg:XF 67 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:145 -1
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg:SI 68 [ D.3718 ])
                (fix:SI (reg:XF 67 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:145 -1
     (nil))
(insn 57 56 58 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:145 -1
     (nil))
(insn 58 57 59 2 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 116 [0x74])) [0 config_3(D)->Nm_shock+0 S4 A32])
        (reg:SI 68 [ D.3718 ])) mQuery.c:145 -1
     (nil))
(insn 59 58 60 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:146 -1
     (nil))
(insn 60 59 61 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f873478aa18 *.LC23>)) mQuery.c:146 -1
     (nil))
(insn 61 60 62 2 (set (reg:DI 5 di)
        (reg:DI 100)) mQuery.c:146 -1
     (nil))
(call_insn 62 61 63 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:146 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 2 (set (reg:XF 69 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:146 -1
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:146 -1
     (nil))
(insn 65 64 66 2 (set (mem/j:XF (plus:DI (reg/f:DI 101)
                (const_int 144 [0x90])) [0 config_3(D)->radius+0 S16 A128])
        (reg:XF 69 [ D.3717 ])) mQuery.c:146 -1
     (nil))
(insn 66 65 67 2 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:147 -1
     (nil))
(insn 67 66 68 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f873478aab0 *.LC24>)) mQuery.c:147 -1
     (nil))
(insn 68 67 69 2 (set (reg:DI 5 di)
        (reg:DI 102)) mQuery.c:147 -1
     (nil))
(call_insn 69 68 70 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:147 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 70 69 71 2 (set (reg:XF 70 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:147 -1
     (nil))
(insn 71 70 72 2 (parallel [
            (set (reg:SI 71 [ D.3718 ])
                (fix:SI (reg:XF 70 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:147 -1
     (nil))
(insn 72 71 73 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:147 -1
     (nil))
(insn 73 72 74 2 (set (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 192 [0xc0])) [0 config_3(D)->t_w+0 S4 A128])
        (reg:SI 71 [ D.3718 ])) mQuery.c:147 -1
     (nil))
(insn 74 73 75 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:148 -1
     (nil))
(insn 75 74 76 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f873478ab48 *.LC25>)) mQuery.c:148 -1
     (nil))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 104)) mQuery.c:148 -1
     (nil))
(call_insn 77 76 78 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:148 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 2 (set (reg:XF 72 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:148 -1
     (nil))
(insn 79 78 80 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:148 -1
     (nil))
(insn 80 79 81 2 (set (mem/j:XF (plus:DI (reg/f:DI 105)
                (const_int 208 [0xd0])) [0 config_3(D)->t_i+0 S16 A128])
        (reg:XF 72 [ D.3717 ])) mQuery.c:148 -1
     (nil))
(insn 81 80 82 2 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:149 -1
     (nil))
(insn 82 81 83 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f873478abe0 *.LC26>)) mQuery.c:149 -1
     (nil))
(insn 83 82 84 2 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:149 -1
     (nil))
(call_insn 84 83 85 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:149 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 2 (set (reg:XF 73 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:149 -1
     (nil))
(insn 86 85 87 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:149 -1
     (nil))
(insn 87 86 88 2 (set (mem/j:XF (plus:DI (reg/f:DI 107)
                (const_int 224 [0xe0])) [0 config_3(D)->t_r+0 S16 A128])
        (reg:XF 73 [ D.3717 ])) mQuery.c:149 -1
     (nil))
(insn 88 87 89 2 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:150 -1
     (nil))
(insn 89 88 90 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f873478ac78 *.LC27>)) mQuery.c:150 -1
     (nil))
(insn 90 89 91 2 (set (reg:DI 5 di)
        (reg:DI 108)) mQuery.c:150 -1
     (nil))
(call_insn 91 90 92 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:150 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 2 (set (reg:XF 74 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:150 -1
     (nil))
(insn 93 92 94 2 (parallel [
            (set (reg:SI 75 [ D.3718 ])
                (fix:SI (reg:XF 74 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:150 -1
     (nil))
(insn 94 93 95 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:150 -1
     (nil))
(insn 95 94 96 2 (set (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 240 [0xf0])) [0 config_3(D)->shortest_path+0 S4 A128])
        (reg:SI 75 [ D.3718 ])) mQuery.c:150 -1
     (nil))
(insn 96 95 97 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:151 -1
     (nil))
(insn 97 96 98 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f873478ad10 *.LC28>)) mQuery.c:151 -1
     (nil))
(insn 98 97 99 2 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:151 -1
     (nil))
(call_insn 99 98 100 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:151 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 2 (set (reg:XF 76 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:151 -1
     (nil))
(insn 101 100 102 2 (parallel [
            (set (reg:SI 77 [ D.3718 ])
                (fix:SI (reg:XF 76 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:151 -1
     (nil))
(insn 102 101 103 2 (set (reg:XF 78 [ D.3717 ])
        (float:XF (reg:SI 77 [ D.3718 ]))) mQuery.c:151 -1
     (nil))
(insn 103 102 104 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:151 -1
     (nil))
(insn 104 103 105 2 (set (mem/j:XF (plus:DI (reg/f:DI 111)
                (const_int 256 [0x100])) [0 config_3(D)->d_thr+0 S16 A128])
        (reg:XF 78 [ D.3717 ])) mQuery.c:151 -1
     (nil))
(insn 105 104 106 2 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:152 -1
     (nil))
(insn 106 105 107 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f873478ada8 *.LC29>)) mQuery.c:152 -1
     (nil))
(insn 107 106 108 2 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:152 -1
     (nil))
(call_insn 108 107 109 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:152 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 109 108 110 2 (set (reg:XF 79 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:152 -1
     (nil))
(insn 110 109 111 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:152 -1
     (nil))
(insn 111 110 112 2 (set (mem/j:XF (plus:DI (reg/f:DI 113)
                (const_int 160 [0xa0])) [0 config_3(D)->f_lvl+0 S16 A128])
        (reg:XF 79 [ D.3717 ])) mQuery.c:152 -1
     (nil))
(insn 112 111 113 2 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:153 -1
     (nil))
(insn 113 112 114 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f873478ae40 *.LC30>)) mQuery.c:153 -1
     (nil))
(insn 114 113 115 2 (set (reg:DI 5 di)
        (reg:DI 114)) mQuery.c:153 -1
     (nil))
(call_insn 115 114 116 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:153 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 2 (set (reg:XF 80 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:153 -1
     (nil))
(insn 117 116 118 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:153 -1
     (nil))
(insn 118 117 119 2 (set (mem/j:XF (plus:DI (reg/f:DI 115)
                (const_int 176 [0xb0])) [0 config_3(D)->f_lvl+16 S16 A128])
        (reg:XF 80 [ D.3717 ])) mQuery.c:153 -1
     (nil))
(insn 119 118 120 2 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:154 -1
     (nil))
(insn 120 119 121 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f873478aed8 *.LC31>)) mQuery.c:154 -1
     (nil))
(insn 121 120 122 2 (set (reg:DI 5 di)
        (reg:DI 116)) mQuery.c:154 -1
     (nil))
(call_insn 122 121 123 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:154 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 123 122 124 2 (set (reg:XF 81 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:154 -1
     (nil))
(insn 124 123 125 2 (parallel [
            (set (reg:SI 82 [ D.3718 ])
                (fix:SI (reg:XF 81 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:154 -1
     (nil))
(insn 125 124 126 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:154 -1
     (nil))
(insn 126 125 127 2 (set (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 272 [0x110])) [0 config_3(D)->geom+0 S4 A128])
        (reg:SI 82 [ D.3718 ])) mQuery.c:154 -1
     (nil))
(insn 127 126 128 2 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:155 -1
     (nil))
(insn 128 127 129 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8734794000 *.LC32>)) mQuery.c:155 -1
     (nil))
(insn 129 128 130 2 (set (reg:DI 5 di)
        (reg:DI 118)) mQuery.c:155 -1
     (nil))
(call_insn 130 129 131 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:155 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 131 130 132 2 (set (reg:XF 83 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:155 -1
     (nil))
(insn 132 131 133 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:155 -1
     (nil))
(insn 133 132 134 2 (set (mem/j:XF (plus:DI (reg/f:DI 119)
                (const_int 288 [0x120])) [0 config_3(D)->sig_V+0 S16 A128])
        (reg:XF 83 [ D.3717 ])) mQuery.c:155 -1
     (nil))
(insn 134 133 137 2 (set (reg:SI 84 [ D.3718 ])
        (const_int 1 [0x1])) mQuery.c:156 -1
     (nil))
(insn 137 134 141 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ D.3718 ])) mQuery.c:156 -1
     (nil))
(insn 141 137 144 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) mQuery.c:157 -1
     (nil))
(insn 144 141 0 2 (use (reg/i:SI 0 ax)) mQuery.c:157 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_boundary (get_boundary, funcdef_no=7, decl_uid=1763, cgraph_uid=7)

get_boundary (char * bound_file, struct CONF_t * config)
{
  int j;
  int i;
  int Nbound;
  char c[50000];
  struct FILE * rstream;
  int D.3607;
  long double D.3606;
  long double * D.3605;
  long double * D.3604;
  long double * * D.3603;
  sizetype D.3602;
  long unsigned int D.3601;
  long unsigned int D.3600;
  int D.3599;
  long double * * D.3598;
  long double D.3597;
  long double * D.3596;
  long double * D.3595;
  long double * * D.3594;
  long double D.3592;
  long double * D.3591;
  long double * * D.3590;
  sizetype D.3589;
  long unsigned int D.3588;
  long unsigned int D.3587;
  int D.3586;
  long double * * D.3585;
  long double D.3584;
  long double * D.3583;
  long double * * D.3582;
  char * D.3578;
  long double D.3577;
  double D.3576;
  char * D.3575;
  long double * D.3574;
  long double * D.3573;
  long double * * D.3572;
  long unsigned int D.3571;
  long unsigned int D.3570;
  long double * * D.3569;
  char D.3568;
  char D.3566;
  long double D.3565;
  double D.3564;
  long double * D.3563;
  long double * * D.3562;
  long unsigned int D.3561;
  long unsigned int D.3560;
  long double * * D.3559;
  long double * * D.3558;
  char * D.3557;
  char * _7;
  long double * * _11;
  char * _13;
  long double * * _14;
  long unsigned int _15;
  long unsigned int _16;
  long double * * _17;
  long double * _18;
  double _19;
  long double _20;
  char _22;
  char _23;
  long double * * _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long double * _30;
  char * _32;
  double _33;
  long double _34;
  long double * * _36;
  long double * _37;
  long double _38;
  long double * * _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  sizetype _43;
  long double * * _44;
  long double * _45;
  long double _46;
  long double * * _47;
  long double * _48;
  long double * _49;
  long double _50;
  long double * * _51;
  int _52;
  long unsigned int _53;
  long unsigned int _54;
  sizetype _55;
  long double * * _56;
  long double * _57;
  long double * _58;
  long double _59;
  int _60;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_5 = fopen (bound_file_4(D), "r");
  if (rstream_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("BUG in Bound File\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  Nbound_6 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  Nbound_8 = Nbound_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # Nbound_1 = PHI <Nbound_6(4), Nbound_8(5)>
  _7 = fgets (&c, 50000, rstream_5);
  if (_7 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  config_9(D)->Nbound = Nbound_1;
  fclose (rstream_5);
  rstream_10 = fopen (bound_file_4(D), "r");
  _11 = falloc_matrix (Nbound_1, 2);
  config_9(D)->bound = _11;
  i_12 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 8, loop depth 0
;;    pred:       14
  _14 = config_9(D)->bound;
  _15 = (long unsigned int) i_2;
  _16 = _15 * 8;
  _17 = _14 + _16;
  _18 = *_17;
  _19 = atof (&c);
  _20 = (long double) _19;
  *_18 = _20;
  j_21 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       11
  j_24 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_3 = PHI <j_21(8), j_24(9)>
  _22 = c[j_3];
  if (_22 != 9)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _23 = c[j_3];
  if (_23 != 32)
    goto <bb 9>;
  else
    goto <bb 12>;
;;    succ:       9
;;                12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  _25 = config_9(D)->bound;
  _26 = (long unsigned int) i_2;
  _27 = _26 * 8;
  _28 = _25 + _27;
  _29 = *_28;
  _30 = _29 + 16;
  j_31 = j_3 + 1;
  _32 = &c[j_31];
  _33 = atof (_32);
  _34 = (long double) _33;
  *_30 = _34;
  i_35 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       7
;;                12
  # i_2 = PHI <i_12(7), i_35(12)>
  _13 = fgets (&c, 50000, rstream_10);
  if (_13 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  if (i_2 < Nbound_1)
    goto <bb 8>;
  else
    goto <bb 15>;
;;    succ:       8
;;                15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  fclose (rstream_10);
  _36 = config_9(D)->bound;
  _37 = *_36;
  _38 = *_37;
  _39 = config_9(D)->bound;
  _40 = config_9(D)->Nbound;
  _41 = (long unsigned int) _40;
  _42 = _41 * 8;
  _43 = _42 + 18446744073709551608;
  _44 = _39 + _43;
  _45 = *_44;
  _46 = *_45;
  if (_38 != _46)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  _47 = config_9(D)->bound;
  _48 = *_47;
  _49 = _48 + 16;
  _50 = *_49;
  _51 = config_9(D)->bound;
  _52 = config_9(D)->Nbound;
  _53 = (long unsigned int) _52;
  _54 = _53 * 8;
  _55 = _54 + 18446744073709551608;
  _56 = _51 + _55;
  _57 = *_56;
  _58 = _57 + 16;
  _59 = *_58;
  if (_50 != _59)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       15
;;                16
  BuG ("Please last point of the Boundary as to be the same of the first\n");
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  _60 = 1;
  c ={v} {CLOBBER};
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L17>:
  return _60;
;;    succ:       EXIT

}



Partition map 

Partition 1 (Nbound_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (j_3 - 3 )
Partition 4 (bound_file_4(D) - 4 )
Partition 5 (rstream_5 - 5 )
Partition 6 (Nbound_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (Nbound_8 - 8 )
Partition 9 (config_9(D) - 9 )
Partition 10 (rstream_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (i_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (j_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (j_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (j_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (i_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )


Partition map 

Partition 0 (Nbound_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (bound_file_4(D) - 4 )
Partition 4 (rstream_5 - 5 )
Partition 5 (Nbound_6 - 6 )
Partition 6 (Nbound_8 - 8 )
Partition 7 (config_9(D) - 9 )
Partition 8 (rstream_10 - 10 )
Partition 9 (i_12 - 12 )
Partition 10 (j_21 - 21 )
Partition 11 (j_24 - 24 )
Partition 12 (j_31 - 31 )
Partition 13 (i_35 - 35 )


Live on entry to BB2 : bound_file_4(D)  config_9(D)  

Live on entry to BB3 : bound_file_4(D)  rstream_5  config_9(D)  

Live on entry to BB4 : bound_file_4(D)  rstream_5  config_9(D)  

Live on entry to BB5 : Nbound_1  bound_file_4(D)  rstream_5  config_9(D)  

Live on entry to BB6 : bound_file_4(D)  rstream_5  config_9(D)  

Live on entry to BB7 : Nbound_1  bound_file_4(D)  rstream_5  config_9(D)  

Live on entry to BB8 : Nbound_1  i_2  config_9(D)  rstream_10  

Live on entry to BB9 : Nbound_1  i_2  j_3  config_9(D)  rstream_10  

Live on entry to BB10 : Nbound_1  i_2  config_9(D)  rstream_10  

Live on entry to BB11 : Nbound_1  i_2  j_3  config_9(D)  rstream_10  

Live on entry to BB12 : Nbound_1  i_2  j_3  config_9(D)  rstream_10  

Live on entry to BB13 : Nbound_1  config_9(D)  rstream_10  

Live on entry to BB14 : Nbound_1  i_2  config_9(D)  rstream_10  

Live on entry to BB15 : config_9(D)  rstream_10  

Live on entry to BB16 : config_9(D)  

Live on entry to BB17 : 

Live on entry to BB18 : 

Live on entry to BB19 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) Nbound_1 <-> Nbound_6
(2147483646) Nbound_1 <-> Nbound_8
(2147483646) i_2 <-> i_12
(2147483646) i_2 <-> i_35
(2147483646) j_3 <-> j_21
(2147483646) j_3 <-> j_24
(2147483646) j_3 <-> j_31
(2147483646) rstream_5 <-> rstream_10

Partition map 

Partition 0 (Nbound_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (bound_file_4(D) - 4 )
Partition 4 (rstream_5 - 5 )
Partition 5 (Nbound_6 - 6 )
Partition 6 (Nbound_8 - 8 )
Partition 7 (config_9(D) - 9 )
Partition 8 (rstream_10 - 10 )
Partition 9 (i_12 - 12 )
Partition 10 (j_21 - 21 )
Partition 11 (j_24 - 24 )
Partition 12 (j_31 - 31 )
Partition 13 (i_35 - 35 )

Coalesce list: (1)Nbound_1 & (6)Nbound_6 [map: 0, 5] : Success -> 0
Coalesce list: (1)Nbound_1 & (8)Nbound_8 [map: 0, 6] : Success -> 0
Coalesce list: (2)i_2 & (12)i_12 [map: 1, 9] : Success -> 1
Coalesce list: (2)i_2 & (35)i_35 [map: 1, 13] : Success -> 1
Coalesce list: (3)j_3 & (21)j_21 [map: 2, 10] : Success -> 2
Coalesce list: (3)j_3 & (24)j_24 [map: 2, 11] : Success -> 2
Coalesce list: (3)j_3 & (31)j_31 [map: 2, 12] : Success -> 2
Coalesce list: (5)rstream_5 & (10)rstream_10 [map: 4, 8] : Success -> 4
Coalesce list: (2)i_2 & (35)i_2: Already Coalesced.
Coalesce list: (2)i_2 & (12)i_2: Already Coalesced.
Coalesce list: (3)j_3 & (24)j_3: Already Coalesced.
Coalesce list: (3)j_3 & (21)j_3: Already Coalesced.
Coalesce list: (1)Nbound_1 & (8)Nbound_1: Already Coalesced.
Coalesce list: (1)Nbound_1 & (6)Nbound_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (Nbound_1 - 1 6 8 )
Partition 1 (i_2 - 2 12 35 )
Partition 2 (j_3 - 3 21 24 31 )
Partition 3 (bound_file_4(D) - 4 )
Partition 4 (rstream_5 - 5 10 )
Partition 5 (_7 - 7 )
Partition 6 (config_9(D) - 9 )
Partition 7 (_11 - 11 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (_18 - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_27 - 27 )
Partition 21 (_28 - 28 )
Partition 22 (_29 - 29 )
Partition 23 (_30 - 30 )
Partition 24 (_32 - 32 )
Partition 25 (_33 - 33 )
Partition 26 (_34 - 34 )
Partition 27 (_36 - 36 )
Partition 28 (_37 - 37 )
Partition 29 (_38 - 38 )
Partition 30 (_39 - 39 )
Partition 31 (_40 - 40 )
Partition 32 (_41 - 41 )
Partition 33 (_42 - 42 )
Partition 34 (_43 - 43 )
Partition 35 (_44 - 44 )
Partition 36 (_45 - 45 )
Partition 37 (_46 - 46 )
Partition 38 (_47 - 47 )
Partition 39 (_48 - 48 )
Partition 40 (_49 - 49 )
Partition 41 (_50 - 50 )
Partition 42 (_51 - 51 )
Partition 43 (_52 - 52 )
Partition 44 (_53 - 53 )
Partition 45 (_54 - 54 )
Partition 46 (_55 - 55 )
Partition 47 (_56 - 56 )
Partition 48 (_57 - 57 )
Partition 49 (_58 - 58 )
Partition 50 (_59 - 59 )
Partition 51 (_60 - 60 )

get_boundary (char * bound_file, struct CONF_t * config)
{
  int j;
  int i;
  int Nbound;
  char c[50000];
  struct FILE * rstream;
  int D.3607;
  long double D.3606;
  long double * D.3605;
  long double * D.3604;
  long double * * D.3603;
  sizetype D.3602;
  long unsigned int D.3601;
  long unsigned int D.3600;
  int D.3599;
  long double * * D.3598;
  long double D.3597;
  long double * D.3596;
  long double * D.3595;
  long double * * D.3594;
  long double D.3592;
  long double * D.3591;
  long double * * D.3590;
  sizetype D.3589;
  long unsigned int D.3588;
  long unsigned int D.3587;
  int D.3586;
  long double * * D.3585;
  long double D.3584;
  long double * D.3583;
  long double * * D.3582;
  char * D.3578;
  long double D.3577;
  double D.3576;
  char * D.3575;
  long double * D.3574;
  long double * D.3573;
  long double * * D.3572;
  long unsigned int D.3571;
  long unsigned int D.3570;
  long double * * D.3569;
  char D.3568;
  char D.3566;
  long double D.3565;
  double D.3564;
  long double * D.3563;
  long double * * D.3562;
  long unsigned int D.3561;
  long unsigned int D.3560;
  long double * * D.3559;
  long double * * D.3558;
  char * D.3557;
  char * _7;
  long double * * _11;
  char * _13;
  long double * * _14;
  long unsigned int _15;
  long unsigned int _16;
  long double * * _17;
  long double * _18;
  double _19;
  long double _20;
  char _22;
  char _23;
  long double * * _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long double * _30;
  char * _32;
  double _33;
  long double _34;
  long double * * _36;
  long double * _37;
  long double _38;
  long double * * _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  sizetype _43;
  long double * * _44;
  long double * _45;
  long double _46;
  long double * * _47;
  long double * _48;
  long double * _49;
  long double _50;
  long double * * _51;
  int _52;
  long unsigned int _53;
  long unsigned int _54;
  sizetype _55;
  long double * * _56;
  long double * _57;
  long double * _58;
  long double _59;
  int _60;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_5 = fopen (bound_file_4(D), "r");
  if (rstream_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("BUG in Bound File\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  Nbound_6 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  Nbound_8 = Nbound_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # Nbound_1 = PHI <Nbound_6(4), Nbound_8(5)>
  _7 = fgets (&c, 50000, rstream_5);
  if (_7 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  config_9(D)->Nbound = Nbound_1;
  fclose (rstream_5);
  rstream_10 = fopen (bound_file_4(D), "r");
  _11 = falloc_matrix (Nbound_1, 2);
  config_9(D)->bound = _11;
  i_12 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 8, loop depth 0
;;    pred:       14
  _14 = config_9(D)->bound;
  _15 = (long unsigned int) i_2;
  _16 = _15 * 8;
  _17 = _14 + _16;
  _18 = *_17;
  _19 = atof (&c);
  _20 = (long double) _19;
  *_18 = _20;
  j_21 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       11
  j_24 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_3 = PHI <j_21(8), j_24(9)>
  _22 = c[j_3];
  if (_22 != 9)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _23 = c[j_3];
  if (_23 != 32)
    goto <bb 9>;
  else
    goto <bb 12>;
;;    succ:       9
;;                12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  _25 = config_9(D)->bound;
  _26 = (long unsigned int) i_2;
  _27 = _26 * 8;
  _28 = _25 + _27;
  _29 = *_28;
  _30 = _29 + 16;
  j_31 = j_3 + 1;
  _32 = &c[j_31];
  _33 = atof (_32);
  _34 = (long double) _33;
  *_30 = _34;
  i_35 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       7
;;                12
  # i_2 = PHI <i_12(7), i_35(12)>
  _13 = fgets (&c, 50000, rstream_10);
  if (_13 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  if (i_2 < Nbound_1)
    goto <bb 8>;
  else
    goto <bb 15>;
;;    succ:       8
;;                15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  fclose (rstream_10);
  _36 = config_9(D)->bound;
  _37 = *_36;
  _38 = *_37;
  _39 = config_9(D)->bound;
  _40 = config_9(D)->Nbound;
  _41 = (long unsigned int) _40;
  _42 = _41 * 8;
  _43 = _42 + 18446744073709551608;
  _44 = _39 + _43;
  _45 = *_44;
  _46 = *_45;
  if (_38 != _46)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  _47 = config_9(D)->bound;
  _48 = *_47;
  _49 = _48 + 16;
  _50 = *_49;
  _51 = config_9(D)->bound;
  _52 = config_9(D)->Nbound;
  _53 = (long unsigned int) _52;
  _54 = _53 * 8;
  _55 = _54 + 18446744073709551608;
  _56 = _51 + _55;
  _57 = *_56;
  _58 = _57 + 16;
  _59 = *_58;
  if (_50 != _59)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       15
;;                16
  BuG ("Please last point of the Boundary as to be the same of the first\n");
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  _60 = 1;
  c ={v} {CLOBBER};
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L17>:
  return _60;
;;    succ:       EXIT

}


Partition 4: size 50000 align 16
	c
Partition 3: size 8 align 8
	rstream_5
Partition 2: size 4 align 4
	j_3
Partition 1: size 4 align 4
	i_2
Partition 0: size 4 align 4
	Nbound_1

;; Generating RTL for gimple basic block 2

;; rstream_5 = fopen (bound_file_4(D), "r");

(insn 8 7 9 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:160 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:160 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:160 -1
     (nil))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:160 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 12 11 13 (set (reg:DI 107)
        (reg:DI 0 ax)) mQuery.c:160 -1
     (nil))

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 107)) mQuery.c:160 -1
     (nil))

;; if (rstream_5 == 0B)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:162 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:162 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("BUG in Bound File\n");

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8734794980 *.LC33>)) mQuery.c:162 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 70 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; Nbound_6 = 0;

(insn 21 20 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
        (const_int 0 [0])) mQuery.c:165 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Nbound_8 = Nbound_1 + 1;

(insn 25 24 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 26 25 27 71 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = fgets (&c, 50000, rstream_5);

(insn 28 27 29 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:165 -1
     (nil))

(insn 29 28 30 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 -1
     (nil))

(insn 30 29 31 (set (reg:DI 1 dx)
        (reg:DI 108)) mQuery.c:165 -1
     (nil))

(insn 31 30 32 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:165 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (reg:DI 109)) mQuery.c:165 -1
     (nil))

(call_insn 33 32 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:165 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 34 33 0 (set (reg/f:DI 59 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:165 -1
     (nil))

;; if (_7 != 0B)

(insn 36 34 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:165 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mQuery.c:165 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; config_9(D)->Nbound = Nbound_1;

(insn 39 38 40 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:167 -1
     (nil))

(insn 40 39 41 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:167 -1
     (nil))

(insn 41 40 0 (set (mem/j:SI (reg/f:DI 110) [0 config_9(D)->Nbound+0 S4 A128])
        (reg:SI 111)) mQuery.c:167 -1
     (nil))

;; fclose (rstream_5);

(insn 42 41 43 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:168 -1
     (nil))

(insn 43 42 44 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:168 -1
     (nil))

(call_insn 44 43 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:168 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; rstream_10 = fopen (bound_file_4(D), "r");

(insn 45 44 46 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:170 -1
     (nil))

(insn 46 45 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:170 -1
     (nil))

(insn 47 46 48 (set (reg:DI 5 di)
        (reg:DI 113)) mQuery.c:170 -1
     (nil))

(call_insn 48 47 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:170 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 49 48 50 (set (reg:DI 114)
        (reg:DI 0 ax)) mQuery.c:170 -1
     (nil))

(insn 50 49 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 114)) mQuery.c:170 -1
     (nil))

;; _11 = falloc_matrix (Nbound_1, 2);

(insn 51 50 52 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:172 -1
     (nil))

(insn 52 51 53 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:172 -1
     (nil))

(insn 53 52 54 (set (reg:SI 5 di)
        (reg:SI 115)) mQuery.c:172 -1
     (nil))

(call_insn 54 53 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:172 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 55 54 0 (set (reg/f:DI 60 [ D.3737 ])
        (reg:DI 0 ax)) mQuery.c:172 -1
     (nil))

;; config_9(D)->bound = _11;

(insn 56 55 57 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:172 -1
     (nil))

(insn 57 56 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])
        (reg/f:DI 60 [ D.3737 ])) mQuery.c:172 -1
     (nil))

;; i_12 = 0;

(insn 58 57 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _14 = config_9(D)->bound;

(insn 62 61 63 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:174 -1
     (nil))

(insn 63 62 0 (set (reg/f:DI 62 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:174 -1
     (nil))

;; _15 = (long unsigned int) i_2;

(insn 64 63 65 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:174 -1
     (nil))

(insn 65 64 0 (set (reg:DI 63 [ D.3738 ])
        (sign_extend:DI (reg:SI 118))) mQuery.c:174 -1
     (nil))

;; _16 = _15 * 8;

(insn 66 65 0 (parallel [
            (set (reg:DI 64 [ D.3738 ])
                (ashift:DI (reg:DI 63 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))

;; _17 = _14 + _16;

(insn 67 66 0 (parallel [
            (set (reg/f:DI 65 [ D.3737 ])
                (plus:DI (reg/f:DI 62 [ D.3737 ])
                    (reg:DI 64 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))

;; _18 = *_17;

(insn 68 67 0 (set (reg/f:DI 66 [ D.3739 ])
        (mem/f:DI (reg/f:DI 65 [ D.3737 ]) [0 *_17+0 S8 A64])) mQuery.c:174 -1
     (nil))

;; _19 = atof (&c);

(insn 69 68 70 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))

(insn 70 69 71 (set (reg:DI 5 di)
        (reg:DI 119)) mQuery.c:174 -1
     (nil))

(call_insn/i 71 70 72 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 72 71 0 (set (reg:DF 67 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:174 -1
     (nil))

;; _20 = (long double) _19;

(insn 73 72 0 (set (reg:XF 68 [ D.3741 ])
        (float_extend:XF (reg:DF 67 [ D.3740 ]))) mQuery.c:174 -1
     (nil))

;; *_18 = _20;

(insn 74 73 0 (set (mem:XF (reg/f:DI 66 [ D.3739 ]) [0 *_18+0 S16 A128])
        (reg:XF 68 [ D.3741 ])) mQuery.c:174 -1
     (nil))

;; j_21 = 0;

(insn 75 74 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:175 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; j_24 = j_3 + 1;

(insn 79 78 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:175 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 80 79 81 74 "" [0 uses])

(note 81 80 0 NOTE_INSN_BASIC_BLOCK)

;; _22 = c[j_3];

(insn 82 81 83 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 -1
     (nil))

(insn 83 82 84 (set (reg:DI 120)
        (sign_extend:DI (reg:SI 121))) mQuery.c:175 -1
     (nil))

(insn 84 83 0 (set (reg:QI 69 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 120))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 -1
     (nil))

;; if (_22 != 9)

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3742 ])
            (const_int 9 [0x9]))) mQuery.c:175 -1
     (nil))

(jump_insn 86 85 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:175 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _23 = c[j_3];

(insn 88 87 89 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 -1
     (nil))

(insn 89 88 90 (set (reg:DI 122)
        (sign_extend:DI (reg:SI 123))) mQuery.c:175 -1
     (nil))

(insn 90 89 0 (set (reg:QI 70 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 122))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 -1
     (nil))

;; if (_23 != 32)

(insn 92 90 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3742 ])
            (const_int 32 [0x20]))) mQuery.c:175 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) mQuery.c:175 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 94 93 95 75 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; _25 = config_9(D)->bound;

(insn 96 95 97 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:176 -1
     (nil))

(insn 97 96 0 (set (reg/f:DI 71 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 124)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:176 -1
     (nil))

;; _26 = (long unsigned int) i_2;

(insn 98 97 99 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:176 -1
     (nil))

(insn 99 98 0 (set (reg:DI 72 [ D.3738 ])
        (sign_extend:DI (reg:SI 125))) mQuery.c:176 -1
     (nil))

;; _27 = _26 * 8;

(insn 100 99 0 (parallel [
            (set (reg:DI 73 [ D.3738 ])
                (ashift:DI (reg:DI 72 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

;; _28 = _25 + _27;

(insn 101 100 0 (parallel [
            (set (reg/f:DI 74 [ D.3737 ])
                (plus:DI (reg/f:DI 71 [ D.3737 ])
                    (reg:DI 73 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

;; _29 = *_28;

(insn 102 101 0 (set (reg/f:DI 75 [ D.3739 ])
        (mem/f:DI (reg/f:DI 74 [ D.3737 ]) [0 *_28+0 S8 A64])) mQuery.c:176 -1
     (nil))

;; _30 = _29 + 16;

(insn 103 102 0 (parallel [
            (set (reg/f:DI 76 [ D.3739 ])
                (plus:DI (reg/f:DI 75 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

;; j_31 = j_3 + 1;

(insn 104 103 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

;; _32 = &c[j_31];

(insn 105 104 106 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

(insn 106 105 107 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:176 -1
     (nil))

(insn 107 106 108 (set (reg:DI 127)
        (sign_extend:DI (reg:SI 128))) mQuery.c:176 -1
     (nil))

(insn 108 107 0 (parallel [
            (set (reg/f:DI 77 [ D.3736 ])
                (plus:DI (reg:DI 126)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))

;; _33 = atof (_32);

(insn 109 108 110 (set (reg:DI 5 di)
        (reg/f:DI 77 [ D.3736 ])) mQuery.c:176 -1
     (nil))

(call_insn/i 110 109 111 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:176 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 111 110 0 (set (reg:DF 78 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:176 -1
     (nil))

;; _34 = (long double) _33;

(insn 112 111 0 (set (reg:XF 79 [ D.3741 ])
        (float_extend:XF (reg:DF 78 [ D.3740 ]))) mQuery.c:176 -1
     (nil))

;; *_30 = _34;

(insn 113 112 0 (set (mem:XF (reg/f:DI 76 [ D.3739 ]) [0 *_30+0 S16 A128])
        (reg:XF 79 [ D.3741 ])) mQuery.c:176 -1
     (nil))

;; i_35 = i_2 + 1;

(insn 114 113 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 115 114 116 73 "" [0 uses])

(note 116 115 0 NOTE_INSN_BASIC_BLOCK)

;; _13 = fgets (&c, 50000, rstream_10);

(insn 117 116 118 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:173 -1
     (nil))

(insn 118 117 119 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 -1
     (nil))

(insn 119 118 120 (set (reg:DI 1 dx)
        (reg:DI 129)) mQuery.c:173 -1
     (nil))

(insn 120 119 121 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:173 -1
     (nil))

(insn 121 120 122 (set (reg:DI 5 di)
        (reg:DI 130)) mQuery.c:173 -1
     (nil))

(call_insn 122 121 123 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:173 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 123 122 0 (set (reg/f:DI 61 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:173 -1
     (nil))

;; if (_13 != 0B)

(insn 124 123 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:173 -1
     (nil))

(jump_insn 125 124 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; if (i_2 < Nbound_1)

(insn 128 126 129 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:173 -1
     (nil))

(insn 129 128 130 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 131)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32]))) mQuery.c:173 -1
     (nil))

(jump_insn 130 129 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) mQuery.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 131 130 132 77 "" [0 uses])

(note 132 131 0 NOTE_INSN_BASIC_BLOCK)

;; fclose (rstream_10);

(insn 133 132 134 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:179 -1
     (nil))

(insn 134 133 135 (set (reg:DI 5 di)
        (reg:DI 132)) mQuery.c:179 -1
     (nil))

(call_insn 135 134 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:179 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _36 = config_9(D)->bound;

(insn 136 135 137 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 137 136 0 (set (reg/f:DI 80 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _37 = *_36;

(insn 138 137 0 (set (reg/f:DI 81 [ D.3739 ])
        (mem/f:DI (reg/f:DI 80 [ D.3737 ]) [0 *_36+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _38 = *_37;

(insn 139 138 0 (set (reg:XF 82 [ D.3741 ])
        (mem:XF (reg/f:DI 81 [ D.3739 ]) [0 *_37+0 S16 A128])) mQuery.c:181 -1
     (nil))

;; _39 = config_9(D)->bound;

(insn 140 139 141 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 141 140 0 (set (reg/f:DI 83 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 134)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _40 = config_9(D)->Nbound;

(insn 142 141 143 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 143 142 0 (set (reg:SI 84 [ D.3743 ])
        (mem/j:SI (reg/f:DI 135) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 -1
     (nil))

;; _41 = (long unsigned int) _40;

(insn 144 143 0 (set (reg:DI 85 [ D.3738 ])
        (sign_extend:DI (reg:SI 84 [ D.3743 ]))) mQuery.c:181 -1
     (nil))

;; _42 = _41 * 8;

(insn 145 144 0 (parallel [
            (set (reg:DI 86 [ D.3738 ])
                (ashift:DI (reg:DI 85 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _43 = _42 + 18446744073709551608;

(insn 146 145 0 (parallel [
            (set (reg:DI 87 [ D.3744 ])
                (plus:DI (reg:DI 86 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _44 = _39 + _43;

(insn 147 146 0 (parallel [
            (set (reg/f:DI 88 [ D.3737 ])
                (plus:DI (reg/f:DI 83 [ D.3737 ])
                    (reg:DI 87 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _45 = *_44;

(insn 148 147 0 (set (reg/f:DI 89 [ D.3739 ])
        (mem/f:DI (reg/f:DI 88 [ D.3737 ]) [0 *_44+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _46 = *_45;

(insn 149 148 0 (set (reg:XF 90 [ D.3741 ])
        (mem:XF (reg/f:DI 89 [ D.3739 ]) [0 *_45+0 S16 A128])) mQuery.c:181 -1
     (nil))

;; if (_38 != _46)

(insn 150 149 151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 -1
     (nil))

(jump_insn 151 150 152 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:181 -1
     (nil))

(insn 152 151 153 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 -1
     (nil))

(jump_insn 153 152 0 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:181 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; _47 = config_9(D)->bound;

(insn 155 154 156 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 156 155 0 (set (reg/f:DI 91 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 136)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _48 = *_47;

(insn 157 156 0 (set (reg/f:DI 92 [ D.3739 ])
        (mem/f:DI (reg/f:DI 91 [ D.3737 ]) [0 *_47+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _49 = _48 + 16;

(insn 158 157 0 (parallel [
            (set (reg/f:DI 93 [ D.3739 ])
                (plus:DI (reg/f:DI 92 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _50 = *_49;

(insn 159 158 0 (set (reg:XF 94 [ D.3741 ])
        (mem:XF (reg/f:DI 93 [ D.3739 ]) [0 *_49+0 S16 A128])) mQuery.c:181 -1
     (nil))

;; _51 = config_9(D)->bound;

(insn 160 159 161 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 161 160 0 (set (reg/f:DI 95 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 137)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _52 = config_9(D)->Nbound;

(insn 162 161 163 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))

(insn 163 162 0 (set (reg:SI 96 [ D.3743 ])
        (mem/j:SI (reg/f:DI 138) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 -1
     (nil))

;; _53 = (long unsigned int) _52;

(insn 164 163 0 (set (reg:DI 97 [ D.3738 ])
        (sign_extend:DI (reg:SI 96 [ D.3743 ]))) mQuery.c:181 -1
     (nil))

;; _54 = _53 * 8;

(insn 165 164 0 (parallel [
            (set (reg:DI 98 [ D.3738 ])
                (ashift:DI (reg:DI 97 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _55 = _54 + 18446744073709551608;

(insn 166 165 0 (parallel [
            (set (reg:DI 99 [ D.3744 ])
                (plus:DI (reg:DI 98 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _56 = _51 + _55;

(insn 167 166 0 (parallel [
            (set (reg/f:DI 100 [ D.3737 ])
                (plus:DI (reg/f:DI 95 [ D.3737 ])
                    (reg:DI 99 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _57 = *_56;

(insn 168 167 0 (set (reg/f:DI 101 [ D.3739 ])
        (mem/f:DI (reg/f:DI 100 [ D.3737 ]) [0 *_56+0 S8 A64])) mQuery.c:181 -1
     (nil))

;; _58 = _57 + 16;

(insn 169 168 0 (parallel [
            (set (reg/f:DI 102 [ D.3739 ])
                (plus:DI (reg/f:DI 101 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))

;; _59 = *_58;

(insn 170 169 0 (set (reg:XF 103 [ D.3741 ])
        (mem:XF (reg/f:DI 102 [ D.3739 ]) [0 *_58+0 S16 A128])) mQuery.c:181 -1
     (nil))

;; if (_50 != _59)

(insn 171 170 172 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 -1
     (nil))

(jump_insn 172 171 173 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) mQuery.c:181 -1
     (nil))

(insn 173 172 174 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 -1
     (nil))

(jump_insn 174 173 175 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) mQuery.c:181 -1
     (nil))

(jump_insn 175 174 176 (set (pc)
        (label_ref 0)) mQuery.c:181 -1
     (nil))

(barrier 176 175 177)

(code_label 177 176 0 81 "" [0 uses])

;; Generating RTL for gimple basic block 17

;; 

(code_label 178 177 179 79 "" [0 uses])

(note 179 178 0 NOTE_INSN_BASIC_BLOCK)

;; BuG ("Please last point of the Boundary as to be the same of the first\n");

(insn 180 179 181 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8734794a18 *.LC34>)) mQuery.c:182 -1
     (nil))

(call_insn 181 180 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:182 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 18

;; 

(code_label 182 181 183 80 "" [0 uses])

(note 183 182 0 NOTE_INSN_BASIC_BLOCK)

;; _60 = 1;

(insn 184 183 0 (set (reg:SI 104 [ D.3743 ])
        (const_int 1 [0x1])) mQuery.c:184 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 19

;; <L17>:

(code_label 185 184 186 82 "" [0 uses])

(note 186 185 0 NOTE_INSN_BASIC_BLOCK)

;; return _60;

(insn 187 186 188 (set (reg:SI 105 [ <retval> ])
        (reg:SI 104 [ D.3743 ])) mQuery.c:184 -1
     (nil))

(jump_insn 188 187 189 (set (pc)
        (label_ref 0)) mQuery.c:184 -1
     (nil))

(barrier 189 188 0)
Purged non-fallthru edges from bb 25
deleting block 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 18->21 redirected to 22
Edge 19->21 redirected to 22
Forwarding edge 19->20 to 23 failed.
Forwarding edge 19->20 to 23 failed.
deleting block 21
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.
Merging block 25 into block 23...
Merged blocks 23 and 25.
Merged 23 and 25 without moving.


try_optimize_cfg iteration 2

Forwarding edge 19->20 to 23 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])
        (reg:DI 5 di [ bound_file ])) mQuery.c:159 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:159 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3745+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:159 -1
     (nil))
(insn 8 5 9 2 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:160 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:160 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:160 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:160 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 107)
        (reg:DI 0 ax)) mQuery.c:160 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 107)) mQuery.c:160 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:162 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:162 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8734794980 *.LC33>)) mQuery.c:162 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 70 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
        (const_int 0 [0])) mQuery.c:165 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 26)) mQuery.c:165 -1
     (nil)
 -> 26)
;;  succ:       7

(barrier 23 22 35)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 35 23 24 6 72 "" [1 uses])
(note 24 35 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 26 25 27 7 71 "" [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:165 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 1 dx)
        (reg:DI 108)) mQuery.c:165 -1
     (nil))
(insn 31 30 32 7 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:165 -1
     (nil))
(insn 32 31 33 7 (set (reg:DI 5 di)
        (reg:DI 109)) mQuery.c:165 -1
     (nil))
(call_insn 33 32 34 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:165 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 36 7 (set (reg/f:DI 59 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:165 -1
     (nil))
(insn 36 34 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:165 -1
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mQuery.c:165 -1
     (nil)
 -> 35)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:167 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:167 -1
     (nil))
(insn 41 40 42 8 (set (mem/j:SI (reg/f:DI 110) [0 config_9(D)->Nbound+0 S4 A128])
        (reg:SI 111)) mQuery.c:167 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:168 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:168 -1
     (nil))
(call_insn 44 43 45 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:168 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 8 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:170 -1
     (nil))
(insn 46 45 47 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:170 -1
     (nil))
(insn 47 46 48 8 (set (reg:DI 5 di)
        (reg:DI 113)) mQuery.c:170 -1
     (nil))
(call_insn 48 47 49 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:170 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 8 (set (reg:DI 114)
        (reg:DI 0 ax)) mQuery.c:170 -1
     (nil))
(insn 50 49 51 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 114)) mQuery.c:170 -1
     (nil))
(insn 51 50 52 8 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:172 -1
     (nil))
(insn 52 51 53 8 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:172 -1
     (nil))
(insn 53 52 54 8 (set (reg:SI 5 di)
        (reg:SI 115)) mQuery.c:172 -1
     (nil))
(call_insn 54 53 55 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:172 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 55 54 56 8 (set (reg/f:DI 60 [ D.3737 ])
        (reg:DI 0 ax)) mQuery.c:172 -1
     (nil))
(insn 56 55 57 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:172 -1
     (nil))
(insn 57 56 58 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])
        (reg/f:DI 60 [ D.3737 ])) mQuery.c:172 -1
     (nil))
(insn 58 57 59 8 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:173 -1
     (nil))
(jump_insn 59 58 60 8 (set (pc)
        (label_ref 115)) mQuery.c:173 -1
     (nil)
 -> 115)
;;  succ:       14

(barrier 60 59 127)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 127 60 61 9 78 "" [1 uses])
(note 61 127 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:174 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 62 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:174 -1
     (nil))
(insn 64 63 65 9 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:174 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 63 [ D.3738 ])
        (sign_extend:DI (reg:SI 118))) mQuery.c:174 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 64 [ D.3738 ])
                (ashift:DI (reg:DI 63 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg/f:DI 65 [ D.3737 ])
                (plus:DI (reg/f:DI 62 [ D.3737 ])
                    (reg:DI 64 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 66 [ D.3739 ])
        (mem/f:DI (reg/f:DI 65 [ D.3737 ]) [0 *_17+0 S8 A64])) mQuery.c:174 -1
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 119)) mQuery.c:174 -1
     (nil))
(call_insn/i 71 70 72 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 9 (set (reg:DF 67 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:174 -1
     (nil))
(insn 73 72 74 9 (set (reg:XF 68 [ D.3741 ])
        (float_extend:XF (reg:DF 67 [ D.3740 ]))) mQuery.c:174 -1
     (nil))
(insn 74 73 75 9 (set (mem:XF (reg/f:DI 66 [ D.3739 ]) [0 *_18+0 S16 A128])
        (reg:XF 68 [ D.3741 ])) mQuery.c:174 -1
     (nil))
(insn 75 74 76 9 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:175 -1
     (nil))
(jump_insn 76 75 77 9 (set (pc)
        (label_ref 80)) mQuery.c:175 -1
     (nil)
 -> 80)
;;  succ:       11

(barrier 77 76 91)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 91 77 78 10 76 "" [1 uses])
(note 78 91 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:175 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 80 79 81 11 74 "" [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 -1
     (nil))
(insn 83 82 84 11 (set (reg:DI 120)
        (sign_extend:DI (reg:SI 121))) mQuery.c:175 -1
     (nil))
(insn 84 83 85 11 (set (reg:QI 69 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 120))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 -1
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3742 ])
            (const_int 9 [0x9]))) mQuery.c:175 -1
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:175 -1
     (nil)
 -> 94)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 -1
     (nil))
(insn 89 88 90 12 (set (reg:DI 122)
        (sign_extend:DI (reg:SI 123))) mQuery.c:175 -1
     (nil))
(insn 90 89 92 12 (set (reg:QI 70 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 122))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 -1
     (nil))
(insn 92 90 93 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3742 ])
            (const_int 32 [0x20]))) mQuery.c:175 -1
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) mQuery.c:175 -1
     (nil)
 -> 91)
;;  succ:       10
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 94 93 95 13 75 "" [1 uses])
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 13 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:176 -1
     (nil))
(insn 97 96 98 13 (set (reg/f:DI 71 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 124)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:176 -1
     (nil))
(insn 98 97 99 13 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:176 -1
     (nil))
(insn 99 98 100 13 (set (reg:DI 72 [ D.3738 ])
        (sign_extend:DI (reg:SI 125))) mQuery.c:176 -1
     (nil))
(insn 100 99 101 13 (parallel [
            (set (reg:DI 73 [ D.3738 ])
                (ashift:DI (reg:DI 72 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 101 100 102 13 (parallel [
            (set (reg/f:DI 74 [ D.3737 ])
                (plus:DI (reg/f:DI 71 [ D.3737 ])
                    (reg:DI 73 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 102 101 103 13 (set (reg/f:DI 75 [ D.3739 ])
        (mem/f:DI (reg/f:DI 74 [ D.3737 ]) [0 *_28+0 S8 A64])) mQuery.c:176 -1
     (nil))
(insn 103 102 104 13 (parallel [
            (set (reg/f:DI 76 [ D.3739 ])
                (plus:DI (reg/f:DI 75 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 104 103 105 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 105 104 106 13 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 106 105 107 13 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:176 -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 127)
        (sign_extend:DI (reg:SI 128))) mQuery.c:176 -1
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg/f:DI 77 [ D.3736 ])
                (plus:DI (reg:DI 126)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 -1
     (nil))
(insn 109 108 110 13 (set (reg:DI 5 di)
        (reg/f:DI 77 [ D.3736 ])) mQuery.c:176 -1
     (nil))
(call_insn/i 110 109 111 13 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:176 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 111 110 112 13 (set (reg:DF 78 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:176 -1
     (nil))
(insn 112 111 113 13 (set (reg:XF 79 [ D.3741 ])
        (float_extend:XF (reg:DF 78 [ D.3740 ]))) mQuery.c:176 -1
     (nil))
(insn 113 112 114 13 (set (mem:XF (reg/f:DI 76 [ D.3739 ]) [0 *_30+0 S16 A128])
        (reg:XF 79 [ D.3741 ])) mQuery.c:176 -1
     (nil))
(insn 114 113 115 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 -1
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              13 (FALLTHRU,DFS_BACK)
(code_label 115 114 116 14 73 "" [1 uses])
(note 116 115 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 14 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:173 -1
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 -1
     (nil))
(insn 119 118 120 14 (set (reg:DI 1 dx)
        (reg:DI 129)) mQuery.c:173 -1
     (nil))
(insn 120 119 121 14 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:173 -1
     (nil))
(insn 121 120 122 14 (set (reg:DI 5 di)
        (reg:DI 130)) mQuery.c:173 -1
     (nil))
(call_insn 122 121 123 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:173 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 123 122 124 14 (set (reg/f:DI 61 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:173 -1
     (nil))
(insn 124 123 125 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:173 -1
     (nil))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) mQuery.c:173 -1
     (nil)
 -> 131)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 126 125 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 126 129 15 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:173 -1
     (nil))
(insn 129 128 130 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 131)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32]))) mQuery.c:173 -1
     (nil))
(jump_insn 130 129 131 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) mQuery.c:173 -1
     (nil)
 -> 127)
;;  succ:       9
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
(code_label 131 130 132 16 77 "" [1 uses])
(note 132 131 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 16 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:179 -1
     (nil))
(insn 134 133 135 16 (set (reg:DI 5 di)
        (reg:DI 132)) mQuery.c:179 -1
     (nil))
(call_insn 135 134 136 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:179 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 16 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 137 136 138 16 (set (reg/f:DI 80 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 138 137 139 16 (set (reg/f:DI 81 [ D.3739 ])
        (mem/f:DI (reg/f:DI 80 [ D.3737 ]) [0 *_36+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 139 138 140 16 (set (reg:XF 82 [ D.3741 ])
        (mem:XF (reg/f:DI 81 [ D.3739 ]) [0 *_37+0 S16 A128])) mQuery.c:181 -1
     (nil))
(insn 140 139 141 16 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 141 140 142 16 (set (reg/f:DI 83 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 134)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 142 141 143 16 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 143 142 144 16 (set (reg:SI 84 [ D.3743 ])
        (mem/j:SI (reg/f:DI 135) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 -1
     (nil))
(insn 144 143 145 16 (set (reg:DI 85 [ D.3738 ])
        (sign_extend:DI (reg:SI 84 [ D.3743 ]))) mQuery.c:181 -1
     (nil))
(insn 145 144 146 16 (parallel [
            (set (reg:DI 86 [ D.3738 ])
                (ashift:DI (reg:DI 85 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 146 145 147 16 (parallel [
            (set (reg:DI 87 [ D.3744 ])
                (plus:DI (reg:DI 86 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 147 146 148 16 (parallel [
            (set (reg/f:DI 88 [ D.3737 ])
                (plus:DI (reg/f:DI 83 [ D.3737 ])
                    (reg:DI 87 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 148 147 149 16 (set (reg/f:DI 89 [ D.3739 ])
        (mem/f:DI (reg/f:DI 88 [ D.3737 ]) [0 *_44+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 149 148 150 16 (set (reg:XF 90 [ D.3741 ])
        (mem:XF (reg/f:DI 89 [ D.3739 ]) [0 *_45+0 S16 A128])) mQuery.c:181 -1
     (nil))
(insn 150 149 151 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 -1
     (nil))
(jump_insn 151 150 201 16 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 -1
     (nil)
 -> 178)
;;  succ:       22
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 201 151 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 152 201 153 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 -1
     (nil))
(jump_insn 153 152 154 17 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 -1
     (nil)
 -> 178)
;;  succ:       22
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
(note 154 153 155 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 18 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 156 155 157 18 (set (reg/f:DI 91 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 136)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 157 156 158 18 (set (reg/f:DI 92 [ D.3739 ])
        (mem/f:DI (reg/f:DI 91 [ D.3737 ]) [0 *_47+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 158 157 159 18 (parallel [
            (set (reg/f:DI 93 [ D.3739 ])
                (plus:DI (reg/f:DI 92 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 159 158 160 18 (set (reg:XF 94 [ D.3741 ])
        (mem:XF (reg/f:DI 93 [ D.3739 ]) [0 *_49+0 S16 A128])) mQuery.c:181 -1
     (nil))
(insn 160 159 161 18 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 161 160 162 18 (set (reg/f:DI 95 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 137)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 162 161 163 18 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 163 162 164 18 (set (reg:SI 96 [ D.3743 ])
        (mem/j:SI (reg/f:DI 138) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 -1
     (nil))
(insn 164 163 165 18 (set (reg:DI 97 [ D.3738 ])
        (sign_extend:DI (reg:SI 96 [ D.3743 ]))) mQuery.c:181 -1
     (nil))
(insn 165 164 166 18 (parallel [
            (set (reg:DI 98 [ D.3738 ])
                (ashift:DI (reg:DI 97 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg:DI 99 [ D.3744 ])
                (plus:DI (reg:DI 98 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 167 166 168 18 (parallel [
            (set (reg/f:DI 100 [ D.3737 ])
                (plus:DI (reg/f:DI 95 [ D.3737 ])
                    (reg:DI 99 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 168 167 169 18 (set (reg/f:DI 101 [ D.3739 ])
        (mem/f:DI (reg/f:DI 100 [ D.3737 ]) [0 *_56+0 S8 A64])) mQuery.c:181 -1
     (nil))
(insn 169 168 170 18 (parallel [
            (set (reg/f:DI 102 [ D.3739 ])
                (plus:DI (reg/f:DI 101 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 -1
     (nil))
(insn 170 169 171 18 (set (reg:XF 103 [ D.3741 ])
        (mem:XF (reg/f:DI 102 [ D.3739 ]) [0 *_58+0 S16 A128])) mQuery.c:181 -1
     (nil))
(insn 171 170 172 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 -1
     (nil))
(jump_insn 172 171 202 18 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 202 172 173 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 173 202 174 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 -1
     (nil))
(jump_insn 174 173 203 19 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
(note 203 174 175 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 175 203 176 20 (set (pc)
        (label_ref 182)) mQuery.c:181 -1
     (nil)
 -> 182)
;;  succ:       23

(barrier 176 175 178)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              19
;;              16
;;              18
(code_label 178 176 179 22 79 "" [4 uses])
(note 179 178 180 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8734794a18 *.LC34>)) mQuery.c:182 -1
     (nil))
(call_insn 181 180 182 22 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:182 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              20
(code_label 182 181 183 23 80 "" [1 uses])
(note 183 182 184 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 187 23 (set (reg:SI 104 [ D.3743 ])
        (const_int 1 [0x1])) mQuery.c:184 -1
     (nil))
(insn 187 184 191 23 (set (reg:SI 105 [ <retval> ])
        (reg:SI 104 [ D.3743 ])) mQuery.c:184 -1
     (nil))
(insn 191 187 194 23 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) mQuery.c:185 -1
     (nil))
(insn 194 191 195 23 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3745+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:185 -1
     (nil))
(jump_insn 195 194 206 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) mQuery.c:185 -1
     (nil)
 -> 198)
;;  succ:       27
;;              26 (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
(note 206 195 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(call_insn 196 206 197 26 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:185 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 197 196 198)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 198 197 207 27 83 "" [1 uses])
(note 207 198 199 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 199 207 0 27 (use (reg/i:SI 0 ax)) mQuery.c:185 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_temp_shock (get_temp_shock, funcdef_no=8, decl_uid=1768, cgraph_uid=8)

get_temp_shock (struct CONF_t * conf)
{
  char c[500];
  int N;
  int j;
  int i;
  struct FILE * rstream;
  int D.3640;
  char * D.3638;
  long double D.3637;
  double D.3636;
  char * D.3635;
  long double * D.3634;
  long double * D.3633;
  long double * * D.3632;
  long unsigned int D.3631;
  long unsigned int D.3630;
  long double * * D.3629;
  char D.3626;
  char D.3625;
  char D.3623;
  char D.3621;
  long double D.3620;
  double D.3619;
  long double * D.3618;
  long double * * D.3617;
  long unsigned int D.3616;
  long unsigned int D.3615;
  long double * * D.3614;
  long double * * D.3613;
  char * D.3612;
  char * _6;
  long double * * _9;
  char * _12;
  long double * * _13;
  long unsigned int _14;
  long unsigned int _15;
  long double * * _16;
  long double * _17;
  double _18;
  long double _19;
  char _21;
  char _22;
  char _23;
  char _25;
  long double * * _26;
  long unsigned int _27;
  long unsigned int _28;
  long double * * _29;
  long double * _30;
  long double * _31;
  char * _33;
  double _34;
  long double _35;
  int _37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_4 = fopen ("CONF/shock_tmp.dat", "r");
  if (rstream_4 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Impossible to read shock_tmp.dat\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  N_5 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  N_7 = N_3 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # N_3 = PHI <N_5(4), N_7(5)>
  _6 = fgets (&c, 500, rstream_4);
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  fclose (rstream_4);
  conf_8(D)->n_point_shock = N_3;
  _9 = falloc_matrix (N_3, 2);
  conf_8(D)->point_shock = _9;
  rstream_10 = fopen ("CONF/shock_tmp.dat", "r");
  i_11 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 8, loop depth 0
;;    pred:       17
  _13 = conf_8(D)->point_shock;
  _14 = (long unsigned int) i_1;
  _15 = _14 * 8;
  _16 = _13 + _15;
  _17 = *_16;
  _18 = atof (&c);
  _19 = (long double) _18;
  *_17 = _19;
  j_20 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       12
  j_24 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_2 = PHI <j_20(8), j_24(9)>
  _21 = c[j_2];
  if (_21 != 9)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11
;;                13

;;   basic block 11, loop depth 0
;;    pred:       10
  _22 = c[j_2];
  if (_22 != 32)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  _23 = c[j_2];
  if (_23 != 0)
    goto <bb 9>;
  else
    goto <bb 13>;
;;    succ:       9
;;                13

;;   basic block 13, loop depth 0
;;    pred:       10
;;                11
;;                12
  _25 = c[j_2];
  if (_25 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  BuG ("Error in shock_tmp.dat");
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  _26 = conf_8(D)->point_shock;
  _27 = (long unsigned int) i_1;
  _28 = _27 * 8;
  _29 = _26 + _28;
  _30 = *_29;
  _31 = _30 + 16;
  j_32 = j_2 + 1;
  _33 = &c[j_32];
  _34 = atof (_33);
  _35 = (long double) _34;
  *_31 = _35;
  i_36 = i_1 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       7
;;                15
  # i_1 = PHI <i_11(7), i_36(15)>
  _12 = fgets (&c, 500, rstream_10);
  if (_12 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  if (i_1 < N_3)
    goto <bb 8>;
  else
    goto <bb 18>;
;;    succ:       8
;;                18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  fclose (rstream_10);
  _37 = 1;
  c ={v} {CLOBBER};
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L17>:
  return _37;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (N_3 - 3 )
Partition 4 (rstream_4 - 4 )
Partition 5 (N_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (N_7 - 7 )
Partition 8 (conf_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (rstream_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (j_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (j_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (j_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (i_36 - 36 )
Partition 37 (_37 - 37 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (N_3 - 3 )
Partition 3 (rstream_4 - 4 )
Partition 4 (N_5 - 5 )
Partition 5 (N_7 - 7 )
Partition 6 (conf_8(D) - 8 )
Partition 7 (rstream_10 - 10 )
Partition 8 (i_11 - 11 )
Partition 9 (j_20 - 20 )
Partition 10 (j_24 - 24 )
Partition 11 (j_32 - 32 )
Partition 12 (i_36 - 36 )


Live on entry to BB2 : conf_8(D)  

Live on entry to BB3 : rstream_4  conf_8(D)  

Live on entry to BB4 : rstream_4  conf_8(D)  

Live on entry to BB5 : N_3  rstream_4  conf_8(D)  

Live on entry to BB6 : rstream_4  conf_8(D)  

Live on entry to BB7 : N_3  rstream_4  conf_8(D)  

Live on entry to BB8 : i_1  N_3  conf_8(D)  rstream_10  

Live on entry to BB9 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB10 : i_1  N_3  conf_8(D)  rstream_10  

Live on entry to BB11 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB12 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB13 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB14 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB15 : i_1  j_2  N_3  conf_8(D)  rstream_10  

Live on entry to BB16 : N_3  conf_8(D)  rstream_10  

Live on entry to BB17 : i_1  N_3  conf_8(D)  rstream_10  

Live on entry to BB18 : rstream_10  

Live on entry to BB19 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_11
(2147483646) i_1 <-> i_36
(2147483646) j_2 <-> j_20
(2147483646) j_2 <-> j_24
(2147483646) j_2 <-> j_32
(2147483646) N_3 <-> N_5
(2147483646) N_3 <-> N_7
(2147483646) rstream_4 <-> rstream_10

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (N_3 - 3 )
Partition 3 (rstream_4 - 4 )
Partition 4 (N_5 - 5 )
Partition 5 (N_7 - 7 )
Partition 6 (conf_8(D) - 8 )
Partition 7 (rstream_10 - 10 )
Partition 8 (i_11 - 11 )
Partition 9 (j_20 - 20 )
Partition 10 (j_24 - 24 )
Partition 11 (j_32 - 32 )
Partition 12 (i_36 - 36 )

Coalesce list: (1)i_1 & (11)i_11 [map: 0, 8] : Success -> 0
Coalesce list: (1)i_1 & (36)i_36 [map: 0, 12] : Success -> 0
Coalesce list: (2)j_2 & (20)j_20 [map: 1, 9] : Success -> 1
Coalesce list: (2)j_2 & (24)j_24 [map: 1, 10] : Success -> 1
Coalesce list: (2)j_2 & (32)j_32 [map: 1, 11] : Success -> 1
Coalesce list: (3)N_3 & (5)N_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)N_3 & (7)N_7 [map: 2, 5] : Success -> 2
Coalesce list: (4)rstream_4 & (10)rstream_10 [map: 3, 7] : Success -> 3
Coalesce list: (1)i_1 & (36)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (11)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (24)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (20)j_2: Already Coalesced.
Coalesce list: (3)N_3 & (7)N_3: Already Coalesced.
Coalesce list: (3)N_3 & (5)N_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 11 36 )
Partition 1 (j_2 - 2 20 24 32 )
Partition 2 (N_3 - 3 5 7 )
Partition 3 (rstream_4 - 4 10 )
Partition 4 (_6 - 6 )
Partition 5 (conf_8(D) - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (_18 - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_21 - 21 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_27 - 27 )
Partition 21 (_28 - 28 )
Partition 22 (_29 - 29 )
Partition 23 (_30 - 30 )
Partition 24 (_31 - 31 )
Partition 25 (_33 - 33 )
Partition 26 (_34 - 34 )
Partition 27 (_35 - 35 )
Partition 28 (_37 - 37 )

get_temp_shock (struct CONF_t * conf)
{
  char c[500];
  int N;
  int j;
  int i;
  struct FILE * rstream;
  int D.3640;
  char * D.3638;
  long double D.3637;
  double D.3636;
  char * D.3635;
  long double * D.3634;
  long double * D.3633;
  long double * * D.3632;
  long unsigned int D.3631;
  long unsigned int D.3630;
  long double * * D.3629;
  char D.3626;
  char D.3625;
  char D.3623;
  char D.3621;
  long double D.3620;
  double D.3619;
  long double * D.3618;
  long double * * D.3617;
  long unsigned int D.3616;
  long unsigned int D.3615;
  long double * * D.3614;
  long double * * D.3613;
  char * D.3612;
  char * _6;
  long double * * _9;
  char * _12;
  long double * * _13;
  long unsigned int _14;
  long unsigned int _15;
  long double * * _16;
  long double * _17;
  double _18;
  long double _19;
  char _21;
  char _22;
  char _23;
  char _25;
  long double * * _26;
  long unsigned int _27;
  long unsigned int _28;
  long double * * _29;
  long double * _30;
  long double * _31;
  char * _33;
  double _34;
  long double _35;
  int _37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  rstream_4 = fopen ("CONF/shock_tmp.dat", "r");
  if (rstream_4 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Impossible to read shock_tmp.dat\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  N_5 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       6
  N_7 = N_3 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # N_3 = PHI <N_5(4), N_7(5)>
  _6 = fgets (&c, 500, rstream_4);
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  fclose (rstream_4);
  conf_8(D)->n_point_shock = N_3;
  _9 = falloc_matrix (N_3, 2);
  conf_8(D)->point_shock = _9;
  rstream_10 = fopen ("CONF/shock_tmp.dat", "r");
  i_11 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 8, loop depth 0
;;    pred:       17
  _13 = conf_8(D)->point_shock;
  _14 = (long unsigned int) i_1;
  _15 = _14 * 8;
  _16 = _13 + _15;
  _17 = *_16;
  _18 = atof (&c);
  _19 = (long double) _18;
  *_17 = _19;
  j_20 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       12
  j_24 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_2 = PHI <j_20(8), j_24(9)>
  _21 = c[j_2];
  if (_21 != 9)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11
;;                13

;;   basic block 11, loop depth 0
;;    pred:       10
  _22 = c[j_2];
  if (_22 != 32)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  _23 = c[j_2];
  if (_23 != 0)
    goto <bb 9>;
  else
    goto <bb 13>;
;;    succ:       9
;;                13

;;   basic block 13, loop depth 0
;;    pred:       10
;;                11
;;                12
  _25 = c[j_2];
  if (_25 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  BuG ("Error in shock_tmp.dat");
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  _26 = conf_8(D)->point_shock;
  _27 = (long unsigned int) i_1;
  _28 = _27 * 8;
  _29 = _26 + _28;
  _30 = *_29;
  _31 = _30 + 16;
  j_32 = j_2 + 1;
  _33 = &c[j_32];
  _34 = atof (_33);
  _35 = (long double) _34;
  *_31 = _35;
  i_36 = i_1 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       7
;;                15
  # i_1 = PHI <i_11(7), i_36(15)>
  _12 = fgets (&c, 500, rstream_10);
  if (_12 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  if (i_1 < N_3)
    goto <bb 8>;
  else
    goto <bb 18>;
;;    succ:       8
;;                18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  fclose (rstream_10);
  _37 = 1;
  c ={v} {CLOBBER};
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L17>:
  return _37;
;;    succ:       EXIT

}


Partition 4: size 500 align 16
	c
Partition 3: size 8 align 8
	rstream_4
Partition 2: size 4 align 4
	N_3
Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; rstream_4 = fopen ("CONF/shock_tmp.dat", "r");

(insn 7 6 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:189 -1
     (nil))

(insn 8 7 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:189 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:189 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 10 9 11 (set (reg:DI 84)
        (reg:DI 0 ax)) mQuery.c:189 -1
     (nil))

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mQuery.c:189 -1
     (nil))

;; if (rstream_4 == 0B)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:190 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:190 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("Impossible to read shock_tmp.dat\n");

(insn 15 14 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f87347b0558 *.LC36>)) mQuery.c:190 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:190 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 17 16 18 87 "" [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; N_5 = 0;

(insn 19 18 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
        (const_int 0 [0])) mQuery.c:194 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; N_7 = N_3 + 1;

(insn 23 22 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 24 23 25 88 "" [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = fgets (&c, 500, rstream_4);

(insn 26 25 27 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:194 -1
     (nil))

(insn 27 26 28 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 -1
     (nil))

(insn 28 27 29 (set (reg:DI 1 dx)
        (reg:DI 85)) mQuery.c:194 -1
     (nil))

(insn 29 28 30 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:194 -1
     (nil))

(insn 30 29 31 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:194 -1
     (nil))

(call_insn 31 30 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:194 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 32 31 0 (set (reg/f:DI 59 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:194 -1
     (nil))

;; if (_6 != 0B)

(insn 34 32 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:194 -1
     (nil))

(jump_insn 35 34 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:194 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; fclose (rstream_4);

(insn 37 36 38 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:195 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg:DI 87)) mQuery.c:195 -1
     (nil))

(call_insn 39 38 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:195 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; conf_8(D)->n_point_shock = N_3;

(insn 40 39 41 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:197 -1
     (nil))

(insn 41 40 42 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:197 -1
     (nil))

(insn 42 41 0 (set (mem/j:SI (plus:DI (reg/f:DI 88)
                (const_int 128 [0x80])) [0 conf_8(D)->n_point_shock+0 S4 A128])
        (reg:SI 89)) mQuery.c:197 -1
     (nil))

;; _9 = falloc_matrix (N_3, 2);

(insn 43 42 44 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:198 -1
     (nil))

(insn 44 43 45 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:198 -1
     (nil))

(insn 45 44 46 (set (reg:SI 5 di)
        (reg:SI 90)) mQuery.c:198 -1
     (nil))

(call_insn 46 45 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:198 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 47 46 0 (set (reg/f:DI 60 [ D.3749 ])
        (reg:DI 0 ax)) mQuery.c:198 -1
     (nil))

;; conf_8(D)->point_shock = _9;

(insn 48 47 49 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:198 -1
     (nil))

(insn 49 48 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])
        (reg/f:DI 60 [ D.3749 ])) mQuery.c:198 -1
     (nil))

;; rstream_10 = fopen ("CONF/shock_tmp.dat", "r");

(insn 50 49 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:200 -1
     (nil))

(insn 51 50 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:200 -1
     (nil))

(call_insn 52 51 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:200 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 53 52 54 (set (reg:DI 92)
        (reg:DI 0 ax)) mQuery.c:200 -1
     (nil))

(insn 54 53 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 92)) mQuery.c:200 -1
     (nil))

;; i_11 = 0;

(insn 55 54 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:201 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _13 = conf_8(D)->point_shock;

(insn 59 58 60 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:202 -1
     (nil))

(insn 60 59 0 (set (reg/f:DI 62 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:202 -1
     (nil))

;; _14 = (long unsigned int) i_1;

(insn 61 60 62 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:202 -1
     (nil))

(insn 62 61 0 (set (reg:DI 63 [ D.3750 ])
        (sign_extend:DI (reg:SI 94))) mQuery.c:202 -1
     (nil))

;; _15 = _14 * 8;

(insn 63 62 0 (parallel [
            (set (reg:DI 64 [ D.3750 ])
                (ashift:DI (reg:DI 63 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))

;; _16 = _13 + _15;

(insn 64 63 0 (parallel [
            (set (reg/f:DI 65 [ D.3749 ])
                (plus:DI (reg/f:DI 62 [ D.3749 ])
                    (reg:DI 64 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))

;; _17 = *_16;

(insn 65 64 0 (set (reg/f:DI 66 [ D.3751 ])
        (mem/f:DI (reg/f:DI 65 [ D.3749 ]) [0 *_16+0 S8 A64])) mQuery.c:202 -1
     (nil))

;; _18 = atof (&c);

(insn 66 65 67 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))

(insn 67 66 68 (set (reg:DI 5 di)
        (reg:DI 95)) mQuery.c:202 -1
     (nil))

(call_insn/i 68 67 69 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:202 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 69 68 0 (set (reg:DF 67 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:202 -1
     (nil))

;; _19 = (long double) _18;

(insn 70 69 0 (set (reg:XF 68 [ D.3753 ])
        (float_extend:XF (reg:DF 67 [ D.3752 ]))) mQuery.c:202 -1
     (nil))

;; *_17 = _19;

(insn 71 70 0 (set (mem:XF (reg/f:DI 66 [ D.3751 ]) [0 *_17+0 S16 A128])
        (reg:XF 68 [ D.3753 ])) mQuery.c:202 -1
     (nil))

;; j_20 = 0;

(insn 72 71 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; j_24 = j_2 + 1;

(insn 76 75 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 77 76 78 91 "" [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = c[j_2];

(insn 79 78 80 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))

(insn 80 79 81 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) mQuery.c:203 -1
     (nil))

(insn 81 80 0 (set (reg:QI 69 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 96))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))

;; if (_21 != 9)

(insn 82 81 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3754 ])
            (const_int 9 [0x9]))) mQuery.c:203 -1
     (nil))

(jump_insn 83 82 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _22 = c[j_2];

(insn 85 84 86 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))

(insn 86 85 87 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) mQuery.c:203 -1
     (nil))

(insn 87 86 0 (set (reg:QI 70 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 98))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))

;; if (_22 != 32)

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3754 ])
            (const_int 32 [0x20]))) mQuery.c:203 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _23 = c[j_2];

(insn 91 90 92 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))

(insn 92 91 93 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) mQuery.c:203 -1
     (nil))

(insn 93 92 0 (set (reg:QI 71 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 100))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))

;; if (_23 != 0)

(insn 95 93 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:203 -1
     (nil))

(jump_insn 96 95 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 97 96 98 92 "" [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; _25 = c[j_2];

(insn 99 98 100 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:204 -1
     (nil))

(insn 100 99 101 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) mQuery.c:204 -1
     (nil))

(insn 101 100 0 (set (reg:QI 72 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 102))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:204 -1
     (nil))

;; if (_25 == 0)

(insn 102 101 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 72 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:204 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:204 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; BuG ("Error in shock_tmp.dat");

(insn 105 104 106 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f87347b05f0 *.LC37>)) mQuery.c:204 -1
     (nil))

(call_insn 106 105 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:204 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 15

;; 

(code_label 107 106 108 94 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; _26 = conf_8(D)->point_shock;

(insn 109 108 110 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:205 -1
     (nil))

(insn 110 109 0 (set (reg/f:DI 73 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 104)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:205 -1
     (nil))

;; _27 = (long unsigned int) i_1;

(insn 111 110 112 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:205 -1
     (nil))

(insn 112 111 0 (set (reg:DI 74 [ D.3750 ])
        (sign_extend:DI (reg:SI 105))) mQuery.c:205 -1
     (nil))

;; _28 = _27 * 8;

(insn 113 112 0 (parallel [
            (set (reg:DI 75 [ D.3750 ])
                (ashift:DI (reg:DI 74 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

;; _29 = _26 + _28;

(insn 114 113 0 (parallel [
            (set (reg/f:DI 76 [ D.3749 ])
                (plus:DI (reg/f:DI 73 [ D.3749 ])
                    (reg:DI 75 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

;; _30 = *_29;

(insn 115 114 0 (set (reg/f:DI 77 [ D.3751 ])
        (mem/f:DI (reg/f:DI 76 [ D.3749 ]) [0 *_29+0 S8 A64])) mQuery.c:205 -1
     (nil))

;; _31 = _30 + 16;

(insn 116 115 0 (parallel [
            (set (reg/f:DI 78 [ D.3751 ])
                (plus:DI (reg/f:DI 77 [ D.3751 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

;; j_32 = j_2 + 1;

(insn 117 116 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

;; _33 = &c[j_32];

(insn 118 117 119 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

(insn 119 118 120 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:205 -1
     (nil))

(insn 120 119 121 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 108))) mQuery.c:205 -1
     (nil))

(insn 121 120 0 (parallel [
            (set (reg/f:DI 79 [ D.3748 ])
                (plus:DI (reg:DI 106)
                    (reg:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))

;; _34 = atof (_33);

(insn 122 121 123 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.3748 ])) mQuery.c:205 -1
     (nil))

(call_insn/i 123 122 124 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:205 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 124 123 0 (set (reg:DF 80 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:205 -1
     (nil))

;; _35 = (long double) _34;

(insn 125 124 0 (set (reg:XF 81 [ D.3753 ])
        (float_extend:XF (reg:DF 80 [ D.3752 ]))) mQuery.c:205 -1
     (nil))

;; *_31 = _35;

(insn 126 125 0 (set (mem:XF (reg/f:DI 78 [ D.3751 ]) [0 *_31+0 S16 A128])
        (reg:XF 81 [ D.3753 ])) mQuery.c:205 -1
     (nil))

;; i_36 = i_1 + 1;

(insn 127 126 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 128 127 129 90 "" [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = fgets (&c, 500, rstream_10);

(insn 130 129 131 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:201 -1
     (nil))

(insn 131 130 132 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 -1
     (nil))

(insn 132 131 133 (set (reg:DI 1 dx)
        (reg:DI 109)) mQuery.c:201 -1
     (nil))

(insn 133 132 134 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:201 -1
     (nil))

(insn 134 133 135 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:201 -1
     (nil))

(call_insn 135 134 136 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:201 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 136 135 0 (set (reg/f:DI 61 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:201 -1
     (nil))

;; if (_12 != 0B)

(insn 137 136 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:201 -1
     (nil))

(jump_insn 138 137 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mQuery.c:201 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; if (i_1 < N_3)

(insn 141 139 142 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:201 -1
     (nil))

(insn 142 141 143 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32]))) mQuery.c:201 -1
     (nil))

(jump_insn 143 142 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) mQuery.c:201 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 144 143 145 95 "" [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; fclose (rstream_10);

(insn 146 145 147 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:207 -1
     (nil))

(insn 147 146 148 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:207 -1
     (nil))

(call_insn 148 147 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:207 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _37 = 1;

(insn 149 148 0 (set (reg:SI 82 [ D.3755 ])
        (const_int 1 [0x1])) mQuery.c:208 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 19

;; <L17>:

(code_label 150 149 151 97 "" [0 uses])

(note 151 150 0 NOTE_INSN_BASIC_BLOCK)

;; return _37;

(insn 152 151 153 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ D.3755 ])) mQuery.c:208 -1
     (nil))

(jump_insn 153 152 154 (set (pc)
        (label_ref 0)) mQuery.c:208 -1
     (nil))

(barrier 154 153 0)
deleting block 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Merging block 21 into block 19...
Merged blocks 19 and 21.
Merged 19 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])
        (reg:DI 5 di [ conf ])) mQuery.c:187 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3756+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:187 -1
     (nil))
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:189 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:189 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:189 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 84)
        (reg:DI 0 ax)) mQuery.c:189 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mQuery.c:189 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:190 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) mQuery.c:190 -1
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f87347b0558 *.LC36>)) mQuery.c:190 -1
     (nil))
(call_insn 16 15 17 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:190 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 17 16 18 5 87 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
        (const_int 0 [0])) mQuery.c:194 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (label_ref 24)) mQuery.c:194 -1
     (nil)
 -> 24)
;;  succ:       7

(barrier 21 20 33)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 33 21 22 6 89 "" [1 uses])
(note 22 33 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 24 23 25 7 88 "" [1 uses])
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:194 -1
     (nil))
(insn 27 26 28 7 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 -1
     (nil))
(insn 28 27 29 7 (set (reg:DI 1 dx)
        (reg:DI 85)) mQuery.c:194 -1
     (nil))
(insn 29 28 30 7 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:194 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:194 -1
     (nil))
(call_insn 31 30 32 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:194 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 32 31 34 7 (set (reg/f:DI 59 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:194 -1
     (nil))
(insn 34 32 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:194 -1
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:194 -1
     (nil)
 -> 33)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:195 -1
     (nil))
(insn 38 37 39 8 (set (reg:DI 5 di)
        (reg:DI 87)) mQuery.c:195 -1
     (nil))
(call_insn 39 38 40 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:195 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:197 -1
     (nil))
(insn 41 40 42 8 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:197 -1
     (nil))
(insn 42 41 43 8 (set (mem/j:SI (plus:DI (reg/f:DI 88)
                (const_int 128 [0x80])) [0 conf_8(D)->n_point_shock+0 S4 A128])
        (reg:SI 89)) mQuery.c:197 -1
     (nil))
(insn 43 42 44 8 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:198 -1
     (nil))
(insn 44 43 45 8 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:198 -1
     (nil))
(insn 45 44 46 8 (set (reg:SI 5 di)
        (reg:SI 90)) mQuery.c:198 -1
     (nil))
(call_insn 46 45 47 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:198 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 47 46 48 8 (set (reg/f:DI 60 [ D.3749 ])
        (reg:DI 0 ax)) mQuery.c:198 -1
     (nil))
(insn 48 47 49 8 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:198 -1
     (nil))
(insn 49 48 50 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])
        (reg/f:DI 60 [ D.3749 ])) mQuery.c:198 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:200 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:200 -1
     (nil))
(call_insn 52 51 53 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:200 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 53 52 54 8 (set (reg:DI 92)
        (reg:DI 0 ax)) mQuery.c:200 -1
     (nil))
(insn 54 53 55 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 92)) mQuery.c:200 -1
     (nil))
(insn 55 54 56 8 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:201 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (label_ref 128)) mQuery.c:201 -1
     (nil)
 -> 128)
;;  succ:       17

(barrier 57 56 140)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 140 57 58 9 96 "" [1 uses])
(note 58 140 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:202 -1
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 62 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:202 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:202 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 63 [ D.3750 ])
        (sign_extend:DI (reg:SI 94))) mQuery.c:202 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 64 [ D.3750 ])
                (ashift:DI (reg:DI 63 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg/f:DI 65 [ D.3749 ])
                (plus:DI (reg/f:DI 62 [ D.3749 ])
                    (reg:DI 64 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))
(insn 65 64 66 9 (set (reg/f:DI 66 [ D.3751 ])
        (mem/f:DI (reg/f:DI 65 [ D.3749 ]) [0 *_16+0 S8 A64])) mQuery.c:202 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg:DI 95)) mQuery.c:202 -1
     (nil))
(call_insn/i 68 67 69 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:202 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 9 (set (reg:DF 67 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:202 -1
     (nil))
(insn 70 69 71 9 (set (reg:XF 68 [ D.3753 ])
        (float_extend:XF (reg:DF 67 [ D.3752 ]))) mQuery.c:202 -1
     (nil))
(insn 71 70 72 9 (set (mem:XF (reg/f:DI 66 [ D.3751 ]) [0 *_17+0 S16 A128])
        (reg:XF 68 [ D.3753 ])) mQuery.c:202 -1
     (nil))
(insn 72 71 73 9 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:203 -1
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (label_ref 77)) mQuery.c:203 -1
     (nil)
 -> 77)
;;  succ:       11

(barrier 74 73 94)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 94 74 75 10 93 "" [1 uses])
(note 75 94 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:203 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 77 76 78 11 91 "" [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))
(insn 80 79 81 11 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) mQuery.c:203 -1
     (nil))
(insn 81 80 82 11 (set (reg:QI 69 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 96))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3754 ])
            (const_int 9 [0x9]))) mQuery.c:203 -1
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 -1
     (nil)
 -> 97)
;;  succ:       12 (FALLTHRU)
;;              14

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))
(insn 86 85 87 12 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) mQuery.c:203 -1
     (nil))
(insn 87 86 88 12 (set (reg:QI 70 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 98))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3754 ])
            (const_int 32 [0x20]))) mQuery.c:203 -1
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 -1
     (nil)
 -> 97)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 -1
     (nil))
(insn 92 91 93 13 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) mQuery.c:203 -1
     (nil))
(insn 93 92 95 13 (set (reg:QI 71 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 100))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 -1
     (nil))
(insn 95 93 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:203 -1
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:203 -1
     (nil)
 -> 94)
;;  succ:       10
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12
;;              13 (FALLTHRU)
(code_label 97 96 98 14 92 "" [2 uses])
(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 14 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:204 -1
     (nil))
(insn 100 99 101 14 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) mQuery.c:204 -1
     (nil))
(insn 101 100 102 14 (set (reg:QI 72 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 102))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:204 -1
     (nil))
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 72 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:204 -1
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mQuery.c:204 -1
     (nil)
 -> 107)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f87347b05f0 *.LC37>)) mQuery.c:204 -1
     (nil))
(call_insn 106 105 107 15 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:204 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15 (FALLTHRU)
(code_label 107 106 108 16 94 "" [1 uses])
(note 108 107 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 16 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:205 -1
     (nil))
(insn 110 109 111 16 (set (reg/f:DI 73 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 104)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:205 -1
     (nil))
(insn 111 110 112 16 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:205 -1
     (nil))
(insn 112 111 113 16 (set (reg:DI 74 [ D.3750 ])
        (sign_extend:DI (reg:SI 105))) mQuery.c:205 -1
     (nil))
(insn 113 112 114 16 (parallel [
            (set (reg:DI 75 [ D.3750 ])
                (ashift:DI (reg:DI 74 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 114 113 115 16 (parallel [
            (set (reg/f:DI 76 [ D.3749 ])
                (plus:DI (reg/f:DI 73 [ D.3749 ])
                    (reg:DI 75 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 115 114 116 16 (set (reg/f:DI 77 [ D.3751 ])
        (mem/f:DI (reg/f:DI 76 [ D.3749 ]) [0 *_29+0 S8 A64])) mQuery.c:205 -1
     (nil))
(insn 116 115 117 16 (parallel [
            (set (reg/f:DI 78 [ D.3751 ])
                (plus:DI (reg/f:DI 77 [ D.3751 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 117 116 118 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 118 117 119 16 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 119 118 120 16 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:205 -1
     (nil))
(insn 120 119 121 16 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 108))) mQuery.c:205 -1
     (nil))
(insn 121 120 122 16 (parallel [
            (set (reg/f:DI 79 [ D.3748 ])
                (plus:DI (reg:DI 106)
                    (reg:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 -1
     (nil))
(insn 122 121 123 16 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.3748 ])) mQuery.c:205 -1
     (nil))
(call_insn/i 123 122 124 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:205 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 16 (set (reg:DF 80 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:205 -1
     (nil))
(insn 125 124 126 16 (set (reg:XF 81 [ D.3753 ])
        (float_extend:XF (reg:DF 80 [ D.3752 ]))) mQuery.c:205 -1
     (nil))
(insn 126 125 127 16 (set (mem:XF (reg/f:DI 78 [ D.3751 ]) [0 *_31+0 S16 A128])
        (reg:XF 81 [ D.3753 ])) mQuery.c:205 -1
     (nil))
(insn 127 126 128 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 -1
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              16 (FALLTHRU,DFS_BACK)
(code_label 128 127 129 17 90 "" [1 uses])
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:201 -1
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 -1
     (nil))
(insn 132 131 133 17 (set (reg:DI 1 dx)
        (reg:DI 109)) mQuery.c:201 -1
     (nil))
(insn 133 132 134 17 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:201 -1
     (nil))
(insn 134 133 135 17 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:201 -1
     (nil))
(call_insn 135 134 136 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:201 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 136 135 137 17 (set (reg/f:DI 61 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:201 -1
     (nil))
(insn 137 136 138 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:201 -1
     (nil))
(jump_insn 138 137 139 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mQuery.c:201 -1
     (nil)
 -> 144)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 139 138 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 18 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:201 -1
     (nil))
(insn 142 141 143 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32]))) mQuery.c:201 -1
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) mQuery.c:201 -1
     (nil)
 -> 140)
;;  succ:       9
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 144 143 145 19 95 "" [1 uses])
(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 19 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:207 -1
     (nil))
(insn 147 146 148 19 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:207 -1
     (nil))
(call_insn 148 147 149 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:207 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 149 148 152 19 (set (reg:SI 82 [ D.3755 ])
        (const_int 1 [0x1])) mQuery.c:208 -1
     (nil))
(insn 152 149 156 19 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ D.3755 ])) mQuery.c:208 -1
     (nil))
(insn 156 152 159 19 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) mQuery.c:210 -1
     (nil))
(insn 159 156 160 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3756+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:210 -1
     (nil))
(jump_insn 160 159 167 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) mQuery.c:210 -1
     (nil)
 -> 163)
;;  succ:       23
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
(note 167 160 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 161 167 162 22 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:210 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 162 161 163)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 163 162 168 23 98 "" [1 uses])
(note 168 163 164 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 164 168 0 23 (use (reg/i:SI 0 ax)) mQuery.c:210 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function add_nsim_output (add_nsim_output, funcdef_no=9, decl_uid=1772, cgraph_uid=9)

add_nsim_output (char * file_out, char * file_in, int n)
{
  char str[50];
  int j;
  int i;
  int D.3660;
  char * D.3659;
  long unsigned int D.3658;
  char * D.3657;
  long unsigned int D.3656;
  char * D.3655;
  sizetype D.3654;
  char D.3653;
  char * D.3652;
  sizetype D.3651;
  char * D.3650;
  sizetype D.3649;
  char D.3648;
  char * D.3647;
  sizetype D.3646;
  char D.3645;
  char * D.3644;
  sizetype D.3643;
  sizetype _5;
  char * _7;
  char _8;
  sizetype _10;
  char * _11;
  char _12;
  sizetype _16;
  char * _18;
  sizetype _19;
  char * _20;
  char _21;
  sizetype _23;
  char * _24;
  long unsigned int _25;
  char * _26;
  long unsigned int _27;
  char * _28;
  int _29;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_4 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  i_9 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_4(2), i_9(3)>
  _5 = (sizetype) i_1;
  _7 = file_in_6(D) + _5;
  _8 = *_7;
  if (_8 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_13 = i_2 + -1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_1(5), i_13(6)>
  _10 = (sizetype) i_2;
  _11 = file_in_6(D) + _10;
  _12 = *_11;
  if (_12 != 46)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  sprintf (&str, "%d", n_14(D));
  j_15 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       10
  _16 = (sizetype) j_3;
  _18 = file_out_17(D) + _16;
  _19 = (sizetype) j_3;
  _20 = file_in_6(D) + _19;
  _21 = *_20;
  *_18 = _21;
  j_22 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_3 = PHI <j_15(8), j_22(9)>
  if (j_3 < i_2)
    goto <bb 9>;
  else
    goto <bb 11>;
;;    succ:       9
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  _23 = (sizetype) j_3;
  _24 = file_out_17(D) + _23;
  *_24 = 0;
  _25 = __builtin_strlen (file_out_17(D));
  _26 = file_out_17(D) + _25;
  __builtin_memcpy (_26, "_", 2);
  strcat (file_out_17(D), &str);
  _27 = __builtin_strlen (file_out_17(D));
  _28 = file_out_17(D) + _27;
  __builtin_memcpy (_28, ".dat", 5);
  _29 = 1;
  str ={v} {CLOBBER};
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L10>:
  return _29;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (j_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (file_in_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (i_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 14 (n_14(D) - 14 )
Partition 15 (j_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (file_out_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (j_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (file_in_6(D) - 6 )
Partition 5 (i_9 - 9 )
Partition 6 (i_13 - 13 )
Partition 7 (n_14(D) - 14 )
Partition 8 (j_15 - 15 )
Partition 9 (file_out_17(D) - 17 )
Partition 10 (j_22 - 22 )


Live on entry to BB2 : file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB3 : i_1  file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB4 : file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB5 : i_1  file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB6 : i_2  file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB7 : file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB8 : i_2  file_in_6(D)  n_14(D)  file_out_17(D)  

Live on entry to BB9 : i_2  j_3  file_in_6(D)  file_out_17(D)  

Live on entry to BB10 : i_2  file_in_6(D)  file_out_17(D)  

Live on entry to BB11 : j_3  file_out_17(D)  

Live on entry to BB12 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_4
(2147483646) i_1 <-> i_9
(2147483646) i_1 <-> i_13
(2147483646) j_3 <-> j_15
(2147483646) j_3 <-> j_22

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (file_in_6(D) - 6 )
Partition 5 (i_9 - 9 )
Partition 6 (i_13 - 13 )
Partition 7 (n_14(D) - 14 )
Partition 8 (j_15 - 15 )
Partition 9 (file_out_17(D) - 17 )
Partition 10 (j_22 - 22 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (4)i_4 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (9)i_9 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (13)i_13 [map: 0, 6] : Success -> 0
Coalesce list: (3)j_3 & (15)j_15 [map: 2, 8] : Success -> 2
Coalesce list: (3)j_3 & (22)j_22 [map: 2, 10] : Success -> 2
Coalesce list: (3)j_3 & (22)j_3: Already Coalesced.
Coalesce list: (3)j_3 & (15)j_3: Already Coalesced.
Coalesce list: (2)i_1 & (13)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (9)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (4)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 4 9 13 )
Partition 1 (j_3 - 3 15 22 )
Partition 2 (_5 - 5 )
Partition 3 (file_in_6(D) - 6 )
Partition 4 (_7 - 7 )
Partition 5 (_8 - 8 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (n_14(D) - 14 )
Partition 10 (_16 - 16 )
Partition 11 (file_out_17(D) - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_23 - 23 )
Partition 17 (_24 - 24 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_27 - 27 )
Partition 21 (_28 - 28 )
Partition 22 (_29 - 29 )

add_nsim_output (char * file_out, char * file_in, int n)
{
  char str[50];
  int j;
  int i;
  int D.3660;
  char * D.3659;
  long unsigned int D.3658;
  char * D.3657;
  long unsigned int D.3656;
  char * D.3655;
  sizetype D.3654;
  char D.3653;
  char * D.3652;
  sizetype D.3651;
  char * D.3650;
  sizetype D.3649;
  char D.3648;
  char * D.3647;
  sizetype D.3646;
  char D.3645;
  char * D.3644;
  sizetype D.3643;
  sizetype _5;
  char * _7;
  char _8;
  sizetype _10;
  char * _11;
  char _12;
  sizetype _16;
  char * _18;
  sizetype _19;
  char * _20;
  char _21;
  sizetype _23;
  char * _24;
  long unsigned int _25;
  char * _26;
  long unsigned int _27;
  char * _28;
  int _29;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_4 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  i_9 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_4(2), i_9(3)>
  _5 = (sizetype) i_1;
  _7 = file_in_6(D) + _5;
  _8 = *_7;
  if (_8 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_13 = i_2 + -1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_1(5), i_13(6)>
  _10 = (sizetype) i_2;
  _11 = file_in_6(D) + _10;
  _12 = *_11;
  if (_12 != 46)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  sprintf (&str, "%d", n_14(D));
  j_15 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 0
;;    pred:       10
  _16 = (sizetype) j_3;
  _18 = file_out_17(D) + _16;
  _19 = (sizetype) j_3;
  _20 = file_in_6(D) + _19;
  _21 = *_20;
  *_18 = _21;
  j_22 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  # j_3 = PHI <j_15(8), j_22(9)>
  if (j_3 < i_2)
    goto <bb 9>;
  else
    goto <bb 11>;
;;    succ:       9
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  _23 = (sizetype) j_3;
  _24 = file_out_17(D) + _23;
  *_24 = 0;
  _25 = __builtin_strlen (file_out_17(D));
  _26 = file_out_17(D) + _25;
  __builtin_memcpy (_26, "_", 2);
  strcat (file_out_17(D), &str);
  _27 = __builtin_strlen (file_out_17(D));
  _28 = file_out_17(D) + _27;
  __builtin_memcpy (_28, ".dat", 5);
  _29 = 1;
  str ={v} {CLOBBER};
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L10>:
  return _29;
;;    succ:       EXIT

}


Partition 2: size 50 align 16
	str
Partition 1: size 4 align 4
	j_3
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_4 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i_9 = i_1 + 1;

(insn 13 12 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 14 13 15 100 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = (sizetype) i_1;

(insn 16 15 17 (set (reg:SI 78)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:214 -1
     (nil))

(insn 17 16 0 (set (reg:DI 59 [ D.3760 ])
        (sign_extend:DI (reg:SI 78))) mQuery.c:214 -1
     (nil))

;; _7 = file_in_6(D) + _5;

(insn 18 17 19 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:214 -1
     (nil))

(insn 19 18 0 (parallel [
            (set (reg/f:DI 60 [ D.3761 ])
                (plus:DI (reg:DI 59 [ D.3760 ])
                    (reg/f:DI 79)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 59 [ D.3760 ]))
        (nil)))

;; _8 = *_7;

(insn 20 19 0 (set (reg:QI 61 [ D.3762 ])
        (mem:QI (reg/f:DI 60 [ D.3761 ]) [0 *_7+0 S1 A8])) mQuery.c:214 -1
     (nil))

;; if (_8 != 0)

(insn 22 20 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3762 ])
            (const_int 0 [0]))) mQuery.c:214 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mQuery.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; i_13 = i_2 + -1;

(insn 28 27 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 29 28 30 102 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = (sizetype) i_2;

(insn 31 30 32 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:215 -1
     (nil))

(insn 32 31 0 (set (reg:DI 62 [ D.3760 ])
        (sign_extend:DI (reg:SI 80))) mQuery.c:215 -1
     (nil))

;; _11 = file_in_6(D) + _10;

(insn 33 32 34 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:215 -1
     (nil))

(insn 34 33 0 (parallel [
            (set (reg/f:DI 63 [ D.3761 ])
                (plus:DI (reg:DI 62 [ D.3760 ])
                    (reg/f:DI 81)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 62 [ D.3760 ]))
        (nil)))

;; _12 = *_11;

(insn 35 34 0 (set (reg:QI 64 [ D.3762 ])
        (mem:QI (reg/f:DI 63 [ D.3761 ]) [0 *_11+0 S1 A8])) mQuery.c:215 -1
     (nil))

;; if (_12 != 46)

(insn 37 35 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3762 ])
            (const_int 46 [0x2e]))) mQuery.c:215 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) mQuery.c:215 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; sprintf (&str, "%d", n_14(D));

(insn 40 39 41 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 n+0 S4 A32])) mQuery.c:218 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:218 -1
     (nil))

(insn 42 41 43 (set (reg:SI 1 dx)
        (reg:SI 82)) mQuery.c:218 -1
     (nil))

(insn 43 42 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f87347bcab0 *.LC38>)) mQuery.c:218 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (reg:DI 83)) mQuery.c:218 -1
     (nil))

(insn 45 44 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:218 -1
     (nil))

(call_insn 46 45 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f8734943f00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) mQuery.c:218 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))

;; j_15 = 0;

(insn 47 46 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:220 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _16 = (sizetype) j_3;

(insn 51 50 52 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))

(insn 52 51 0 (set (reg:DI 65 [ D.3760 ])
        (sign_extend:DI (reg:SI 84))) mQuery.c:220 -1
     (nil))

;; _18 = file_out_17(D) + _16;

(insn 53 52 54 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:220 -1
     (nil))

(insn 54 53 0 (parallel [
            (set (reg/f:DI 66 [ D.3761 ])
                (plus:DI (reg:DI 65 [ D.3760 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 65 [ D.3760 ]))
        (nil)))

;; _19 = (sizetype) j_3;

(insn 55 54 56 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))

(insn 56 55 0 (set (reg:DI 67 [ D.3760 ])
        (sign_extend:DI (reg:SI 86))) mQuery.c:220 -1
     (nil))

;; _20 = file_in_6(D) + _19;

(insn 57 56 58 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:220 -1
     (nil))

(insn 58 57 0 (parallel [
            (set (reg/f:DI 68 [ D.3761 ])
                (plus:DI (reg:DI 67 [ D.3760 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 67 [ D.3760 ]))
        (nil)))

;; _21 = *_20;

(insn 59 58 0 (set (reg:QI 69 [ D.3762 ])
        (mem:QI (reg/f:DI 68 [ D.3761 ]) [0 *_20+0 S1 A8])) mQuery.c:220 -1
     (nil))

;; *_18 = _21;

(insn 60 59 0 (set (mem:QI (reg/f:DI 66 [ D.3761 ]) [0 *_18+0 S1 A8])
        (reg:QI 69 [ D.3762 ])) mQuery.c:220 -1
     (nil))

;; j_22 = j_3 + 1;

(insn 61 60 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 62 61 63 104 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_3 < i_2)

(insn 65 63 66 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))

(insn 66 65 67 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32]))) mQuery.c:220 -1
     (nil))

(jump_insn 67 66 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) mQuery.c:220 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _23 = (sizetype) j_3;

(insn 69 68 70 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:221 -1
     (nil))

(insn 70 69 0 (set (reg:DI 70 [ D.3760 ])
        (sign_extend:DI (reg:SI 89))) mQuery.c:221 -1
     (nil))

;; _24 = file_out_17(D) + _23;

(insn 71 70 72 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:221 -1
     (nil))

(insn 72 71 0 (parallel [
            (set (reg/f:DI 71 [ D.3761 ])
                (plus:DI (reg:DI 70 [ D.3760 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:221 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 70 [ D.3760 ]))
        (nil)))

;; *_24 = 0;

(insn 73 72 0 (set (mem:QI (reg/f:DI 71 [ D.3761 ]) [0 *_24+0 S1 A8])
        (const_int 0 [0])) mQuery.c:221 -1
     (nil))

;; _25 = __builtin_strlen (file_out_17(D));

(insn 80 73 74 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 -1
     (nil))

(insn 74 80 75 (set (reg:DI 95)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:223 -1
     (nil))

(insn 75 74 76 (set (reg:DI 94)
        (reg:DI 91)) mQuery.c:223 -1
     (nil))

(insn 76 75 77 (set (reg:QI 96)
        (const_int 0 [0])) mQuery.c:223 -1
     (nil))

(insn 77 76 78 (parallel [
            (set (reg:DI 92)
                (unspec:DI [
                        (mem:BLK (reg:DI 94) [0  A8])
                        (reg:QI 96)
                        (const_int 1 [0x1])
                        (reg:DI 95)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 94))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (nil))

(insn 78 77 79 (set (reg:DI 93)
        (not:DI (reg:DI 92))) mQuery.c:223 -1
     (nil))

(insn 79 78 0 (parallel [
            (set (reg:DI 72 [ D.3763 ])
                (plus:DI (reg:DI 93)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (nil))

;; _26 = file_out_17(D) + _25;

(insn 81 79 82 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 -1
     (nil))

(insn 82 81 0 (parallel [
            (set (reg/f:DI 73 [ D.3761 ])
                (plus:DI (reg:DI 72 [ D.3763 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 72 [ D.3763 ]))
        (nil)))

;; __builtin_memcpy (_26, "_", 2);

(insn 83 82 0 (set (mem:HI (reg/f:DI 73 [ D.3761 ]) [0 MEM[(void *)_26]+0 S2 A8])
        (const_int 95 [0x5f])) mQuery.c:223 -1
     (nil))

;; strcat (file_out_17(D), &str);

(insn 84 83 85 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:224 -1
     (nil))

(insn 85 84 86 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:224 -1
     (nil))

(insn 86 85 87 (set (reg:DI 4 si)
        (reg:DI 98)) mQuery.c:224 -1
     (nil))

(insn 87 86 88 (set (reg:DI 5 di)
        (reg:DI 99)) mQuery.c:224 -1
     (nil))

(call_insn 88 87 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f8734939900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) mQuery.c:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

;; _27 = __builtin_strlen (file_out_17(D));

(insn 95 88 89 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 -1
     (nil))

(insn 89 95 90 (set (reg:DI 104)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:225 -1
     (nil))

(insn 90 89 91 (set (reg:DI 103)
        (reg:DI 100)) mQuery.c:225 -1
     (nil))

(insn 91 90 92 (set (reg:QI 105)
        (const_int 0 [0])) mQuery.c:225 -1
     (nil))

(insn 92 91 93 (parallel [
            (set (reg:DI 101)
                (unspec:DI [
                        (mem:BLK (reg:DI 103) [0  A8])
                        (reg:QI 105)
                        (const_int 1 [0x1])
                        (reg:DI 104)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 103))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (nil))

(insn 93 92 94 (set (reg:DI 102)
        (not:DI (reg:DI 101))) mQuery.c:225 -1
     (nil))

(insn 94 93 0 (parallel [
            (set (reg:DI 74 [ D.3763 ])
                (plus:DI (reg:DI 102)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (nil))

;; _28 = file_out_17(D) + _27;

(insn 96 94 97 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 -1
     (nil))

(insn 97 96 0 (parallel [
            (set (reg/f:DI 75 [ D.3761 ])
                (plus:DI (reg:DI 74 [ D.3763 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 74 [ D.3763 ]))
        (nil)))

;; __builtin_memcpy (_28, ".dat", 5);

(insn 98 97 99 (set (mem:SI (reg/f:DI 75 [ D.3761 ]) [0 MEM[(void *)_28]+0 S4 A8])
        (const_int 1952539694 [0x7461642e])) mQuery.c:225 -1
     (nil))

(insn 99 98 0 (set (mem:QI (plus:DI (reg/f:DI 75 [ D.3761 ])
                (const_int 4 [0x4])) [0 MEM[(void *)_28]+4 S1 A8])
        (const_int 0 [0])) mQuery.c:225 -1
     (nil))

;; _29 = 1;

(insn 100 99 0 (set (reg:SI 76 [ D.3764 ])
        (const_int 1 [0x1])) mQuery.c:227 -1
     (nil))

;; str ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 12

;; <L10>:

(code_label 101 100 102 106 "" [0 uses])

(note 102 101 0 NOTE_INSN_BASIC_BLOCK)

;; return _29;

(insn 103 102 104 (set (reg:SI 77 [ <retval> ])
        (reg:SI 76 [ D.3764 ])) mQuery.c:227 -1
     (nil))

(jump_insn 104 103 105 (set (pc)
        (label_ref 0)) mQuery.c:227 -1
     (nil))

(barrier 105 104 0)
deleting block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
        (reg:DI 5 di [ file_out ])) mQuery.c:212 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
        (reg:DI 4 si [ file_in ])) mQuery.c:212 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 n+0 S4 A32])
        (reg:SI 1 dx [ n ])) mQuery.c:212 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3765+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:212 -1
     (nil))
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:214 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 14)) mQuery.c:214 -1
     (nil)
 -> 14)
;;  succ:       5

(barrier 11 10 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 21 11 12 4 101 "" [1 uses])
(note 12 21 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 14 13 15 5 100 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:SI 78)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:214 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 59 [ D.3760 ])
        (sign_extend:DI (reg:SI 78))) mQuery.c:214 -1
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:214 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg/f:DI 60 [ D.3761 ])
                (plus:DI (reg:DI 59 [ D.3760 ])
                    (reg/f:DI 79)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 59 [ D.3760 ]))
        (nil)))
(insn 20 19 22 5 (set (reg:QI 61 [ D.3762 ])
        (mem:QI (reg/f:DI 60 [ D.3761 ]) [0 *_7+0 S1 A8])) mQuery.c:214 -1
     (nil))
(insn 22 20 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3762 ])
            (const_int 0 [0]))) mQuery.c:214 -1
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mQuery.c:214 -1
     (nil)
 -> 21)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 25 24 26 6 (set (pc)
        (label_ref 29)) mQuery.c:215 -1
     (nil)
 -> 29)
;;  succ:       8

(barrier 26 25 36)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 36 26 27 7 103 "" [1 uses])
(note 27 36 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 29 28 30 8 102 "" [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:215 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 62 [ D.3760 ])
        (sign_extend:DI (reg:SI 80))) mQuery.c:215 -1
     (nil))
(insn 33 32 34 8 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:215 -1
     (nil))
(insn 34 33 35 8 (parallel [
            (set (reg/f:DI 63 [ D.3761 ])
                (plus:DI (reg:DI 62 [ D.3760 ])
                    (reg/f:DI 81)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 62 [ D.3760 ]))
        (nil)))
(insn 35 34 37 8 (set (reg:QI 64 [ D.3762 ])
        (mem:QI (reg/f:DI 63 [ D.3761 ]) [0 *_11+0 S1 A8])) mQuery.c:215 -1
     (nil))
(insn 37 35 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3762 ])
            (const_int 46 [0x2e]))) mQuery.c:215 -1
     (nil))
(jump_insn 38 37 39 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) mQuery.c:215 -1
     (nil)
 -> 36)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 n+0 S4 A32])) mQuery.c:218 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:218 -1
     (nil))
(insn 42 41 43 9 (set (reg:SI 1 dx)
        (reg:SI 82)) mQuery.c:218 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f87347bcab0 *.LC38>)) mQuery.c:218 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 5 di)
        (reg:DI 83)) mQuery.c:218 -1
     (nil))
(insn 45 44 46 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:218 -1
     (nil))
(call_insn 46 45 47 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f8734943f00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) mQuery.c:218 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 47 46 48 9 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:220 -1
     (nil))
(jump_insn 48 47 49 9 (set (pc)
        (label_ref 62)) mQuery.c:220 -1
     (nil)
 -> 62)
;;  succ:       11

(barrier 49 48 64)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 64 49 50 10 105 "" [1 uses])
(note 50 64 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))
(insn 52 51 53 10 (set (reg:DI 65 [ D.3760 ])
        (sign_extend:DI (reg:SI 84))) mQuery.c:220 -1
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:220 -1
     (nil))
(insn 54 53 55 10 (parallel [
            (set (reg/f:DI 66 [ D.3761 ])
                (plus:DI (reg:DI 65 [ D.3760 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 65 [ D.3760 ]))
        (nil)))
(insn 55 54 56 10 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 67 [ D.3760 ])
        (sign_extend:DI (reg:SI 86))) mQuery.c:220 -1
     (nil))
(insn 57 56 58 10 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:220 -1
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg/f:DI 68 [ D.3761 ])
                (plus:DI (reg:DI 67 [ D.3760 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 67 [ D.3760 ]))
        (nil)))
(insn 59 58 60 10 (set (reg:QI 69 [ D.3762 ])
        (mem:QI (reg/f:DI 68 [ D.3761 ]) [0 *_20+0 S1 A8])) mQuery.c:220 -1
     (nil))
(insn 60 59 61 10 (set (mem:QI (reg/f:DI 66 [ D.3761 ]) [0 *_18+0 S1 A8])
        (reg:QI 69 [ D.3762 ])) mQuery.c:220 -1
     (nil))
(insn 61 60 62 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 11 104 "" [1 uses])
(note 63 62 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 11 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 -1
     (nil))
(insn 66 65 67 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32]))) mQuery.c:220 -1
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) mQuery.c:220 -1
     (nil)
 -> 64)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:221 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 70 [ D.3760 ])
        (sign_extend:DI (reg:SI 89))) mQuery.c:221 -1
     (nil))
(insn 71 70 72 12 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:221 -1
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg/f:DI 71 [ D.3761 ])
                (plus:DI (reg:DI 70 [ D.3760 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:221 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 70 [ D.3760 ]))
        (nil)))
(insn 73 72 80 12 (set (mem:QI (reg/f:DI 71 [ D.3761 ]) [0 *_24+0 S1 A8])
        (const_int 0 [0])) mQuery.c:221 -1
     (nil))
(insn 80 73 74 12 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 -1
     (nil))
(insn 74 80 75 12 (set (reg:DI 95)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:223 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 94)
        (reg:DI 91)) mQuery.c:223 -1
     (nil))
(insn 76 75 77 12 (set (reg:QI 96)
        (const_int 0 [0])) mQuery.c:223 -1
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg:DI 92)
                (unspec:DI [
                        (mem:BLK (reg:DI 94) [0  A8])
                        (reg:QI 96)
                        (const_int 1 [0x1])
                        (reg:DI 95)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 94))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (nil))
(insn 78 77 79 12 (set (reg:DI 93)
        (not:DI (reg:DI 92))) mQuery.c:223 -1
     (nil))
(insn 79 78 81 12 (parallel [
            (set (reg:DI 72 [ D.3763 ])
                (plus:DI (reg:DI 93)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (nil))
(insn 81 79 82 12 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg/f:DI 73 [ D.3761 ])
                (plus:DI (reg:DI 72 [ D.3763 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 72 [ D.3763 ]))
        (nil)))
(insn 83 82 84 12 (set (mem:HI (reg/f:DI 73 [ D.3761 ]) [0 MEM[(void *)_26]+0 S2 A8])
        (const_int 95 [0x5f])) mQuery.c:223 -1
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:224 -1
     (nil))
(insn 85 84 86 12 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:224 -1
     (nil))
(insn 86 85 87 12 (set (reg:DI 4 si)
        (reg:DI 98)) mQuery.c:224 -1
     (nil))
(insn 87 86 88 12 (set (reg:DI 5 di)
        (reg:DI 99)) mQuery.c:224 -1
     (nil))
(call_insn 88 87 95 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f8734939900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) mQuery.c:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 95 88 89 12 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 -1
     (nil))
(insn 89 95 90 12 (set (reg:DI 104)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:225 -1
     (nil))
(insn 90 89 91 12 (set (reg:DI 103)
        (reg:DI 100)) mQuery.c:225 -1
     (nil))
(insn 91 90 92 12 (set (reg:QI 105)
        (const_int 0 [0])) mQuery.c:225 -1
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 101)
                (unspec:DI [
                        (mem:BLK (reg:DI 103) [0  A8])
                        (reg:QI 105)
                        (const_int 1 [0x1])
                        (reg:DI 104)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 103))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (nil))
(insn 93 92 94 12 (set (reg:DI 102)
        (not:DI (reg:DI 101))) mQuery.c:225 -1
     (nil))
(insn 94 93 96 12 (parallel [
            (set (reg:DI 74 [ D.3763 ])
                (plus:DI (reg:DI 102)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (nil))
(insn 96 94 97 12 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 -1
     (nil))
(insn 97 96 98 12 (parallel [
            (set (reg/f:DI 75 [ D.3761 ])
                (plus:DI (reg:DI 74 [ D.3763 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 74 [ D.3763 ]))
        (nil)))
(insn 98 97 99 12 (set (mem:SI (reg/f:DI 75 [ D.3761 ]) [0 MEM[(void *)_28]+0 S4 A8])
        (const_int 1952539694 [0x7461642e])) mQuery.c:225 -1
     (nil))
(insn 99 98 100 12 (set (mem:QI (plus:DI (reg/f:DI 75 [ D.3761 ])
                (const_int 4 [0x4])) [0 MEM[(void *)_28]+4 S1 A8])
        (const_int 0 [0])) mQuery.c:225 -1
     (nil))
(insn 100 99 103 12 (set (reg:SI 76 [ D.3764 ])
        (const_int 1 [0x1])) mQuery.c:227 -1
     (nil))
(insn 103 100 107 12 (set (reg:SI 77 [ <retval> ])
        (reg:SI 76 [ D.3764 ])) mQuery.c:227 -1
     (nil))
(insn 107 103 110 12 (set (reg/i:SI 0 ax)
        (reg:SI 77 [ <retval> ])) mQuery.c:229 -1
     (nil))
(insn 110 107 111 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3765+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:229 -1
     (nil))
(jump_insn 111 110 118 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:229 -1
     (nil)
 -> 114)
;;  succ:       16
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
(note 118 111 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 112 118 113 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:229 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 113 112 114)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 114 113 119 16 107 "" [1 uses])
(note 119 114 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 119 0 16 (use (reg/i:SI 0 ax)) mQuery.c:229 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

