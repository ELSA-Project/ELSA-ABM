
;; Function _find_extrem (_find_extrem, funcdef_no=2, decl_uid=3943, cgraph_uid=2)

_find_extrem (long double * * p, int np, int c, int Max)
{
  long double x;
  int i;
  long double * D.4187;
  long unsigned int D.4186;
  long unsigned int D.4185;
  long double * D.4184;
  long double * * D.4183;
  long unsigned int D.4182;
  long unsigned int D.4181;
  long double D.4178;
  long double * D.4177;
  long unsigned int D.4176;
  long unsigned int D.4175;
  long double * D.4174;
  long double * * D.4173;
  long unsigned int D.4172;
  long unsigned int D.4171;
  long double * D.4170;
  long unsigned int D.4169;
  long unsigned int D.4168;
  long double * D.4167;
  long double D.4166;
  long double * D.4165;
  long unsigned int D.4164;
  long unsigned int D.4163;
  long double * D.4162;
  long double * * D.4161;
  long unsigned int D.4160;
  long unsigned int D.4159;
  long double D.4156;
  long double * D.4155;
  long unsigned int D.4154;
  long unsigned int D.4153;
  long double * D.4152;
  long double * * D.4151;
  long unsigned int D.4150;
  long unsigned int D.4149;
  long double * D.4148;
  long unsigned int D.4147;
  long unsigned int D.4146;
  long double * D.4145;
  long double _7;
  long double * _11;
  long unsigned int _13;
  long unsigned int _14;
  long double * _15;
  long unsigned int _18;
  long unsigned int _19;
  long double * * _20;
  long double * _21;
  long unsigned int _22;
  long unsigned int _23;
  long double * _24;
  long double _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long unsigned int _30;
  long unsigned int _31;
  long double * _32;
  long double _35;
  long double * _37;
  long unsigned int _38;
  long unsigned int _39;
  long double * _40;
  long unsigned int _42;
  long unsigned int _43;
  long double * * _44;
  long double * _45;
  long unsigned int _46;
  long unsigned int _47;
  long double * _48;
  long double _49;
  long unsigned int _50;
  long unsigned int _51;
  long double * * _52;
  long double * _53;
  long unsigned int _54;
  long unsigned int _55;
  long double * _56;
  long double _59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (Max_8(D) == 1)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  i_9 = 1;
  _11 = *p_10(D);
  _13 = (long unsigned int) c_12(D);
  _14 = _13 * 16;
  _15 = _11 + _14;
  x_16 = *_15;
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       7
  _18 = (long unsigned int) i_1;
  _19 = _18 * 8;
  _20 = p_10(D) + _19;
  _21 = *_20;
  _22 = (long unsigned int) c_12(D);
  _23 = _22 * 16;
  _24 = _21 + _23;
  _25 = *_24;
  if (_25 > x_4)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _26 = (long unsigned int) i_1;
  _27 = _26 * 8;
  _28 = p_10(D) + _27;
  _29 = *_28;
  _30 = (long unsigned int) c_12(D);
  _31 = _30 * 16;
  _32 = _29 + _31;
  x_33 = *_32;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # x_3 = PHI <x_4(4), x_33(5)>
  i_34 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
  # i_1 = PHI <i_9(3), i_34(6)>
  # x_4 = PHI <x_16(3), x_3(6)>
  if (i_1 < np_17(D))
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _35 = x_4;
  goto <bb 15> (<L12>);
;;    succ:       15

;;   basic block 9, loop depth 0
;;    pred:       2
  i_36 = 1;
  _37 = *p_10(D);
  _38 = (long unsigned int) c_12(D);
  _39 = _38 * 16;
  _40 = _37 + _39;
  x_41 = *_40;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 0
;;    pred:       13
  _42 = (long unsigned int) i_2;
  _43 = _42 * 8;
  _44 = p_10(D) + _43;
  _45 = *_44;
  _46 = (long unsigned int) c_12(D);
  _47 = _46 * 16;
  _48 = _45 + _47;
  _49 = *_48;
  if (_49 < x_6)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _50 = (long unsigned int) i_2;
  _51 = _50 * 8;
  _52 = p_10(D) + _51;
  _53 = *_52;
  _54 = (long unsigned int) c_12(D);
  _55 = _54 * 16;
  _56 = _53 + _55;
  x_57 = *_56;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  # x_5 = PHI <x_6(10), x_57(11)>
  i_58 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       9
;;                12
  # i_2 = PHI <i_36(9), i_58(12)>
  # x_6 = PHI <x_41(9), x_5(12)>
  if (i_2 < np_17(D))
    goto <bb 10>;
  else
    goto <bb 14>;
;;    succ:       10
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _59 = x_6;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       8
;;                14
  # _7 = PHI <_35(8), _59(14)>
<L12>:
  return _7;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (x_3 - 3 )
Partition 4 (x_4 - 4 )
Partition 5 (x_5 - 5 )
Partition 6 (x_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (Max_8(D) - 8 )
Partition 9 (i_9 - 9 )
Partition 10 (p_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (c_12(D) - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (x_16 - 16 )
Partition 17 (np_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (x_33 - 33 )
Partition 34 (i_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (i_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (x_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (x_57 - 57 )
Partition 58 (i_58 - 58 )
Partition 59 (_59 - 59 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (x_3 - 3 )
Partition 3 (x_4 - 4 )
Partition 4 (x_5 - 5 )
Partition 5 (x_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (Max_8(D) - 8 )
Partition 8 (i_9 - 9 )
Partition 9 (p_10(D) - 10 )
Partition 10 (c_12(D) - 12 )
Partition 11 (x_16 - 16 )
Partition 12 (np_17(D) - 17 )
Partition 13 (x_33 - 33 )
Partition 14 (i_34 - 34 )
Partition 15 (_35 - 35 )
Partition 16 (i_36 - 36 )
Partition 17 (x_41 - 41 )
Partition 18 (x_57 - 57 )
Partition 19 (i_58 - 58 )
Partition 20 (_59 - 59 )


Live on entry to BB2 : Max_8(D)  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB3 : p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB4 : i_1  x_4  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB5 : i_1  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB6 : i_1  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB7 : p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB8 : x_4  

Live on entry to BB9 : p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB10 : i_2  x_6  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB11 : i_2  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB12 : i_2  p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB13 : p_10(D)  c_12(D)  np_17(D)  

Live on entry to BB14 : x_6  

Live on entry to BB15 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_9
(2147483646) i_1 <-> i_34
(2147483646) i_1 <-> i_36
(2147483646) i_1 <-> i_58
(2147483646) x_3 <-> x_4
(2147483646) x_3 <-> x_5
(2147483646) x_3 <-> x_6
(2147483646) x_3 <-> x_16
(2147483646) x_3 <-> x_33
(2147483646) x_3 <-> x_41
(2147483646) x_3 <-> x_57
(2) x_5 <-> x_6

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (x_3 - 3 )
Partition 3 (x_4 - 4 )
Partition 4 (x_5 - 5 )
Partition 5 (x_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (Max_8(D) - 8 )
Partition 8 (i_9 - 9 )
Partition 9 (p_10(D) - 10 )
Partition 10 (c_12(D) - 12 )
Partition 11 (x_16 - 16 )
Partition 12 (np_17(D) - 17 )
Partition 13 (x_33 - 33 )
Partition 14 (i_34 - 34 )
Partition 15 (_35 - 35 )
Partition 16 (i_36 - 36 )
Partition 17 (x_41 - 41 )
Partition 18 (x_57 - 57 )
Partition 19 (i_58 - 58 )
Partition 20 (_59 - 59 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (9)i_9 [map: 0, 8] : Success -> 0
Coalesce list: (1)i_1 & (34)i_34 [map: 0, 14] : Success -> 0
Coalesce list: (1)i_1 & (36)i_36 [map: 0, 16] : Success -> 0
Coalesce list: (1)i_1 & (58)i_58 [map: 0, 19] : Success -> 0
Coalesce list: (3)x_3 & (4)x_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)x_3 & (5)x_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)x_3 & (6)x_6 [map: 2, 5] : Success -> 2
Coalesce list: (3)x_3 & (16)x_16 [map: 2, 11] : Success -> 2
Coalesce list: (3)x_3 & (33)x_33 [map: 2, 13] : Success -> 2
Coalesce list: (3)x_3 & (41)x_41 [map: 2, 17] : Success -> 2
Coalesce list: (3)x_3 & (57)x_57 [map: 2, 18] : Success -> 2
Coalesce list: (5)x_3 & (6)x_3: Already Coalesced.
Coalesce list: (7)_7 & (59)_59 [map: 6, 20] : Success -> 6
Coalesce list: (7)_7 & (35)_35 [map: 6, 15] : Success -> 6
Coalesce list: (6)x_3 & (5)x_3: Already Coalesced.
Coalesce list: (6)x_3 & (41)x_3: Already Coalesced.
Coalesce list: (2)i_1 & (58)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (36)i_1: Already Coalesced.
Coalesce list: (5)x_3 & (57)x_3: Already Coalesced.
Coalesce list: (4)x_3 & (3)x_3: Already Coalesced.
Coalesce list: (4)x_3 & (16)x_3: Already Coalesced.
Coalesce list: (1)i_1 & (34)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (9)i_1: Already Coalesced.
Coalesce list: (3)x_3 & (33)x_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 9 34 36 58 )
Partition 1 (x_3 - 3 4 5 6 16 33 41 57 )
Partition 2 (_7 - 7 35 59 )
Partition 3 (Max_8(D) - 8 )
Partition 4 (p_10(D) - 10 )
Partition 5 (_11 - 11 )
Partition 6 (c_12(D) - 12 )
Partition 7 (_13 - 13 )
Partition 8 (_14 - 14 )
Partition 9 (_15 - 15 )
Partition 10 (np_17(D) - 17 )
Partition 11 (_18 - 18 )
Partition 12 (_19 - 19 )
Partition 13 (_20 - 20 )
Partition 14 (_21 - 21 )
Partition 15 (_22 - 22 )
Partition 16 (_23 - 23 )
Partition 17 (_24 - 24 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_27 - 27 )
Partition 21 (_28 - 28 )
Partition 22 (_29 - 29 )
Partition 23 (_30 - 30 )
Partition 24 (_31 - 31 )
Partition 25 (_32 - 32 )
Partition 26 (_37 - 37 )
Partition 27 (_38 - 38 )
Partition 28 (_39 - 39 )
Partition 29 (_40 - 40 )
Partition 30 (_42 - 42 )
Partition 31 (_43 - 43 )
Partition 32 (_44 - 44 )
Partition 33 (_45 - 45 )
Partition 34 (_46 - 46 )
Partition 35 (_47 - 47 )
Partition 36 (_48 - 48 )
Partition 37 (_49 - 49 )
Partition 38 (_50 - 50 )
Partition 39 (_51 - 51 )
Partition 40 (_52 - 52 )
Partition 41 (_53 - 53 )
Partition 42 (_54 - 54 )
Partition 43 (_55 - 55 )
Partition 44 (_56 - 56 )

_find_extrem (long double * * p, int np, int c, int Max)
{
  long double x;
  int i;
  long double * D.4187;
  long unsigned int D.4186;
  long unsigned int D.4185;
  long double * D.4184;
  long double * * D.4183;
  long unsigned int D.4182;
  long unsigned int D.4181;
  long double D.4178;
  long double * D.4177;
  long unsigned int D.4176;
  long unsigned int D.4175;
  long double * D.4174;
  long double * * D.4173;
  long unsigned int D.4172;
  long unsigned int D.4171;
  long double * D.4170;
  long unsigned int D.4169;
  long unsigned int D.4168;
  long double * D.4167;
  long double D.4166;
  long double * D.4165;
  long unsigned int D.4164;
  long unsigned int D.4163;
  long double * D.4162;
  long double * * D.4161;
  long unsigned int D.4160;
  long unsigned int D.4159;
  long double D.4156;
  long double * D.4155;
  long unsigned int D.4154;
  long unsigned int D.4153;
  long double * D.4152;
  long double * * D.4151;
  long unsigned int D.4150;
  long unsigned int D.4149;
  long double * D.4148;
  long unsigned int D.4147;
  long unsigned int D.4146;
  long double * D.4145;
  long double _7;
  long double * _11;
  long unsigned int _13;
  long unsigned int _14;
  long double * _15;
  long unsigned int _18;
  long unsigned int _19;
  long double * * _20;
  long double * _21;
  long unsigned int _22;
  long unsigned int _23;
  long double * _24;
  long double _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long unsigned int _30;
  long unsigned int _31;
  long double * _32;
  long double _35;
  long double * _37;
  long unsigned int _38;
  long unsigned int _39;
  long double * _40;
  long unsigned int _42;
  long unsigned int _43;
  long double * * _44;
  long double * _45;
  long unsigned int _46;
  long unsigned int _47;
  long double * _48;
  long double _49;
  long unsigned int _50;
  long unsigned int _51;
  long double * * _52;
  long double * _53;
  long unsigned int _54;
  long unsigned int _55;
  long double * _56;
  long double _59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (Max_8(D) == 1)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  i_9 = 1;
  _11 = *p_10(D);
  _13 = (long unsigned int) c_12(D);
  _14 = _13 * 16;
  _15 = _11 + _14;
  x_16 = *_15;
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       7
  _18 = (long unsigned int) i_1;
  _19 = _18 * 8;
  _20 = p_10(D) + _19;
  _21 = *_20;
  _22 = (long unsigned int) c_12(D);
  _23 = _22 * 16;
  _24 = _21 + _23;
  _25 = *_24;
  if (_25 > x_4)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _26 = (long unsigned int) i_1;
  _27 = _26 * 8;
  _28 = p_10(D) + _27;
  _29 = *_28;
  _30 = (long unsigned int) c_12(D);
  _31 = _30 * 16;
  _32 = _29 + _31;
  x_33 = *_32;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # x_3 = PHI <x_4(4), x_33(5)>
  i_34 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
  # i_1 = PHI <i_9(3), i_34(6)>
  # x_4 = PHI <x_16(3), x_3(6)>
  if (i_1 < np_17(D))
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _35 = x_4;
  goto <bb 15> (<L12>);
;;    succ:       15

;;   basic block 9, loop depth 0
;;    pred:       2
  i_36 = 1;
  _37 = *p_10(D);
  _38 = (long unsigned int) c_12(D);
  _39 = _38 * 16;
  _40 = _37 + _39;
  x_41 = *_40;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 0
;;    pred:       13
  _42 = (long unsigned int) i_2;
  _43 = _42 * 8;
  _44 = p_10(D) + _43;
  _45 = *_44;
  _46 = (long unsigned int) c_12(D);
  _47 = _46 * 16;
  _48 = _45 + _47;
  _49 = *_48;
  if (_49 < x_6)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _50 = (long unsigned int) i_2;
  _51 = _50 * 8;
  _52 = p_10(D) + _51;
  _53 = *_52;
  _54 = (long unsigned int) c_12(D);
  _55 = _54 * 16;
  _56 = _53 + _55;
  x_57 = *_56;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  # x_5 = PHI <x_6(10), x_57(11)>
  i_58 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       9
;;                12
  # i_2 = PHI <i_36(9), i_58(12)>
  # x_6 = PHI <x_41(9), x_5(12)>
  if (i_2 < np_17(D))
    goto <bb 10>;
  else
    goto <bb 14>;
;;    succ:       10
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _59 = x_6;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       8
;;                14
  # _7 = PHI <_35(8), _59(14)>
<L12>:
  return _7;
;;    succ:       EXIT

}


Partition 1: size 16 align 16
	x_3
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; if (Max_8(D) == 1)

(insn 9 8 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:22 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:22 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i_9 = 1;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:23 -1
     (nil))

;; _11 = *p_10(D);

(insn 13 12 14 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))

(insn 14 13 0 (set (reg/f:DI 60 [ D.4955 ])
        (mem/f:DI (reg/f:DI 99) [0 *p_10(D)+0 S8 A64])) mSector.c:23 -1
     (nil))

;; _13 = (long unsigned int) c_12(D);

(insn 15 14 16 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 16 15 0 (set (reg:DI 61 [ D.4956 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:23 -1
     (nil))

;; _14 = _13 * 16;

(insn 17 16 0 (parallel [
            (set (reg:DI 62 [ D.4956 ])
                (ashift:DI (reg:DI 61 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _15 = _11 + _14;

(insn 18 17 0 (parallel [
            (set (reg/f:DI 63 [ D.4955 ])
                (plus:DI (reg/f:DI 60 [ D.4955 ])
                    (reg:DI 62 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; x_16 = *_15;

(insn 19 18 20 (set (reg:XF 101)
        (mem:XF (reg/f:DI 63 [ D.4955 ]) [0 *_15+0 S16 A128])) mSector.c:23 -1
     (nil))

(insn 20 19 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 101)) mSector.c:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _18 = (long unsigned int) i_1;

(insn 24 23 25 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 25 24 0 (set (reg:DI 64 [ D.4956 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:23 -1
     (nil))

;; _19 = _18 * 8;

(insn 26 25 0 (parallel [
            (set (reg:DI 65 [ D.4956 ])
                (ashift:DI (reg:DI 64 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _20 = p_10(D) + _19;

(insn 27 26 28 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))

(insn 28 27 0 (parallel [
            (set (reg/f:DI 66 [ D.4957 ])
                (plus:DI (reg:DI 65 [ D.4956 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 65 [ D.4956 ]))
        (nil)))

;; _21 = *_20;

(insn 29 28 0 (set (reg/f:DI 67 [ D.4955 ])
        (mem/f:DI (reg/f:DI 66 [ D.4957 ]) [0 *_20+0 S8 A64])) mSector.c:23 -1
     (nil))

;; _22 = (long unsigned int) c_12(D);

(insn 30 29 31 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 31 30 0 (set (reg:DI 68 [ D.4956 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:23 -1
     (nil))

;; _23 = _22 * 16;

(insn 32 31 0 (parallel [
            (set (reg:DI 69 [ D.4956 ])
                (ashift:DI (reg:DI 68 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _24 = _21 + _23;

(insn 33 32 0 (parallel [
            (set (reg/f:DI 70 [ D.4955 ])
                (plus:DI (reg/f:DI 67 [ D.4955 ])
                    (reg:DI 69 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _25 = *_24;

(insn 34 33 0 (set (reg:XF 71 [ D.4954 ])
        (mem:XF (reg/f:DI 70 [ D.4955 ]) [0 *_24+0 S16 A128])) mSector.c:23 -1
     (nil))

;; if (_25 > x_4)

(insn 35 34 36 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:23 -1
     (nil))

(insn 36 35 37 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 71 [ D.4954 ])
            (reg:XF 105))) mSector.c:23 -1
     (nil))

(jump_insn 37 36 38 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) mSector.c:23 -1
     (nil))

(jump_insn 38 37 39 (set (pc)
        (label_ref 0)) mSector.c:23 -1
     (nil))

(barrier 39 38 40)

(code_label 40 39 0 5 "" [0 uses])

;; Generating RTL for gimple basic block 5

;; _26 = (long unsigned int) i_1;

(insn 42 41 43 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 43 42 0 (set (reg:DI 72 [ D.4956 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:23 -1
     (nil))

;; _27 = _26 * 8;

(insn 44 43 0 (parallel [
            (set (reg:DI 73 [ D.4956 ])
                (ashift:DI (reg:DI 72 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _28 = p_10(D) + _27;

(insn 45 44 46 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg/f:DI 74 [ D.4957 ])
                (plus:DI (reg:DI 73 [ D.4956 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 73 [ D.4956 ]))
        (nil)))

;; _29 = *_28;

(insn 47 46 0 (set (reg/f:DI 75 [ D.4955 ])
        (mem/f:DI (reg/f:DI 74 [ D.4957 ]) [0 *_28+0 S8 A64])) mSector.c:23 -1
     (nil))

;; _30 = (long unsigned int) c_12(D);

(insn 48 47 49 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 49 48 0 (set (reg:DI 76 [ D.4956 ])
        (sign_extend:DI (reg:SI 108))) mSector.c:23 -1
     (nil))

;; _31 = _30 * 16;

(insn 50 49 0 (parallel [
            (set (reg:DI 77 [ D.4956 ])
                (ashift:DI (reg:DI 76 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; _32 = _29 + _31;

(insn 51 50 0 (parallel [
            (set (reg/f:DI 78 [ D.4955 ])
                (plus:DI (reg/f:DI 75 [ D.4955 ])
                    (reg:DI 77 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; x_33 = *_32;

(insn 52 51 53 (set (reg:XF 109)
        (mem:XF (reg/f:DI 78 [ D.4955 ]) [0 *_32+0 S16 A128])) mSector.c:23 -1
     (nil))

(insn 53 52 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 109)) mSector.c:23 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 54 53 55 4 "" [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; i_34 = i_1 + 1;

(insn 56 55 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 57 56 58 3 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < np_17(D))

(insn 60 58 61 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))

(insn 61 60 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:23 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) mSector.c:23 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _35 = x_4;

(insn 64 63 0 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:24 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 67 66 68 2 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; i_36 = 1;

(insn 69 68 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:27 -1
     (nil))

;; _37 = *p_10(D);

(insn 70 69 71 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))

(insn 71 70 0 (set (reg/f:DI 79 [ D.4955 ])
        (mem/f:DI (reg/f:DI 111) [0 *p_10(D)+0 S8 A64])) mSector.c:27 -1
     (nil))

;; _38 = (long unsigned int) c_12(D);

(insn 72 71 73 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 73 72 0 (set (reg:DI 80 [ D.4956 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:27 -1
     (nil))

;; _39 = _38 * 16;

(insn 74 73 0 (parallel [
            (set (reg:DI 81 [ D.4956 ])
                (ashift:DI (reg:DI 80 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _40 = _37 + _39;

(insn 75 74 0 (parallel [
            (set (reg/f:DI 82 [ D.4955 ])
                (plus:DI (reg/f:DI 79 [ D.4955 ])
                    (reg:DI 81 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; x_41 = *_40;

(insn 76 75 77 (set (reg:XF 113)
        (mem:XF (reg/f:DI 82 [ D.4955 ]) [0 *_40+0 S16 A128])) mSector.c:27 -1
     (nil))

(insn 77 76 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 113)) mSector.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _42 = (long unsigned int) i_2;

(insn 81 80 82 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 82 81 0 (set (reg:DI 83 [ D.4956 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:27 -1
     (nil))

;; _43 = _42 * 8;

(insn 83 82 0 (parallel [
            (set (reg:DI 84 [ D.4956 ])
                (ashift:DI (reg:DI 83 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _44 = p_10(D) + _43;

(insn 84 83 85 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))

(insn 85 84 0 (parallel [
            (set (reg/f:DI 85 [ D.4957 ])
                (plus:DI (reg:DI 84 [ D.4956 ])
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 84 [ D.4956 ]))
        (nil)))

;; _45 = *_44;

(insn 86 85 0 (set (reg/f:DI 86 [ D.4955 ])
        (mem/f:DI (reg/f:DI 85 [ D.4957 ]) [0 *_44+0 S8 A64])) mSector.c:27 -1
     (nil))

;; _46 = (long unsigned int) c_12(D);

(insn 87 86 88 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 88 87 0 (set (reg:DI 87 [ D.4956 ])
        (sign_extend:DI (reg:SI 116))) mSector.c:27 -1
     (nil))

;; _47 = _46 * 16;

(insn 89 88 0 (parallel [
            (set (reg:DI 88 [ D.4956 ])
                (ashift:DI (reg:DI 87 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _48 = _45 + _47;

(insn 90 89 0 (parallel [
            (set (reg/f:DI 89 [ D.4955 ])
                (plus:DI (reg/f:DI 86 [ D.4955 ])
                    (reg:DI 88 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _49 = *_48;

(insn 91 90 0 (set (reg:XF 90 [ D.4954 ])
        (mem:XF (reg/f:DI 89 [ D.4955 ]) [0 *_48+0 S16 A128])) mSector.c:27 -1
     (nil))

;; if (_49 < x_6)

(insn 92 91 93 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:27 -1
     (nil))

(insn 93 92 94 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 117)
            (reg:XF 90 [ D.4954 ]))) mSector.c:27 -1
     (nil))

(jump_insn 94 93 95 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mSector.c:27 -1
     (nil))

(jump_insn 95 94 96 (set (pc)
        (label_ref 0)) mSector.c:27 -1
     (nil))

(barrier 96 95 97)

(code_label 97 96 0 10 "" [0 uses])

;; Generating RTL for gimple basic block 11

;; _50 = (long unsigned int) i_2;

(insn 99 98 100 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 100 99 0 (set (reg:DI 91 [ D.4956 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:27 -1
     (nil))

;; _51 = _50 * 8;

(insn 101 100 0 (parallel [
            (set (reg:DI 92 [ D.4956 ])
                (ashift:DI (reg:DI 91 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _52 = p_10(D) + _51;

(insn 102 101 103 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))

(insn 103 102 0 (parallel [
            (set (reg/f:DI 93 [ D.4957 ])
                (plus:DI (reg:DI 92 [ D.4956 ])
                    (reg/f:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 92 [ D.4956 ]))
        (nil)))

;; _53 = *_52;

(insn 104 103 0 (set (reg/f:DI 94 [ D.4955 ])
        (mem/f:DI (reg/f:DI 93 [ D.4957 ]) [0 *_52+0 S8 A64])) mSector.c:27 -1
     (nil))

;; _54 = (long unsigned int) c_12(D);

(insn 105 104 106 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 106 105 0 (set (reg:DI 95 [ D.4956 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:27 -1
     (nil))

;; _55 = _54 * 16;

(insn 107 106 0 (parallel [
            (set (reg:DI 96 [ D.4956 ])
                (ashift:DI (reg:DI 95 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; _56 = _53 + _55;

(insn 108 107 0 (parallel [
            (set (reg/f:DI 97 [ D.4955 ])
                (plus:DI (reg/f:DI 94 [ D.4955 ])
                    (reg:DI 96 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; x_57 = *_56;

(insn 109 108 110 (set (reg:XF 121)
        (mem:XF (reg/f:DI 97 [ D.4955 ]) [0 *_56+0 S16 A128])) mSector.c:27 -1
     (nil))

(insn 110 109 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 121)) mSector.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 111 110 112 9 "" [0 uses])

(note 112 111 0 NOTE_INSN_BASIC_BLOCK)

;; i_58 = i_2 + 1;

(insn 113 112 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 114 113 115 8 "" [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 < np_17(D))

(insn 117 115 118 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))

(insn 118 117 119 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:27 -1
     (nil))

(jump_insn 119 118 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:27 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _59 = x_6;

(insn 121 120 0 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:28 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; <L12>:

(code_label 122 121 123 7 "" [0 uses])

(note 123 122 0 NOTE_INSN_BASIC_BLOCK)

;; return _7;

(insn 124 123 125 (set (reg:XF 98 [ <retval> ])
        (reg:XF 59 [ D.4954 ])) -1
     (nil))

(jump_insn 125 124 126 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 126 125 0)
Purged non-fallthru edges from bb 19
Purged non-fallthru edges from bb 21
deleting block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 5->6 to 9 failed.
Forwarding edge 5->6 to 9 failed.
deleting block 7
Edge 13->15 redirected to 16
Forwarding edge 13->14 to 17 failed.
Forwarding edge 13->14 to 17 failed.
deleting block 15
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.
Forwarding edge 13->14 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:19 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32])
        (reg:SI 4 si [ np ])) mSector.c:19 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])
        (reg:SI 1 dx [ c ])) mSector.c:19 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
        (reg:SI 2 cx [ Max ])) mSector.c:19 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:22 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:22 -1
     (nil)
 -> 67)
;;  succ:       4 (FALLTHRU)
;;              12

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:23 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 60 [ D.4955 ])
        (mem/f:DI (reg/f:DI 99) [0 *p_10(D)+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 61 [ D.4956 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:23 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 62 [ D.4956 ])
                (ashift:DI (reg:DI 61 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:DI 63 [ D.4955 ])
                (plus:DI (reg/f:DI 60 [ D.4955 ])
                    (reg:DI 62 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 19 18 20 4 (set (reg:XF 101)
        (mem:XF (reg/f:DI 63 [ D.4955 ]) [0 *_15+0 S16 A128])) mSector.c:23 -1
     (nil))
(insn 20 19 21 4 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 101)) mSector.c:23 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref 57)) mSector.c:23 -1
     (nil)
 -> 57)
;;  succ:       10

(barrier 22 21 59)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
(code_label 59 22 23 5 6 "" [1 uses])
(note 23 59 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 64 [ D.4956 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:23 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 65 [ D.4956 ])
                (ashift:DI (reg:DI 64 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg/f:DI 66 [ D.4957 ])
                (plus:DI (reg:DI 65 [ D.4956 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 65 [ D.4956 ]))
        (nil)))
(insn 29 28 30 5 (set (reg/f:DI 67 [ D.4955 ])
        (mem/f:DI (reg/f:DI 66 [ D.4957 ]) [0 *_20+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 68 [ D.4956 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:23 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 69 [ D.4956 ])
                (ashift:DI (reg:DI 68 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 70 [ D.4955 ])
                (plus:DI (reg/f:DI 67 [ D.4955 ])
                    (reg:DI 69 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 34 33 35 5 (set (reg:XF 71 [ D.4954 ])
        (mem:XF (reg/f:DI 70 [ D.4955 ]) [0 *_24+0 S16 A128])) mSector.c:23 -1
     (nil))
(insn 35 34 36 5 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:23 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 71 [ D.4954 ])
            (reg:XF 105))) mSector.c:23 -1
     (nil))
(jump_insn 37 36 133 5 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 138)
            (pc))) mSector.c:23 612 {*jcc_1}
     (nil)
 -> 138)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 133 37 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 38 133 39 6 (set (pc)
        (label_ref 54)) mSector.c:23 -1
     (nil)
 -> 54)
;;  succ:       9

(barrier 39 38 138)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 138 39 41 8 12 "" [1 uses])
(note 41 138 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 72 [ D.4956 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:23 -1
     (nil))
(insn 44 43 45 8 (parallel [
            (set (reg:DI 73 [ D.4956 ])
                (ashift:DI (reg:DI 72 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 45 44 46 8 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 46 45 47 8 (parallel [
            (set (reg/f:DI 74 [ D.4957 ])
                (plus:DI (reg:DI 73 [ D.4956 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 73 [ D.4956 ]))
        (nil)))
(insn 47 46 48 8 (set (reg/f:DI 75 [ D.4955 ])
        (mem/f:DI (reg/f:DI 74 [ D.4957 ]) [0 *_28+0 S8 A64])) mSector.c:23 -1
     (nil))
(insn 48 47 49 8 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 76 [ D.4956 ])
        (sign_extend:DI (reg:SI 108))) mSector.c:23 -1
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg:DI 77 [ D.4956 ])
                (ashift:DI (reg:DI 76 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:DI 78 [ D.4955 ])
                (plus:DI (reg/f:DI 75 [ D.4955 ])
                    (reg:DI 77 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
(insn 52 51 53 8 (set (reg:XF 109)
        (mem:XF (reg/f:DI 78 [ D.4955 ]) [0 *_32+0 S16 A128])) mSector.c:23 -1
     (nil))
(insn 53 52 54 8 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 109)) mSector.c:23 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              6
(code_label 54 53 55 9 4 "" [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 -1
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              9 (FALLTHRU,DFS_BACK)
(code_label 57 56 58 10 3 "" [1 uses])
(note 58 57 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 10 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 -1
     (nil))
(insn 61 60 62 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:23 -1
     (nil))
(jump_insn 62 61 63 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) mSector.c:23 -1
     (nil)
 -> 59)
;;  succ:       5
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:24 -1
     (nil))
(jump_insn 65 64 66 11 (set (pc)
        (label_ref 122)) mSector.c:24 -1
     (nil)
 -> 122)
;;  succ:       20

(barrier 66 65 67)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 67 66 68 12 2 "" [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:27 -1
     (nil))
(insn 70 69 71 12 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 71 70 72 12 (set (reg/f:DI 79 [ D.4955 ])
        (mem/f:DI (reg/f:DI 111) [0 *p_10(D)+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 72 71 73 12 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 73 72 74 12 (set (reg:DI 80 [ D.4956 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:27 -1
     (nil))
(insn 74 73 75 12 (parallel [
            (set (reg:DI 81 [ D.4956 ])
                (ashift:DI (reg:DI 80 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 75 74 76 12 (parallel [
            (set (reg/f:DI 82 [ D.4955 ])
                (plus:DI (reg/f:DI 79 [ D.4955 ])
                    (reg:DI 81 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 76 75 77 12 (set (reg:XF 113)
        (mem:XF (reg/f:DI 82 [ D.4955 ]) [0 *_40+0 S16 A128])) mSector.c:27 -1
     (nil))
(insn 77 76 78 12 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 113)) mSector.c:27 -1
     (nil))
(jump_insn 78 77 79 12 (set (pc)
        (label_ref 114)) mSector.c:27 -1
     (nil)
 -> 114)
;;  succ:       18

(barrier 79 78 116)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
(code_label 116 79 80 13 11 "" [1 uses])
(note 80 116 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 82 81 83 13 (set (reg:DI 83 [ D.4956 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:27 -1
     (nil))
(insn 83 82 84 13 (parallel [
            (set (reg:DI 84 [ D.4956 ])
                (ashift:DI (reg:DI 83 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 84 83 85 13 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg/f:DI 85 [ D.4957 ])
                (plus:DI (reg:DI 84 [ D.4956 ])
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 84 [ D.4956 ]))
        (nil)))
(insn 86 85 87 13 (set (reg/f:DI 86 [ D.4955 ])
        (mem/f:DI (reg/f:DI 85 [ D.4957 ]) [0 *_44+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 87 86 88 13 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 88 87 89 13 (set (reg:DI 87 [ D.4956 ])
        (sign_extend:DI (reg:SI 116))) mSector.c:27 -1
     (nil))
(insn 89 88 90 13 (parallel [
            (set (reg:DI 88 [ D.4956 ])
                (ashift:DI (reg:DI 87 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 90 89 91 13 (parallel [
            (set (reg/f:DI 89 [ D.4955 ])
                (plus:DI (reg/f:DI 86 [ D.4955 ])
                    (reg:DI 88 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 91 90 92 13 (set (reg:XF 90 [ D.4954 ])
        (mem:XF (reg/f:DI 89 [ D.4955 ]) [0 *_48+0 S16 A128])) mSector.c:27 -1
     (nil))
(insn 92 91 93 13 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:27 -1
     (nil))
(insn 93 92 94 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 117)
            (reg:XF 90 [ D.4954 ]))) mSector.c:27 -1
     (nil))
(jump_insn 94 93 135 13 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) mSector.c:27 612 {*jcc_1}
     (nil)
 -> 139)
;;  succ:       16
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
(note 135 94 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 135 96 14 (set (pc)
        (label_ref 111)) mSector.c:27 -1
     (nil)
 -> 111)
;;  succ:       17

(barrier 96 95 139)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 139 96 98 16 13 "" [1 uses])
(note 98 139 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 16 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 100 99 101 16 (set (reg:DI 91 [ D.4956 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:27 -1
     (nil))
(insn 101 100 102 16 (parallel [
            (set (reg:DI 92 [ D.4956 ])
                (ashift:DI (reg:DI 91 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 102 101 103 16 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 103 102 104 16 (parallel [
            (set (reg/f:DI 93 [ D.4957 ])
                (plus:DI (reg:DI 92 [ D.4956 ])
                    (reg/f:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 92 [ D.4956 ]))
        (nil)))
(insn 104 103 105 16 (set (reg/f:DI 94 [ D.4955 ])
        (mem/f:DI (reg/f:DI 93 [ D.4957 ]) [0 *_52+0 S8 A64])) mSector.c:27 -1
     (nil))
(insn 105 104 106 16 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 106 105 107 16 (set (reg:DI 95 [ D.4956 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:27 -1
     (nil))
(insn 107 106 108 16 (parallel [
            (set (reg:DI 96 [ D.4956 ])
                (ashift:DI (reg:DI 95 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 108 107 109 16 (parallel [
            (set (reg/f:DI 97 [ D.4955 ])
                (plus:DI (reg/f:DI 94 [ D.4955 ])
                    (reg:DI 96 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
(insn 109 108 110 16 (set (reg:XF 121)
        (mem:XF (reg/f:DI 97 [ D.4955 ]) [0 *_56+0 S16 A128])) mSector.c:27 -1
     (nil))
(insn 110 109 111 16 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 121)) mSector.c:27 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
;;              14
(code_label 111 110 112 17 9 "" [1 uses])
(note 112 111 113 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 -1
     (nil))
;;  succ:       18 (FALLTHRU,DFS_BACK)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              17 (FALLTHRU,DFS_BACK)
(code_label 114 113 115 18 8 "" [1 uses])
(note 115 114 117 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 18 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 -1
     (nil))
(insn 118 117 119 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:27 -1
     (nil))
(jump_insn 119 118 120 18 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:27 -1
     (nil)
 -> 116)
;;  succ:       13
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 120 119 121 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 19 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:28 -1
     (nil))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              19 (FALLTHRU)
(code_label 122 121 123 20 7 "" [1 uses])
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 128 20 (set (reg:XF 98 [ <retval> ])
        (reg:XF 59 [ D.4954 ])) -1
     (nil))
(insn 128 124 131 20 (set (reg/i:XF 8 st)
        (reg:XF 98 [ <retval> ])) mSector.c:30 -1
     (nil))
(insn 131 128 0 20 (use (reg/i:XF 8 st)) mSector.c:30 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _point_proj (_point_proj, funcdef_no=3, decl_uid=3957, cgraph_uid=3)

_point_proj (long double * P, long double * A, long double * B, long double * H)
{
  long double c;
  long double m;
  long double D.4229;
  long double D.4228;
  long double D.4227;
  long double D.4226;
  long double D.4225;
  long double D.4224;
  long double D.4223;
  long double D.4222;
  long double * D.4221;
  long double D.4220;
  long double D.4219;
  long double * D.4218;
  long double D.4217;
  long double D.4216;
  long double D.4215;
  long double D.4214;
  long double D.4213;
  long double D.4212;
  long double * D.4211;
  long double D.4210;
  long double D.4209;
  long double D.4208;
  long double D.4207;
  long double D.4206;
  long double * D.4205;
  long double D.4204;
  long double D.4203;
  long double D.4202;
  long double D.4201;
  long double D.4200;
  long double * D.4199;
  long double D.4198;
  long double * D.4197;
  int D.4196;
  long double D.4195;
  long double * D.4194;
  long double D.4193;
  long double D.4190;
  long double D.4189;
  int _1;
  long double _3;
  long double _5;
  long double _6;
  long double * _8;
  long double _10;
  int _11;
  long double * _12;
  long double _13;
  long double * _14;
  long double _15;
  long double _16;
  long double _17;
  long double _18;
  long double _19;
  long double * _21;
  long double _22;
  long double _23;
  long double _24;
  long double _26;
  long double _27;
  long double * _28;
  long double _29;
  long double _30;
  long double _31;
  long double _32;
  long double _33;
  long double _34;
  long double * _35;
  long double _36;
  long double _37;
  long double * _38;
  long double _39;
  long double _40;
  long double _41;
  long double _42;
  long double _43;
  long double _44;
  long double _45;
  long double _46;
  int _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = *B_2(D);
  _5 = *A_4(D);
  if (_3 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = *B_2(D);
  *H_7(D) = _6;
  _8 = H_7(D) + 16;
  _10 = MEM[(long double *)P_9(D) + 16B];
  *_8 = _10;
  _11 = 1;
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _12 = B_2(D) + 16;
  _13 = *_12;
  _14 = A_4(D) + 16;
  _15 = *_14;
  _16 = _13 - _15;
  _17 = *B_2(D);
  _18 = *A_4(D);
  _19 = _17 - _18;
  m_20 = _16 / _19;
  _21 = A_4(D) + 16;
  _22 = *_21;
  _23 = *A_4(D);
  _24 = _23 * m_20;
  c_25 = _22 - _24;
  _26 = *P_9(D);
  _27 = _26 / m_20;
  _28 = P_9(D) + 16;
  _29 = *_28;
  _30 = _27 + _29;
  _31 = _30 - c_25;
  _32 = 1.0e+0 / m_20;
  _33 = _32 + m_20;
  _34 = _31 / _33;
  *H_7(D) = _34;
  _35 = H_7(D) + 16;
  _36 = *P_9(D);
  _37 = _36 / m_20;
  _38 = P_9(D) + 16;
  _39 = *_38;
  _40 = _37 + _39;
  _41 = _40 - c_25;
  _42 = 1.0e+0 / m_20;
  _43 = _42 + m_20;
  _44 = _41 / _43;
  _45 = _44 * m_20;
  _46 = _45 + c_25;
  *_35 = _46;
  _47 = 1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_11(3), _47(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (B_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (A_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (H_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (P_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (m_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (c_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (B_2(D) - 2 )
Partition 2 (A_4(D) - 4 )
Partition 3 (H_7(D) - 7 )
Partition 4 (P_9(D) - 9 )
Partition 5 (_11 - 11 )
Partition 6 (_47 - 47 )


Live on entry to BB2 : B_2(D)  A_4(D)  H_7(D)  P_9(D)  

Live on entry to BB3 : B_2(D)  H_7(D)  P_9(D)  

Live on entry to BB4 : B_2(D)  A_4(D)  H_7(D)  P_9(D)  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (B_2(D) - 2 )
Partition 2 (A_4(D) - 4 )
Partition 3 (H_7(D) - 7 )
Partition 4 (P_9(D) - 9 )
Partition 5 (_11 - 11 )
Partition 6 (_47 - 47 )

Coalesce list: (1)_1 & (47)_47 [map: 0, 6] : Success -> 0
Coalesce list: (1)_1 & (11)_11 [map: 0, 5] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 11 47 )
Partition 1 (B_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (A_4(D) - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (H_7(D) - 7 )
Partition 7 (_8 - 8 )
Partition 8 (P_9(D) - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_14 - 14 )
Partition 13 (_15 - 15 )
Partition 14 (_16 - 16 )
Partition 15 (_17 - 17 )
Partition 16 (_18 - 18 )
Partition 17 (_19 - 19 )
Partition 18 (m_20 - 20 )
Partition 19 (_21 - 21 )
Partition 20 (_22 - 22 )
Partition 21 (_23 - 23 )
Partition 22 (_24 - 24 )
Partition 23 (c_25 - 25 )
Partition 24 (_26 - 26 )
Partition 25 (_27 - 27 )
Partition 26 (_28 - 28 )
Partition 27 (_29 - 29 )
Partition 28 (_30 - 30 )
Partition 29 (_31 - 31 )
Partition 30 (_32 - 32 )
Partition 31 (_33 - 33 )
Partition 32 (_34 - 34 )
Partition 33 (_35 - 35 )
Partition 34 (_36 - 36 )
Partition 35 (_37 - 37 )
Partition 36 (_38 - 38 )
Partition 37 (_39 - 39 )
Partition 38 (_40 - 40 )
Partition 39 (_41 - 41 )
Partition 40 (_42 - 42 )
Partition 41 (_43 - 43 )
Partition 42 (_44 - 44 )
Partition 43 (_45 - 45 )
Partition 44 (_46 - 46 )

_point_proj (long double * P, long double * A, long double * B, long double * H)
{
  long double c;
  long double m;
  long double D.4229;
  long double D.4228;
  long double D.4227;
  long double D.4226;
  long double D.4225;
  long double D.4224;
  long double D.4223;
  long double D.4222;
  long double * D.4221;
  long double D.4220;
  long double D.4219;
  long double * D.4218;
  long double D.4217;
  long double D.4216;
  long double D.4215;
  long double D.4214;
  long double D.4213;
  long double D.4212;
  long double * D.4211;
  long double D.4210;
  long double D.4209;
  long double D.4208;
  long double D.4207;
  long double D.4206;
  long double * D.4205;
  long double D.4204;
  long double D.4203;
  long double D.4202;
  long double D.4201;
  long double D.4200;
  long double * D.4199;
  long double D.4198;
  long double * D.4197;
  int D.4196;
  long double D.4195;
  long double * D.4194;
  long double D.4193;
  long double D.4190;
  long double D.4189;
  int _1;
  long double _3;
  long double _5;
  long double _6;
  long double * _8;
  long double _10;
  int _11;
  long double * _12;
  long double _13;
  long double * _14;
  long double _15;
  long double _16;
  long double _17;
  long double _18;
  long double _19;
  long double * _21;
  long double _22;
  long double _23;
  long double _24;
  long double _26;
  long double _27;
  long double * _28;
  long double _29;
  long double _30;
  long double _31;
  long double _32;
  long double _33;
  long double _34;
  long double * _35;
  long double _36;
  long double _37;
  long double * _38;
  long double _39;
  long double _40;
  long double _41;
  long double _42;
  long double _43;
  long double _44;
  long double _45;
  long double _46;
  int _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = *B_2(D);
  _5 = *A_4(D);
  if (_3 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = *B_2(D);
  *H_7(D) = _6;
  _8 = H_7(D) + 16;
  _10 = MEM[(long double *)P_9(D) + 16B];
  *_8 = _10;
  _11 = 1;
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _12 = B_2(D) + 16;
  _13 = *_12;
  _14 = A_4(D) + 16;
  _15 = *_14;
  _16 = _13 - _15;
  _17 = *B_2(D);
  _18 = *A_4(D);
  _19 = _17 - _18;
  m_20 = _16 / _19;
  _21 = A_4(D) + 16;
  _22 = *_21;
  _23 = *A_4(D);
  _24 = _23 * m_20;
  c_25 = _22 - _24;
  _26 = *P_9(D);
  _27 = _26 / m_20;
  _28 = P_9(D) + 16;
  _29 = *_28;
  _30 = _27 + _29;
  _31 = _30 - c_25;
  _32 = 1.0e+0 / m_20;
  _33 = _32 + m_20;
  _34 = _31 / _33;
  *H_7(D) = _34;
  _35 = H_7(D) + 16;
  _36 = *P_9(D);
  _37 = _36 / m_20;
  _38 = P_9(D) + 16;
  _39 = *_38;
  _40 = _37 + _39;
  _41 = _40 - c_25;
  _42 = 1.0e+0 / m_20;
  _43 = _42 + m_20;
  _44 = _41 / _43;
  _45 = _44 * m_20;
  _46 = _45 + c_25;
  *_35 = _46;
  _47 = 1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_11(3), _47(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}


Partition 1: size 16 align 16
	c_25
Partition 0: size 16 align 16
	m_20

;; Generating RTL for gimple basic block 2

;; _3 = *B_2(D);

(insn 9 8 10 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:34 -1
     (nil))

(insn 10 9 0 (set (reg:XF 60 [ D.4960 ])
        (mem:XF (reg/f:DI 99) [0 *B_2(D)+0 S16 A128])) mSector.c:34 -1
     (nil))

;; _5 = *A_4(D);

(insn 11 10 12 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:34 -1
     (nil))

(insn 12 11 0 (set (reg:XF 61 [ D.4960 ])
        (mem:XF (reg/f:DI 100) [0 *A_4(D)+0 S16 A128])) mSector.c:34 -1
     (nil))

;; if (_3 == _5)

(insn 13 12 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:34 -1
     (nil))

(insn 15 14 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 -1
     (nil))

(jump_insn 16 15 17 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mSector.c:34 -1
     (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 0)) mSector.c:34 -1
     (nil))

(barrier 18 17 19)

(code_label 19 18 0 16 "" [0 uses])

;; Generating RTL for gimple basic block 3

;; _6 = *B_2(D);

(insn 21 20 22 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:35 -1
     (nil))

(insn 22 21 0 (set (reg:XF 62 [ D.4960 ])
        (mem:XF (reg/f:DI 101) [0 *B_2(D)+0 S16 A128])) mSector.c:35 -1
     (nil))

;; *H_7(D) = _6;

(insn 23 22 24 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:35 -1
     (nil))

(insn 24 23 0 (set (mem:XF (reg/f:DI 102) [0 *H_7(D)+0 S16 A128])
        (reg:XF 62 [ D.4960 ])) mSector.c:35 -1
     (nil))

;; _8 = H_7(D) + 16;

(insn 25 24 26 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:36 -1
     (nil))

(insn 26 25 0 (parallel [
            (set (reg/f:DI 63 [ D.4961 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _10 = MEM[(long double *)P_9(D) + 16B];

(insn 27 26 28 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:36 -1
     (nil))

(insn 28 27 0 (set (reg:XF 64 [ D.4960 ])
        (mem:XF (plus:DI (reg/f:DI 104)
                (const_int 16 [0x10])) [0 MEM[(long double *)P_9(D) + 16B]+0 S16 A128])) mSector.c:36 -1
     (nil))

;; *_8 = _10;

(insn 29 28 0 (set (mem:XF (reg/f:DI 63 [ D.4961 ]) [0 *_8+0 S16 A128])
        (reg:XF 64 [ D.4960 ])) mSector.c:36 -1
     (nil))

;; _11 = 1;

(insn 30 29 0 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:37 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 15 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = B_2(D) + 16;

(insn 35 34 36 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 -1
     (nil))

(insn 36 35 0 (parallel [
            (set (reg/f:DI 65 [ D.4961 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _13 = *_12;

(insn 37 36 0 (set (reg:XF 66 [ D.4960 ])
        (mem:XF (reg/f:DI 65 [ D.4961 ]) [0 *_12+0 S16 A128])) mSector.c:40 -1
     (nil))

;; _14 = A_4(D) + 16;

(insn 38 37 39 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 -1
     (nil))

(insn 39 38 0 (parallel [
            (set (reg/f:DI 67 [ D.4961 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _15 = *_14;

(insn 40 39 0 (set (reg:XF 68 [ D.4960 ])
        (mem:XF (reg/f:DI 67 [ D.4961 ]) [0 *_14+0 S16 A128])) mSector.c:40 -1
     (nil))

;; _16 = _13 - _15;

(insn 41 40 0 (set (reg:XF 69 [ D.4960 ])
        (minus:XF (reg:XF 66 [ D.4960 ])
            (reg:XF 68 [ D.4960 ]))) mSector.c:40 -1
     (nil))

;; _17 = *B_2(D);

(insn 42 41 43 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 -1
     (nil))

(insn 43 42 0 (set (reg:XF 70 [ D.4960 ])
        (mem:XF (reg/f:DI 107) [0 *B_2(D)+0 S16 A128])) mSector.c:40 -1
     (nil))

;; _18 = *A_4(D);

(insn 44 43 45 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 -1
     (nil))

(insn 45 44 0 (set (reg:XF 71 [ D.4960 ])
        (mem:XF (reg/f:DI 108) [0 *A_4(D)+0 S16 A128])) mSector.c:40 -1
     (nil))

;; _19 = _17 - _18;

(insn 46 45 0 (set (reg:XF 72 [ D.4960 ])
        (minus:XF (reg:XF 70 [ D.4960 ])
            (reg:XF 71 [ D.4960 ]))) mSector.c:40 -1
     (nil))

;; m_20 = _16 / _19;

(insn 47 46 48 (set (reg:XF 109)
        (div:XF (reg:XF 69 [ D.4960 ])
            (reg:XF 72 [ D.4960 ]))) mSector.c:40 -1
     (nil))

(insn 48 47 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])
        (reg:XF 109)) mSector.c:40 -1
     (nil))

;; _21 = A_4(D) + 16;

(insn 49 48 50 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 -1
     (nil))

(insn 50 49 0 (parallel [
            (set (reg/f:DI 73 [ D.4961 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _22 = *_21;

(insn 51 50 0 (set (reg:XF 74 [ D.4960 ])
        (mem:XF (reg/f:DI 73 [ D.4961 ]) [0 *_21+0 S16 A128])) mSector.c:41 -1
     (nil))

;; _23 = *A_4(D);

(insn 52 51 53 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 -1
     (nil))

(insn 53 52 0 (set (reg:XF 75 [ D.4960 ])
        (mem:XF (reg/f:DI 111) [0 *A_4(D)+0 S16 A128])) mSector.c:41 -1
     (nil))

;; _24 = _23 * m_20;

(insn 54 53 55 (set (reg:XF 112)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:41 -1
     (nil))

(insn 55 54 0 (set (reg:XF 76 [ D.4960 ])
        (mult:XF (reg:XF 75 [ D.4960 ])
            (reg:XF 112))) mSector.c:41 -1
     (nil))

;; c_25 = _22 - _24;

(insn 56 55 57 (set (reg:XF 113)
        (minus:XF (reg:XF 74 [ D.4960 ])
            (reg:XF 76 [ D.4960 ]))) mSector.c:41 -1
     (nil))

(insn 57 56 0 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])
        (reg:XF 113)) mSector.c:41 -1
     (nil))

;; _26 = *P_9(D);

(insn 58 57 59 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 -1
     (nil))

(insn 59 58 0 (set (reg:XF 77 [ D.4960 ])
        (mem:XF (reg/f:DI 114) [0 *P_9(D)+0 S16 A128])) mSector.c:43 -1
     (nil))

;; _27 = _26 / m_20;

(insn 60 59 61 (set (reg:XF 115)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))

(insn 61 60 0 (set (reg:XF 78 [ D.4960 ])
        (div:XF (reg:XF 77 [ D.4960 ])
            (reg:XF 115))) mSector.c:43 -1
     (nil))

;; _28 = P_9(D) + 16;

(insn 62 61 63 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 -1
     (nil))

(insn 63 62 0 (parallel [
            (set (reg/f:DI 79 [ D.4961 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _29 = *_28;

(insn 64 63 0 (set (reg:XF 80 [ D.4960 ])
        (mem:XF (reg/f:DI 79 [ D.4961 ]) [0 *_28+0 S16 A128])) mSector.c:43 -1
     (nil))

;; _30 = _27 + _29;

(insn 65 64 0 (set (reg:XF 81 [ D.4960 ])
        (plus:XF (reg:XF 78 [ D.4960 ])
            (reg:XF 80 [ D.4960 ]))) mSector.c:43 -1
     (nil))

;; _31 = _30 - c_25;

(insn 66 65 67 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:43 -1
     (nil))

(insn 67 66 0 (set (reg:XF 82 [ D.4960 ])
        (minus:XF (reg:XF 81 [ D.4960 ])
            (reg:XF 117))) mSector.c:43 -1
     (nil))

;; _32 = 1.0e+0 / m_20;

(insn 68 67 69 (set (reg:XF 118)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:43 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 69 68 70 (set (reg:XF 119)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))

(insn 70 69 0 (set (reg:XF 83 [ D.4960 ])
        (div:XF (reg:XF 118)
            (reg:XF 119))) mSector.c:43 -1
     (nil))

;; _33 = _32 + m_20;

(insn 71 70 72 (set (reg:XF 120)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))

(insn 72 71 0 (set (reg:XF 84 [ D.4960 ])
        (plus:XF (reg:XF 83 [ D.4960 ])
            (reg:XF 120))) mSector.c:43 -1
     (nil))

;; _34 = _31 / _33;

(insn 73 72 0 (set (reg:XF 85 [ D.4960 ])
        (div:XF (reg:XF 82 [ D.4960 ])
            (reg:XF 84 [ D.4960 ]))) mSector.c:43 -1
     (nil))

;; *H_7(D) = _34;

(insn 74 73 75 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:43 -1
     (nil))

(insn 75 74 0 (set (mem:XF (reg/f:DI 121) [0 *H_7(D)+0 S16 A128])
        (reg:XF 85 [ D.4960 ])) mSector.c:43 -1
     (nil))

;; _35 = H_7(D) + 16;

(insn 76 75 77 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:44 -1
     (nil))

(insn 77 76 0 (parallel [
            (set (reg/f:DI 86 [ D.4961 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _36 = *P_9(D);

(insn 78 77 79 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 -1
     (nil))

(insn 79 78 0 (set (reg:XF 87 [ D.4960 ])
        (mem:XF (reg/f:DI 123) [0 *P_9(D)+0 S16 A128])) mSector.c:44 -1
     (nil))

;; _37 = _36 / m_20;

(insn 80 79 81 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 81 80 0 (set (reg:XF 88 [ D.4960 ])
        (div:XF (reg:XF 87 [ D.4960 ])
            (reg:XF 124))) mSector.c:44 -1
     (nil))

;; _38 = P_9(D) + 16;

(insn 82 81 83 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg/f:DI 89 [ D.4961 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _39 = *_38;

(insn 84 83 0 (set (reg:XF 90 [ D.4960 ])
        (mem:XF (reg/f:DI 89 [ D.4961 ]) [0 *_38+0 S16 A128])) mSector.c:44 -1
     (nil))

;; _40 = _37 + _39;

(insn 85 84 0 (set (reg:XF 91 [ D.4960 ])
        (plus:XF (reg:XF 88 [ D.4960 ])
            (reg:XF 90 [ D.4960 ]))) mSector.c:44 -1
     (nil))

;; _41 = _40 - c_25;

(insn 86 85 87 (set (reg:XF 126)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 87 86 0 (set (reg:XF 92 [ D.4960 ])
        (minus:XF (reg:XF 91 [ D.4960 ])
            (reg:XF 126))) mSector.c:44 -1
     (nil))

;; _42 = 1.0e+0 / m_20;

(insn 88 87 89 (set (reg:XF 127)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:44 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 89 88 90 (set (reg:XF 128)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 90 89 0 (set (reg:XF 93 [ D.4960 ])
        (div:XF (reg:XF 127)
            (reg:XF 128))) mSector.c:44 -1
     (nil))

;; _43 = _42 + m_20;

(insn 91 90 92 (set (reg:XF 129)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 92 91 0 (set (reg:XF 94 [ D.4960 ])
        (plus:XF (reg:XF 93 [ D.4960 ])
            (reg:XF 129))) mSector.c:44 -1
     (nil))

;; _44 = _41 / _43;

(insn 93 92 0 (set (reg:XF 95 [ D.4960 ])
        (div:XF (reg:XF 92 [ D.4960 ])
            (reg:XF 94 [ D.4960 ]))) mSector.c:44 -1
     (nil))

;; _45 = _44 * m_20;

(insn 94 93 95 (set (reg:XF 130)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 95 94 0 (set (reg:XF 96 [ D.4960 ])
        (mult:XF (reg:XF 95 [ D.4960 ])
            (reg:XF 130))) mSector.c:44 -1
     (nil))

;; _46 = _45 + c_25;

(insn 96 95 97 (set (reg:XF 131)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 -1
     (nil))

(insn 97 96 0 (set (reg:XF 97 [ D.4960 ])
        (plus:XF (reg:XF 96 [ D.4960 ])
            (reg:XF 131))) mSector.c:44 -1
     (nil))

;; *_35 = _46;

(insn 98 97 0 (set (mem:XF (reg/f:DI 86 [ D.4961 ]) [0 *_35+0 S16 A128])
        (reg:XF 97 [ D.4960 ])) mSector.c:44 -1
     (nil))

;; _47 = 1;

(insn 99 98 0 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:46 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 100 99 101 17 "" [0 uses])

(note 101 100 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 102 101 103 (set (reg:SI 98 [ <retval> ])
        (reg:SI 59 [ D.4959 ])) -1
     (nil))

(jump_insn 103 102 104 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 104 103 0)
Purged non-fallthru edges from bb 10
deleting block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->6 redirected to 7
Forwarding edge 4->5 to 8 failed.
Forwarding edge 4->5 to 8 failed.
deleting block 6
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
        (reg:DI 5 di [ P ])) mSector.c:32 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
        (reg:DI 4 si [ A ])) mSector.c:32 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
        (reg:DI 1 dx [ B ])) mSector.c:32 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
        (reg:DI 2 cx [ H ])) mSector.c:32 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:34 -1
     (nil))
(insn 10 9 11 2 (set (reg:XF 60 [ D.4960 ])
        (mem:XF (reg/f:DI 99) [0 *B_2(D)+0 S16 A128])) mSector.c:34 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:34 -1
     (nil))
(insn 12 11 13 2 (set (reg:XF 61 [ D.4960 ])
        (mem:XF (reg/f:DI 100) [0 *A_4(D)+0 S16 A128])) mSector.c:34 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 -1
     (nil))
(jump_insn 14 13 111 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mSector.c:34 -1
     (nil)
 -> 33)
;;  succ:       8
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 111 14 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 111 16 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 -1
     (nil))
(jump_insn 16 15 112 4 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 115)
            (pc))) mSector.c:34 612 {*jcc_1}
     (nil)
 -> 115)
;;  succ:       7
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 112 16 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 17 112 18 5 (set (pc)
        (label_ref 33)) mSector.c:34 -1
     (nil)
 -> 33)
;;  succ:       8

(barrier 18 17 115)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 115 18 20 7 18 "" [1 uses])
(note 20 115 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:35 -1
     (nil))
(insn 22 21 23 7 (set (reg:XF 62 [ D.4960 ])
        (mem:XF (reg/f:DI 101) [0 *B_2(D)+0 S16 A128])) mSector.c:35 -1
     (nil))
(insn 23 22 24 7 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:35 -1
     (nil))
(insn 24 23 25 7 (set (mem:XF (reg/f:DI 102) [0 *H_7(D)+0 S16 A128])
        (reg:XF 62 [ D.4960 ])) mSector.c:35 -1
     (nil))
(insn 25 24 26 7 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:36 -1
     (nil))
(insn 26 25 27 7 (parallel [
            (set (reg/f:DI 63 [ D.4961 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 27 26 28 7 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:36 -1
     (nil))
(insn 28 27 29 7 (set (reg:XF 64 [ D.4960 ])
        (mem:XF (plus:DI (reg/f:DI 104)
                (const_int 16 [0x10])) [0 MEM[(long double *)P_9(D) + 16B]+0 S16 A128])) mSector.c:36 -1
     (nil))
(insn 29 28 30 7 (set (mem:XF (reg/f:DI 63 [ D.4961 ]) [0 *_8+0 S16 A128])
        (reg:XF 64 [ D.4960 ])) mSector.c:36 -1
     (nil))
(insn 30 29 31 7 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:37 -1
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (label_ref 100)) mSector.c:37 -1
     (nil)
 -> 100)
;;  succ:       9

(barrier 32 31 33)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              5
(code_label 33 32 34 8 15 "" [2 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 -1
     (nil))
(insn 36 35 37 8 (parallel [
            (set (reg/f:DI 65 [ D.4961 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 37 36 38 8 (set (reg:XF 66 [ D.4960 ])
        (mem:XF (reg/f:DI 65 [ D.4961 ]) [0 *_12+0 S16 A128])) mSector.c:40 -1
     (nil))
(insn 38 37 39 8 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 -1
     (nil))
(insn 39 38 40 8 (parallel [
            (set (reg/f:DI 67 [ D.4961 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 40 39 41 8 (set (reg:XF 68 [ D.4960 ])
        (mem:XF (reg/f:DI 67 [ D.4961 ]) [0 *_14+0 S16 A128])) mSector.c:40 -1
     (nil))
(insn 41 40 42 8 (set (reg:XF 69 [ D.4960 ])
        (minus:XF (reg:XF 66 [ D.4960 ])
            (reg:XF 68 [ D.4960 ]))) mSector.c:40 -1
     (nil))
(insn 42 41 43 8 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 -1
     (nil))
(insn 43 42 44 8 (set (reg:XF 70 [ D.4960 ])
        (mem:XF (reg/f:DI 107) [0 *B_2(D)+0 S16 A128])) mSector.c:40 -1
     (nil))
(insn 44 43 45 8 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 -1
     (nil))
(insn 45 44 46 8 (set (reg:XF 71 [ D.4960 ])
        (mem:XF (reg/f:DI 108) [0 *A_4(D)+0 S16 A128])) mSector.c:40 -1
     (nil))
(insn 46 45 47 8 (set (reg:XF 72 [ D.4960 ])
        (minus:XF (reg:XF 70 [ D.4960 ])
            (reg:XF 71 [ D.4960 ]))) mSector.c:40 -1
     (nil))
(insn 47 46 48 8 (set (reg:XF 109)
        (div:XF (reg:XF 69 [ D.4960 ])
            (reg:XF 72 [ D.4960 ]))) mSector.c:40 -1
     (nil))
(insn 48 47 49 8 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])
        (reg:XF 109)) mSector.c:40 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 -1
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg/f:DI 73 [ D.4961 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 51 50 52 8 (set (reg:XF 74 [ D.4960 ])
        (mem:XF (reg/f:DI 73 [ D.4961 ]) [0 *_21+0 S16 A128])) mSector.c:41 -1
     (nil))
(insn 52 51 53 8 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 -1
     (nil))
(insn 53 52 54 8 (set (reg:XF 75 [ D.4960 ])
        (mem:XF (reg/f:DI 111) [0 *A_4(D)+0 S16 A128])) mSector.c:41 -1
     (nil))
(insn 54 53 55 8 (set (reg:XF 112)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:41 -1
     (nil))
(insn 55 54 56 8 (set (reg:XF 76 [ D.4960 ])
        (mult:XF (reg:XF 75 [ D.4960 ])
            (reg:XF 112))) mSector.c:41 -1
     (nil))
(insn 56 55 57 8 (set (reg:XF 113)
        (minus:XF (reg:XF 74 [ D.4960 ])
            (reg:XF 76 [ D.4960 ]))) mSector.c:41 -1
     (nil))
(insn 57 56 58 8 (set (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])
        (reg:XF 113)) mSector.c:41 -1
     (nil))
(insn 58 57 59 8 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 -1
     (nil))
(insn 59 58 60 8 (set (reg:XF 77 [ D.4960 ])
        (mem:XF (reg/f:DI 114) [0 *P_9(D)+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 60 59 61 8 (set (reg:XF 115)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 61 60 62 8 (set (reg:XF 78 [ D.4960 ])
        (div:XF (reg:XF 77 [ D.4960 ])
            (reg:XF 115))) mSector.c:43 -1
     (nil))
(insn 62 61 63 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 -1
     (nil))
(insn 63 62 64 8 (parallel [
            (set (reg/f:DI 79 [ D.4961 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:43 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 64 63 65 8 (set (reg:XF 80 [ D.4960 ])
        (mem:XF (reg/f:DI 79 [ D.4961 ]) [0 *_28+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 65 64 66 8 (set (reg:XF 81 [ D.4960 ])
        (plus:XF (reg:XF 78 [ D.4960 ])
            (reg:XF 80 [ D.4960 ]))) mSector.c:43 -1
     (nil))
(insn 66 65 67 8 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 67 66 68 8 (set (reg:XF 82 [ D.4960 ])
        (minus:XF (reg:XF 81 [ D.4960 ])
            (reg:XF 117))) mSector.c:43 -1
     (nil))
(insn 68 67 69 8 (set (reg:XF 118)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:43 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 69 68 70 8 (set (reg:XF 119)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 70 69 71 8 (set (reg:XF 83 [ D.4960 ])
        (div:XF (reg:XF 118)
            (reg:XF 119))) mSector.c:43 -1
     (nil))
(insn 71 70 72 8 (set (reg:XF 120)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 -1
     (nil))
(insn 72 71 73 8 (set (reg:XF 84 [ D.4960 ])
        (plus:XF (reg:XF 83 [ D.4960 ])
            (reg:XF 120))) mSector.c:43 -1
     (nil))
(insn 73 72 74 8 (set (reg:XF 85 [ D.4960 ])
        (div:XF (reg:XF 82 [ D.4960 ])
            (reg:XF 84 [ D.4960 ]))) mSector.c:43 -1
     (nil))
(insn 74 73 75 8 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:43 -1
     (nil))
(insn 75 74 76 8 (set (mem:XF (reg/f:DI 121) [0 *H_7(D)+0 S16 A128])
        (reg:XF 85 [ D.4960 ])) mSector.c:43 -1
     (nil))
(insn 76 75 77 8 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:44 -1
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg/f:DI 86 [ D.4961 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 78 77 79 8 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 -1
     (nil))
(insn 79 78 80 8 (set (reg:XF 87 [ D.4960 ])
        (mem:XF (reg/f:DI 123) [0 *P_9(D)+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 80 79 81 8 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 81 80 82 8 (set (reg:XF 88 [ D.4960 ])
        (div:XF (reg:XF 87 [ D.4960 ])
            (reg:XF 124))) mSector.c:44 -1
     (nil))
(insn 82 81 83 8 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 -1
     (nil))
(insn 83 82 84 8 (parallel [
            (set (reg/f:DI 89 [ D.4961 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 84 83 85 8 (set (reg:XF 90 [ D.4960 ])
        (mem:XF (reg/f:DI 89 [ D.4961 ]) [0 *_38+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 85 84 86 8 (set (reg:XF 91 [ D.4960 ])
        (plus:XF (reg:XF 88 [ D.4960 ])
            (reg:XF 90 [ D.4960 ]))) mSector.c:44 -1
     (nil))
(insn 86 85 87 8 (set (reg:XF 126)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 87 86 88 8 (set (reg:XF 92 [ D.4960 ])
        (minus:XF (reg:XF 91 [ D.4960 ])
            (reg:XF 126))) mSector.c:44 -1
     (nil))
(insn 88 87 89 8 (set (reg:XF 127)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:44 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 89 88 90 8 (set (reg:XF 128)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 90 89 91 8 (set (reg:XF 93 [ D.4960 ])
        (div:XF (reg:XF 127)
            (reg:XF 128))) mSector.c:44 -1
     (nil))
(insn 91 90 92 8 (set (reg:XF 129)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 92 91 93 8 (set (reg:XF 94 [ D.4960 ])
        (plus:XF (reg:XF 93 [ D.4960 ])
            (reg:XF 129))) mSector.c:44 -1
     (nil))
(insn 93 92 94 8 (set (reg:XF 95 [ D.4960 ])
        (div:XF (reg:XF 92 [ D.4960 ])
            (reg:XF 94 [ D.4960 ]))) mSector.c:44 -1
     (nil))
(insn 94 93 95 8 (set (reg:XF 130)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 95 94 96 8 (set (reg:XF 96 [ D.4960 ])
        (mult:XF (reg:XF 95 [ D.4960 ])
            (reg:XF 130))) mSector.c:44 -1
     (nil))
(insn 96 95 97 8 (set (reg:XF 131)
        (mem/c:XF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 -1
     (nil))
(insn 97 96 98 8 (set (reg:XF 97 [ D.4960 ])
        (plus:XF (reg:XF 96 [ D.4960 ])
            (reg:XF 131))) mSector.c:44 -1
     (nil))
(insn 98 97 99 8 (set (mem:XF (reg/f:DI 86 [ D.4961 ]) [0 *_35+0 S16 A128])
        (reg:XF 97 [ D.4960 ])) mSector.c:44 -1
     (nil))
(insn 99 98 100 8 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:46 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 100 99 101 9 17 "" [1 uses])
(note 101 100 102 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 106 9 (set (reg:SI 98 [ <retval> ])
        (reg:SI 59 [ D.4959 ])) -1
     (nil))
(insn 106 102 109 9 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) mSector.c:47 -1
     (nil))
(insn 109 106 0 9 (use (reg/i:SI 0 ax)) mSector.c:47 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _check_tmp_point (_check_tmp_point, funcdef_no=4, decl_uid=3963, cgraph_uid=4)

_check_tmp_point (long double * p, struct CONF_t conf)
{
  int i;
  int D.4252;
  int D.4251;
  long double D.4248;
  long double * D.4247;
  long double * * D.4246;
  long unsigned int D.4245;
  long unsigned int D.4244;
  long double * * D.4243;
  long double * D.4242;
  long double * * D.4241;
  sizetype D.4240;
  sizetype D.4239;
  sizetype D.4238;
  long double * * D.4237;
  int D.4236;
  int D.4233;
  long double * * D.4232;
  int D.4231;
  int _2;
  int _3;
  long double * * _4;
  int _6;
  int _7;
  int _9;
  int _10;
  long double * * _11;
  sizetype _12;
  sizetype _13;
  sizetype _14;
  long double * * _15;
  long double * _16;
  long double * * _17;
  long unsigned int _18;
  long unsigned int _19;
  long double * * _20;
  long double * _21;
  long double _22;
  int _23;
  int _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = conf.Nbound;
  _4 = conf.bound;
  _6 = point_in_polygon (p_5(D), _4, _3);
  if (_6 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = 1;
  goto <bb 10> (<L7>);
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       2
  i_8 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _11 = conf.bound;
  _12 = (sizetype) i_1;
  _13 = _12 + 1;
  _14 = _13 * 8;
  _15 = _11 + _14;
  _16 = *_15;
  _17 = conf.bound;
  _18 = (long unsigned int) i_1;
  _19 = _18 * 8;
  _20 = _17 + _19;
  _21 = *_20;
  _22 = distance_point_segment (_21, _16, p_5(D));
  if (_22 < 3.0e+0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _23 = 1;
  goto <bb 10> (<L7>);
;;    succ:       10

;;   basic block 7, loop depth 0
;;    pred:       5
  i_24 = i_1 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # i_1 = PHI <i_8(4), i_24(7)>
  _9 = conf.Nbound;
  _10 = _9 + -1;
  if (_10 > i_1)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _25 = 0;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                6
;;                9
  # _2 = PHI <_7(3), _23(6), _25(9)>
<L7>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (p_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (i_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (i_24 - 24 )
Partition 25 (_25 - 25 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (p_5(D) - 5 )
Partition 3 (_7 - 7 )
Partition 4 (i_8 - 8 )
Partition 5 (_23 - 23 )
Partition 6 (i_24 - 24 )
Partition 7 (_25 - 25 )


Live on entry to BB2 : p_5(D)  

Live on entry to BB3 : 

Live on entry to BB4 : p_5(D)  

Live on entry to BB5 : i_1  p_5(D)  

Live on entry to BB6 : 

Live on entry to BB7 : i_1  p_5(D)  

Live on entry to BB8 : p_5(D)  

Live on entry to BB9 : 

Live on entry to BB10 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_8
(2147483646) i_1 <-> i_24

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (p_5(D) - 5 )
Partition 3 (_7 - 7 )
Partition 4 (i_8 - 8 )
Partition 5 (_23 - 23 )
Partition 6 (i_24 - 24 )
Partition 7 (_25 - 25 )

Coalesce list: (1)i_1 & (8)i_8 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (24)i_24 [map: 0, 6] : Success -> 0
Coalesce list: (2)_2 & (25)_25 [map: 1, 7] : Success -> 1
Coalesce list: (2)_2 & (23)_23 [map: 1, 5] : Success -> 1
Coalesce list: (2)_2 & (7)_7 [map: 1, 3] : Success -> 1
Coalesce list: (1)i_1 & (24)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (8)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 8 24 )
Partition 1 (_2 - 2 7 23 25 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (p_5(D) - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_15 - 15 )
Partition 13 (_16 - 16 )
Partition 14 (_17 - 17 )
Partition 15 (_18 - 18 )
Partition 16 (_19 - 19 )
Partition 17 (_20 - 20 )
Partition 18 (_21 - 21 )
Partition 19 (_22 - 22 )

_check_tmp_point (long double * p, struct CONF_t conf)
{
  int i;
  int D.4252;
  int D.4251;
  long double D.4248;
  long double * D.4247;
  long double * * D.4246;
  long unsigned int D.4245;
  long unsigned int D.4244;
  long double * * D.4243;
  long double * D.4242;
  long double * * D.4241;
  sizetype D.4240;
  sizetype D.4239;
  sizetype D.4238;
  long double * * D.4237;
  int D.4236;
  int D.4233;
  long double * * D.4232;
  int D.4231;
  int _2;
  int _3;
  long double * * _4;
  int _6;
  int _7;
  int _9;
  int _10;
  long double * * _11;
  sizetype _12;
  sizetype _13;
  sizetype _14;
  long double * * _15;
  long double * _16;
  long double * * _17;
  long unsigned int _18;
  long unsigned int _19;
  long double * * _20;
  long double * _21;
  long double _22;
  int _23;
  int _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = conf.Nbound;
  _4 = conf.bound;
  _6 = point_in_polygon (p_5(D), _4, _3);
  if (_6 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = 1;
  goto <bb 10> (<L7>);
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       2
  i_8 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _11 = conf.bound;
  _12 = (sizetype) i_1;
  _13 = _12 + 1;
  _14 = _13 * 8;
  _15 = _11 + _14;
  _16 = *_15;
  _17 = conf.bound;
  _18 = (long unsigned int) i_1;
  _19 = _18 * 8;
  _20 = _17 + _19;
  _21 = *_20;
  _22 = distance_point_segment (_21, _16, p_5(D));
  if (_22 < 3.0e+0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _23 = 1;
  goto <bb 10> (<L7>);
;;    succ:       10

;;   basic block 7, loop depth 0
;;    pred:       5
  i_24 = i_1 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # i_1 = PHI <i_8(4), i_24(7)>
  _9 = conf.Nbound;
  _10 = _9 + -1;
  if (_10 > i_1)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _25 = 0;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                6
;;                9
  # _2 = PHI <_7(3), _23(6), _25(9)>
<L7>:
  return _2;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; _3 = conf.Nbound;

(insn 6 5 0 (set (reg:SI 60 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 conf.Nbound+0 S4 A128])) mSector.c:51 -1
     (nil))

;; _4 = conf.bound;

(insn 7 6 0 (set (reg/f:DI 61 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:51 -1
     (nil))

;; _6 = point_in_polygon (p_5(D), _4, _3);

(insn 8 7 9 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:51 -1
     (nil))

(insn 9 8 10 (set (reg:SI 1 dx)
        (reg:SI 60 [ D.4962 ])) mSector.c:51 -1
     (nil))

(insn 10 9 11 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.4963 ])) mSector.c:51 -1
     (nil))

(insn 11 10 12 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:51 -1
     (nil))

(call_insn 12 11 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:51 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 13 12 0 (set (reg:SI 62 [ D.4962 ])
        (reg:SI 0 ax)) mSector.c:51 -1
     (nil))

;; if (_6 == 0)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.4962 ])
            (const_int 0 [0]))) mSector.c:51 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:51 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = 1;

(insn 17 16 0 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:51 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 21 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; i_8 = 0;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _11 = conf.bound;

(insn 26 25 0 (set (reg/f:DI 65 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 -1
     (nil))

;; _12 = (sizetype) i_1;

(insn 27 26 28 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 -1
     (nil))

(insn 28 27 0 (set (reg:DI 66 [ D.4964 ])
        (sign_extend:DI (reg:SI 79))) mSector.c:52 -1
     (nil))

;; _13 = _12 + 1;

(insn 29 28 0 (parallel [
            (set (reg:DI 67 [ D.4964 ])
                (plus:DI (reg:DI 66 [ D.4964 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; _14 = _13 * 8;

(insn 30 29 0 (parallel [
            (set (reg:DI 68 [ D.4964 ])
                (ashift:DI (reg:DI 67 [ D.4964 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; _15 = _11 + _14;

(insn 31 30 0 (parallel [
            (set (reg/f:DI 69 [ D.4963 ])
                (plus:DI (reg/f:DI 65 [ D.4963 ])
                    (reg:DI 68 [ D.4964 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; _16 = *_15;

(insn 32 31 0 (set (reg/f:DI 70 [ D.4965 ])
        (mem/f:DI (reg/f:DI 69 [ D.4963 ]) [0 *_15+0 S8 A64])) mSector.c:52 -1
     (nil))

;; _17 = conf.bound;

(insn 33 32 0 (set (reg/f:DI 71 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 -1
     (nil))

;; _18 = (long unsigned int) i_1;

(insn 34 33 35 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 -1
     (nil))

(insn 35 34 0 (set (reg:DI 72 [ D.4966 ])
        (sign_extend:DI (reg:SI 80))) mSector.c:52 -1
     (nil))

;; _19 = _18 * 8;

(insn 36 35 0 (parallel [
            (set (reg:DI 73 [ D.4966 ])
                (ashift:DI (reg:DI 72 [ D.4966 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; _20 = _17 + _19;

(insn 37 36 0 (parallel [
            (set (reg/f:DI 74 [ D.4963 ])
                (plus:DI (reg/f:DI 71 [ D.4963 ])
                    (reg:DI 73 [ D.4966 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; _21 = *_20;

(insn 38 37 0 (set (reg/f:DI 75 [ D.4965 ])
        (mem/f:DI (reg/f:DI 74 [ D.4963 ]) [0 *_20+0 S8 A64])) mSector.c:52 -1
     (nil))

;; _22 = distance_point_segment (_21, _16, p_5(D));

(insn 39 38 40 (set (reg:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:52 -1
     (nil))

(insn 40 39 41 (set (reg:DI 1 dx)
        (reg:DI 81)) mSector.c:52 -1
     (nil))

(insn 41 40 42 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.4965 ])) mSector.c:52 -1
     (nil))

(insn 42 41 43 (set (reg:DI 5 di)
        (reg/f:DI 75 [ D.4965 ])) mSector.c:52 -1
     (nil))

(call_insn 43 42 44 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("distance_point_segment") [flags 0x41]  <function_decl 0x7f44d29fca00 distance_point_segment>) [0 distance_point_segment S1 A8])
            (const_int 0 [0]))) mSector.c:52 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 0 (set (reg:XF 76 [ D.4967 ])
        (reg:XF 8 st)) mSector.c:52 -1
     (nil))

;; if (_22 < 3.0e+0)

(insn 45 44 46 (set (reg:XF 82)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mSector.c:52 -1
     (expr_list:REG_EQUAL (const_double:XF 3.0e+0 [0x0.cp+2])
        (nil)))

(insn 46 45 47 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82)
            (reg:XF 76 [ D.4967 ]))) mSector.c:52 -1
     (nil))

(jump_insn 47 46 48 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) mSector.c:52 -1
     (nil))

(jump_insn 48 47 49 (set (pc)
        (label_ref 0)) mSector.c:52 -1
     (nil))

(barrier 49 48 50)

(code_label 50 49 0 25 "" [0 uses])

;; Generating RTL for gimple basic block 6

;; _23 = 1;

(insn 52 51 0 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 55 54 56 24 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; i_24 = i_1 + 1;

(insn 57 56 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 58 57 59 23 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; _9 = conf.Nbound;

(insn 60 59 0 (set (reg:SI 63 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 conf.Nbound+0 S4 A128])) mSector.c:52 -1
     (nil))

;; _10 = _9 + -1;

(insn 61 60 0 (parallel [
            (set (reg:SI 64 [ D.4962 ])
                (plus:SI (reg:SI 63 [ D.4962 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))

;; if (_10 > i_1)

(insn 63 61 64 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4962 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:52 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mSector.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _25 = 0;

(insn 66 65 0 (set (reg:SI 59 [ D.4962 ])
        (const_int 0 [0])) mSector.c:54 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; <L7>:

(code_label 67 66 68 22 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 69 68 70 (set (reg:SI 77 [ <retval> ])
        (reg:SI 59 [ D.4962 ])) -1
     (nil))

(jump_insn 70 69 71 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 71 70 0)
Purged non-fallthru edges from bb 14
deleting block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 6->8 redirected to 9
Forwarding edge 6->7 to 10 failed.
Forwarding edge 6->7 to 10 failed.
deleting block 8
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 10 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:49 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 60 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 conf.Nbound+0 S4 A128])) mSector.c:51 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 61 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:51 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:51 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx)
        (reg:SI 60 [ D.4962 ])) mSector.c:51 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.4963 ])) mSector.c:51 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:51 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:51 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:SI 62 [ D.4962 ])
        (reg:SI 0 ax)) mSector.c:51 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.4962 ])
            (const_int 0 [0]))) mSector.c:51 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) mSector.c:51 -1
     (nil)
 -> 20)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:51 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (label_ref 67)) mSector.c:51 -1
     (nil)
 -> 67)
;;  succ:       13

(barrier 19 18 20)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 20 19 21 5 21 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:52 -1
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (label_ref 58)) mSector.c:52 -1
     (nil)
 -> 58)
;;  succ:       11

(barrier 24 23 62)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
(code_label 62 24 25 6 26 "" [1 uses])
(note 25 62 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 65 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 66 [ D.4964 ])
        (sign_extend:DI (reg:SI 79))) mSector.c:52 -1
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:DI 67 [ D.4964 ])
                (plus:DI (reg:DI 66 [ D.4964 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 68 [ D.4964 ])
                (ashift:DI (reg:DI 67 [ D.4964 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 69 [ D.4963 ])
                (plus:DI (reg/f:DI 65 [ D.4963 ])
                    (reg:DI 68 [ D.4964 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 70 [ D.4965 ])
        (mem/f:DI (reg/f:DI 69 [ D.4963 ]) [0 *_15+0 S8 A64])) mSector.c:52 -1
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 71 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 -1
     (nil))
(insn 34 33 35 6 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 72 [ D.4966 ])
        (sign_extend:DI (reg:SI 80))) mSector.c:52 -1
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg:DI 73 [ D.4966 ])
                (ashift:DI (reg:DI 72 [ D.4966 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg/f:DI 74 [ D.4963 ])
                (plus:DI (reg/f:DI 71 [ D.4963 ])
                    (reg:DI 73 [ D.4966 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 75 [ D.4965 ])
        (mem/f:DI (reg/f:DI 74 [ D.4963 ]) [0 *_20+0 S8 A64])) mSector.c:52 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:52 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 1 dx)
        (reg:DI 81)) mSector.c:52 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.4965 ])) mSector.c:52 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 5 di)
        (reg/f:DI 75 [ D.4965 ])) mSector.c:52 -1
     (nil))
(call_insn 43 42 44 6 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("distance_point_segment") [flags 0x41]  <function_decl 0x7f44d29fca00 distance_point_segment>) [0 distance_point_segment S1 A8])
            (const_int 0 [0]))) mSector.c:52 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 44 43 45 6 (set (reg:XF 76 [ D.4967 ])
        (reg:XF 8 st)) mSector.c:52 -1
     (nil))
(insn 45 44 46 6 (set (reg:XF 82)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mSector.c:52 -1
     (expr_list:REG_EQUAL (const_double:XF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 46 45 47 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82)
            (reg:XF 76 [ D.4967 ]))) mSector.c:52 -1
     (nil))
(jump_insn 47 46 78 6 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) mSector.c:52 612 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       9
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 78 47 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 48 78 49 7 (set (pc)
        (label_ref 55)) mSector.c:52 -1
     (nil)
 -> 55)
;;  succ:       10

(barrier 49 48 81)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 81 49 51 9 27 "" [1 uses])
(note 51 81 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:52 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (label_ref 67)) mSector.c:52 -1
     (nil)
 -> 67)
;;  succ:       13

(barrier 54 53 55)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 55 54 56 10 24 "" [1 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              10 (FALLTHRU,DFS_BACK)
(code_label 58 57 59 11 23 "" [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:SI 63 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 conf.Nbound+0 S4 A128])) mSector.c:52 -1
     (nil))
(insn 61 60 63 11 (parallel [
            (set (reg:SI 64 [ D.4962 ])
                (plus:SI (reg:SI 63 [ D.4962 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 -1
     (nil))
(insn 63 61 64 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4962 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:52 -1
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mSector.c:52 -1
     (nil)
 -> 62)
;;  succ:       6
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg:SI 59 [ D.4962 ])
        (const_int 0 [0])) mSector.c:54 -1
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              9
;;              12 (FALLTHRU)
(code_label 67 66 68 13 22 "" [2 uses])
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 73 13 (set (reg:SI 77 [ <retval> ])
        (reg:SI 59 [ D.4962 ])) -1
     (nil))
(insn 73 69 76 13 (set (reg/i:SI 0 ax)
        (reg:SI 77 [ <retval> ])) mSector.c:55 -1
     (nil))
(insn 76 73 0 13 (use (reg/i:SI 0 ax)) mSector.c:55 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function generate_temporary_point (generate_temporary_point, funcdef_no=5, decl_uid=1870, cgraph_uid=5)

generate_temporary_point (struct CONF_t * config)
{
  struct FILE * wstream;
  long double my;
  long double My;
  long double mx;
  long double Mx;
  struct FILE * rstream;
  char c[500];
  int i;
  int n;
  int D.4318;
  long double D.4317;
  long double * D.4316;
  long double * * D.4315;
  long unsigned int D.4314;
  long unsigned int D.4313;
  long double * * D.4312;
  long double D.4311;
  long double * D.4310;
  long double * D.4309;
  long double * * D.4308;
  long unsigned int D.4307;
  long unsigned int D.4306;
  long double * * D.4305;
  int D.4304;
  int D.4303;
  long double * D.4302;
  long double * * D.4301;
  long unsigned int D.4300;
  long unsigned int D.4299;
  long double * * D.4298;
  long double D.4297;
  long double * D.4296;
  long double * D.4295;
  long double * * D.4294;
  long unsigned int D.4293;
  long unsigned int D.4292;
  long double * * D.4291;
  long double D.4290;
  long double * D.4289;
  long double * * D.4288;
  long unsigned int D.4287;
  long unsigned int D.4286;
  long double * * D.4285;
  long double * * D.4284;
  int D.4283;
  long double * * D.4282;
  int D.4281;
  long double * * D.4280;
  int D.4279;
  long double * * D.4278;
  int D.4277;
  int D.4276;
  char * D.4275;
  long double D.4274;
  double D.4273;
  char * D.4272;
  long double * D.4271;
  long double * D.4270;
  long double * * D.4269;
  long unsigned int D.4268;
  long unsigned int D.4267;
  long double * * D.4266;
  char D.4265;
  long double D.4264;
  double D.4263;
  long double * D.4262;
  long double * * D.4261;
  long unsigned int D.4260;
  long unsigned int D.4259;
  long double * * D.4258;
  long double * * D.4255;
  int D.4254;
  int _4;
  long double * * _5;
  char * _8;
  long double * * _9;
  long unsigned int _10;
  long unsigned int _11;
  long double * * _12;
  long double * _13;
  double _14;
  long double _15;
  char _17;
  long double * * _19;
  long unsigned int _20;
  long unsigned int _21;
  long double * * _22;
  long double * _23;
  long double * _24;
  char * _26;
  double _27;
  long double _28;
  int _30;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  config_3(D)->n_tmp_nvp = 50000;
  _4 = config_3(D)->n_tmp_nvp;
  _5 = falloc_matrix (_4, 2);
  config_3(D)->tmp_nvp = _5;
  __builtin_puts (&"Attention! read temporary nvp from file"[0]);
  rstream_6 = fopen ("CONF/temp_nvp.dat", "r");
  if (rstream_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Impossible to open temp_nvp.dat\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  n_7 = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 5, loop depth 0
;;    pred:       9
  _9 = config_3(D)->tmp_nvp;
  _10 = (long unsigned int) n_1;
  _11 = _10 * 8;
  _12 = _9 + _11;
  _13 = *_12;
  _14 = atof (&c);
  _15 = (long double) _14;
  *_13 = _15;
  i_16 = 0;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_18 = i_2 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_16(5), i_18(6)>
  _17 = c[i_2];
  if (_17 != 9)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _19 = config_3(D)->tmp_nvp;
  _20 = (long unsigned int) n_1;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  _24 = _23 + 16;
  i_25 = i_2 + 1;
  _26 = &c[i_25];
  _27 = atof (_26);
  _28 = (long double) _27;
  *_24 = _28;
  n_29 = n_1 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       4
;;                8
  # n_1 = PHI <n_7(4), n_29(8)>
  _8 = fgets (&c, 500, rstream_6);
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 10>;
;;    succ:       5
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  fclose (rstream_6);
  _30 = 1;
  c ={v} {CLOBBER};
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L17>:
  return _30;
;;    succ:       EXIT

}



Partition map 

Partition 1 (n_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (config_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (rstream_6 - 6 )
Partition 7 (n_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (i_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (i_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (n_29 - 29 )
Partition 30 (_30 - 30 )


Partition map 

Partition 0 (n_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (config_3(D) - 3 )
Partition 3 (n_7 - 7 )
Partition 4 (i_16 - 16 )
Partition 5 (i_18 - 18 )
Partition 6 (i_25 - 25 )
Partition 7 (n_29 - 29 )


Live on entry to BB2 : config_3(D)  

Live on entry to BB3 : config_3(D)  

Live on entry to BB4 : config_3(D)  

Live on entry to BB5 : n_1  config_3(D)  

Live on entry to BB6 : n_1  i_2  config_3(D)  

Live on entry to BB7 : n_1  config_3(D)  

Live on entry to BB8 : n_1  i_2  config_3(D)  

Live on entry to BB9 : config_3(D)  

Live on entry to BB10 : 

Live on entry to BB11 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) n_1 <-> n_7
(2147483646) n_1 <-> n_29
(2147483646) i_2 <-> i_16
(2147483646) i_2 <-> i_18
(2147483646) i_2 <-> i_25

Partition map 

Partition 0 (n_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (config_3(D) - 3 )
Partition 3 (n_7 - 7 )
Partition 4 (i_16 - 16 )
Partition 5 (i_18 - 18 )
Partition 6 (i_25 - 25 )
Partition 7 (n_29 - 29 )

Coalesce list: (1)n_1 & (7)n_7 [map: 0, 3] : Success -> 0
Coalesce list: (1)n_1 & (29)n_29 [map: 0, 7] : Success -> 0
Coalesce list: (2)i_2 & (16)i_16 [map: 1, 4] : Success -> 1
Coalesce list: (2)i_2 & (18)i_18 [map: 1, 5] : Success -> 1
Coalesce list: (2)i_2 & (25)i_25 [map: 1, 6] : Success -> 1
Coalesce list: (1)n_1 & (29)n_1: Already Coalesced.
Coalesce list: (1)n_1 & (7)n_1: Already Coalesced.
Coalesce list: (2)i_2 & (18)i_2: Already Coalesced.
Coalesce list: (2)i_2 & (16)i_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (n_1 - 1 7 29 )
Partition 1 (i_2 - 2 16 18 25 )
Partition 2 (config_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (rstream_6 - 6 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_14 - 14 )
Partition 13 (_15 - 15 )
Partition 14 (_17 - 17 )
Partition 15 (_19 - 19 )
Partition 16 (_20 - 20 )
Partition 17 (_21 - 21 )
Partition 18 (_22 - 22 )
Partition 19 (_23 - 23 )
Partition 20 (_24 - 24 )
Partition 21 (_26 - 26 )
Partition 22 (_27 - 27 )
Partition 23 (_28 - 28 )
Partition 24 (_30 - 30 )

generate_temporary_point (struct CONF_t * config)
{
  struct FILE * wstream;
  long double my;
  long double My;
  long double mx;
  long double Mx;
  struct FILE * rstream;
  char c[500];
  int i;
  int n;
  int D.4318;
  long double D.4317;
  long double * D.4316;
  long double * * D.4315;
  long unsigned int D.4314;
  long unsigned int D.4313;
  long double * * D.4312;
  long double D.4311;
  long double * D.4310;
  long double * D.4309;
  long double * * D.4308;
  long unsigned int D.4307;
  long unsigned int D.4306;
  long double * * D.4305;
  int D.4304;
  int D.4303;
  long double * D.4302;
  long double * * D.4301;
  long unsigned int D.4300;
  long unsigned int D.4299;
  long double * * D.4298;
  long double D.4297;
  long double * D.4296;
  long double * D.4295;
  long double * * D.4294;
  long unsigned int D.4293;
  long unsigned int D.4292;
  long double * * D.4291;
  long double D.4290;
  long double * D.4289;
  long double * * D.4288;
  long unsigned int D.4287;
  long unsigned int D.4286;
  long double * * D.4285;
  long double * * D.4284;
  int D.4283;
  long double * * D.4282;
  int D.4281;
  long double * * D.4280;
  int D.4279;
  long double * * D.4278;
  int D.4277;
  int D.4276;
  char * D.4275;
  long double D.4274;
  double D.4273;
  char * D.4272;
  long double * D.4271;
  long double * D.4270;
  long double * * D.4269;
  long unsigned int D.4268;
  long unsigned int D.4267;
  long double * * D.4266;
  char D.4265;
  long double D.4264;
  double D.4263;
  long double * D.4262;
  long double * * D.4261;
  long unsigned int D.4260;
  long unsigned int D.4259;
  long double * * D.4258;
  long double * * D.4255;
  int D.4254;
  int _4;
  long double * * _5;
  char * _8;
  long double * * _9;
  long unsigned int _10;
  long unsigned int _11;
  long double * * _12;
  long double * _13;
  double _14;
  long double _15;
  char _17;
  long double * * _19;
  long unsigned int _20;
  long unsigned int _21;
  long double * * _22;
  long double * _23;
  long double * _24;
  char * _26;
  double _27;
  long double _28;
  int _30;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  config_3(D)->n_tmp_nvp = 50000;
  _4 = config_3(D)->n_tmp_nvp;
  _5 = falloc_matrix (_4, 2);
  config_3(D)->tmp_nvp = _5;
  __builtin_puts (&"Attention! read temporary nvp from file"[0]);
  rstream_6 = fopen ("CONF/temp_nvp.dat", "r");
  if (rstream_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Impossible to open temp_nvp.dat\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  n_7 = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 5, loop depth 0
;;    pred:       9
  _9 = config_3(D)->tmp_nvp;
  _10 = (long unsigned int) n_1;
  _11 = _10 * 8;
  _12 = _9 + _11;
  _13 = *_12;
  _14 = atof (&c);
  _15 = (long double) _14;
  *_13 = _15;
  i_16 = 0;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  i_18 = i_2 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # i_2 = PHI <i_16(5), i_18(6)>
  _17 = c[i_2];
  if (_17 != 9)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _19 = config_3(D)->tmp_nvp;
  _20 = (long unsigned int) n_1;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  _24 = _23 + 16;
  i_25 = i_2 + 1;
  _26 = &c[i_25];
  _27 = atof (_26);
  _28 = (long double) _27;
  *_24 = _28;
  n_29 = n_1 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       4
;;                8
  # n_1 = PHI <n_7(4), n_29(8)>
  _8 = fgets (&c, 500, rstream_6);
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 10>;
;;    succ:       5
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  fclose (rstream_6);
  _30 = 1;
  c ={v} {CLOBBER};
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L17>:
  return _30;
;;    succ:       EXIT

}


Partition 3: size 500 align 16
	c
Partition 2: size 8 align 8
	rstream_6
Partition 1: size 4 align 4
	i_2
Partition 0: size 4 align 4
	n_1

;; Generating RTL for gimple basic block 2

;; config_3(D)->n_tmp_nvp = 50000;

(insn 7 6 8 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:59 -1
     (nil))

(insn 8 7 0 (set (mem/j:SI (plus:DI (reg/f:DI 81)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])
        (const_int 50000 [0xc350])) mSector.c:59 -1
     (nil))

;; _4 = config_3(D)->n_tmp_nvp;

(insn 9 8 10 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 -1
     (nil))

(insn 10 9 0 (set (reg:SI 59 [ D.4968 ])
        (mem/j:SI (plus:DI (reg/f:DI 82)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])) mSector.c:61 -1
     (nil))

;; _5 = falloc_matrix (_4, 2);

(insn 11 10 12 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mSector.c:61 -1
     (nil))

(insn 12 11 13 (set (reg:SI 5 di)
        (reg:SI 59 [ D.4968 ])) mSector.c:61 -1
     (nil))

(call_insn 13 12 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:61 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 14 13 0 (set (reg/f:DI 60 [ D.4969 ])
        (reg:DI 0 ax)) mSector.c:61 -1
     (nil))

;; config_3(D)->tmp_nvp = _5;

(insn 15 14 16 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 -1
     (nil))

(insn 16 15 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 83)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])
        (reg/f:DI 60 [ D.4969 ])) mSector.c:61 -1
     (nil))

;; __builtin_puts (&"Attention! read temporary nvp from file"[0]);

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44d2849980 *.LC3>)) mSector.c:64 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:64 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; rstream_6 = fopen ("CONF/temp_nvp.dat", "r");

(insn 19 18 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f44d2849a18 *.LC4>)) mSector.c:67 -1
     (nil))

(insn 20 19 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f44d2849ab0 *.LC5>)) mSector.c:67 -1
     (nil))

(call_insn 21 20 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f44d2a89200 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mSector.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 22 21 23 (set (reg:DI 84)
        (reg:DI 0 ax)) mSector.c:67 -1
     (nil))

(insn 23 22 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mSector.c:67 -1
     (nil))

;; if (rstream_6 == 0B)

(insn 24 23 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mSector.c:68 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:68 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("Impossible to open temp_nvp.dat\n");

(insn 27 26 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f44d2849b48 *.LC6>)) mSector.c:68 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:68 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 29 28 30 30 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; n_7 = 0;

(insn 31 30 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
        (const_int 0 [0])) mSector.c:69 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _9 = config_3(D)->tmp_nvp;

(insn 35 34 36 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:70 -1
     (nil))

(insn 36 35 0 (set (reg/f:DI 62 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:70 -1
     (nil))

;; _10 = (long unsigned int) n_1;

(insn 37 36 38 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:70 -1
     (nil))

(insn 38 37 0 (set (reg:DI 63 [ D.4971 ])
        (sign_extend:DI (reg:SI 86))) mSector.c:70 -1
     (nil))

;; _11 = _10 * 8;

(insn 39 38 0 (parallel [
            (set (reg:DI 64 [ D.4971 ])
                (ashift:DI (reg:DI 63 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))

;; _12 = _9 + _11;

(insn 40 39 0 (parallel [
            (set (reg/f:DI 65 [ D.4969 ])
                (plus:DI (reg/f:DI 62 [ D.4969 ])
                    (reg:DI 64 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))

;; _13 = *_12;

(insn 41 40 0 (set (reg/f:DI 66 [ D.4972 ])
        (mem/f:DI (reg/f:DI 65 [ D.4969 ]) [0 *_12+0 S8 A64])) mSector.c:70 -1
     (nil))

;; _14 = atof (&c);

(insn 42 41 43 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))

(insn 43 42 44 (set (reg:DI 5 di)
        (reg:DI 87)) mSector.c:70 -1
     (nil))

(call_insn/i 44 43 45 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:70 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 45 44 0 (set (reg:DF 67 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:70 -1
     (nil))

;; _15 = (long double) _14;

(insn 46 45 0 (set (reg:XF 68 [ D.4974 ])
        (float_extend:XF (reg:DF 67 [ D.4973 ]))) mSector.c:70 -1
     (nil))

;; *_13 = _15;

(insn 47 46 0 (set (mem:XF (reg/f:DI 66 [ D.4972 ]) [0 *_13+0 S16 A128])
        (reg:XF 68 [ D.4974 ])) mSector.c:70 -1
     (nil))

;; i_16 = 0;

(insn 48 47 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:71 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_18 = i_2 + 1;

(insn 52 51 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:71 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 53 52 54 32 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = c[i_2];

(insn 55 54 56 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:71 -1
     (nil))

(insn 56 55 57 (set (reg:DI 88)
        (sign_extend:DI (reg:SI 89))) mSector.c:71 -1
     (nil))

(insn 57 56 0 (set (reg:QI 69 [ D.4975 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 88))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mSector.c:71 -1
     (nil))

;; if (_17 != 9)

(insn 59 57 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.4975 ])
            (const_int 9 [0x9]))) mSector.c:71 -1
     (nil))

(jump_insn 60 59 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) mSector.c:71 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _19 = config_3(D)->tmp_nvp;

(insn 62 61 63 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:72 -1
     (nil))

(insn 63 62 0 (set (reg/f:DI 70 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:72 -1
     (nil))

;; _20 = (long unsigned int) n_1;

(insn 64 63 65 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:72 -1
     (nil))

(insn 65 64 0 (set (reg:DI 71 [ D.4971 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:72 -1
     (nil))

;; _21 = _20 * 8;

(insn 66 65 0 (parallel [
            (set (reg:DI 72 [ D.4971 ])
                (ashift:DI (reg:DI 71 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

;; _22 = _19 + _21;

(insn 67 66 0 (parallel [
            (set (reg/f:DI 73 [ D.4969 ])
                (plus:DI (reg/f:DI 70 [ D.4969 ])
                    (reg:DI 72 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

;; _23 = *_22;

(insn 68 67 0 (set (reg/f:DI 74 [ D.4972 ])
        (mem/f:DI (reg/f:DI 73 [ D.4969 ]) [0 *_22+0 S8 A64])) mSector.c:72 -1
     (nil))

;; _24 = _23 + 16;

(insn 69 68 0 (parallel [
            (set (reg/f:DI 75 [ D.4972 ])
                (plus:DI (reg/f:DI 74 [ D.4972 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

;; i_25 = i_2 + 1;

(insn 70 69 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

;; _26 = &c[i_25];

(insn 71 70 72 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

(insn 72 71 73 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:72 -1
     (nil))

(insn 73 72 74 (set (reg:DI 93)
        (sign_extend:DI (reg:SI 94))) mSector.c:72 -1
     (nil))

(insn 74 73 0 (parallel [
            (set (reg/f:DI 76 [ D.4970 ])
                (plus:DI (reg:DI 92)
                    (reg:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))

;; _27 = atof (_26);

(insn 75 74 76 (set (reg:DI 5 di)
        (reg/f:DI 76 [ D.4970 ])) mSector.c:72 -1
     (nil))

(call_insn/i 76 75 77 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 77 76 0 (set (reg:DF 77 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:72 -1
     (nil))

;; _28 = (long double) _27;

(insn 78 77 0 (set (reg:XF 78 [ D.4974 ])
        (float_extend:XF (reg:DF 77 [ D.4973 ]))) mSector.c:72 -1
     (nil))

;; *_24 = _28;

(insn 79 78 0 (set (mem:XF (reg/f:DI 75 [ D.4972 ]) [0 *_24+0 S16 A128])
        (reg:XF 78 [ D.4974 ])) mSector.c:72 -1
     (nil))

;; n_29 = n_1 + 1;

(insn 80 79 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 81 80 82 31 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = fgets (&c, 500, rstream_6);

(insn 83 82 84 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:69 -1
     (nil))

(insn 84 83 85 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 -1
     (nil))

(insn 85 84 86 (set (reg:DI 1 dx)
        (reg:DI 95)) mSector.c:69 -1
     (nil))

(insn 86 85 87 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mSector.c:69 -1
     (nil))

(insn 87 86 88 (set (reg:DI 5 di)
        (reg:DI 96)) mSector.c:69 -1
     (nil))

(call_insn 88 87 89 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f44d2aa0300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mSector.c:69 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 89 88 0 (set (reg/f:DI 61 [ D.4970 ])
        (reg:DI 0 ax)) mSector.c:69 -1
     (nil))

;; if (_8 != 0B)

(insn 91 89 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.4970 ])
            (const_int 0 [0]))) mSector.c:69 -1
     (nil))

(jump_insn 92 91 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mSector.c:69 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; fclose (rstream_6);

(insn 94 93 95 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:74 -1
     (nil))

(insn 95 94 96 (set (reg:DI 5 di)
        (reg:DI 97)) mSector.c:74 -1
     (nil))

(call_insn 96 95 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f44d2a83f00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mSector.c:74 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _30 = 1;

(insn 97 96 0 (set (reg:SI 79 [ D.4968 ])
        (const_int 1 [0x1])) mSector.c:75 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 11

;; <L17>:

(code_label 98 97 99 35 "" [0 uses])

(note 99 98 0 NOTE_INSN_BASIC_BLOCK)

;; return _30;

(insn 100 99 101 (set (reg:SI 80 [ <retval> ])
        (reg:SI 79 [ D.4968 ])) -1
     (nil))

(jump_insn 101 100 102 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 102 101 0)
deleting block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])
        (reg:DI 5 di [ config ])) mSector.c:57 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.4976+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:57 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:59 -1
     (nil))
(insn 8 7 9 2 (set (mem/j:SI (plus:DI (reg/f:DI 81)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])
        (const_int 50000 [0xc350])) mSector.c:59 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 59 [ D.4968 ])
        (mem/j:SI (plus:DI (reg/f:DI 82)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])) mSector.c:61 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mSector.c:61 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 59 [ D.4968 ])) mSector.c:61 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:61 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 60 [ D.4969 ])
        (reg:DI 0 ax)) mSector.c:61 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 83)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])
        (reg/f:DI 60 [ D.4969 ])) mSector.c:61 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44d2849980 *.LC3>)) mSector.c:64 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:64 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f44d2849a18 *.LC4>)) mSector.c:67 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f44d2849ab0 *.LC5>)) mSector.c:67 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f44d2a89200 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mSector.c:67 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 22 21 23 2 (set (reg:DI 84)
        (reg:DI 0 ax)) mSector.c:67 -1
     (nil))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mSector.c:67 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mSector.c:68 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) mSector.c:68 -1
     (nil)
 -> 29)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f44d2849b48 *.LC6>)) mSector.c:68 -1
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:68 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 29 28 30 5 30 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
        (const_int 0 [0])) mSector.c:69 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (label_ref 81)) mSector.c:69 -1
     (nil)
 -> 81)
;;  succ:       10

(barrier 33 32 90)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 90 33 34 6 34 "" [1 uses])
(note 34 90 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:70 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 62 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:70 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:70 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 63 [ D.4971 ])
        (sign_extend:DI (reg:SI 86))) mSector.c:70 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 64 [ D.4971 ])
                (ashift:DI (reg:DI 63 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg/f:DI 65 [ D.4969 ])
                (plus:DI (reg/f:DI 62 [ D.4969 ])
                    (reg:DI 64 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 66 [ D.4972 ])
        (mem/f:DI (reg/f:DI 65 [ D.4969 ]) [0 *_12+0 S8 A64])) mSector.c:70 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg:DI 87)) mSector.c:70 -1
     (nil))
(call_insn/i 44 43 45 6 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:70 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 6 (set (reg:DF 67 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:70 -1
     (nil))
(insn 46 45 47 6 (set (reg:XF 68 [ D.4974 ])
        (float_extend:XF (reg:DF 67 [ D.4973 ]))) mSector.c:70 -1
     (nil))
(insn 47 46 48 6 (set (mem:XF (reg/f:DI 66 [ D.4972 ]) [0 *_13+0 S16 A128])
        (reg:XF 68 [ D.4974 ])) mSector.c:70 -1
     (nil))
(insn 48 47 49 6 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:71 -1
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (label_ref 53)) mSector.c:71 -1
     (nil)
 -> 53)
;;  succ:       8

(barrier 50 49 58)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 58 50 51 7 33 "" [1 uses])
(note 51 58 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:71 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 53 52 54 8 32 "" [1 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:71 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 88)
        (sign_extend:DI (reg:SI 89))) mSector.c:71 -1
     (nil))
(insn 57 56 59 8 (set (reg:QI 69 [ D.4975 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (reg:DI 88))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mSector.c:71 -1
     (nil))
(insn 59 57 60 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.4975 ])
            (const_int 9 [0x9]))) mSector.c:71 -1
     (nil))
(jump_insn 60 59 61 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) mSector.c:71 -1
     (nil)
 -> 58)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:72 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 70 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:72 -1
     (nil))
(insn 64 63 65 9 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:72 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 71 [ D.4971 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:72 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 72 [ D.4971 ])
                (ashift:DI (reg:DI 71 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg/f:DI 73 [ D.4969 ])
                (plus:DI (reg/f:DI 70 [ D.4969 ])
                    (reg:DI 72 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 74 [ D.4972 ])
        (mem/f:DI (reg/f:DI 73 [ D.4969 ]) [0 *_22+0 S8 A64])) mSector.c:72 -1
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg/f:DI 75 [ D.4972 ])
                (plus:DI (reg/f:DI 74 [ D.4972 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 70 69 71 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 72 71 73 9 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:72 -1
     (nil))
(insn 73 72 74 9 (set (reg:DI 93)
        (sign_extend:DI (reg:SI 94))) mSector.c:72 -1
     (nil))
(insn 74 73 75 9 (parallel [
            (set (reg/f:DI 76 [ D.4970 ])
                (plus:DI (reg:DI 92)
                    (reg:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 -1
     (nil))
(insn 75 74 76 9 (set (reg:DI 5 di)
        (reg/f:DI 76 [ D.4970 ])) mSector.c:72 -1
     (nil))
(call_insn/i 76 75 77 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 9 (set (reg:DF 77 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:72 -1
     (nil))
(insn 78 77 79 9 (set (reg:XF 78 [ D.4974 ])
        (float_extend:XF (reg:DF 77 [ D.4973 ]))) mSector.c:72 -1
     (nil))
(insn 79 78 80 9 (set (mem:XF (reg/f:DI 75 [ D.4972 ]) [0 *_24+0 S16 A128])
        (reg:XF 78 [ D.4974 ])) mSector.c:72 -1
     (nil))
(insn 80 79 81 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 -1
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              9 (FALLTHRU,DFS_BACK)
(code_label 81 80 82 10 31 "" [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:69 -1
     (nil))
(insn 84 83 85 10 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 -1
     (nil))
(insn 85 84 86 10 (set (reg:DI 1 dx)
        (reg:DI 95)) mSector.c:69 -1
     (nil))
(insn 86 85 87 10 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mSector.c:69 -1
     (nil))
(insn 87 86 88 10 (set (reg:DI 5 di)
        (reg:DI 96)) mSector.c:69 -1
     (nil))
(call_insn 88 87 89 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f44d2aa0300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mSector.c:69 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 89 88 91 10 (set (reg/f:DI 61 [ D.4970 ])
        (reg:DI 0 ax)) mSector.c:69 -1
     (nil))
(insn 91 89 92 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.4970 ])
            (const_int 0 [0]))) mSector.c:69 -1
     (nil))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mSector.c:69 -1
     (nil)
 -> 90)
;;  succ:       6
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:74 -1
     (nil))
(insn 95 94 96 11 (set (reg:DI 5 di)
        (reg:DI 97)) mSector.c:74 -1
     (nil))
(call_insn 96 95 97 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f44d2a83f00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mSector.c:74 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 97 96 100 11 (set (reg:SI 79 [ D.4968 ])
        (const_int 1 [0x1])) mSector.c:75 -1
     (nil))
(insn 100 97 104 11 (set (reg:SI 80 [ <retval> ])
        (reg:SI 79 [ D.4968 ])) -1
     (nil))
(insn 104 100 107 11 (set (reg/i:SI 0 ax)
        (reg:SI 80 [ <retval> ])) mSector.c:94 -1
     (nil))
(insn 107 104 108 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.4976+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mSector.c:94 -1
     (nil))
(jump_insn 108 107 115 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:94 -1
     (nil)
 -> 111)
;;  succ:       15
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 115 108 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 109 115 110 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f44d2852000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mSector.c:94 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 110 109 111)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 111 110 116 15 36 "" [1 uses])
(note 116 111 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 112 116 0 15 (use (reg/i:SI 0 ax)) mSector.c:94 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function cheak_traj_intersect_bound (cheak_traj_intersect_bound, funcdef_no=6, decl_uid=1874, cgraph_uid=6)

cheak_traj_intersect_bound (struct Aircraft_t * flight, int Nflight, struct CONF_t config)
{
  int n_inter;
  int k;
  int j;
  int i;
  int D.4353;
  int D.4348;
  struct Aircraft_t * D.4347;
  long unsigned int D.4346;
  long unsigned int D.4345;
  int D.4344;
  int D.4343;
  int D.4340;
  long double * D.4339;
  long double * * D.4338;
  long unsigned int D.4337;
  long unsigned int D.4336;
  long double * * D.4335;
  long double * D.4334;
  long double * * D.4333;
  sizetype D.4332;
  sizetype D.4331;
  sizetype D.4330;
  long double * * D.4329;
  long double * D.4328;
  long double * * D.4327;
  long unsigned int D.4326;
  long unsigned int D.4325;
  long double * * D.4324;
  struct Aircraft_t * D.4323;
  long unsigned int D.4322;
  long unsigned int D.4321;
  long unsigned int _10;
  long unsigned int _11;
  struct Aircraft_t * _13;
  int _14;
  int _16;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  struct Aircraft_t * _20;
  long double * * _21;
  long unsigned int _22;
  long unsigned int _23;
  long double * * _24;
  long double * _25;
  long double * * _26;
  sizetype _27;
  sizetype _28;
  sizetype _29;
  long double * * _30;
  long double * _31;
  long double * * _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * * _35;
  long double * _36;
  int _37;
  int _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 3, loop depth 0
;;    pred:       16
  j_8 = 0;
  n_inter_9 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       10
  k_15 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _18 = (long unsigned int) i_1;
  _19 = _18 * 160;
  _20 = flight_12(D) + _19;
  _21 = _20->nvp;
  _22 = (long unsigned int) j_2;
  _23 = _22 * 8;
  _24 = _21 + _23;
  _25 = *_24;
  _26 = config.bound;
  _27 = (sizetype) k_3;
  _28 = _27 + 1;
  _29 = _28 * 8;
  _30 = _26 + _29;
  _31 = *_30;
  _32 = config.bound;
  _33 = (long unsigned int) k_3;
  _34 = _33 * 8;
  _35 = _32 + _34;
  _36 = *_35;
  _37 = isbetween (_36, _31, _25);
  if (_37 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  n_inter_38 = n_inter_5 + 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  k_39 = k_3 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # k_3 = PHI <k_15(4), k_39(7)>
  _16 = config.Nbound;
  _17 = _16 + -1;
  if (_17 > k_3)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       6
;;                8
  # n_inter_4 = PHI <n_inter_38(6), n_inter_5(8)>
  j_40 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_2 = PHI <j_8(3), j_40(9)>
  # n_inter_5 = PHI <n_inter_9(3), n_inter_4(9)>
  _10 = (long unsigned int) i_1;
  _11 = _10 * 160;
  _13 = flight_12(D) + _11;
  _14 = _13->n_nvp;
  if (_14 > j_2)
    goto <bb 4>;
  else
    goto <bb 11>;
;;    succ:       4
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  if (n_inter_5 <= 1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  BuG ("The current version of the ABM require that the trajectories of all flight have two nvp on the boundary of the sector\n");
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  if (n_inter_5 > 2)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  BuG ("There are trajectories with more than two intersections with the boundary of the sector\n");
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  i_41 = i_1 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       2
;;                15
  # i_1 = PHI <i_6(2), i_41(15)>
  if (i_1 < Nflight_7(D))
    goto <bb 3>;
  else
    goto <bb 17>;
;;    succ:       3
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  _42 = 1;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       17
<L15>:
  return _42;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (k_3 - 3 )
Partition 4 (n_inter_4 - 4 )
Partition 5 (n_inter_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (Nflight_7(D) - 7 )
Partition 8 (j_8 - 8 )
Partition 9 (n_inter_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (flight_12(D) - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (k_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (n_inter_38 - 38 )
Partition 39 (k_39 - 39 )
Partition 40 (j_40 - 40 )
Partition 41 (i_41 - 41 )
Partition 42 (_42 - 42 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (k_3 - 3 )
Partition 3 (n_inter_4 - 4 )
Partition 4 (n_inter_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nflight_7(D) - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (n_inter_9 - 9 )
Partition 9 (flight_12(D) - 12 )
Partition 10 (k_15 - 15 )
Partition 11 (n_inter_38 - 38 )
Partition 12 (k_39 - 39 )
Partition 13 (j_40 - 40 )
Partition 14 (i_41 - 41 )


Live on entry to BB2 : Nflight_7(D)  flight_12(D)  

Live on entry to BB3 : i_1  Nflight_7(D)  flight_12(D)  

Live on entry to BB4 : i_1  j_2  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB5 : i_1  j_2  k_3  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB6 : i_1  j_2  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB7 : i_1  j_2  k_3  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB8 : i_1  j_2  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB9 : i_1  j_2  Nflight_7(D)  flight_12(D)  

Live on entry to BB10 : i_1  Nflight_7(D)  flight_12(D)  

Live on entry to BB11 : i_1  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB12 : i_1  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB13 : i_1  n_inter_5  Nflight_7(D)  flight_12(D)  

Live on entry to BB14 : i_1  Nflight_7(D)  flight_12(D)  

Live on entry to BB15 : i_1  Nflight_7(D)  flight_12(D)  

Live on entry to BB16 : Nflight_7(D)  flight_12(D)  

Live on entry to BB17 : 

Live on entry to BB18 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_41
(2147483646) j_2 <-> j_8
(2147483646) j_2 <-> j_40
(2147483646) k_3 <-> k_15
(2147483646) k_3 <-> k_39
(2147483646) n_inter_4 <-> n_inter_5
(2147483646) n_inter_4 <-> n_inter_9
(2147483646) n_inter_4 <-> n_inter_38

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (k_3 - 3 )
Partition 3 (n_inter_4 - 4 )
Partition 4 (n_inter_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nflight_7(D) - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (n_inter_9 - 9 )
Partition 9 (flight_12(D) - 12 )
Partition 10 (k_15 - 15 )
Partition 11 (n_inter_38 - 38 )
Partition 12 (k_39 - 39 )
Partition 13 (j_40 - 40 )
Partition 14 (i_41 - 41 )

Coalesce list: (1)i_1 & (6)i_6 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (41)i_41 [map: 0, 14] : Success -> 0
Coalesce list: (2)j_2 & (8)j_8 [map: 1, 7] : Success -> 1
Coalesce list: (2)j_2 & (40)j_40 [map: 1, 13] : Success -> 1
Coalesce list: (3)k_3 & (15)k_15 [map: 2, 10] : Success -> 2
Coalesce list: (3)k_3 & (39)k_39 [map: 2, 12] : Success -> 2
Coalesce list: (4)n_inter_4 & (5)n_inter_5 [map: 3, 4] : Success -> 3
Coalesce list: (4)n_inter_4 & (9)n_inter_9 [map: 3, 8] : Success -> 3
Coalesce list: (4)n_inter_4 & (38)n_inter_38 [map: 3, 11] : Success -> 3
Coalesce list: (1)i_1 & (41)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
Coalesce list: (5)n_inter_4 & (4)n_inter_4: Already Coalesced.
Coalesce list: (5)n_inter_4 & (9)n_inter_4: Already Coalesced.
Coalesce list: (2)j_2 & (40)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (8)j_2: Already Coalesced.
Coalesce list: (4)n_inter_4 & (38)n_inter_4: Already Coalesced.
Coalesce list: (3)k_3 & (39)k_3: Already Coalesced.
Coalesce list: (3)k_3 & (15)k_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 6 41 )
Partition 1 (j_2 - 2 8 40 )
Partition 2 (k_3 - 3 15 39 )
Partition 3 (n_inter_4 - 4 5 9 38 )
Partition 4 (Nflight_7(D) - 7 )
Partition 5 (_10 - 10 )
Partition 6 (_11 - 11 )
Partition 7 (flight_12(D) - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_24 - 24 )
Partition 19 (_25 - 25 )
Partition 20 (_26 - 26 )
Partition 21 (_27 - 27 )
Partition 22 (_28 - 28 )
Partition 23 (_29 - 29 )
Partition 24 (_30 - 30 )
Partition 25 (_31 - 31 )
Partition 26 (_32 - 32 )
Partition 27 (_33 - 33 )
Partition 28 (_34 - 34 )
Partition 29 (_35 - 35 )
Partition 30 (_36 - 36 )
Partition 31 (_37 - 37 )
Partition 32 (_42 - 42 )

cheak_traj_intersect_bound (struct Aircraft_t * flight, int Nflight, struct CONF_t config)
{
  int n_inter;
  int k;
  int j;
  int i;
  int D.4353;
  int D.4348;
  struct Aircraft_t * D.4347;
  long unsigned int D.4346;
  long unsigned int D.4345;
  int D.4344;
  int D.4343;
  int D.4340;
  long double * D.4339;
  long double * * D.4338;
  long unsigned int D.4337;
  long unsigned int D.4336;
  long double * * D.4335;
  long double * D.4334;
  long double * * D.4333;
  sizetype D.4332;
  sizetype D.4331;
  sizetype D.4330;
  long double * * D.4329;
  long double * D.4328;
  long double * * D.4327;
  long unsigned int D.4326;
  long unsigned int D.4325;
  long double * * D.4324;
  struct Aircraft_t * D.4323;
  long unsigned int D.4322;
  long unsigned int D.4321;
  long unsigned int _10;
  long unsigned int _11;
  struct Aircraft_t * _13;
  int _14;
  int _16;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  struct Aircraft_t * _20;
  long double * * _21;
  long unsigned int _22;
  long unsigned int _23;
  long double * * _24;
  long double * _25;
  long double * * _26;
  sizetype _27;
  sizetype _28;
  sizetype _29;
  long double * * _30;
  long double * _31;
  long double * * _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * * _35;
  long double * _36;
  int _37;
  int _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 3, loop depth 0
;;    pred:       16
  j_8 = 0;
  n_inter_9 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       10
  k_15 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _18 = (long unsigned int) i_1;
  _19 = _18 * 160;
  _20 = flight_12(D) + _19;
  _21 = _20->nvp;
  _22 = (long unsigned int) j_2;
  _23 = _22 * 8;
  _24 = _21 + _23;
  _25 = *_24;
  _26 = config.bound;
  _27 = (sizetype) k_3;
  _28 = _27 + 1;
  _29 = _28 * 8;
  _30 = _26 + _29;
  _31 = *_30;
  _32 = config.bound;
  _33 = (long unsigned int) k_3;
  _34 = _33 * 8;
  _35 = _32 + _34;
  _36 = *_35;
  _37 = isbetween (_36, _31, _25);
  if (_37 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  n_inter_38 = n_inter_5 + 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  k_39 = k_3 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # k_3 = PHI <k_15(4), k_39(7)>
  _16 = config.Nbound;
  _17 = _16 + -1;
  if (_17 > k_3)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       6
;;                8
  # n_inter_4 = PHI <n_inter_38(6), n_inter_5(8)>
  j_40 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_2 = PHI <j_8(3), j_40(9)>
  # n_inter_5 = PHI <n_inter_9(3), n_inter_4(9)>
  _10 = (long unsigned int) i_1;
  _11 = _10 * 160;
  _13 = flight_12(D) + _11;
  _14 = _13->n_nvp;
  if (_14 > j_2)
    goto <bb 4>;
  else
    goto <bb 11>;
;;    succ:       4
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  if (n_inter_5 <= 1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  BuG ("The current version of the ABM require that the trajectories of all flight have two nvp on the boundary of the sector\n");
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  if (n_inter_5 > 2)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  BuG ("There are trajectories with more than two intersections with the boundary of the sector\n");
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  i_41 = i_1 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       2
;;                15
  # i_1 = PHI <i_6(2), i_41(15)>
  if (i_1 < Nflight_7(D))
    goto <bb 3>;
  else
    goto <bb 17>;
;;    succ:       3
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  _42 = 1;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       17
<L15>:
  return _42;
;;    succ:       EXIT

}


Partition 3: size 4 align 4
	n_inter_4
Partition 2: size 4 align 4
	k_3
Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_6 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:98 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_8 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 -1
     (nil))

;; n_inter_9 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; k_15 = 0;

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:100 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _18 = (long unsigned int) i_1;

(insn 20 19 21 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:101 -1
     (nil))

(insn 21 20 0 (set (reg:DI 65 [ D.4983 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:101 -1
     (nil))

;; _19 = _18 * 160;

(insn 22 21 23 (set (reg:DI 88)
        (reg:DI 65 [ D.4983 ])) mSector.c:101 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

(insn 24 23 25 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 65 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 25 24 26 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

(insn 26 25 27 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:101 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 27 26 0 (set (reg:DI 66 [ D.4983 ])
        (reg:DI 88)) mSector.c:101 -1
     (nil))

;; _20 = flight_12(D) + _19;

(insn 28 27 29 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:101 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:DI 67 [ D.4984 ])
                (plus:DI (reg:DI 66 [ D.4983 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 66 [ D.4983 ]))
        (nil)))

;; _21 = _20->nvp;

(insn 30 29 0 (set (reg/f:DI 68 [ D.4986 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67 [ D.4984 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _22 = (long unsigned int) j_2;

(insn 31 30 32 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:101 -1
     (nil))

(insn 32 31 0 (set (reg:DI 69 [ D.4983 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:101 -1
     (nil))

;; _23 = _22 * 8;

(insn 33 32 0 (parallel [
            (set (reg:DI 70 [ D.4983 ])
                (ashift:DI (reg:DI 69 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _24 = _21 + _23;

(insn 34 33 0 (parallel [
            (set (reg/f:DI 71 [ D.4986 ])
                (plus:DI (reg/f:DI 68 [ D.4986 ])
                    (reg:DI 70 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _25 = *_24;

(insn 35 34 0 (set (reg/f:DI 72 [ D.4987 ])
        (mem/f:DI (reg/f:DI 71 [ D.4986 ]) [0 *_24+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _26 = config.bound;

(insn 36 35 0 (set (reg/f:DI 73 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _27 = (sizetype) k_3;

(insn 37 36 38 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 -1
     (nil))

(insn 38 37 0 (set (reg:DI 74 [ D.4988 ])
        (sign_extend:DI (reg:SI 92))) mSector.c:101 -1
     (nil))

;; _28 = _27 + 1;

(insn 39 38 0 (parallel [
            (set (reg:DI 75 [ D.4988 ])
                (plus:DI (reg:DI 74 [ D.4988 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _29 = _28 * 8;

(insn 40 39 0 (parallel [
            (set (reg:DI 76 [ D.4988 ])
                (ashift:DI (reg:DI 75 [ D.4988 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _30 = _26 + _29;

(insn 41 40 0 (parallel [
            (set (reg/f:DI 77 [ D.4986 ])
                (plus:DI (reg/f:DI 73 [ D.4986 ])
                    (reg:DI 76 [ D.4988 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _31 = *_30;

(insn 42 41 0 (set (reg/f:DI 78 [ D.4987 ])
        (mem/f:DI (reg/f:DI 77 [ D.4986 ]) [0 *_30+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _32 = config.bound;

(insn 43 42 0 (set (reg/f:DI 79 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _33 = (long unsigned int) k_3;

(insn 44 43 45 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 -1
     (nil))

(insn 45 44 0 (set (reg:DI 80 [ D.4983 ])
        (sign_extend:DI (reg:SI 93))) mSector.c:101 -1
     (nil))

;; _34 = _33 * 8;

(insn 46 45 0 (parallel [
            (set (reg:DI 81 [ D.4983 ])
                (ashift:DI (reg:DI 80 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _35 = _32 + _34;

(insn 47 46 0 (parallel [
            (set (reg/f:DI 82 [ D.4986 ])
                (plus:DI (reg/f:DI 79 [ D.4986 ])
                    (reg:DI 81 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))

;; _36 = *_35;

(insn 48 47 0 (set (reg/f:DI 83 [ D.4987 ])
        (mem/f:DI (reg/f:DI 82 [ D.4986 ]) [0 *_35+0 S8 A64])) mSector.c:101 -1
     (nil))

;; _37 = isbetween (_36, _31, _25);

(insn 49 48 50 (set (reg:DI 1 dx)
        (reg/f:DI 72 [ D.4987 ])) mSector.c:101 -1
     (nil))

(insn 50 49 51 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.4987 ])) mSector.c:101 -1
     (nil))

(insn 51 50 52 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.4987 ])) mSector.c:101 -1
     (nil))

(call_insn 52 51 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:101 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 53 52 0 (set (reg:SI 84 [ D.4985 ])
        (reg:SI 0 ax)) mSector.c:101 -1
     (nil))

;; if (_37 != 0)

(insn 54 53 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ D.4985 ])
            (const_int 0 [0]))) mSector.c:101 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:101 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; n_inter_38 = n_inter_5 + 1;

(insn 57 56 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:102 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 60 59 61 41 "" [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; k_39 = k_3 + 1;

(insn 62 61 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 63 62 64 40 "" [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _16 = config.Nbound;

(insn 65 64 0 (set (reg:SI 63 [ D.4985 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 config.Nbound+0 S4 A128])) mSector.c:100 -1
     (nil))

;; _17 = _16 + -1;

(insn 66 65 0 (parallel [
            (set (reg:SI 64 [ D.4985 ])
                (plus:SI (reg:SI 63 [ D.4985 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 -1
     (nil))

;; if (_17 > k_3)

(insn 68 66 69 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:100 -1
     (nil))

(jump_insn 69 68 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:100 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 70 69 71 42 "" [0 uses])

(note 71 70 0 NOTE_INSN_BASIC_BLOCK)

;; j_40 = j_2 + 1;

(insn 72 71 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 73 72 74 39 "" [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = (long unsigned int) i_1;

(insn 75 74 76 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:99 -1
     (nil))

(insn 76 75 0 (set (reg:DI 59 [ D.4983 ])
        (sign_extend:DI (reg:SI 94))) mSector.c:99 -1
     (nil))

;; _11 = _10 * 160;

(insn 77 76 78 (set (reg:DI 95)
        (reg:DI 59 [ D.4983 ])) mSector.c:99 -1
     (nil))

(insn 78 77 79 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 95)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))

(insn 79 78 80 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 95)
                    (reg:DI 59 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 80 79 81 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))

(insn 81 80 82 (set (reg:DI 95)
        (reg:DI 96)) mSector.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 82 81 0 (set (reg:DI 60 [ D.4983 ])
        (reg:DI 95)) mSector.c:99 -1
     (nil))

;; _13 = flight_12(D) + _11;

(insn 83 82 84 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:99 -1
     (nil))

(insn 84 83 0 (parallel [
            (set (reg/f:DI 61 [ D.4984 ])
                (plus:DI (reg:DI 60 [ D.4983 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.4983 ]))
        (nil)))

;; _14 = _13->n_nvp;

(insn 85 84 0 (set (reg:SI 62 [ D.4985 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.4984 ])
                (const_int 4 [0x4])) [0 _13->n_nvp+0 S4 A32])) mSector.c:99 -1
     (nil))

;; if (_14 > j_2)

(insn 87 85 88 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 62 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:99 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mSector.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (n_inter_5 <= 1)

(insn 90 89 91 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:105 -1
     (nil))

(jump_insn 91 90 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:105 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; BuG ("The current version of the ABM require that the trajectories of all flight have two nvp on the boundary of the sector\n");

(insn 93 92 94 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f44d2858ab0 *.LC7>)) mSector.c:105 -1
     (nil))

(call_insn 94 93 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:105 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 13

;; 

(code_label 95 94 96 45 "" [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; if (n_inter_5 > 2)

(insn 97 96 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 2 [0x2]))) mSector.c:107 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:107 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; BuG ("There are trajectories with more than two intersections with the boundary of the sector\n");

(insn 100 99 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f44d2858b48 *.LC8>)) mSector.c:107 -1
     (nil))

(call_insn 101 100 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:107 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 15

;; 

(code_label 102 101 103 46 "" [0 uses])

(note 103 102 0 NOTE_INSN_BASIC_BLOCK)

;; i_41 = i_1 + 1;

(insn 104 103 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:98 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 105 104 106 38 "" [0 uses])

(note 106 105 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < Nflight_7(D))

(insn 108 106 109 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:98 -1
     (nil))

(insn 109 108 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32]))) mSector.c:98 -1
     (nil))

(jump_insn 110 109 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mSector.c:98 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _42 = 1;

(insn 112 111 0 (set (reg:SI 85 [ D.4985 ])
        (const_int 1 [0x1])) mSector.c:109 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; <L15>:

(code_label 113 112 114 48 "" [0 uses])

(note 114 113 0 NOTE_INSN_BASIC_BLOCK)

;; return _42;

(insn 115 114 116 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ D.4985 ])) mSector.c:109 -1
     (nil))

(jump_insn 116 115 117 (set (pc)
        (label_ref 0)) mSector.c:109 -1
     (nil))

(barrier 117 116 0)
deleting block 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.
Merging block 20 into block 18...
Merged blocks 18 and 20.
Merged 18 and 20 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:96 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mSector.c:96 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:98 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 105)) mSector.c:98 -1
     (nil)
 -> 105)
;;  succ:       17

(barrier 9 8 107)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 107 9 10 4 47 "" [1 uses])
(note 10 107 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 -1
     (nil))
(insn 12 11 13 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (label_ref 73)) mSector.c:99 -1
     (nil)
 -> 73)
;;  succ:       11

(barrier 14 13 86)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 86 14 15 5 44 "" [1 uses])
(note 15 86 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:100 -1
     (nil))
(jump_insn 17 16 18 5 (set (pc)
        (label_ref 63)) mSector.c:100 -1
     (nil)
 -> 63)
;;  succ:       9

(barrier 18 17 67)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 67 18 19 6 43 "" [1 uses])
(note 19 67 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:101 -1
     (nil))
(insn 21 20 22 6 (set (reg:DI 65 [ D.4983 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:101 -1
     (nil))
(insn 22 21 23 6 (set (reg:DI 88)
        (reg:DI 65 [ D.4983 ])) mSector.c:101 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 24 23 25 6 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 65 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 25 24 26 6 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:101 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 27 26 28 6 (set (reg:DI 66 [ D.4983 ])
        (reg:DI 88)) mSector.c:101 -1
     (nil))
(insn 28 27 29 6 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:DI 67 [ D.4984 ])
                (plus:DI (reg:DI 66 [ D.4983 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 66 [ D.4983 ]))
        (nil)))
(insn 30 29 31 6 (set (reg/f:DI 68 [ D.4986 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67 [ D.4984 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:101 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 69 [ D.4983 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:101 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 70 [ D.4983 ])
                (ashift:DI (reg:DI 69 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg/f:DI 71 [ D.4986 ])
                (plus:DI (reg/f:DI 68 [ D.4986 ])
                    (reg:DI 70 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 72 [ D.4987 ])
        (mem/f:DI (reg/f:DI 71 [ D.4986 ]) [0 *_24+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 73 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 74 [ D.4988 ])
        (sign_extend:DI (reg:SI 92))) mSector.c:101 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 75 [ D.4988 ])
                (plus:DI (reg:DI 74 [ D.4988 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:DI 76 [ D.4988 ])
                (ashift:DI (reg:DI 75 [ D.4988 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg/f:DI 77 [ D.4986 ])
                (plus:DI (reg/f:DI 73 [ D.4986 ])
                    (reg:DI 76 [ D.4988 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 78 [ D.4987 ])
        (mem/f:DI (reg/f:DI 77 [ D.4986 ]) [0 *_30+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 79 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 80 [ D.4983 ])
        (sign_extend:DI (reg:SI 93))) mSector.c:101 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 81 [ D.4983 ])
                (ashift:DI (reg:DI 80 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:DI 82 [ D.4986 ])
                (plus:DI (reg/f:DI 79 [ D.4986 ])
                    (reg:DI 81 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 -1
     (nil))
(insn 48 47 49 6 (set (reg/f:DI 83 [ D.4987 ])
        (mem/f:DI (reg/f:DI 82 [ D.4986 ]) [0 *_35+0 S8 A64])) mSector.c:101 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 1 dx)
        (reg/f:DI 72 [ D.4987 ])) mSector.c:101 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.4987 ])) mSector.c:101 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.4987 ])) mSector.c:101 -1
     (nil))
(call_insn 52 51 53 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:101 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 6 (set (reg:SI 84 [ D.4985 ])
        (reg:SI 0 ax)) mSector.c:101 -1
     (nil))
(insn 54 53 55 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ D.4985 ])
            (const_int 0 [0]))) mSector.c:101 -1
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) mSector.c:101 -1
     (nil)
 -> 60)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:102 -1
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (label_ref 70)) mSector.c:103 -1
     (nil)
 -> 70)
;;  succ:       10

(barrier 59 58 60)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 60 59 61 8 41 "" [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              8 (FALLTHRU,DFS_BACK)
(code_label 63 62 64 9 40 "" [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg:SI 63 [ D.4985 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 config.Nbound+0 S4 A128])) mSector.c:100 -1
     (nil))
(insn 66 65 68 9 (parallel [
            (set (reg:SI 64 [ D.4985 ])
                (plus:SI (reg:SI 63 [ D.4985 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 -1
     (nil))
(insn 68 66 69 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:100 -1
     (nil))
(jump_insn 69 68 70 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:100 -1
     (nil)
 -> 67)
;;  succ:       6
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              9 (FALLTHRU)
(code_label 70 69 71 10 42 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              10 (FALLTHRU,DFS_BACK)
(code_label 73 72 74 11 39 "" [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:99 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 59 [ D.4983 ])
        (sign_extend:DI (reg:SI 94))) mSector.c:99 -1
     (nil))
(insn 77 76 78 11 (set (reg:DI 95)
        (reg:DI 59 [ D.4983 ])) mSector.c:99 -1
     (nil))
(insn 78 77 79 11 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 95)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))
(insn 79 78 80 11 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 95)
                    (reg:DI 59 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 80 79 81 11 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (nil))
(insn 81 80 82 11 (set (reg:DI 95)
        (reg:DI 96)) mSector.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 82 81 83 11 (set (reg:DI 60 [ D.4983 ])
        (reg:DI 95)) mSector.c:99 -1
     (nil))
(insn 83 82 84 11 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:99 -1
     (nil))
(insn 84 83 85 11 (parallel [
            (set (reg/f:DI 61 [ D.4984 ])
                (plus:DI (reg:DI 60 [ D.4983 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.4983 ]))
        (nil)))
(insn 85 84 87 11 (set (reg:SI 62 [ D.4985 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.4984 ])
                (const_int 4 [0x4])) [0 _13->n_nvp+0 S4 A32])) mSector.c:99 -1
     (nil))
(insn 87 85 88 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 62 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:99 -1
     (nil))
(jump_insn 88 87 89 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mSector.c:99 -1
     (nil)
 -> 86)
;;  succ:       5
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:105 -1
     (nil))
(jump_insn 91 90 92 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) mSector.c:105 -1
     (nil)
 -> 95)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f44d2858ab0 *.LC7>)) mSector.c:105 -1
     (nil))
(call_insn 94 93 95 13 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:105 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13 (FALLTHRU)
(code_label 95 94 96 14 45 "" [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 2 [0x2]))) mSector.c:107 -1
     (nil))
(jump_insn 98 97 99 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) mSector.c:107 -1
     (nil)
 -> 102)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 99 98 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f44d2858b48 *.LC8>)) mSector.c:107 -1
     (nil))
(call_insn 101 100 102 15 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:107 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15 (FALLTHRU)
(code_label 102 101 103 16 46 "" [1 uses])
(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:98 -1
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              16 (FALLTHRU,DFS_BACK)
(code_label 105 104 106 17 38 "" [1 uses])
(note 106 105 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 109 17 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:98 -1
     (nil))
(insn 109 108 110 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32]))) mSector.c:98 -1
     (nil))
(jump_insn 110 109 111 17 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mSector.c:98 -1
     (nil)
 -> 107)
;;  succ:       4
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 115 18 (set (reg:SI 85 [ D.4985 ])
        (const_int 1 [0x1])) mSector.c:109 -1
     (nil))
(insn 115 112 119 18 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ D.4985 ])) mSector.c:109 -1
     (nil))
(insn 119 115 122 18 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) mSector.c:110 -1
     (nil))
(insn 122 119 0 18 (use (reg/i:SI 0 ax)) mSector.c:110 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function init_traj_intersect_bound (init_traj_intersect_bound, funcdef_no=7, decl_uid=1878, cgraph_uid=7)

init_traj_intersect_bound (struct Aircraft_t * * flight, int Nfligth, struct CONF_t config)
{
  int c;
  int k;
  int j;
  int i;
  int D.4391;
  int D.4389;
  struct Aircraft_t * D.4388;
  long unsigned int D.4387;
  long unsigned int D.4386;
  struct Aircraft_t * D.4385;
  int D.4384;
  int D.4383;
  int c.0;
  struct Aircraft_t * D.4381;
  long unsigned int D.4380;
  long unsigned int D.4379;
  struct Aircraft_t * D.4378;
  int D.4375;
  long double * D.4374;
  long double * * D.4373;
  long unsigned int D.4372;
  long unsigned int D.4371;
  long double * * D.4370;
  long double * D.4369;
  long double * * D.4368;
  sizetype D.4367;
  sizetype D.4366;
  sizetype D.4365;
  long double * * D.4364;
  long double * D.4363;
  long double * * D.4362;
  long unsigned int D.4361;
  long unsigned int D.4360;
  long double * * D.4359;
  struct Aircraft_t * D.4358;
  long unsigned int D.4357;
  long unsigned int D.4356;
  struct Aircraft_t * D.4355;
  struct Aircraft_t * _11;
  long unsigned int _12;
  long unsigned int _13;
  struct Aircraft_t * _14;
  int _15;
  int _17;
  int _18;
  struct Aircraft_t * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct Aircraft_t * _22;
  long double * * _23;
  long unsigned int _24;
  long unsigned int _25;
  long double * * _26;
  long double * _27;
  long double * * _28;
  sizetype _29;
  sizetype _30;
  sizetype _31;
  long double * * _32;
  long double * _33;
  long double * * _34;
  long unsigned int _35;
  long unsigned int _36;
  long double * * _37;
  long double * _38;
  int _39;
  struct Aircraft_t * _40;
  long unsigned int _41;
  long unsigned int _42;
  struct Aircraft_t * _43;
  int _49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 3, loop depth 0
;;    pred:       13
  j_8 = 0;
  c_9 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       11
  k_16 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _19 = *flight_10(D);
  _20 = (long unsigned int) i_1;
  _21 = _20 * 160;
  _22 = _19 + _21;
  _23 = _22->nvp;
  _24 = (long unsigned int) j_2;
  _25 = _24 * 8;
  _26 = _23 + _25;
  _27 = *_26;
  _28 = config.bound;
  _29 = (sizetype) k_3;
  _30 = _29 + 1;
  _31 = _30 * 8;
  _32 = _28 + _31;
  _33 = *_32;
  _34 = config.bound;
  _35 = (long unsigned int) k_3;
  _36 = _35 * 8;
  _37 = _34 + _36;
  _38 = *_37;
  _39 = isbetween (_38, _33, _27);
  if (_39 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _40 = *flight_10(D);
  _41 = (long unsigned int) i_1;
  _42 = _41 * 160;
  _43 = _40 + _42;
  c.0_44 = c_5;
  c_45 = c.0_44 + 1;
  _43->bound[c.0_44] = j_2;
  goto <bb 9>;
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  k_46 = k_3 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # k_3 = PHI <k_16(4), k_46(7)>
  _17 = config.Nbound;
  _18 = _17 + -1;
  if (_18 > k_3)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       6
;;                8
  # c_4 = PHI <c_45(6), c_5(8)>
  j_47 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_2 = PHI <j_8(3), j_47(9)>
  # c_5 = PHI <c_9(3), c_4(9)>
  _11 = *flight_10(D);
  _12 = (long unsigned int) i_1;
  _13 = _12 * 160;
  _14 = _11 + _13;
  _15 = _14->n_nvp;
  if (_15 > j_2)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  if (c_5 <= 1)
    goto <bb 4>;
  else
    goto <bb 12>;
;;    succ:       4
;;                12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  i_48 = i_1 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       2
;;                12
  # i_1 = PHI <i_6(2), i_48(12)>
  if (i_1 < Nfligth_7(D))
    goto <bb 3>;
  else
    goto <bb 14>;
;;    succ:       3
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _49 = 1;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L12>:
  return _49;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (k_3 - 3 )
Partition 4 (c_4 - 4 )
Partition 5 (c_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (Nfligth_7(D) - 7 )
Partition 8 (j_8 - 8 )
Partition 9 (c_9 - 9 )
Partition 10 (flight_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (k_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (c.0_44 - 44 )
Partition 45 (c_45 - 45 )
Partition 46 (k_46 - 46 )
Partition 47 (j_47 - 47 )
Partition 48 (i_48 - 48 )
Partition 49 (_49 - 49 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (k_3 - 3 )
Partition 3 (c_4 - 4 )
Partition 4 (c_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nfligth_7(D) - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (c_9 - 9 )
Partition 9 (flight_10(D) - 10 )
Partition 10 (k_16 - 16 )
Partition 11 (c_45 - 45 )
Partition 12 (k_46 - 46 )
Partition 13 (j_47 - 47 )
Partition 14 (i_48 - 48 )


Live on entry to BB2 : Nfligth_7(D)  flight_10(D)  

Live on entry to BB3 : i_1  Nfligth_7(D)  flight_10(D)  

Live on entry to BB4 : i_1  j_2  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB5 : i_1  j_2  k_3  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB6 : i_1  j_2  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB7 : i_1  j_2  k_3  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB8 : i_1  j_2  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB9 : i_1  j_2  Nfligth_7(D)  flight_10(D)  

Live on entry to BB10 : i_1  Nfligth_7(D)  flight_10(D)  

Live on entry to BB11 : i_1  j_2  c_5  Nfligth_7(D)  flight_10(D)  

Live on entry to BB12 : i_1  Nfligth_7(D)  flight_10(D)  

Live on entry to BB13 : Nfligth_7(D)  flight_10(D)  

Live on entry to BB14 : 

Live on entry to BB15 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_48
(2147483646) j_2 <-> j_8
(2147483646) j_2 <-> j_47
(2147483646) k_3 <-> k_16
(2147483646) k_3 <-> k_46
(2147483646) c_4 <-> c_5
(2147483646) c_4 <-> c_9
(2147483646) c_4 <-> c_45

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (k_3 - 3 )
Partition 3 (c_4 - 4 )
Partition 4 (c_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nfligth_7(D) - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (c_9 - 9 )
Partition 9 (flight_10(D) - 10 )
Partition 10 (k_16 - 16 )
Partition 11 (c_45 - 45 )
Partition 12 (k_46 - 46 )
Partition 13 (j_47 - 47 )
Partition 14 (i_48 - 48 )

Coalesce list: (1)i_1 & (6)i_6 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (48)i_48 [map: 0, 14] : Success -> 0
Coalesce list: (2)j_2 & (8)j_8 [map: 1, 7] : Success -> 1
Coalesce list: (2)j_2 & (47)j_47 [map: 1, 13] : Success -> 1
Coalesce list: (3)k_3 & (16)k_16 [map: 2, 10] : Success -> 2
Coalesce list: (3)k_3 & (46)k_46 [map: 2, 12] : Success -> 2
Coalesce list: (4)c_4 & (5)c_5 [map: 3, 4] : Success -> 3
Coalesce list: (4)c_4 & (9)c_9 [map: 3, 8] : Success -> 3
Coalesce list: (4)c_4 & (45)c_45 [map: 3, 11] : Success -> 3
Coalesce list: (1)i_1 & (48)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
Coalesce list: (5)c_4 & (4)c_4: Already Coalesced.
Coalesce list: (5)c_4 & (9)c_4: Already Coalesced.
Coalesce list: (2)j_2 & (47)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (8)j_2: Already Coalesced.
Coalesce list: (4)c_4 & (45)c_4: Already Coalesced.
Coalesce list: (3)k_3 & (46)k_3: Already Coalesced.
Coalesce list: (3)k_3 & (16)k_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 6 48 )
Partition 1 (j_2 - 2 8 47 )
Partition 2 (k_3 - 3 16 46 )
Partition 3 (c_4 - 4 5 9 45 )
Partition 4 (Nfligth_7(D) - 7 )
Partition 5 (flight_10(D) - 10 )
Partition 6 (_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_24 - 24 )
Partition 19 (_25 - 25 )
Partition 20 (_26 - 26 )
Partition 21 (_27 - 27 )
Partition 22 (_28 - 28 )
Partition 23 (_29 - 29 )
Partition 24 (_30 - 30 )
Partition 25 (_31 - 31 )
Partition 26 (_32 - 32 )
Partition 27 (_33 - 33 )
Partition 28 (_34 - 34 )
Partition 29 (_35 - 35 )
Partition 30 (_36 - 36 )
Partition 31 (_37 - 37 )
Partition 32 (_38 - 38 )
Partition 33 (_39 - 39 )
Partition 34 (_40 - 40 )
Partition 35 (_41 - 41 )
Partition 36 (_42 - 42 )
Partition 37 (_43 - 43 )
Partition 38 (c.0_44 - 44 )
Partition 39 (_49 - 49 )

init_traj_intersect_bound (struct Aircraft_t * * flight, int Nfligth, struct CONF_t config)
{
  int c;
  int k;
  int j;
  int i;
  int D.4391;
  int D.4389;
  struct Aircraft_t * D.4388;
  long unsigned int D.4387;
  long unsigned int D.4386;
  struct Aircraft_t * D.4385;
  int D.4384;
  int D.4383;
  int c.0;
  struct Aircraft_t * D.4381;
  long unsigned int D.4380;
  long unsigned int D.4379;
  struct Aircraft_t * D.4378;
  int D.4375;
  long double * D.4374;
  long double * * D.4373;
  long unsigned int D.4372;
  long unsigned int D.4371;
  long double * * D.4370;
  long double * D.4369;
  long double * * D.4368;
  sizetype D.4367;
  sizetype D.4366;
  sizetype D.4365;
  long double * * D.4364;
  long double * D.4363;
  long double * * D.4362;
  long unsigned int D.4361;
  long unsigned int D.4360;
  long double * * D.4359;
  struct Aircraft_t * D.4358;
  long unsigned int D.4357;
  long unsigned int D.4356;
  struct Aircraft_t * D.4355;
  struct Aircraft_t * _11;
  long unsigned int _12;
  long unsigned int _13;
  struct Aircraft_t * _14;
  int _15;
  int _17;
  int _18;
  struct Aircraft_t * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct Aircraft_t * _22;
  long double * * _23;
  long unsigned int _24;
  long unsigned int _25;
  long double * * _26;
  long double * _27;
  long double * * _28;
  sizetype _29;
  sizetype _30;
  sizetype _31;
  long double * * _32;
  long double * _33;
  long double * * _34;
  long unsigned int _35;
  long unsigned int _36;
  long double * * _37;
  long double * _38;
  int _39;
  struct Aircraft_t * _40;
  long unsigned int _41;
  long unsigned int _42;
  struct Aircraft_t * _43;
  int _49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 13>;
;;    succ:       13

;;   basic block 3, loop depth 0
;;    pred:       13
  j_8 = 0;
  c_9 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       11
  k_16 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  _19 = *flight_10(D);
  _20 = (long unsigned int) i_1;
  _21 = _20 * 160;
  _22 = _19 + _21;
  _23 = _22->nvp;
  _24 = (long unsigned int) j_2;
  _25 = _24 * 8;
  _26 = _23 + _25;
  _27 = *_26;
  _28 = config.bound;
  _29 = (sizetype) k_3;
  _30 = _29 + 1;
  _31 = _30 * 8;
  _32 = _28 + _31;
  _33 = *_32;
  _34 = config.bound;
  _35 = (long unsigned int) k_3;
  _36 = _35 * 8;
  _37 = _34 + _36;
  _38 = *_37;
  _39 = isbetween (_38, _33, _27);
  if (_39 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _40 = *flight_10(D);
  _41 = (long unsigned int) i_1;
  _42 = _41 * 160;
  _43 = _40 + _42;
  c.0_44 = c_5;
  c_45 = c.0_44 + 1;
  _43->bound[c.0_44] = j_2;
  goto <bb 9>;
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  k_46 = k_3 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # k_3 = PHI <k_16(4), k_46(7)>
  _17 = config.Nbound;
  _18 = _17 + -1;
  if (_18 > k_3)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       6
;;                8
  # c_4 = PHI <c_45(6), c_5(8)>
  j_47 = j_2 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_2 = PHI <j_8(3), j_47(9)>
  # c_5 = PHI <c_9(3), c_4(9)>
  _11 = *flight_10(D);
  _12 = (long unsigned int) i_1;
  _13 = _12 * 160;
  _14 = _11 + _13;
  _15 = _14->n_nvp;
  if (_15 > j_2)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  if (c_5 <= 1)
    goto <bb 4>;
  else
    goto <bb 12>;
;;    succ:       4
;;                12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  i_48 = i_1 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       2
;;                12
  # i_1 = PHI <i_6(2), i_48(12)>
  if (i_1 < Nfligth_7(D))
    goto <bb 3>;
  else
    goto <bb 14>;
;;    succ:       3
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _49 = 1;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L12>:
  return _49;
;;    succ:       EXIT

}


Partition 3: size 4 align 4
	c_4
Partition 2: size 4 align 4
	k_3
Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_6 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:115 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_8 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 -1
     (nil))

;; c_9 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; k_16 = 0;

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:117 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _19 = *flight_10(D);

(insn 20 19 21 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:118 -1
     (nil))

(insn 21 20 0 (set (reg/f:DI 66 [ D.4991 ])
        (mem/f:DI (reg/f:DI 94) [0 *flight_10(D)+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _20 = (long unsigned int) i_1;

(insn 22 21 23 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:118 -1
     (nil))

(insn 23 22 0 (set (reg:DI 67 [ D.4992 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:118 -1
     (nil))

;; _21 = _20 * 160;

(insn 24 23 25 (set (reg:DI 96)
        (reg:DI 67 [ D.4992 ])) mSector.c:118 -1
     (nil))

(insn 25 24 26 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

(insn 26 25 27 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 67 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 27 26 28 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

(insn 28 27 29 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:118 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 29 28 0 (set (reg:DI 68 [ D.4992 ])
        (reg:DI 96)) mSector.c:118 -1
     (nil))

;; _22 = _19 + _21;

(insn 30 29 0 (parallel [
            (set (reg/f:DI 69 [ D.4991 ])
                (plus:DI (reg/f:DI 66 [ D.4991 ])
                    (reg:DI 68 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _23 = _22->nvp;

(insn 31 30 0 (set (reg/f:DI 70 [ D.4994 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 69 [ D.4991 ])
                (const_int 8 [0x8])) [0 _22->nvp+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _24 = (long unsigned int) j_2;

(insn 32 31 33 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:118 -1
     (nil))

(insn 33 32 0 (set (reg:DI 71 [ D.4992 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:118 -1
     (nil))

;; _25 = _24 * 8;

(insn 34 33 0 (parallel [
            (set (reg:DI 72 [ D.4992 ])
                (ashift:DI (reg:DI 71 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _26 = _23 + _25;

(insn 35 34 0 (parallel [
            (set (reg/f:DI 73 [ D.4994 ])
                (plus:DI (reg/f:DI 70 [ D.4994 ])
                    (reg:DI 72 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _27 = *_26;

(insn 36 35 0 (set (reg/f:DI 74 [ D.4995 ])
        (mem/f:DI (reg/f:DI 73 [ D.4994 ]) [0 *_26+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _28 = config.bound;

(insn 37 36 0 (set (reg/f:DI 75 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _29 = (sizetype) k_3;

(insn 38 37 39 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 -1
     (nil))

(insn 39 38 0 (set (reg:DI 76 [ D.4996 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:118 -1
     (nil))

;; _30 = _29 + 1;

(insn 40 39 0 (parallel [
            (set (reg:DI 77 [ D.4996 ])
                (plus:DI (reg:DI 76 [ D.4996 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _31 = _30 * 8;

(insn 41 40 0 (parallel [
            (set (reg:DI 78 [ D.4996 ])
                (ashift:DI (reg:DI 77 [ D.4996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _32 = _28 + _31;

(insn 42 41 0 (parallel [
            (set (reg/f:DI 79 [ D.4994 ])
                (plus:DI (reg/f:DI 75 [ D.4994 ])
                    (reg:DI 78 [ D.4996 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _33 = *_32;

(insn 43 42 0 (set (reg/f:DI 80 [ D.4995 ])
        (mem/f:DI (reg/f:DI 79 [ D.4994 ]) [0 *_32+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _34 = config.bound;

(insn 44 43 0 (set (reg/f:DI 81 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _35 = (long unsigned int) k_3;

(insn 45 44 46 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 -1
     (nil))

(insn 46 45 0 (set (reg:DI 82 [ D.4992 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:118 -1
     (nil))

;; _36 = _35 * 8;

(insn 47 46 0 (parallel [
            (set (reg:DI 83 [ D.4992 ])
                (ashift:DI (reg:DI 82 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _37 = _34 + _36;

(insn 48 47 0 (parallel [
            (set (reg/f:DI 84 [ D.4994 ])
                (plus:DI (reg/f:DI 81 [ D.4994 ])
                    (reg:DI 83 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))

;; _38 = *_37;

(insn 49 48 0 (set (reg/f:DI 85 [ D.4995 ])
        (mem/f:DI (reg/f:DI 84 [ D.4994 ]) [0 *_37+0 S8 A64])) mSector.c:118 -1
     (nil))

;; _39 = isbetween (_38, _33, _27);

(insn 50 49 51 (set (reg:DI 1 dx)
        (reg/f:DI 74 [ D.4995 ])) mSector.c:118 -1
     (nil))

(insn 51 50 52 (set (reg:DI 4 si)
        (reg/f:DI 80 [ D.4995 ])) mSector.c:118 -1
     (nil))

(insn 52 51 53 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.4995 ])) mSector.c:118 -1
     (nil))

(call_insn 53 52 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:118 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 54 53 0 (set (reg:SI 86 [ D.4993 ])
        (reg:SI 0 ax)) mSector.c:118 -1
     (nil))

;; if (_39 != 0)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ D.4993 ])
            (const_int 0 [0]))) mSector.c:118 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:118 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _40 = *flight_10(D);

(insn 58 57 59 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:119 -1
     (nil))

(insn 59 58 0 (set (reg/f:DI 87 [ D.4991 ])
        (mem/f:DI (reg/f:DI 101) [0 *flight_10(D)+0 S8 A64])) mSector.c:119 -1
     (nil))

;; _41 = (long unsigned int) i_1;

(insn 60 59 61 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:119 -1
     (nil))

(insn 61 60 0 (set (reg:DI 88 [ D.4992 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:119 -1
     (nil))

;; _42 = _41 * 160;

(insn 62 61 63 (set (reg:DI 103)
        (reg:DI 88 [ D.4992 ])) mSector.c:119 -1
     (nil))

(insn 63 62 64 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 103)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))

(insn 64 63 65 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 103)
                    (reg:DI 88 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 65 64 66 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))

(insn 66 65 67 (set (reg:DI 103)
        (reg:DI 104)) mSector.c:119 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 67 66 0 (set (reg:DI 89 [ D.4992 ])
        (reg:DI 103)) mSector.c:119 -1
     (nil))

;; _43 = _40 + _42;

(insn 68 67 0 (parallel [
            (set (reg/f:DI 90 [ D.4991 ])
                (plus:DI (reg/f:DI 87 [ D.4991 ])
                    (reg:DI 89 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))

;; c.0_44 = c_5;

(insn 69 68 0 (set (reg:SI 91 [ c.0 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) mSector.c:119 -1
     (nil))

;; c_45 = c.0_44 + 1;

(insn 70 69 71 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 91 [ c.0 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))

(insn 71 70 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (reg:SI 105)) mSector.c:119 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ c.0 ])
            (const_int 1 [0x1]))
        (nil)))

;; _43->bound[c.0_44] = j_2;

(insn 72 71 73 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 91 [ c.0 ]))) mSector.c:119 -1
     (nil))

(insn 73 72 74 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 106)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))

(insn 74 73 75 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:119 -1
     (nil))

(insn 75 74 0 (set (mem/j:SI (plus:DI (mult:DI (reg:DI 107)
                    (const_int 4 [0x4]))
                (reg/f:DI 90 [ D.4991 ])) [0 _43->bound S4 A32])
        (reg:SI 108)) mSector.c:119 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 78 77 79 53 "" [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; k_46 = k_3 + 1;

(insn 80 79 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 81 80 82 52 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = config.Nbound;

(insn 83 82 0 (set (reg:SI 64 [ D.4993 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 config.Nbound+0 S4 A128])) mSector.c:117 -1
     (nil))

;; _18 = _17 + -1;

(insn 84 83 0 (parallel [
            (set (reg:SI 65 [ D.4993 ])
                (plus:SI (reg:SI 64 [ D.4993 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 -1
     (nil))

;; if (_18 > k_3)

(insn 86 84 87 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:117 -1
     (nil))

(jump_insn 87 86 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) mSector.c:117 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 88 87 89 54 "" [0 uses])

(note 89 88 0 NOTE_INSN_BASIC_BLOCK)

;; j_47 = j_2 + 1;

(insn 90 89 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 91 90 92 51 "" [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = *flight_10(D);

(insn 93 92 94 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:116 -1
     (nil))

(insn 94 93 0 (set (reg/f:DI 59 [ D.4991 ])
        (mem/f:DI (reg/f:DI 109) [0 *flight_10(D)+0 S8 A64])) mSector.c:116 -1
     (nil))

;; _12 = (long unsigned int) i_1;

(insn 95 94 96 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:116 -1
     (nil))

(insn 96 95 0 (set (reg:DI 60 [ D.4992 ])
        (sign_extend:DI (reg:SI 110))) mSector.c:116 -1
     (nil))

;; _13 = _12 * 160;

(insn 97 96 98 (set (reg:DI 111)
        (reg:DI 60 [ D.4992 ])) mSector.c:116 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:DI 111)
                (ashift:DI (reg:DI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))

(insn 99 98 100 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 111)
                    (reg:DI 60 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 100 99 101 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 111)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))

(insn 101 100 102 (set (reg:DI 111)
        (reg:DI 112)) mSector.c:116 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 102 101 0 (set (reg:DI 61 [ D.4992 ])
        (reg:DI 111)) mSector.c:116 -1
     (nil))

;; _14 = _11 + _13;

(insn 103 102 0 (parallel [
            (set (reg/f:DI 62 [ D.4991 ])
                (plus:DI (reg/f:DI 59 [ D.4991 ])
                    (reg:DI 61 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))

;; _15 = _14->n_nvp;

(insn 104 103 0 (set (reg:SI 63 [ D.4993 ])
        (mem/j:SI (plus:DI (reg/f:DI 62 [ D.4991 ])
                (const_int 4 [0x4])) [0 _14->n_nvp+0 S4 A32])) mSector.c:116 -1
     (nil))

;; if (_15 > j_2)

(insn 105 104 106 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:116 -1
     (nil))

(jump_insn 106 105 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:116 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (c_5 <= 1)

(insn 109 107 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:116 -1
     (nil))

(jump_insn 110 109 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) mSector.c:116 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 111 110 112 56 "" [0 uses])

(note 112 111 0 NOTE_INSN_BASIC_BLOCK)

;; i_48 = i_1 + 1;

(insn 113 112 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:115 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 114 113 115 50 "" [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < Nfligth_7(D))

(insn 117 115 118 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:115 -1
     (nil))

(insn 118 117 119 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32]))) mSector.c:115 -1
     (nil))

(jump_insn 119 118 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:115 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _49 = 1;

(insn 121 120 0 (set (reg:SI 92 [ D.4993 ])
        (const_int 1 [0x1])) mSector.c:122 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; <L12>:

(code_label 122 121 123 59 "" [0 uses])

(note 123 122 0 NOTE_INSN_BASIC_BLOCK)

;; return _49;

(insn 124 123 125 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.4993 ])) mSector.c:122 -1
     (nil))

(jump_insn 125 124 126 (set (pc)
        (label_ref 0)) mSector.c:122 -1
     (nil))

(barrier 126 125 0)
deleting block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:112 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32])
        (reg:SI 4 si [ Nfligth ])) mSector.c:112 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:115 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 114)) mSector.c:115 -1
     (nil)
 -> 114)
;;  succ:       14

(barrier 9 8 116)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 116 9 10 4 58 "" [1 uses])
(note 10 116 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 -1
     (nil))
(insn 12 11 13 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (label_ref 91)) mSector.c:116 -1
     (nil)
 -> 91)
;;  succ:       11

(barrier 14 13 108)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 108 14 15 5 57 "" [1 uses])
(note 15 108 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:117 -1
     (nil))
(jump_insn 17 16 18 5 (set (pc)
        (label_ref 81)) mSector.c:117 -1
     (nil)
 -> 81)
;;  succ:       9

(barrier 18 17 85)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 85 18 19 6 55 "" [1 uses])
(note 19 85 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 21 20 22 6 (set (reg/f:DI 66 [ D.4991 ])
        (mem/f:DI (reg/f:DI 94) [0 *flight_10(D)+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 22 21 23 6 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:118 -1
     (nil))
(insn 23 22 24 6 (set (reg:DI 67 [ D.4992 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:118 -1
     (nil))
(insn 24 23 25 6 (set (reg:DI 96)
        (reg:DI 67 [ D.4992 ])) mSector.c:118 -1
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 26 25 27 6 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 67 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:118 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 29 28 30 6 (set (reg:DI 68 [ D.4992 ])
        (reg:DI 96)) mSector.c:118 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 69 [ D.4991 ])
                (plus:DI (reg/f:DI 66 [ D.4991 ])
                    (reg:DI 68 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 31 30 32 6 (set (reg/f:DI 70 [ D.4994 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 69 [ D.4991 ])
                (const_int 8 [0x8])) [0 _22->nvp+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:118 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 71 [ D.4992 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:118 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 72 [ D.4992 ])
                (ashift:DI (reg:DI 71 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:DI 73 [ D.4994 ])
                (plus:DI (reg/f:DI 70 [ D.4994 ])
                    (reg:DI 72 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 74 [ D.4995 ])
        (mem/f:DI (reg/f:DI 73 [ D.4994 ]) [0 *_26+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 75 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 38 37 39 6 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 76 [ D.4996 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:118 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:DI 77 [ D.4996 ])
                (plus:DI (reg:DI 76 [ D.4996 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 78 [ D.4996 ])
                (ashift:DI (reg:DI 77 [ D.4996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:DI 79 [ D.4994 ])
                (plus:DI (reg/f:DI 75 [ D.4994 ])
                    (reg:DI 78 [ D.4996 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 80 [ D.4995 ])
        (mem/f:DI (reg/f:DI 79 [ D.4994 ]) [0 *_32+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 81 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 45 44 46 6 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 82 [ D.4992 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:118 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 83 [ D.4992 ])
                (ashift:DI (reg:DI 82 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg/f:DI 84 [ D.4994 ])
                (plus:DI (reg/f:DI 81 [ D.4994 ])
                    (reg:DI 83 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:DI 85 [ D.4995 ])
        (mem/f:DI (reg/f:DI 84 [ D.4994 ]) [0 *_37+0 S8 A64])) mSector.c:118 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 1 dx)
        (reg/f:DI 74 [ D.4995 ])) mSector.c:118 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 4 si)
        (reg/f:DI 80 [ D.4995 ])) mSector.c:118 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.4995 ])) mSector.c:118 -1
     (nil))
(call_insn 53 52 54 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:118 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 6 (set (reg:SI 86 [ D.4993 ])
        (reg:SI 0 ax)) mSector.c:118 -1
     (nil))
(insn 55 54 56 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ D.4993 ])
            (const_int 0 [0]))) mSector.c:118 -1
     (nil))
(jump_insn 56 55 57 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) mSector.c:118 -1
     (nil)
 -> 78)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:119 -1
     (nil))
(insn 59 58 60 7 (set (reg/f:DI 87 [ D.4991 ])
        (mem/f:DI (reg/f:DI 101) [0 *flight_10(D)+0 S8 A64])) mSector.c:119 -1
     (nil))
(insn 60 59 61 7 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:119 -1
     (nil))
(insn 61 60 62 7 (set (reg:DI 88 [ D.4992 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:119 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 103)
        (reg:DI 88 [ D.4992 ])) mSector.c:119 -1
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 103)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 103)
                    (reg:DI 88 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 65 64 66 7 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))
(insn 66 65 67 7 (set (reg:DI 103)
        (reg:DI 104)) mSector.c:119 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 67 66 68 7 (set (reg:DI 89 [ D.4992 ])
        (reg:DI 103)) mSector.c:119 -1
     (nil))
(insn 68 67 69 7 (parallel [
            (set (reg/f:DI 90 [ D.4991 ])
                (plus:DI (reg/f:DI 87 [ D.4991 ])
                    (reg:DI 89 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))
(insn 69 68 70 7 (set (reg:SI 91 [ c.0 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) mSector.c:119 -1
     (nil))
(insn 70 69 71 7 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 91 [ c.0 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))
(insn 71 70 72 7 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (reg:SI 105)) mSector.c:119 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ c.0 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 72 71 73 7 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 91 [ c.0 ]))) mSector.c:119 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 106)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 -1
     (nil))
(insn 74 73 75 7 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:119 -1
     (nil))
(insn 75 74 76 7 (set (mem/j:SI (plus:DI (mult:DI (reg:DI 107)
                    (const_int 4 [0x4]))
                (reg/f:DI 90 [ D.4991 ])) [0 _43->bound S4 A32])
        (reg:SI 108)) mSector.c:119 -1
     (nil))
(jump_insn 76 75 77 7 (set (pc)
        (label_ref 88)) mSector.c:120 -1
     (nil)
 -> 88)
;;  succ:       10

(barrier 77 76 78)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 78 77 79 8 53 "" [1 uses])
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              8 (FALLTHRU,DFS_BACK)
(code_label 81 80 82 9 52 "" [1 uses])
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (reg:SI 64 [ D.4993 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 config.Nbound+0 S4 A128])) mSector.c:117 -1
     (nil))
(insn 84 83 86 9 (parallel [
            (set (reg:SI 65 [ D.4993 ])
                (plus:SI (reg:SI 64 [ D.4993 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 -1
     (nil))
(insn 86 84 87 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:117 -1
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) mSector.c:117 -1
     (nil)
 -> 85)
;;  succ:       6
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              9 (FALLTHRU)
(code_label 88 87 89 10 54 "" [1 uses])
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              10 (FALLTHRU,DFS_BACK)
(code_label 91 90 92 11 51 "" [1 uses])
(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 11 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:116 -1
     (nil))
(insn 94 93 95 11 (set (reg/f:DI 59 [ D.4991 ])
        (mem/f:DI (reg/f:DI 109) [0 *flight_10(D)+0 S8 A64])) mSector.c:116 -1
     (nil))
(insn 95 94 96 11 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:116 -1
     (nil))
(insn 96 95 97 11 (set (reg:DI 60 [ D.4992 ])
        (sign_extend:DI (reg:SI 110))) mSector.c:116 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 111)
        (reg:DI 60 [ D.4992 ])) mSector.c:116 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg:DI 111)
                (ashift:DI (reg:DI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 111)
                    (reg:DI 60 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 100 99 101 11 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 111)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))
(insn 101 100 102 11 (set (reg:DI 111)
        (reg:DI 112)) mSector.c:116 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 102 101 103 11 (set (reg:DI 61 [ D.4992 ])
        (reg:DI 111)) mSector.c:116 -1
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg/f:DI 62 [ D.4991 ])
                (plus:DI (reg/f:DI 59 [ D.4991 ])
                    (reg:DI 61 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 -1
     (nil))
(insn 104 103 105 11 (set (reg:SI 63 [ D.4993 ])
        (mem/j:SI (plus:DI (reg/f:DI 62 [ D.4991 ])
                (const_int 4 [0x4])) [0 _14->n_nvp+0 S4 A32])) mSector.c:116 -1
     (nil))
(insn 105 104 106 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:116 -1
     (nil))
(jump_insn 106 105 107 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:116 -1
     (nil)
 -> 111)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 107 106 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 109 107 110 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:116 -1
     (nil))
(jump_insn 110 109 111 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) mSector.c:116 -1
     (nil)
 -> 108)
;;  succ:       5
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 111 110 112 13 56 "" [1 uses])
(note 112 111 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:115 -1
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              13 (FALLTHRU,DFS_BACK)
(code_label 114 113 115 14 50 "" [1 uses])
(note 115 114 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 14 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:115 -1
     (nil))
(insn 118 117 119 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32]))) mSector.c:115 -1
     (nil))
(jump_insn 119 118 120 14 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:115 -1
     (nil)
 -> 116)
;;  succ:       4
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
(note 120 119 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 124 15 (set (reg:SI 92 [ D.4993 ])
        (const_int 1 [0x1])) mSector.c:122 -1
     (nil))
(insn 124 121 128 15 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.4993 ])) mSector.c:122 -1
     (nil))
(insn 128 124 131 15 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:123 -1
     (nil))
(insn 131 128 0 15 (use (reg/i:SI 0 ax)) mSector.c:123 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function remove_aircraft (remove_aircraft, funcdef_no=8, decl_uid=1904, cgraph_uid=8)

remove_aircraft (struct Aircraft_t * * fligth, int * Nfligth, int sel)
{
  int h;
  int i;
  struct Aircraft_t * New_fligth;
  int D.4413;
  int D.4412;
  int D.4411;
  struct Aircraft_t * D.4410;
  int D.4409;
  struct Aircraft_t * D.4408;
  long unsigned int D.4407;
  long unsigned int D.4406;
  struct Aircraft_t * D.4405;
  struct Aircraft_t * D.4404;
  long unsigned int D.4403;
  long unsigned int D.4402;
  int h.1;
  long unsigned int D.4396;
  long unsigned int D.4395;
  int D.4394;
  int D.4393;
  int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  int _12;
  long unsigned int _16;
  long unsigned int _17;
  struct Aircraft_t * _18;
  struct Aircraft_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  struct Aircraft_t * _25;
  int _26;
  int _27;
  int _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = *Nfligth_4(D);
  _6 = _5 + -1;
  _7 = (long unsigned int) _6;
  _8 = _7 * 160;
  New_fligth_9 = malloc (_8);
  if (New_fligth_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Memory BUG\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  i_10 = 0;
  h_11 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  if (i_1 != sel_13(D))
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  h.1_14 = h_3;
  h_15 = h.1_14 + 1;
  _16 = (long unsigned int) h.1_14;
  _17 = _16 * 160;
  _18 = New_fligth_9 + _17;
  _20 = *fligth_19(D);
  _21 = (long unsigned int) i_1;
  _22 = _21 * 160;
  _23 = _20 + _22;
  *_18 = *_23;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # h_2 = PHI <h_3(5), h_15(6)>
  i_24 = i_1 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # i_1 = PHI <i_10(4), i_24(7)>
  # h_3 = PHI <h_11(4), h_2(7)>
  _12 = *Nfligth_4(D);
  if (_12 > i_1)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _25 = *fligth_19(D);
  free (_25);
  *fligth_19(D) = New_fligth_9;
  _26 = *Nfligth_4(D);
  _27 = _26 + -1;
  *Nfligth_4(D) = _27;
  _28 = 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L7>:
  return _28;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (h_2 - 2 )
Partition 3 (h_3 - 3 )
Partition 4 (Nfligth_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (New_fligth_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 11 (h_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (sel_13(D) - 13 )
Partition 14 (h.1_14 - 14 )
Partition 15 (h_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (fligth_19(D) - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (i_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (h_2 - 2 )
Partition 2 (h_3 - 3 )
Partition 3 (Nfligth_4(D) - 4 )
Partition 4 (i_10 - 10 )
Partition 5 (h_11 - 11 )
Partition 6 (sel_13(D) - 13 )
Partition 7 (h_15 - 15 )
Partition 8 (fligth_19(D) - 19 )
Partition 9 (i_24 - 24 )


Live on entry to BB2 : Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB3 : Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB4 : Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB5 : i_1  h_3  Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB6 : i_1  h_3  Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB7 : i_1  Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB8 : Nfligth_4(D)  sel_13(D)  fligth_19(D)  

Live on entry to BB9 : Nfligth_4(D)  fligth_19(D)  

Live on entry to BB10 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_10
(2147483646) i_1 <-> i_24
(2147483646) h_2 <-> h_3
(2147483646) h_2 <-> h_11
(2147483646) h_2 <-> h_15

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (h_2 - 2 )
Partition 2 (h_3 - 3 )
Partition 3 (Nfligth_4(D) - 4 )
Partition 4 (i_10 - 10 )
Partition 5 (h_11 - 11 )
Partition 6 (sel_13(D) - 13 )
Partition 7 (h_15 - 15 )
Partition 8 (fligth_19(D) - 19 )
Partition 9 (i_24 - 24 )

Coalesce list: (1)i_1 & (10)i_10 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (24)i_24 [map: 0, 9] : Success -> 0
Coalesce list: (2)h_2 & (3)h_3 [map: 1, 2] : Success -> 1
Coalesce list: (2)h_2 & (11)h_11 [map: 1, 5] : Success -> 1
Coalesce list: (2)h_2 & (15)h_15 [map: 1, 7] : Success -> 1
Coalesce list: (3)h_2 & (2)h_2: Already Coalesced.
Coalesce list: (3)h_2 & (11)h_2: Already Coalesced.
Coalesce list: (1)i_1 & (24)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (10)i_1: Already Coalesced.
Coalesce list: (2)h_2 & (15)h_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 10 24 )
Partition 1 (h_2 - 2 3 11 15 )
Partition 2 (Nfligth_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (New_fligth_9 - 9 )
Partition 8 (_12 - 12 )
Partition 9 (sel_13(D) - 13 )
Partition 10 (h.1_14 - 14 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (_18 - 18 )
Partition 14 (fligth_19(D) - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_21 - 21 )
Partition 17 (_22 - 22 )
Partition 18 (_23 - 23 )
Partition 19 (_25 - 25 )
Partition 20 (_26 - 26 )
Partition 21 (_27 - 27 )
Partition 22 (_28 - 28 )

remove_aircraft (struct Aircraft_t * * fligth, int * Nfligth, int sel)
{
  int h;
  int i;
  struct Aircraft_t * New_fligth;
  int D.4413;
  int D.4412;
  int D.4411;
  struct Aircraft_t * D.4410;
  int D.4409;
  struct Aircraft_t * D.4408;
  long unsigned int D.4407;
  long unsigned int D.4406;
  struct Aircraft_t * D.4405;
  struct Aircraft_t * D.4404;
  long unsigned int D.4403;
  long unsigned int D.4402;
  int h.1;
  long unsigned int D.4396;
  long unsigned int D.4395;
  int D.4394;
  int D.4393;
  int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  int _12;
  long unsigned int _16;
  long unsigned int _17;
  struct Aircraft_t * _18;
  struct Aircraft_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  struct Aircraft_t * _25;
  int _26;
  int _27;
  int _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = *Nfligth_4(D);
  _6 = _5 + -1;
  _7 = (long unsigned int) _6;
  _8 = _7 * 160;
  New_fligth_9 = malloc (_8);
  if (New_fligth_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  BuG ("Memory BUG\n");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  i_10 = 0;
  h_11 = 0;
  goto <bb 8>;
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       8
  if (i_1 != sel_13(D))
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  h.1_14 = h_3;
  h_15 = h.1_14 + 1;
  _16 = (long unsigned int) h.1_14;
  _17 = _16 * 160;
  _18 = New_fligth_9 + _17;
  _20 = *fligth_19(D);
  _21 = (long unsigned int) i_1;
  _22 = _21 * 160;
  _23 = _20 + _22;
  *_18 = *_23;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # h_2 = PHI <h_3(5), h_15(6)>
  i_24 = i_1 + 1;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # i_1 = PHI <i_10(4), i_24(7)>
  # h_3 = PHI <h_11(4), h_2(7)>
  _12 = *Nfligth_4(D);
  if (_12 > i_1)
    goto <bb 5>;
  else
    goto <bb 9>;
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _25 = *fligth_19(D);
  free (_25);
  *fligth_19(D) = New_fligth_9;
  _26 = *Nfligth_4(D);
  _27 = _26 + -1;
  *Nfligth_4(D) = _27;
  _28 = 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L7>:
  return _28;
;;    succ:       EXIT

}


Partition 2: size 8 align 8
	New_fligth_9
Partition 1: size 4 align 4
	h_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; _5 = *Nfligth_4(D);

(insn 8 7 9 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:126 -1
     (nil))

(insn 9 8 0 (set (reg:SI 59 [ D.4997 ])
        (mem:SI (reg/f:DI 77) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:126 -1
     (nil))

;; _6 = _5 + -1;

(insn 10 9 0 (parallel [
            (set (reg:SI 60 [ D.4997 ])
                (plus:SI (reg:SI 59 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))

;; _7 = (long unsigned int) _6;

(insn 11 10 0 (set (reg:DI 61 [ D.4998 ])
        (sign_extend:DI (reg:SI 60 [ D.4997 ]))) mSector.c:126 -1
     (nil))

;; _8 = _7 * 160;

(insn 12 11 13 (set (reg:DI 78)
        (reg:DI 61 [ D.4998 ])) mSector.c:126 -1
     (nil))

(insn 13 12 14 (parallel [
            (set (reg:DI 78)
                (ashift:DI (reg:DI 78)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))

(insn 14 13 15 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg:DI 78)
                    (reg:DI 61 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 15 14 16 (parallel [
            (set (reg:DI 79)
                (ashift:DI (reg:DI 78)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))

(insn 16 15 17 (set (reg:DI 78)
        (reg:DI 79)) mSector.c:126 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 17 16 0 (set (reg:DI 62 [ D.4998 ])
        (reg:DI 78)) mSector.c:126 -1
     (nil))

;; New_fligth_9 = malloc (_8);

(insn 18 17 19 (set (reg:DI 5 di)
        (reg:DI 62 [ D.4998 ])) mSector.c:126 -1
     (nil))

(call_insn 19 18 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 20 19 21 (set (reg/f:DI 80)
        (reg:DI 0 ax)) mSector.c:126 -1
     (expr_list:REG_NOALIAS (reg/f:DI 80)
        (nil)))

(insn 21 20 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
        (reg/f:DI 80)) mSector.c:126 -1
     (nil))

;; if (New_fligth_9 == 0B)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (const_int 0 [0]))) mSector.c:127 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:127 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; BuG ("Memory BUG\n");

(insn 25 24 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f44d286ced8 *.LC9>)) mSector.c:127 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:127 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 27 26 28 61 "" [0 uses])

(note 28 27 0 NOTE_INSN_BASIC_BLOCK)

;; i_10 = 0;

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 -1
     (nil))

;; h_11 = 0;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (i_1 != sel_13(D))

(insn 34 33 35 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 -1
     (nil))

(insn 35 34 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32]))) mSector.c:129 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; h.1_14 = h_3;

(insn 38 37 0 (set (reg:SI 64 [ h.1 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])) mSector.c:129 -1
     (nil))

;; h_15 = h.1_14 + 1;

(insn 39 38 40 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg:SI 64 [ h.1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

(insn 40 39 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (reg:SI 82)) mSector.c:129 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 64 [ h.1 ])
            (const_int 1 [0x1]))
        (nil)))

;; _16 = (long unsigned int) h.1_14;

(insn 41 40 0 (set (reg:DI 65 [ D.4998 ])
        (sign_extend:DI (reg:SI 64 [ h.1 ]))) mSector.c:129 -1
     (nil))

;; _17 = _16 * 160;

(insn 42 41 43 (set (reg:DI 83)
        (reg:DI 65 [ D.4998 ])) mSector.c:129 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:DI 83)
                (ashift:DI (reg:DI 83)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

(insn 44 43 45 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg:DI 83)
                    (reg:DI 65 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 45 44 46 (parallel [
            (set (reg:DI 84)
                (ashift:DI (reg:DI 83)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

(insn 46 45 47 (set (reg:DI 83)
        (reg:DI 84)) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 47 46 0 (set (reg:DI 66 [ D.4998 ])
        (reg:DI 83)) mSector.c:129 -1
     (nil))

;; _18 = New_fligth_9 + _17;

(insn 48 47 49 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:129 -1
     (nil))

(insn 49 48 0 (parallel [
            (set (reg/f:DI 67 [ D.4999 ])
                (plus:DI (reg:DI 66 [ D.4998 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (reg:DI 66 [ D.4998 ]))
        (nil)))

;; _20 = *fligth_19(D);

(insn 50 49 51 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:129 -1
     (nil))

(insn 51 50 0 (set (reg/f:DI 68 [ D.4999 ])
        (mem/f:DI (reg/f:DI 86) [0 *fligth_19(D)+0 S8 A64])) mSector.c:129 -1
     (nil))

;; _21 = (long unsigned int) i_1;

(insn 52 51 53 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 -1
     (nil))

(insn 53 52 0 (set (reg:DI 69 [ D.4998 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:129 -1
     (nil))

;; _22 = _21 * 160;

(insn 54 53 55 (set (reg:DI 88)
        (reg:DI 69 [ D.4998 ])) mSector.c:129 -1
     (nil))

(insn 55 54 56 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

(insn 56 55 57 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 69 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 57 56 58 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

(insn 58 57 59 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 59 58 0 (set (reg:DI 70 [ D.4998 ])
        (reg:DI 88)) mSector.c:129 -1
     (nil))

;; _23 = _20 + _22;

(insn 60 59 0 (parallel [
            (set (reg/f:DI 71 [ D.4999 ])
                (plus:DI (reg/f:DI 68 [ D.4999 ])
                    (reg:DI 70 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

;; *_18 = *_23;

(insn 61 60 62 (set (reg:DI 90)
        (reg/f:DI 67 [ D.4999 ])) mSector.c:129 -1
     (nil))

(insn 62 61 63 (set (reg:DI 91)
        (reg/f:DI 71 [ D.4999 ])) mSector.c:129 -1
     (nil))

(insn 63 62 64 (set (reg:DI 92)
        (const_int 20 [0x14])) mSector.c:129 -1
     (nil))

(insn 64 63 0 (parallel [
            (set (reg:DI 92)
                (const_int 0 [0]))
            (set (reg:DI 90)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 90)))
            (set (reg:DI 91)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 91)))
            (set (mem:BLK (reg:DI 90) [0 *_18+0 S160 A128])
                (mem:BLK (reg:DI 91) [0 *_23+0 S160 A128]))
            (use (reg:DI 92))
        ]) mSector.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 65 64 66 63 "" [0 uses])

(note 66 65 0 NOTE_INSN_BASIC_BLOCK)

;; i_24 = i_1 + 1;

(insn 67 66 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 68 67 69 62 "" [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = *Nfligth_4(D);

(insn 70 69 71 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:129 -1
     (nil))

(insn 71 70 0 (set (reg:SI 63 [ D.4997 ])
        (mem:SI (reg/f:DI 93) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:129 -1
     (nil))

;; if (_12 > i_1)

(insn 73 71 74 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4997 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32]))) mSector.c:129 -1
     (nil))

(jump_insn 74 73 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) mSector.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _25 = *fligth_19(D);

(insn 76 75 77 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:130 -1
     (nil))

(insn 77 76 0 (set (reg/f:DI 72 [ D.4999 ])
        (mem/f:DI (reg/f:DI 94) [0 *fligth_19(D)+0 S8 A64])) mSector.c:130 -1
     (nil))

;; free (_25);

(insn 78 77 79 (set (reg:DI 5 di)
        (reg/f:DI 72 [ D.4999 ])) mSector.c:130 -1
     (nil))

(call_insn 79 78 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:130 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; *fligth_19(D) = New_fligth_9;

(insn 80 79 81 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:132 -1
     (nil))

(insn 81 80 82 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:132 -1
     (nil))

(insn 82 81 0 (set (mem/f:DI (reg/f:DI 95) [0 *fligth_19(D)+0 S8 A64])
        (reg/f:DI 96)) mSector.c:132 -1
     (nil))

;; _26 = *Nfligth_4(D);

(insn 83 82 84 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 -1
     (nil))

(insn 84 83 0 (set (reg:SI 73 [ D.4997 ])
        (mem:SI (reg/f:DI 97) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:133 -1
     (nil))

;; _27 = _26 + -1;

(insn 85 84 0 (parallel [
            (set (reg:SI 74 [ D.4997 ])
                (plus:SI (reg:SI 73 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:133 -1
     (nil))

;; *Nfligth_4(D) = _27;

(insn 86 85 87 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 -1
     (nil))

(insn 87 86 0 (set (mem:SI (reg/f:DI 98) [0 *Nfligth_4(D)+0 S4 A32])
        (reg:SI 74 [ D.4997 ])) mSector.c:133 -1
     (nil))

;; _28 = 1;

(insn 88 87 0 (set (reg:SI 75 [ D.4997 ])
        (const_int 1 [0x1])) mSector.c:135 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; <L7>:

(code_label 89 88 90 65 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; return _28;

(insn 91 90 92 (set (reg:SI 76 [ <retval> ])
        (reg:SI 75 [ D.4997 ])) mSector.c:135 -1
     (nil))

(jump_insn 92 91 93 (set (pc)
        (label_ref 0)) mSector.c:135 -1
     (nil))

(barrier 93 92 0)
deleting block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])
        (reg:DI 5 di [ fligth ])) mSector.c:125 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])
        (reg:DI 4 si [ Nfligth ])) mSector.c:125 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32])
        (reg:SI 1 dx [ sel ])) mSector.c:125 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:126 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 59 [ D.4997 ])
        (mem:SI (reg/f:DI 77) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:126 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 60 [ D.4997 ])
                (plus:SI (reg:SI 59 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 61 [ D.4998 ])
        (sign_extend:DI (reg:SI 60 [ D.4997 ]))) mSector.c:126 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 78)
        (reg:DI 61 [ D.4998 ])) mSector.c:126 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 78)
                (ashift:DI (reg:DI 78)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg:DI 78)
                    (reg:DI 61 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 79)
                (ashift:DI (reg:DI 78)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 78)
        (reg:DI 79)) mSector.c:126 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 62 [ D.4998 ])
        (reg:DI 78)) mSector.c:126 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 62 [ D.4998 ])) mSector.c:126 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 80)
        (reg:DI 0 ax)) mSector.c:126 -1
     (expr_list:REG_NOALIAS (reg/f:DI 80)
        (nil)))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
        (reg/f:DI 80)) mSector.c:126 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (const_int 0 [0]))) mSector.c:127 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) mSector.c:127 -1
     (nil)
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f44d286ced8 *.LC9>)) mSector.c:127 -1
     (nil))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:127 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 27 26 28 5 61 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 -1
     (nil))
(insn 30 29 31 5 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 -1
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (label_ref 68)) mSector.c:129 -1
     (nil)
 -> 68)
;;  succ:       9

(barrier 32 31 72)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 72 32 33 6 64 "" [1 uses])
(note 33 72 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 -1
     (nil))
(insn 35 34 36 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32]))) mSector.c:129 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) mSector.c:129 -1
     (nil)
 -> 65)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:SI 64 [ h.1 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])) mSector.c:129 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg:SI 64 [ h.1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 40 39 41 7 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (reg:SI 82)) mSector.c:129 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 64 [ h.1 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 41 40 42 7 (set (reg:DI 65 [ D.4998 ])
        (sign_extend:DI (reg:SI 64 [ h.1 ]))) mSector.c:129 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 83)
        (reg:DI 65 [ D.4998 ])) mSector.c:129 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 83)
                (ashift:DI (reg:DI 83)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg:DI 83)
                    (reg:DI 65 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 45 44 46 7 (parallel [
            (set (reg:DI 84)
                (ashift:DI (reg:DI 83)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 46 45 47 7 (set (reg:DI 83)
        (reg:DI 84)) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 47 46 48 7 (set (reg:DI 66 [ D.4998 ])
        (reg:DI 83)) mSector.c:129 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:129 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg/f:DI 67 [ D.4999 ])
                (plus:DI (reg:DI 66 [ D.4998 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (reg:DI 66 [ D.4998 ]))
        (nil)))
(insn 50 49 51 7 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:129 -1
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 68 [ D.4999 ])
        (mem/f:DI (reg/f:DI 86) [0 *fligth_19(D)+0 S8 A64])) mSector.c:129 -1
     (nil))
(insn 52 51 53 7 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 -1
     (nil))
(insn 53 52 54 7 (set (reg:DI 69 [ D.4998 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:129 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 88)
        (reg:DI 69 [ D.4998 ])) mSector.c:129 -1
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 69 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:129 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 59 58 60 7 (set (reg:DI 70 [ D.4998 ])
        (reg:DI 88)) mSector.c:129 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg/f:DI 71 [ D.4999 ])
                (plus:DI (reg/f:DI 68 [ D.4999 ])
                    (reg:DI 70 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
(insn 61 60 62 7 (set (reg:DI 90)
        (reg/f:DI 67 [ D.4999 ])) mSector.c:129 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 91)
        (reg/f:DI 71 [ D.4999 ])) mSector.c:129 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 92)
        (const_int 20 [0x14])) mSector.c:129 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 92)
                (const_int 0 [0]))
            (set (reg:DI 90)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 90)))
            (set (reg:DI 91)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 91)))
            (set (mem:BLK (reg:DI 90) [0 *_18+0 S160 A128])
                (mem:BLK (reg:DI 91) [0 *_23+0 S160 A128]))
            (use (reg:DI 92))
        ]) mSector.c:129 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 65 64 66 8 63 "" [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              8 (FALLTHRU,DFS_BACK)
(code_label 68 67 69 9 62 "" [1 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 9 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:129 -1
     (nil))
(insn 71 70 73 9 (set (reg:SI 63 [ D.4997 ])
        (mem:SI (reg/f:DI 93) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:129 -1
     (nil))
(insn 73 71 74 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4997 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32]))) mSector.c:129 -1
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) mSector.c:129 -1
     (nil)
 -> 72)
;;  succ:       6
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:130 -1
     (nil))
(insn 77 76 78 10 (set (reg/f:DI 72 [ D.4999 ])
        (mem/f:DI (reg/f:DI 94) [0 *fligth_19(D)+0 S8 A64])) mSector.c:130 -1
     (nil))
(insn 78 77 79 10 (set (reg:DI 5 di)
        (reg/f:DI 72 [ D.4999 ])) mSector.c:130 -1
     (nil))
(call_insn 79 78 80 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:130 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 10 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:132 -1
     (nil))
(insn 81 80 82 10 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:132 -1
     (nil))
(insn 82 81 83 10 (set (mem/f:DI (reg/f:DI 95) [0 *fligth_19(D)+0 S8 A64])
        (reg/f:DI 96)) mSector.c:132 -1
     (nil))
(insn 83 82 84 10 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 -1
     (nil))
(insn 84 83 85 10 (set (reg:SI 73 [ D.4997 ])
        (mem:SI (reg/f:DI 97) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:133 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:SI 74 [ D.4997 ])
                (plus:SI (reg:SI 73 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:133 -1
     (nil))
(insn 86 85 87 10 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 -1
     (nil))
(insn 87 86 88 10 (set (mem:SI (reg/f:DI 98) [0 *Nfligth_4(D)+0 S4 A32])
        (reg:SI 74 [ D.4997 ])) mSector.c:133 -1
     (nil))
(insn 88 87 91 10 (set (reg:SI 75 [ D.4997 ])
        (const_int 1 [0x1])) mSector.c:135 -1
     (nil))
(insn 91 88 95 10 (set (reg:SI 76 [ <retval> ])
        (reg:SI 75 [ D.4997 ])) mSector.c:135 -1
     (nil))
(insn 95 91 98 10 (set (reg/i:SI 0 ax)
        (reg:SI 76 [ <retval> ])) mSector.c:136 -1
     (nil))
(insn 98 95 0 10 (use (reg/i:SI 0 ax)) mSector.c:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function add_nvp (add_nvp, funcdef_no=9, decl_uid=1886, cgraph_uid=9)

add_nvp (struct Aircraft_t * f, int * st_indx, long double * p)
{
  int i;
  long double * vel;
  long double * * nvp;
  int D.4523;
  int D.4522;
  int D.4521;
  int D.4520;
  int D.4519;
  long double * D.4518;
  long double * * D.4517;
  long double * D.4516;
  long double * * D.4515;
  long unsigned int D.4514;
  long unsigned int D.4513;
  long double * * D.4512;
  long double * * D.4511;
  sizetype D.4510;
  sizetype D.4509;
  sizetype D.4508;
  int D.4505;
  int D.4504;
  int D.4503;
  int D.4502;
  long double D.4501;
  long double * D.4500;
  long unsigned int D.4499;
  long unsigned int D.4498;
  long double * D.4497;
  long double * D.4496;
  sizetype D.4495;
  sizetype D.4494;
  sizetype D.4493;
  long double * D.4492;
  long double * * D.4491;
  long unsigned int D.4490;
  long unsigned int D.4489;
  long double * * D.4488;
  long double * * D.4487;
  sizetype D.4486;
  sizetype D.4485;
  sizetype D.4484;
  int D.4481;
  int D.4480;
  long double D.4479;
  long double * D.4478;
  sizetype D.4477;
  long unsigned int D.4476;
  long unsigned int D.4475;
  long double * D.4474;
  long double * D.4473;
  long unsigned int D.4472;
  long unsigned int D.4471;
  long double D.4470;
  long double * D.4469;
  long double * * D.4468;
  sizetype D.4467;
  long unsigned int D.4466;
  long unsigned int D.4465;
  long double * D.4464;
  long double * D.4463;
  long double * * D.4462;
  long unsigned int D.4461;
  long unsigned int D.4460;
  long double D.4459;
  long double * D.4458;
  long double * * D.4457;
  sizetype D.4456;
  long unsigned int D.4455;
  long unsigned int D.4454;
  long double * D.4453;
  long double * D.4452;
  long double * * D.4451;
  long unsigned int D.4450;
  long unsigned int D.4449;
  long double * * D.4448;
  long unsigned int D.4447;
  long unsigned int D.4446;
  int D.4443;
  int D.4442;
  int D.4441;
  int D.4440;
  long double D.4439;
  long double * D.4438;
  long unsigned int D.4437;
  long unsigned int D.4436;
  long double * D.4435;
  long double * D.4434;
  long unsigned int D.4433;
  long unsigned int D.4432;
  long double * D.4431;
  long double * * D.4430;
  long unsigned int D.4429;
  long unsigned int D.4428;
  long double * * D.4427;
  long double * * D.4426;
  long unsigned int D.4425;
  long unsigned int D.4424;
  int D.4421;
  int D.4420;
  int D.4419;
  long unsigned int D.4418;
  long unsigned int D.4417;
  int D.4416;
  int D.4415;
  int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  int _9;
  int _13;
  int _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  long double * * _18;
  long double * * _19;
  long unsigned int _20;
  long unsigned int _21;
  long double * * _22;
  long double * _23;
  long unsigned int _24;
  long unsigned int _25;
  long double * _26;
  long double * _27;
  long unsigned int _28;
  long unsigned int _29;
  long double * _30;
  long double _31;
  int _33;
  int _34;
  int _35;
  long unsigned int _36;
  long unsigned int _37;
  long double * * _38;
  long unsigned int _40;
  long unsigned int _41;
  long double * * _42;
  long double * _43;
  long double * _44;
  long unsigned int _45;
  long unsigned int _46;
  sizetype _47;
  long double * * _48;
  long double * _49;
  long double _50;
  long unsigned int _51;
  long unsigned int _52;
  long double * * _53;
  long double * _54;
  long double * _55;
  long unsigned int _56;
  long unsigned int _57;
  sizetype _58;
  long double * * _59;
  long double * _60;
  long double _61;
  long unsigned int _62;
  long unsigned int _63;
  long double * _64;
  long double * _65;
  long unsigned int _66;
  long unsigned int _67;
  sizetype _68;
  long double * _69;
  long double _70;
  int _71;
  int _72;
  int _73;
  int _74;
  sizetype _75;
  sizetype _76;
  sizetype _77;
  long double * * _78;
  long double * * _79;
  long unsigned int _80;
  long unsigned int _81;
  long double * * _82;
  long double * _83;
  sizetype _84;
  sizetype _85;
  sizetype _86;
  long double * _87;
  long double * _88;
  long unsigned int _89;
  long unsigned int _90;
  long double * _91;
  long double _92;
  int _94;
  int _95;
  sizetype _96;
  sizetype _97;
  sizetype _98;
  long double * * _99;
  long double * * _100;
  long unsigned int _101;
  long unsigned int _102;
  long double * * _103;
  long double * _104;
  long double * * _105;
  long double * _106;
  int _107;
  int _108;
  int _109;
  int _110;
  int _111;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = f_3(D)->n_nvp;
  _5 = _4 + 1;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  nvp_8 = malloc (_7);
  _9 = f_3(D)->n_nvp;
  vel_10 = falloc_vec (_9);
  i_11 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _14 = f_3(D)->n_nvp;
  _15 = _14 + -2;
  if (_15 < i_1)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  BuG ("Excess\n");
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _16 = (long unsigned int) i_1;
  _17 = _16 * 8;
  _18 = nvp_8 + _17;
  _19 = f_3(D)->nvp;
  _20 = (long unsigned int) i_1;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  *_18 = _23;
  _24 = (long unsigned int) i_1;
  _25 = _24 * 16;
  _26 = vel_10 + _25;
  _27 = f_3(D)->vel;
  _28 = (long unsigned int) i_1;
  _29 = _28 * 16;
  _30 = _27 + _29;
  _31 = *_30;
  *_26 = _31;
  i_32 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_11(2), i_32(5)>
  _13 = *st_indx_12(D);
  if (_13 > i_1)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _33 = i_1 + -1;
  _34 = f_3(D)->n_nvp;
  _35 = _34 + -2;
  if (_33 > _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  BuG ("Excess\n");
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  _36 = (long unsigned int) i_1;
  _37 = _36 * 8;
  _38 = nvp_8 + _37;
  *_38 = p_39(D);
  _40 = (long unsigned int) i_1;
  _41 = _40 * 8;
  _42 = nvp_8 + _41;
  _43 = *_42;
  _44 = _43 + 32;
  _45 = (long unsigned int) i_1;
  _46 = _45 * 8;
  _47 = _46 + 18446744073709551608;
  _48 = nvp_8 + _47;
  _49 = *_48;
  _50 = MEM[(long double *)_49 + 32B];
  *_44 = _50;
  _51 = (long unsigned int) i_1;
  _52 = _51 * 8;
  _53 = nvp_8 + _52;
  _54 = *_53;
  _55 = _54 + 48;
  _56 = (long unsigned int) i_1;
  _57 = _56 * 8;
  _58 = _57 + 18446744073709551608;
  _59 = nvp_8 + _58;
  _60 = *_59;
  _61 = MEM[(long double *)_60 + 48B];
  *_55 = _61;
  _62 = (long unsigned int) i_1;
  _63 = _62 * 16;
  _64 = vel_10 + _63;
  _65 = f_3(D)->vel;
  _66 = (long unsigned int) i_1;
  _67 = _66 * 16;
  _68 = _67 + 18446744073709551600;
  _69 = _65 + _68;
  _70 = *_69;
  *_64 = _70;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 0
;;    pred:       13
  _73 = f_3(D)->n_nvp;
  _74 = _73 + -2;
  if (_74 < i_2)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  BuG ("Excess\n");
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  _75 = (sizetype) i_2;
  _76 = _75 + 1;
  _77 = _76 * 8;
  _78 = nvp_8 + _77;
  _79 = f_3(D)->nvp;
  _80 = (long unsigned int) i_2;
  _81 = _80 * 8;
  _82 = _79 + _81;
  _83 = *_82;
  *_78 = _83;
  _84 = (sizetype) i_2;
  _85 = _84 + 1;
  _86 = _85 * 16;
  _87 = vel_10 + _86;
  _88 = f_3(D)->vel;
  _89 = (long unsigned int) i_2;
  _90 = _89 * 16;
  _91 = _88 + _90;
  _92 = *_91;
  *_87 = _92;
  i_93 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       9
;;                12
  # i_2 = PHI <i_1(9), i_93(12)>
  _71 = f_3(D)->n_nvp;
  _72 = _71 + -1;
  if (_72 > i_2)
    goto <bb 10>;
  else
    goto <bb 14>;
;;    succ:       10
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _94 = f_3(D)->n_nvp;
  _95 = _94 + -1;
  if (_95 < i_2)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  BuG ("Excess\n");
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  _96 = (sizetype) i_2;
  _97 = _96 + 1;
  _98 = _97 * 8;
  _99 = nvp_8 + _98;
  _100 = f_3(D)->nvp;
  _101 = (long unsigned int) i_2;
  _102 = _101 * 8;
  _103 = _100 + _102;
  _104 = *_103;
  *_99 = _104;
  _105 = f_3(D)->nvp;
  free (_105);
  _106 = f_3(D)->vel;
  free (_106);
  f_3(D)->nvp = nvp_8;
  f_3(D)->vel = vel_10;
  _107 = f_3(D)->n_nvp;
  _108 = _107 + 1;
  f_3(D)->n_nvp = _108;
  _109 = *st_indx_12(D);
  _110 = _109 + 1;
  *st_indx_12(D) = _110;
  _111 = 1;
;;    succ:       17

;;   basic block 17, loop depth 0
;;    pred:       16
<L14>:
  return _111;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (f_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (nvp_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (vel_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (st_indx_12(D) - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (i_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (p_39(D) - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (i_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (f_3(D) - 3 )
Partition 3 (i_11 - 11 )
Partition 4 (st_indx_12(D) - 12 )
Partition 5 (i_32 - 32 )
Partition 6 (p_39(D) - 39 )
Partition 7 (i_93 - 93 )


Live on entry to BB2 : f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB3 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB4 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB5 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB6 : f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB7 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB8 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB9 : i_1  f_3(D)  st_indx_12(D)  p_39(D)  

Live on entry to BB10 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB11 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB12 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB13 : f_3(D)  st_indx_12(D)  

Live on entry to BB14 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB15 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB16 : i_2  f_3(D)  st_indx_12(D)  

Live on entry to BB17 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_11
(2147483646) i_1 <-> i_32
(2147483646) i_1 <-> i_93

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (f_3(D) - 3 )
Partition 3 (i_11 - 11 )
Partition 4 (st_indx_12(D) - 12 )
Partition 5 (i_32 - 32 )
Partition 6 (p_39(D) - 39 )
Partition 7 (i_93 - 93 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (11)i_11 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (32)i_32 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (93)i_93 [map: 0, 7] : Success -> 0
Coalesce list: (2)i_1 & (93)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (32)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (11)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 11 32 93 )
Partition 1 (f_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (nvp_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (vel_10 - 10 )
Partition 9 (st_indx_12(D) - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_15 - 15 )
Partition 13 (_16 - 16 )
Partition 14 (_17 - 17 )
Partition 15 (_18 - 18 )
Partition 16 (_19 - 19 )
Partition 17 (_20 - 20 )
Partition 18 (_21 - 21 )
Partition 19 (_22 - 22 )
Partition 20 (_23 - 23 )
Partition 21 (_24 - 24 )
Partition 22 (_25 - 25 )
Partition 23 (_26 - 26 )
Partition 24 (_27 - 27 )
Partition 25 (_28 - 28 )
Partition 26 (_29 - 29 )
Partition 27 (_30 - 30 )
Partition 28 (_31 - 31 )
Partition 29 (_33 - 33 )
Partition 30 (_34 - 34 )
Partition 31 (_35 - 35 )
Partition 32 (_36 - 36 )
Partition 33 (_37 - 37 )
Partition 34 (_38 - 38 )
Partition 35 (p_39(D) - 39 )
Partition 36 (_40 - 40 )
Partition 37 (_41 - 41 )
Partition 38 (_42 - 42 )
Partition 39 (_43 - 43 )
Partition 40 (_44 - 44 )
Partition 41 (_45 - 45 )
Partition 42 (_46 - 46 )
Partition 43 (_47 - 47 )
Partition 44 (_48 - 48 )
Partition 45 (_49 - 49 )
Partition 46 (_50 - 50 )
Partition 47 (_51 - 51 )
Partition 48 (_52 - 52 )
Partition 49 (_53 - 53 )
Partition 50 (_54 - 54 )
Partition 51 (_55 - 55 )
Partition 52 (_56 - 56 )
Partition 53 (_57 - 57 )
Partition 54 (_58 - 58 )
Partition 55 (_59 - 59 )
Partition 56 (_60 - 60 )
Partition 57 (_61 - 61 )
Partition 58 (_62 - 62 )
Partition 59 (_63 - 63 )
Partition 60 (_64 - 64 )
Partition 61 (_65 - 65 )
Partition 62 (_66 - 66 )
Partition 63 (_67 - 67 )
Partition 64 (_68 - 68 )
Partition 65 (_69 - 69 )
Partition 66 (_70 - 70 )
Partition 67 (_71 - 71 )
Partition 68 (_72 - 72 )
Partition 69 (_73 - 73 )
Partition 70 (_74 - 74 )
Partition 71 (_75 - 75 )
Partition 72 (_76 - 76 )
Partition 73 (_77 - 77 )
Partition 74 (_78 - 78 )
Partition 75 (_79 - 79 )
Partition 76 (_80 - 80 )
Partition 77 (_81 - 81 )
Partition 78 (_82 - 82 )
Partition 79 (_83 - 83 )
Partition 80 (_84 - 84 )
Partition 81 (_85 - 85 )
Partition 82 (_86 - 86 )
Partition 83 (_87 - 87 )
Partition 84 (_88 - 88 )
Partition 85 (_89 - 89 )
Partition 86 (_90 - 90 )
Partition 87 (_91 - 91 )
Partition 88 (_92 - 92 )
Partition 89 (_94 - 94 )
Partition 90 (_95 - 95 )
Partition 91 (_96 - 96 )
Partition 92 (_97 - 97 )
Partition 93 (_98 - 98 )
Partition 94 (_99 - 99 )
Partition 95 (_100 - 100 )
Partition 96 (_101 - 101 )
Partition 97 (_102 - 102 )
Partition 98 (_103 - 103 )
Partition 99 (_104 - 104 )
Partition 100 (_105 - 105 )
Partition 101 (_106 - 106 )
Partition 102 (_107 - 107 )
Partition 103 (_108 - 108 )
Partition 104 (_109 - 109 )
Partition 105 (_110 - 110 )
Partition 106 (_111 - 111 )

add_nvp (struct Aircraft_t * f, int * st_indx, long double * p)
{
  int i;
  long double * vel;
  long double * * nvp;
  int D.4523;
  int D.4522;
  int D.4521;
  int D.4520;
  int D.4519;
  long double * D.4518;
  long double * * D.4517;
  long double * D.4516;
  long double * * D.4515;
  long unsigned int D.4514;
  long unsigned int D.4513;
  long double * * D.4512;
  long double * * D.4511;
  sizetype D.4510;
  sizetype D.4509;
  sizetype D.4508;
  int D.4505;
  int D.4504;
  int D.4503;
  int D.4502;
  long double D.4501;
  long double * D.4500;
  long unsigned int D.4499;
  long unsigned int D.4498;
  long double * D.4497;
  long double * D.4496;
  sizetype D.4495;
  sizetype D.4494;
  sizetype D.4493;
  long double * D.4492;
  long double * * D.4491;
  long unsigned int D.4490;
  long unsigned int D.4489;
  long double * * D.4488;
  long double * * D.4487;
  sizetype D.4486;
  sizetype D.4485;
  sizetype D.4484;
  int D.4481;
  int D.4480;
  long double D.4479;
  long double * D.4478;
  sizetype D.4477;
  long unsigned int D.4476;
  long unsigned int D.4475;
  long double * D.4474;
  long double * D.4473;
  long unsigned int D.4472;
  long unsigned int D.4471;
  long double D.4470;
  long double * D.4469;
  long double * * D.4468;
  sizetype D.4467;
  long unsigned int D.4466;
  long unsigned int D.4465;
  long double * D.4464;
  long double * D.4463;
  long double * * D.4462;
  long unsigned int D.4461;
  long unsigned int D.4460;
  long double D.4459;
  long double * D.4458;
  long double * * D.4457;
  sizetype D.4456;
  long unsigned int D.4455;
  long unsigned int D.4454;
  long double * D.4453;
  long double * D.4452;
  long double * * D.4451;
  long unsigned int D.4450;
  long unsigned int D.4449;
  long double * * D.4448;
  long unsigned int D.4447;
  long unsigned int D.4446;
  int D.4443;
  int D.4442;
  int D.4441;
  int D.4440;
  long double D.4439;
  long double * D.4438;
  long unsigned int D.4437;
  long unsigned int D.4436;
  long double * D.4435;
  long double * D.4434;
  long unsigned int D.4433;
  long unsigned int D.4432;
  long double * D.4431;
  long double * * D.4430;
  long unsigned int D.4429;
  long unsigned int D.4428;
  long double * * D.4427;
  long double * * D.4426;
  long unsigned int D.4425;
  long unsigned int D.4424;
  int D.4421;
  int D.4420;
  int D.4419;
  long unsigned int D.4418;
  long unsigned int D.4417;
  int D.4416;
  int D.4415;
  int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  int _9;
  int _13;
  int _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  long double * * _18;
  long double * * _19;
  long unsigned int _20;
  long unsigned int _21;
  long double * * _22;
  long double * _23;
  long unsigned int _24;
  long unsigned int _25;
  long double * _26;
  long double * _27;
  long unsigned int _28;
  long unsigned int _29;
  long double * _30;
  long double _31;
  int _33;
  int _34;
  int _35;
  long unsigned int _36;
  long unsigned int _37;
  long double * * _38;
  long unsigned int _40;
  long unsigned int _41;
  long double * * _42;
  long double * _43;
  long double * _44;
  long unsigned int _45;
  long unsigned int _46;
  sizetype _47;
  long double * * _48;
  long double * _49;
  long double _50;
  long unsigned int _51;
  long unsigned int _52;
  long double * * _53;
  long double * _54;
  long double * _55;
  long unsigned int _56;
  long unsigned int _57;
  sizetype _58;
  long double * * _59;
  long double * _60;
  long double _61;
  long unsigned int _62;
  long unsigned int _63;
  long double * _64;
  long double * _65;
  long unsigned int _66;
  long unsigned int _67;
  sizetype _68;
  long double * _69;
  long double _70;
  int _71;
  int _72;
  int _73;
  int _74;
  sizetype _75;
  sizetype _76;
  sizetype _77;
  long double * * _78;
  long double * * _79;
  long unsigned int _80;
  long unsigned int _81;
  long double * * _82;
  long double * _83;
  sizetype _84;
  sizetype _85;
  sizetype _86;
  long double * _87;
  long double * _88;
  long unsigned int _89;
  long unsigned int _90;
  long double * _91;
  long double _92;
  int _94;
  int _95;
  sizetype _96;
  sizetype _97;
  sizetype _98;
  long double * * _99;
  long double * * _100;
  long unsigned int _101;
  long unsigned int _102;
  long double * * _103;
  long double * _104;
  long double * * _105;
  long double * _106;
  int _107;
  int _108;
  int _109;
  int _110;
  int _111;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = f_3(D)->n_nvp;
  _5 = _4 + 1;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  nvp_8 = malloc (_7);
  _9 = f_3(D)->n_nvp;
  vel_10 = falloc_vec (_9);
  i_11 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _14 = f_3(D)->n_nvp;
  _15 = _14 + -2;
  if (_15 < i_1)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  BuG ("Excess\n");
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _16 = (long unsigned int) i_1;
  _17 = _16 * 8;
  _18 = nvp_8 + _17;
  _19 = f_3(D)->nvp;
  _20 = (long unsigned int) i_1;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  *_18 = _23;
  _24 = (long unsigned int) i_1;
  _25 = _24 * 16;
  _26 = vel_10 + _25;
  _27 = f_3(D)->vel;
  _28 = (long unsigned int) i_1;
  _29 = _28 * 16;
  _30 = _27 + _29;
  _31 = *_30;
  *_26 = _31;
  i_32 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_11(2), i_32(5)>
  _13 = *st_indx_12(D);
  if (_13 > i_1)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _33 = i_1 + -1;
  _34 = f_3(D)->n_nvp;
  _35 = _34 + -2;
  if (_33 > _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  BuG ("Excess\n");
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  _36 = (long unsigned int) i_1;
  _37 = _36 * 8;
  _38 = nvp_8 + _37;
  *_38 = p_39(D);
  _40 = (long unsigned int) i_1;
  _41 = _40 * 8;
  _42 = nvp_8 + _41;
  _43 = *_42;
  _44 = _43 + 32;
  _45 = (long unsigned int) i_1;
  _46 = _45 * 8;
  _47 = _46 + 18446744073709551608;
  _48 = nvp_8 + _47;
  _49 = *_48;
  _50 = MEM[(long double *)_49 + 32B];
  *_44 = _50;
  _51 = (long unsigned int) i_1;
  _52 = _51 * 8;
  _53 = nvp_8 + _52;
  _54 = *_53;
  _55 = _54 + 48;
  _56 = (long unsigned int) i_1;
  _57 = _56 * 8;
  _58 = _57 + 18446744073709551608;
  _59 = nvp_8 + _58;
  _60 = *_59;
  _61 = MEM[(long double *)_60 + 48B];
  *_55 = _61;
  _62 = (long unsigned int) i_1;
  _63 = _62 * 16;
  _64 = vel_10 + _63;
  _65 = f_3(D)->vel;
  _66 = (long unsigned int) i_1;
  _67 = _66 * 16;
  _68 = _67 + 18446744073709551600;
  _69 = _65 + _68;
  _70 = *_69;
  *_64 = _70;
  goto <bb 13>;
;;    succ:       13

;;   basic block 10, loop depth 0
;;    pred:       13
  _73 = f_3(D)->n_nvp;
  _74 = _73 + -2;
  if (_74 < i_2)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  BuG ("Excess\n");
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  _75 = (sizetype) i_2;
  _76 = _75 + 1;
  _77 = _76 * 8;
  _78 = nvp_8 + _77;
  _79 = f_3(D)->nvp;
  _80 = (long unsigned int) i_2;
  _81 = _80 * 8;
  _82 = _79 + _81;
  _83 = *_82;
  *_78 = _83;
  _84 = (sizetype) i_2;
  _85 = _84 + 1;
  _86 = _85 * 16;
  _87 = vel_10 + _86;
  _88 = f_3(D)->vel;
  _89 = (long unsigned int) i_2;
  _90 = _89 * 16;
  _91 = _88 + _90;
  _92 = *_91;
  *_87 = _92;
  i_93 = i_2 + 1;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       9
;;                12
  # i_2 = PHI <i_1(9), i_93(12)>
  _71 = f_3(D)->n_nvp;
  _72 = _71 + -1;
  if (_72 > i_2)
    goto <bb 10>;
  else
    goto <bb 14>;
;;    succ:       10
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  _94 = f_3(D)->n_nvp;
  _95 = _94 + -1;
  if (_95 < i_2)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  BuG ("Excess\n");
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  _96 = (sizetype) i_2;
  _97 = _96 + 1;
  _98 = _97 * 8;
  _99 = nvp_8 + _98;
  _100 = f_3(D)->nvp;
  _101 = (long unsigned int) i_2;
  _102 = _101 * 8;
  _103 = _100 + _102;
  _104 = *_103;
  *_99 = _104;
  _105 = f_3(D)->nvp;
  free (_105);
  _106 = f_3(D)->vel;
  free (_106);
  f_3(D)->nvp = nvp_8;
  f_3(D)->vel = vel_10;
  _107 = f_3(D)->n_nvp;
  _108 = _107 + 1;
  f_3(D)->n_nvp = _108;
  _109 = *st_indx_12(D);
  _110 = _109 + 1;
  *st_indx_12(D) = _110;
  _111 = 1;
;;    succ:       17

;;   basic block 17, loop depth 0
;;    pred:       16
<L14>:
  return _111;
;;    succ:       EXIT

}


Partition 2: size 8 align 8
	vel_10
Partition 1: size 8 align 8
	nvp_8
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; _4 = f_3(D)->n_nvp;

(insn 8 7 9 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:140 -1
     (nil))

(insn 9 8 0 (set (reg:SI 59 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:140 -1
     (nil))

;; _5 = _4 + 1;

(insn 10 9 0 (parallel [
            (set (reg:SI 60 [ D.5001 ])
                (plus:SI (reg:SI 59 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 -1
     (nil))

;; _6 = (long unsigned int) _5;

(insn 11 10 0 (set (reg:DI 61 [ D.5002 ])
        (sign_extend:DI (reg:SI 60 [ D.5001 ]))) mSector.c:140 -1
     (nil))

;; _7 = _6 * 8;

(insn 12 11 0 (parallel [
            (set (reg:DI 62 [ D.5002 ])
                (ashift:DI (reg:DI 61 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 -1
     (nil))

;; nvp_8 = malloc (_7);

(insn 13 12 14 (set (reg:DI 5 di)
        (reg:DI 62 [ D.5002 ])) mSector.c:140 -1
     (nil))

(call_insn 14 13 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:140 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 15 14 16 (set (reg/f:DI 162)
        (reg:DI 0 ax)) mSector.c:140 -1
     (expr_list:REG_NOALIAS (reg/f:DI 162)
        (nil)))

(insn 16 15 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
        (reg/f:DI 162)) mSector.c:140 -1
     (nil))

;; _9 = f_3(D)->n_nvp;

(insn 17 16 18 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:141 -1
     (nil))

(insn 18 17 0 (set (reg:SI 63 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 163)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:141 -1
     (nil))

;; vel_10 = falloc_vec (_9);

(insn 19 18 20 (set (reg:SI 5 di)
        (reg:SI 63 [ D.5001 ])) mSector.c:141 -1
     (nil))

(call_insn 20 19 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:141 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(insn 21 20 22 (set (reg:DI 164)
        (reg:DI 0 ax)) mSector.c:141 -1
     (nil))

(insn 22 21 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
        (reg:DI 164)) mSector.c:141 -1
     (nil))

;; i_11 = 0;

(insn 23 22 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:145 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _14 = f_3(D)->n_nvp;

(insn 27 26 28 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:146 -1
     (nil))

(insn 28 27 0 (set (reg:SI 65 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 165)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:146 -1
     (nil))

;; _15 = _14 + -2;

(insn 29 28 0 (parallel [
            (set (reg:SI 66 [ D.5001 ])
                (plus:SI (reg:SI 65 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:146 -1
     (nil))

;; if (_15 < i_1)

(insn 30 29 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 66 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:146 -1
     (nil))

(jump_insn 31 30 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:146 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; BuG ("Excess\n");

(insn 33 32 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:146 -1
     (nil))

(call_insn 34 33 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:146 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 35 34 36 68 "" [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; _16 = (long unsigned int) i_1;

(insn 37 36 38 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 -1
     (nil))

(insn 38 37 0 (set (reg:DI 67 [ D.5002 ])
        (sign_extend:DI (reg:SI 166))) mSector.c:147 -1
     (nil))

;; _17 = _16 * 8;

(insn 39 38 0 (parallel [
            (set (reg:DI 68 [ D.5002 ])
                (ashift:DI (reg:DI 67 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))

;; _18 = nvp_8 + _17;

(insn 40 39 41 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:147 -1
     (nil))

(insn 41 40 0 (parallel [
            (set (reg/f:DI 69 [ D.5003 ])
                (plus:DI (reg:DI 68 [ D.5002 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 68 [ D.5002 ]))
        (nil)))

;; _19 = f_3(D)->nvp;

(insn 42 41 43 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:147 -1
     (nil))

(insn 43 42 0 (set (reg/f:DI 70 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 168)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:147 -1
     (nil))

;; _20 = (long unsigned int) i_1;

(insn 44 43 45 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 -1
     (nil))

(insn 45 44 0 (set (reg:DI 71 [ D.5002 ])
        (sign_extend:DI (reg:SI 169))) mSector.c:147 -1
     (nil))

;; _21 = _20 * 8;

(insn 46 45 0 (parallel [
            (set (reg:DI 72 [ D.5002 ])
                (ashift:DI (reg:DI 71 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))

;; _22 = _19 + _21;

(insn 47 46 0 (parallel [
            (set (reg/f:DI 73 [ D.5003 ])
                (plus:DI (reg/f:DI 70 [ D.5003 ])
                    (reg:DI 72 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))

;; _23 = *_22;

(insn 48 47 0 (set (reg/f:DI 74 [ D.5004 ])
        (mem/f:DI (reg/f:DI 73 [ D.5003 ]) [0 *_22+0 S8 A64])) mSector.c:147 -1
     (nil))

;; *_18 = _23;

(insn 49 48 0 (set (mem/f:DI (reg/f:DI 69 [ D.5003 ]) [0 *_18+0 S8 A64])
        (reg/f:DI 74 [ D.5004 ])) mSector.c:147 -1
     (nil))

;; _24 = (long unsigned int) i_1;

(insn 50 49 51 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 -1
     (nil))

(insn 51 50 0 (set (reg:DI 75 [ D.5002 ])
        (sign_extend:DI (reg:SI 170))) mSector.c:148 -1
     (nil))

;; _25 = _24 * 16;

(insn 52 51 0 (parallel [
            (set (reg:DI 76 [ D.5002 ])
                (ashift:DI (reg:DI 75 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))

;; _26 = vel_10 + _25;

(insn 53 52 54 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:148 -1
     (nil))

(insn 54 53 0 (parallel [
            (set (reg/f:DI 77 [ D.5004 ])
                (plus:DI (reg:DI 76 [ D.5002 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 76 [ D.5002 ]))
        (nil)))

;; _27 = f_3(D)->vel;

(insn 55 54 56 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:148 -1
     (nil))

(insn 56 55 0 (set (reg/f:DI 78 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 172)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:148 -1
     (nil))

;; _28 = (long unsigned int) i_1;

(insn 57 56 58 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 -1
     (nil))

(insn 58 57 0 (set (reg:DI 79 [ D.5002 ])
        (sign_extend:DI (reg:SI 173))) mSector.c:148 -1
     (nil))

;; _29 = _28 * 16;

(insn 59 58 0 (parallel [
            (set (reg:DI 80 [ D.5002 ])
                (ashift:DI (reg:DI 79 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))

;; _30 = _27 + _29;

(insn 60 59 0 (parallel [
            (set (reg/f:DI 81 [ D.5004 ])
                (plus:DI (reg/f:DI 78 [ D.5004 ])
                    (reg:DI 80 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))

;; _31 = *_30;

(insn 61 60 0 (set (reg:XF 82 [ D.5005 ])
        (mem:XF (reg/f:DI 81 [ D.5004 ]) [0 *_30+0 S16 A128])) mSector.c:148 -1
     (nil))

;; *_26 = _31;

(insn 62 61 0 (set (mem:XF (reg/f:DI 77 [ D.5004 ]) [0 *_26+0 S16 A128])
        (reg:XF 82 [ D.5005 ])) mSector.c:148 -1
     (nil))

;; i_32 = i_1 + 1;

(insn 63 62 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:145 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 64 63 65 67 "" [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)

;; _13 = *st_indx_12(D);

(insn 66 65 67 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:145 -1
     (nil))

(insn 67 66 0 (set (reg:SI 64 [ D.5001 ])
        (mem:SI (reg/f:DI 174) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:145 -1
     (nil))

;; if (_13 > i_1)

(insn 69 67 70 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:145 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) mSector.c:145 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _33 = i_1 + -1;

(insn 72 71 73 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:152 -1
     (nil))

(insn 73 72 0 (parallel [
            (set (reg:SI 83 [ D.5001 ])
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _34 = f_3(D)->n_nvp;

(insn 74 73 75 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:152 -1
     (nil))

(insn 75 74 0 (set (reg:SI 84 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 176)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:152 -1
     (nil))

;; _35 = _34 + -2;

(insn 76 75 0 (parallel [
            (set (reg:SI 85 [ D.5001 ])
                (plus:SI (reg:SI 84 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 -1
     (nil))

;; if (_33 > _35)

(insn 77 76 78 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.5001 ])
            (reg:SI 85 [ D.5001 ]))) mSector.c:152 -1
     (nil))

(jump_insn 78 77 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:152 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; BuG ("Excess\n");

(insn 80 79 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:152 -1
     (nil))

(call_insn 81 80 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:152 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 82 81 83 70 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; _36 = (long unsigned int) i_1;

(insn 84 83 85 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:153 -1
     (nil))

(insn 85 84 0 (set (reg:DI 86 [ D.5002 ])
        (sign_extend:DI (reg:SI 177))) mSector.c:153 -1
     (nil))

;; _37 = _36 * 8;

(insn 86 85 0 (parallel [
            (set (reg:DI 87 [ D.5002 ])
                (ashift:DI (reg:DI 86 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 -1
     (nil))

;; _38 = nvp_8 + _37;

(insn 87 86 88 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:153 -1
     (nil))

(insn 88 87 0 (parallel [
            (set (reg/f:DI 88 [ D.5003 ])
                (plus:DI (reg:DI 87 [ D.5002 ])
                    (reg/f:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 87 [ D.5002 ]))
        (nil)))

;; *_38 = p_39(D);

(insn 89 88 90 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mSector.c:153 -1
     (nil))

(insn 90 89 0 (set (mem/f:DI (reg/f:DI 88 [ D.5003 ]) [0 *_38+0 S8 A64])
        (reg/f:DI 179)) mSector.c:153 -1
     (nil))

;; _40 = (long unsigned int) i_1;

(insn 91 90 92 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 -1
     (nil))

(insn 92 91 0 (set (reg:DI 89 [ D.5002 ])
        (sign_extend:DI (reg:SI 180))) mSector.c:154 -1
     (nil))

;; _41 = _40 * 8;

(insn 93 92 0 (parallel [
            (set (reg:DI 90 [ D.5002 ])
                (ashift:DI (reg:DI 89 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))

;; _42 = nvp_8 + _41;

(insn 94 93 95 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 -1
     (nil))

(insn 95 94 0 (parallel [
            (set (reg/f:DI 91 [ D.5003 ])
                (plus:DI (reg:DI 90 [ D.5002 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 90 [ D.5002 ]))
        (nil)))

;; _43 = *_42;

(insn 96 95 0 (set (reg/f:DI 92 [ D.5004 ])
        (mem/f:DI (reg/f:DI 91 [ D.5003 ]) [0 *_42+0 S8 A64])) mSector.c:154 -1
     (nil))

;; _44 = _43 + 32;

(insn 97 96 0 (parallel [
            (set (reg/f:DI 93 [ D.5004 ])
                (plus:DI (reg/f:DI 92 [ D.5004 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))

;; _45 = (long unsigned int) i_1;

(insn 98 97 99 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 -1
     (nil))

(insn 99 98 0 (set (reg:DI 94 [ D.5002 ])
        (sign_extend:DI (reg:SI 182))) mSector.c:154 -1
     (nil))

;; _46 = _45 * 8;

(insn 100 99 0 (parallel [
            (set (reg:DI 95 [ D.5002 ])
                (ashift:DI (reg:DI 94 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))

;; _47 = _46 + 18446744073709551608;

(insn 101 100 0 (parallel [
            (set (reg:DI 96 [ D.5006 ])
                (plus:DI (reg:DI 95 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))

;; _48 = nvp_8 + _47;

(insn 102 101 103 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 -1
     (nil))

(insn 103 102 0 (parallel [
            (set (reg/f:DI 97 [ D.5003 ])
                (plus:DI (reg:DI 96 [ D.5006 ])
                    (reg/f:DI 183)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 96 [ D.5006 ]))
        (nil)))

;; _49 = *_48;

(insn 104 103 0 (set (reg/f:DI 98 [ D.5004 ])
        (mem/f:DI (reg/f:DI 97 [ D.5003 ]) [0 *_48+0 S8 A64])) mSector.c:154 -1
     (nil))

;; _50 = MEM[(long double *)_49 + 32B];

(insn 105 104 0 (set (reg:XF 99 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 98 [ D.5004 ])
                (const_int 32 [0x20])) [0 MEM[(long double *)_49 + 32B]+0 S16 A128])) mSector.c:154 -1
     (nil))

;; *_44 = _50;

(insn 106 105 0 (set (mem:XF (reg/f:DI 93 [ D.5004 ]) [0 *_44+0 S16 A128])
        (reg:XF 99 [ D.5005 ])) mSector.c:154 -1
     (nil))

;; _51 = (long unsigned int) i_1;

(insn 107 106 108 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 -1
     (nil))

(insn 108 107 0 (set (reg:DI 100 [ D.5002 ])
        (sign_extend:DI (reg:SI 184))) mSector.c:155 -1
     (nil))

;; _52 = _51 * 8;

(insn 109 108 0 (parallel [
            (set (reg:DI 101 [ D.5002 ])
                (ashift:DI (reg:DI 100 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))

;; _53 = nvp_8 + _52;

(insn 110 109 111 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 -1
     (nil))

(insn 111 110 0 (parallel [
            (set (reg/f:DI 102 [ D.5003 ])
                (plus:DI (reg:DI 101 [ D.5002 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 101 [ D.5002 ]))
        (nil)))

;; _54 = *_53;

(insn 112 111 0 (set (reg/f:DI 103 [ D.5004 ])
        (mem/f:DI (reg/f:DI 102 [ D.5003 ]) [0 *_53+0 S8 A64])) mSector.c:155 -1
     (nil))

;; _55 = _54 + 48;

(insn 113 112 0 (parallel [
            (set (reg/f:DI 104 [ D.5004 ])
                (plus:DI (reg/f:DI 103 [ D.5004 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))

;; _56 = (long unsigned int) i_1;

(insn 114 113 115 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 -1
     (nil))

(insn 115 114 0 (set (reg:DI 105 [ D.5002 ])
        (sign_extend:DI (reg:SI 186))) mSector.c:155 -1
     (nil))

;; _57 = _56 * 8;

(insn 116 115 0 (parallel [
            (set (reg:DI 106 [ D.5002 ])
                (ashift:DI (reg:DI 105 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))

;; _58 = _57 + 18446744073709551608;

(insn 117 116 0 (parallel [
            (set (reg:DI 107 [ D.5006 ])
                (plus:DI (reg:DI 106 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))

;; _59 = nvp_8 + _58;

(insn 118 117 119 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 -1
     (nil))

(insn 119 118 0 (parallel [
            (set (reg/f:DI 108 [ D.5003 ])
                (plus:DI (reg:DI 107 [ D.5006 ])
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 107 [ D.5006 ]))
        (nil)))

;; _60 = *_59;

(insn 120 119 0 (set (reg/f:DI 109 [ D.5004 ])
        (mem/f:DI (reg/f:DI 108 [ D.5003 ]) [0 *_59+0 S8 A64])) mSector.c:155 -1
     (nil))

;; _61 = MEM[(long double *)_60 + 48B];

(insn 121 120 0 (set (reg:XF 110 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 109 [ D.5004 ])
                (const_int 48 [0x30])) [0 MEM[(long double *)_60 + 48B]+0 S16 A128])) mSector.c:155 -1
     (nil))

;; *_55 = _61;

(insn 122 121 0 (set (mem:XF (reg/f:DI 104 [ D.5004 ]) [0 *_55+0 S16 A128])
        (reg:XF 110 [ D.5005 ])) mSector.c:155 -1
     (nil))

;; _62 = (long unsigned int) i_1;

(insn 123 122 124 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 -1
     (nil))

(insn 124 123 0 (set (reg:DI 111 [ D.5002 ])
        (sign_extend:DI (reg:SI 188))) mSector.c:157 -1
     (nil))

;; _63 = _62 * 16;

(insn 125 124 0 (parallel [
            (set (reg:DI 112 [ D.5002 ])
                (ashift:DI (reg:DI 111 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))

;; _64 = vel_10 + _63;

(insn 126 125 127 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:157 -1
     (nil))

(insn 127 126 0 (parallel [
            (set (reg/f:DI 113 [ D.5004 ])
                (plus:DI (reg:DI 112 [ D.5002 ])
                    (reg/f:DI 189)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 112 [ D.5002 ]))
        (nil)))

;; _65 = f_3(D)->vel;

(insn 128 127 129 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:157 -1
     (nil))

(insn 129 128 0 (set (reg/f:DI 114 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 190)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:157 -1
     (nil))

;; _66 = (long unsigned int) i_1;

(insn 130 129 131 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 -1
     (nil))

(insn 131 130 0 (set (reg:DI 115 [ D.5002 ])
        (sign_extend:DI (reg:SI 191))) mSector.c:157 -1
     (nil))

;; _67 = _66 * 16;

(insn 132 131 0 (parallel [
            (set (reg:DI 116 [ D.5002 ])
                (ashift:DI (reg:DI 115 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))

;; _68 = _67 + 18446744073709551600;

(insn 133 132 0 (parallel [
            (set (reg:DI 117 [ D.5006 ])
                (plus:DI (reg:DI 116 [ D.5002 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))

;; _69 = _65 + _68;

(insn 134 133 0 (parallel [
            (set (reg/f:DI 118 [ D.5004 ])
                (plus:DI (reg/f:DI 114 [ D.5004 ])
                    (reg:DI 117 [ D.5006 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))

;; _70 = *_69;

(insn 135 134 0 (set (reg:XF 119 [ D.5005 ])
        (mem:XF (reg/f:DI 118 [ D.5004 ]) [0 *_69+0 S16 A128])) mSector.c:157 -1
     (nil))

;; *_64 = _70;

(insn 136 135 0 (set (mem:XF (reg/f:DI 113 [ D.5004 ]) [0 *_64+0 S16 A128])
        (reg:XF 119 [ D.5005 ])) mSector.c:157 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _73 = f_3(D)->n_nvp;

(insn 140 139 141 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:162 -1
     (nil))

(insn 141 140 0 (set (reg:SI 122 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 192)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:162 -1
     (nil))

;; _74 = _73 + -2;

(insn 142 141 0 (parallel [
            (set (reg:SI 123 [ D.5001 ])
                (plus:SI (reg:SI 122 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:162 -1
     (nil))

;; if (_74 < i_2)

(insn 143 142 144 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 123 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:162 -1
     (nil))

(jump_insn 144 143 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:162 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; BuG ("Excess\n");

(insn 146 145 147 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:162 -1
     (nil))

(call_insn 147 146 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 12

;; 

(code_label 148 147 149 72 "" [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; _75 = (sizetype) i_2;

(insn 150 149 151 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 -1
     (nil))

(insn 151 150 0 (set (reg:DI 124 [ D.5006 ])
        (sign_extend:DI (reg:SI 193))) mSector.c:163 -1
     (nil))

;; _76 = _75 + 1;

(insn 152 151 0 (parallel [
            (set (reg:DI 125 [ D.5006 ])
                (plus:DI (reg:DI 124 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))

;; _77 = _76 * 8;

(insn 153 152 0 (parallel [
            (set (reg:DI 126 [ D.5006 ])
                (ashift:DI (reg:DI 125 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))

;; _78 = nvp_8 + _77;

(insn 154 153 155 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:163 -1
     (nil))

(insn 155 154 0 (parallel [
            (set (reg/f:DI 127 [ D.5003 ])
                (plus:DI (reg:DI 126 [ D.5006 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 126 [ D.5006 ]))
        (nil)))

;; _79 = f_3(D)->nvp;

(insn 156 155 157 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:163 -1
     (nil))

(insn 157 156 0 (set (reg/f:DI 128 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 195)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:163 -1
     (nil))

;; _80 = (long unsigned int) i_2;

(insn 158 157 159 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 -1
     (nil))

(insn 159 158 0 (set (reg:DI 129 [ D.5002 ])
        (sign_extend:DI (reg:SI 196))) mSector.c:163 -1
     (nil))

;; _81 = _80 * 8;

(insn 160 159 0 (parallel [
            (set (reg:DI 130 [ D.5002 ])
                (ashift:DI (reg:DI 129 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))

;; _82 = _79 + _81;

(insn 161 160 0 (parallel [
            (set (reg/f:DI 131 [ D.5003 ])
                (plus:DI (reg/f:DI 128 [ D.5003 ])
                    (reg:DI 130 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))

;; _83 = *_82;

(insn 162 161 0 (set (reg/f:DI 132 [ D.5004 ])
        (mem/f:DI (reg/f:DI 131 [ D.5003 ]) [0 *_82+0 S8 A64])) mSector.c:163 -1
     (nil))

;; *_78 = _83;

(insn 163 162 0 (set (mem/f:DI (reg/f:DI 127 [ D.5003 ]) [0 *_78+0 S8 A64])
        (reg/f:DI 132 [ D.5004 ])) mSector.c:163 -1
     (nil))

;; _84 = (sizetype) i_2;

(insn 164 163 165 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 -1
     (nil))

(insn 165 164 0 (set (reg:DI 133 [ D.5006 ])
        (sign_extend:DI (reg:SI 197))) mSector.c:164 -1
     (nil))

;; _85 = _84 + 1;

(insn 166 165 0 (parallel [
            (set (reg:DI 134 [ D.5006 ])
                (plus:DI (reg:DI 133 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))

;; _86 = _85 * 16;

(insn 167 166 0 (parallel [
            (set (reg:DI 135 [ D.5006 ])
                (ashift:DI (reg:DI 134 [ D.5006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))

;; _87 = vel_10 + _86;

(insn 168 167 169 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:164 -1
     (nil))

(insn 169 168 0 (parallel [
            (set (reg/f:DI 136 [ D.5004 ])
                (plus:DI (reg:DI 135 [ D.5006 ])
                    (reg/f:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 135 [ D.5006 ]))
        (nil)))

;; _88 = f_3(D)->vel;

(insn 170 169 171 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:164 -1
     (nil))

(insn 171 170 0 (set (reg/f:DI 137 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:164 -1
     (nil))

;; _89 = (long unsigned int) i_2;

(insn 172 171 173 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 -1
     (nil))

(insn 173 172 0 (set (reg:DI 138 [ D.5002 ])
        (sign_extend:DI (reg:SI 200))) mSector.c:164 -1
     (nil))

;; _90 = _89 * 16;

(insn 174 173 0 (parallel [
            (set (reg:DI 139 [ D.5002 ])
                (ashift:DI (reg:DI 138 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))

;; _91 = _88 + _90;

(insn 175 174 0 (parallel [
            (set (reg/f:DI 140 [ D.5004 ])
                (plus:DI (reg/f:DI 137 [ D.5004 ])
                    (reg:DI 139 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))

;; _92 = *_91;

(insn 176 175 0 (set (reg:XF 141 [ D.5005 ])
        (mem:XF (reg/f:DI 140 [ D.5004 ]) [0 *_91+0 S16 A128])) mSector.c:164 -1
     (nil))

;; *_87 = _92;

(insn 177 176 0 (set (mem:XF (reg/f:DI 136 [ D.5004 ]) [0 *_87+0 S16 A128])
        (reg:XF 141 [ D.5005 ])) mSector.c:164 -1
     (nil))

;; i_93 = i_2 + 1;

(insn 178 177 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 179 178 180 71 "" [0 uses])

(note 180 179 0 NOTE_INSN_BASIC_BLOCK)

;; _71 = f_3(D)->n_nvp;

(insn 181 180 182 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:161 -1
     (nil))

(insn 182 181 0 (set (reg:SI 120 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 201)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:161 -1
     (nil))

;; _72 = _71 + -1;

(insn 183 182 0 (parallel [
            (set (reg:SI 121 [ D.5001 ])
                (plus:SI (reg:SI 120 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 -1
     (nil))

;; if (_72 > i_2)

(insn 185 183 186 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 121 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:161 -1
     (nil))

(jump_insn 186 185 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:161 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _94 = f_3(D)->n_nvp;

(insn 188 187 189 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:167 -1
     (nil))

(insn 189 188 0 (set (reg:SI 142 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 202)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:167 -1
     (nil))

;; _95 = _94 + -1;

(insn 190 189 0 (parallel [
            (set (reg:SI 143 [ D.5001 ])
                (plus:SI (reg:SI 142 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:167 -1
     (nil))

;; if (_95 < i_2)

(insn 191 190 192 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:167 -1
     (nil))

(jump_insn 192 191 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:167 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; BuG ("Excess\n");

(insn 194 193 195 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:167 -1
     (nil))

(call_insn 195 194 0 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:167 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 16

;; 

(code_label 196 195 197 74 "" [0 uses])

(note 197 196 0 NOTE_INSN_BASIC_BLOCK)

;; _96 = (sizetype) i_2;

(insn 198 197 199 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 -1
     (nil))

(insn 199 198 0 (set (reg:DI 144 [ D.5006 ])
        (sign_extend:DI (reg:SI 203))) mSector.c:168 -1
     (nil))

;; _97 = _96 + 1;

(insn 200 199 0 (parallel [
            (set (reg:DI 145 [ D.5006 ])
                (plus:DI (reg:DI 144 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))

;; _98 = _97 * 8;

(insn 201 200 0 (parallel [
            (set (reg:DI 146 [ D.5006 ])
                (ashift:DI (reg:DI 145 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))

;; _99 = nvp_8 + _98;

(insn 202 201 203 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:168 -1
     (nil))

(insn 203 202 0 (parallel [
            (set (reg/f:DI 147 [ D.5003 ])
                (plus:DI (reg:DI 146 [ D.5006 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 146 [ D.5006 ]))
        (nil)))

;; _100 = f_3(D)->nvp;

(insn 204 203 205 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:168 -1
     (nil))

(insn 205 204 0 (set (reg/f:DI 148 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 205)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:168 -1
     (nil))

;; _101 = (long unsigned int) i_2;

(insn 206 205 207 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 -1
     (nil))

(insn 207 206 0 (set (reg:DI 149 [ D.5002 ])
        (sign_extend:DI (reg:SI 206))) mSector.c:168 -1
     (nil))

;; _102 = _101 * 8;

(insn 208 207 0 (parallel [
            (set (reg:DI 150 [ D.5002 ])
                (ashift:DI (reg:DI 149 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))

;; _103 = _100 + _102;

(insn 209 208 0 (parallel [
            (set (reg/f:DI 151 [ D.5003 ])
                (plus:DI (reg/f:DI 148 [ D.5003 ])
                    (reg:DI 150 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))

;; _104 = *_103;

(insn 210 209 0 (set (reg/f:DI 152 [ D.5004 ])
        (mem/f:DI (reg/f:DI 151 [ D.5003 ]) [0 *_103+0 S8 A64])) mSector.c:168 -1
     (nil))

;; *_99 = _104;

(insn 211 210 0 (set (mem/f:DI (reg/f:DI 147 [ D.5003 ]) [0 *_99+0 S8 A64])
        (reg/f:DI 152 [ D.5004 ])) mSector.c:168 -1
     (nil))

;; _105 = f_3(D)->nvp;

(insn 212 211 213 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:171 -1
     (nil))

(insn 213 212 0 (set (reg/f:DI 153 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 207)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:171 -1
     (nil))

;; free (_105);

(insn 214 213 215 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.5003 ])) mSector.c:171 -1
     (nil))

(call_insn 215 214 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _106 = f_3(D)->vel;

(insn 216 215 217 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:172 -1
     (nil))

(insn 217 216 0 (set (reg/f:DI 154 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:172 -1
     (nil))

;; free (_106);

(insn 218 217 219 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.5004 ])) mSector.c:172 -1
     (nil))

(call_insn 219 218 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; f_3(D)->nvp = nvp_8;

(insn 220 219 221 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:175 -1
     (nil))

(insn 221 220 222 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:175 -1
     (nil))

(insn 222 221 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 209)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])
        (reg/f:DI 210)) mSector.c:175 -1
     (nil))

;; f_3(D)->vel = vel_10;

(insn 223 222 224 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:176 -1
     (nil))

(insn 224 223 225 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:176 -1
     (nil))

(insn 225 224 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 211)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])
        (reg/f:DI 212)) mSector.c:176 -1
     (nil))

;; _107 = f_3(D)->n_nvp;

(insn 226 225 227 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 -1
     (nil))

(insn 227 226 0 (set (reg:SI 155 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 213)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:179 -1
     (nil))

;; _108 = _107 + 1;

(insn 228 227 0 (parallel [
            (set (reg:SI 156 [ D.5001 ])
                (plus:SI (reg:SI 155 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:179 -1
     (nil))

;; f_3(D)->n_nvp = _108;

(insn 229 228 230 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 -1
     (nil))

(insn 230 229 0 (set (mem/j:SI (plus:DI (reg/f:DI 214)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])
        (reg:SI 156 [ D.5001 ])) mSector.c:179 -1
     (nil))

;; _109 = *st_indx_12(D);

(insn 231 230 232 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 -1
     (nil))

(insn 232 231 0 (set (reg:SI 157 [ D.5001 ])
        (mem:SI (reg/f:DI 215) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:180 -1
     (nil))

;; _110 = _109 + 1;

(insn 233 232 0 (parallel [
            (set (reg:SI 158 [ D.5001 ])
                (plus:SI (reg:SI 157 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:180 -1
     (nil))

;; *st_indx_12(D) = _110;

(insn 234 233 235 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 -1
     (nil))

(insn 235 234 0 (set (mem:SI (reg/f:DI 216) [0 *st_indx_12(D)+0 S4 A32])
        (reg:SI 158 [ D.5001 ])) mSector.c:180 -1
     (nil))

;; _111 = 1;

(insn 236 235 0 (set (reg:SI 159 [ D.5001 ])
        (const_int 1 [0x1])) mSector.c:182 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; <L14>:

(code_label 237 236 238 75 "" [0 uses])

(note 238 237 0 NOTE_INSN_BASIC_BLOCK)

;; return _111;

(insn 239 238 240 (set (reg:SI 160 [ <retval> ])
        (reg:SI 159 [ D.5001 ])) mSector.c:182 -1
     (nil))

(jump_insn 240 239 241 (set (pc)
        (label_ref 0)) mSector.c:182 -1
     (nil))

(barrier 241 240 0)
deleting block 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:138 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])
        (reg:DI 4 si [ st_indx ])) mSector.c:138 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])
        (reg:DI 1 dx [ p ])) mSector.c:138 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:140 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 59 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:140 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 60 [ D.5001 ])
                (plus:SI (reg:SI 59 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 61 [ D.5002 ])
        (sign_extend:DI (reg:SI 60 [ D.5001 ]))) mSector.c:140 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 62 [ D.5002 ])
                (ashift:DI (reg:DI 61 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 62 [ D.5002 ])) mSector.c:140 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:140 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 162)
        (reg:DI 0 ax)) mSector.c:140 -1
     (expr_list:REG_NOALIAS (reg/f:DI 162)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
        (reg/f:DI 162)) mSector.c:140 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:141 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 63 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 163)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:141 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 63 [ D.5001 ])) mSector.c:141 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:141 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 164)
        (reg:DI 0 ax)) mSector.c:141 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
        (reg:DI 164)) mSector.c:141 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:145 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (label_ref 64)) mSector.c:145 -1
     (nil)
 -> 64)
;;  succ:       7

(barrier 25 24 68)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 68 25 26 4 69 "" [1 uses])
(note 26 68 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:146 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 65 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 165)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:146 -1
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:SI 66 [ D.5001 ])
                (plus:SI (reg:SI 65 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:146 -1
     (nil))
(insn 30 29 31 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 66 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:146 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mSector.c:146 -1
     (nil)
 -> 35)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:146 -1
     (nil))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:146 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 35 34 36 6 68 "" [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 67 [ D.5002 ])
        (sign_extend:DI (reg:SI 166))) mSector.c:147 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 68 [ D.5002 ])
                (ashift:DI (reg:DI 67 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:147 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg/f:DI 69 [ D.5003 ])
                (plus:DI (reg:DI 68 [ D.5002 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 68 [ D.5002 ]))
        (nil)))
(insn 42 41 43 6 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:147 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 70 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 168)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:147 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 71 [ D.5002 ])
        (sign_extend:DI (reg:SI 169))) mSector.c:147 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 72 [ D.5002 ])
                (ashift:DI (reg:DI 71 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:DI 73 [ D.5003 ])
                (plus:DI (reg/f:DI 70 [ D.5003 ])
                    (reg:DI 72 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 -1
     (nil))
(insn 48 47 49 6 (set (reg/f:DI 74 [ D.5004 ])
        (mem/f:DI (reg/f:DI 73 [ D.5003 ]) [0 *_22+0 S8 A64])) mSector.c:147 -1
     (nil))
(insn 49 48 50 6 (set (mem/f:DI (reg/f:DI 69 [ D.5003 ]) [0 *_18+0 S8 A64])
        (reg/f:DI 74 [ D.5004 ])) mSector.c:147 -1
     (nil))
(insn 50 49 51 6 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 75 [ D.5002 ])
        (sign_extend:DI (reg:SI 170))) mSector.c:148 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 76 [ D.5002 ])
                (ashift:DI (reg:DI 75 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:148 -1
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:DI 77 [ D.5004 ])
                (plus:DI (reg:DI 76 [ D.5002 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 76 [ D.5002 ]))
        (nil)))
(insn 55 54 56 6 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:148 -1
     (nil))
(insn 56 55 57 6 (set (reg/f:DI 78 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 172)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:148 -1
     (nil))
(insn 57 56 58 6 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 79 [ D.5002 ])
        (sign_extend:DI (reg:SI 173))) mSector.c:148 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 80 [ D.5002 ])
                (ashift:DI (reg:DI 79 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 81 [ D.5004 ])
                (plus:DI (reg/f:DI 78 [ D.5004 ])
                    (reg:DI 80 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 -1
     (nil))
(insn 61 60 62 6 (set (reg:XF 82 [ D.5005 ])
        (mem:XF (reg/f:DI 81 [ D.5004 ]) [0 *_30+0 S16 A128])) mSector.c:148 -1
     (nil))
(insn 62 61 63 6 (set (mem:XF (reg/f:DI 77 [ D.5004 ]) [0 *_26+0 S16 A128])
        (reg:XF 82 [ D.5005 ])) mSector.c:148 -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:145 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              6 (FALLTHRU,DFS_BACK)
(code_label 64 63 65 7 67 "" [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:145 -1
     (nil))
(insn 67 66 69 7 (set (reg:SI 64 [ D.5001 ])
        (mem:SI (reg/f:DI 174) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:145 -1
     (nil))
(insn 69 67 70 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:145 -1
     (nil))
(jump_insn 70 69 71 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) mSector.c:145 -1
     (nil)
 -> 68)
;;  succ:       4
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:152 -1
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg:SI 83 [ D.5001 ])
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 74 73 75 8 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:152 -1
     (nil))
(insn 75 74 76 8 (set (reg:SI 84 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 176)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:152 -1
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:SI 85 [ D.5001 ])
                (plus:SI (reg:SI 84 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 -1
     (nil))
(insn 77 76 78 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.5001 ])
            (reg:SI 85 [ D.5001 ]))) mSector.c:152 -1
     (nil))
(jump_insn 78 77 79 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) mSector.c:152 -1
     (nil)
 -> 82)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:152 -1
     (nil))
(call_insn 81 80 82 9 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:152 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 82 81 83 10 70 "" [1 uses])
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 10 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:153 -1
     (nil))
(insn 85 84 86 10 (set (reg:DI 86 [ D.5002 ])
        (sign_extend:DI (reg:SI 177))) mSector.c:153 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 87 [ D.5002 ])
                (ashift:DI (reg:DI 86 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 -1
     (nil))
(insn 87 86 88 10 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:153 -1
     (nil))
(insn 88 87 89 10 (parallel [
            (set (reg/f:DI 88 [ D.5003 ])
                (plus:DI (reg:DI 87 [ D.5002 ])
                    (reg/f:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 87 [ D.5002 ]))
        (nil)))
(insn 89 88 90 10 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mSector.c:153 -1
     (nil))
(insn 90 89 91 10 (set (mem/f:DI (reg/f:DI 88 [ D.5003 ]) [0 *_38+0 S8 A64])
        (reg/f:DI 179)) mSector.c:153 -1
     (nil))
(insn 91 90 92 10 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 -1
     (nil))
(insn 92 91 93 10 (set (reg:DI 89 [ D.5002 ])
        (sign_extend:DI (reg:SI 180))) mSector.c:154 -1
     (nil))
(insn 93 92 94 10 (parallel [
            (set (reg:DI 90 [ D.5002 ])
                (ashift:DI (reg:DI 89 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))
(insn 94 93 95 10 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 -1
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg/f:DI 91 [ D.5003 ])
                (plus:DI (reg:DI 90 [ D.5002 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 90 [ D.5002 ]))
        (nil)))
(insn 96 95 97 10 (set (reg/f:DI 92 [ D.5004 ])
        (mem/f:DI (reg/f:DI 91 [ D.5003 ]) [0 *_42+0 S8 A64])) mSector.c:154 -1
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg/f:DI 93 [ D.5004 ])
                (plus:DI (reg/f:DI 92 [ D.5004 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))
(insn 98 97 99 10 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 -1
     (nil))
(insn 99 98 100 10 (set (reg:DI 94 [ D.5002 ])
        (sign_extend:DI (reg:SI 182))) mSector.c:154 -1
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 95 [ D.5002 ])
                (ashift:DI (reg:DI 94 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg:DI 96 [ D.5006 ])
                (plus:DI (reg:DI 95 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (nil))
(insn 102 101 103 10 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 -1
     (nil))
(insn 103 102 104 10 (parallel [
            (set (reg/f:DI 97 [ D.5003 ])
                (plus:DI (reg:DI 96 [ D.5006 ])
                    (reg/f:DI 183)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 96 [ D.5006 ]))
        (nil)))
(insn 104 103 105 10 (set (reg/f:DI 98 [ D.5004 ])
        (mem/f:DI (reg/f:DI 97 [ D.5003 ]) [0 *_48+0 S8 A64])) mSector.c:154 -1
     (nil))
(insn 105 104 106 10 (set (reg:XF 99 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 98 [ D.5004 ])
                (const_int 32 [0x20])) [0 MEM[(long double *)_49 + 32B]+0 S16 A128])) mSector.c:154 -1
     (nil))
(insn 106 105 107 10 (set (mem:XF (reg/f:DI 93 [ D.5004 ]) [0 *_44+0 S16 A128])
        (reg:XF 99 [ D.5005 ])) mSector.c:154 -1
     (nil))
(insn 107 106 108 10 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 -1
     (nil))
(insn 108 107 109 10 (set (reg:DI 100 [ D.5002 ])
        (sign_extend:DI (reg:SI 184))) mSector.c:155 -1
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg:DI 101 [ D.5002 ])
                (ashift:DI (reg:DI 100 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))
(insn 110 109 111 10 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 -1
     (nil))
(insn 111 110 112 10 (parallel [
            (set (reg/f:DI 102 [ D.5003 ])
                (plus:DI (reg:DI 101 [ D.5002 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 101 [ D.5002 ]))
        (nil)))
(insn 112 111 113 10 (set (reg/f:DI 103 [ D.5004 ])
        (mem/f:DI (reg/f:DI 102 [ D.5003 ]) [0 *_53+0 S8 A64])) mSector.c:155 -1
     (nil))
(insn 113 112 114 10 (parallel [
            (set (reg/f:DI 104 [ D.5004 ])
                (plus:DI (reg/f:DI 103 [ D.5004 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))
(insn 114 113 115 10 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 -1
     (nil))
(insn 115 114 116 10 (set (reg:DI 105 [ D.5002 ])
        (sign_extend:DI (reg:SI 186))) mSector.c:155 -1
     (nil))
(insn 116 115 117 10 (parallel [
            (set (reg:DI 106 [ D.5002 ])
                (ashift:DI (reg:DI 105 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))
(insn 117 116 118 10 (parallel [
            (set (reg:DI 107 [ D.5006 ])
                (plus:DI (reg:DI 106 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (nil))
(insn 118 117 119 10 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 -1
     (nil))
(insn 119 118 120 10 (parallel [
            (set (reg/f:DI 108 [ D.5003 ])
                (plus:DI (reg:DI 107 [ D.5006 ])
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 107 [ D.5006 ]))
        (nil)))
(insn 120 119 121 10 (set (reg/f:DI 109 [ D.5004 ])
        (mem/f:DI (reg/f:DI 108 [ D.5003 ]) [0 *_59+0 S8 A64])) mSector.c:155 -1
     (nil))
(insn 121 120 122 10 (set (reg:XF 110 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 109 [ D.5004 ])
                (const_int 48 [0x30])) [0 MEM[(long double *)_60 + 48B]+0 S16 A128])) mSector.c:155 -1
     (nil))
(insn 122 121 123 10 (set (mem:XF (reg/f:DI 104 [ D.5004 ]) [0 *_55+0 S16 A128])
        (reg:XF 110 [ D.5005 ])) mSector.c:155 -1
     (nil))
(insn 123 122 124 10 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 -1
     (nil))
(insn 124 123 125 10 (set (reg:DI 111 [ D.5002 ])
        (sign_extend:DI (reg:SI 188))) mSector.c:157 -1
     (nil))
(insn 125 124 126 10 (parallel [
            (set (reg:DI 112 [ D.5002 ])
                (ashift:DI (reg:DI 111 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))
(insn 126 125 127 10 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:157 -1
     (nil))
(insn 127 126 128 10 (parallel [
            (set (reg/f:DI 113 [ D.5004 ])
                (plus:DI (reg:DI 112 [ D.5002 ])
                    (reg/f:DI 189)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 112 [ D.5002 ]))
        (nil)))
(insn 128 127 129 10 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:157 -1
     (nil))
(insn 129 128 130 10 (set (reg/f:DI 114 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 190)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:157 -1
     (nil))
(insn 130 129 131 10 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 -1
     (nil))
(insn 131 130 132 10 (set (reg:DI 115 [ D.5002 ])
        (sign_extend:DI (reg:SI 191))) mSector.c:157 -1
     (nil))
(insn 132 131 133 10 (parallel [
            (set (reg:DI 116 [ D.5002 ])
                (ashift:DI (reg:DI 115 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))
(insn 133 132 134 10 (parallel [
            (set (reg:DI 117 [ D.5006 ])
                (plus:DI (reg:DI 116 [ D.5002 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))
(insn 134 133 135 10 (parallel [
            (set (reg/f:DI 118 [ D.5004 ])
                (plus:DI (reg/f:DI 114 [ D.5004 ])
                    (reg:DI 117 [ D.5006 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 -1
     (nil))
(insn 135 134 136 10 (set (reg:XF 119 [ D.5005 ])
        (mem:XF (reg/f:DI 118 [ D.5004 ]) [0 *_69+0 S16 A128])) mSector.c:157 -1
     (nil))
(insn 136 135 137 10 (set (mem:XF (reg/f:DI 113 [ D.5004 ]) [0 *_64+0 S16 A128])
        (reg:XF 119 [ D.5005 ])) mSector.c:157 -1
     (nil))
(jump_insn 137 136 138 10 (set (pc)
        (label_ref 179)) mSector.c:161 -1
     (nil)
 -> 179)
;;  succ:       14

(barrier 138 137 184)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 184 138 139 11 73 "" [1 uses])
(note 139 184 140 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 11 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:162 -1
     (nil))
(insn 141 140 142 11 (set (reg:SI 122 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 192)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:162 -1
     (nil))
(insn 142 141 143 11 (parallel [
            (set (reg:SI 123 [ D.5001 ])
                (plus:SI (reg:SI 122 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:162 -1
     (nil))
(insn 143 142 144 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 123 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:162 -1
     (nil))
(jump_insn 144 143 145 11 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) mSector.c:162 -1
     (nil)
 -> 148)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 145 144 146 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:162 -1
     (nil))
(call_insn 147 146 148 12 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 148 147 149 13 72 "" [1 uses])
(note 149 148 150 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 13 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 -1
     (nil))
(insn 151 150 152 13 (set (reg:DI 124 [ D.5006 ])
        (sign_extend:DI (reg:SI 193))) mSector.c:163 -1
     (nil))
(insn 152 151 153 13 (parallel [
            (set (reg:DI 125 [ D.5006 ])
                (plus:DI (reg:DI 124 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))
(insn 153 152 154 13 (parallel [
            (set (reg:DI 126 [ D.5006 ])
                (ashift:DI (reg:DI 125 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))
(insn 154 153 155 13 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:163 -1
     (nil))
(insn 155 154 156 13 (parallel [
            (set (reg/f:DI 127 [ D.5003 ])
                (plus:DI (reg:DI 126 [ D.5006 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 126 [ D.5006 ]))
        (nil)))
(insn 156 155 157 13 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:163 -1
     (nil))
(insn 157 156 158 13 (set (reg/f:DI 128 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 195)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:163 -1
     (nil))
(insn 158 157 159 13 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 -1
     (nil))
(insn 159 158 160 13 (set (reg:DI 129 [ D.5002 ])
        (sign_extend:DI (reg:SI 196))) mSector.c:163 -1
     (nil))
(insn 160 159 161 13 (parallel [
            (set (reg:DI 130 [ D.5002 ])
                (ashift:DI (reg:DI 129 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))
(insn 161 160 162 13 (parallel [
            (set (reg/f:DI 131 [ D.5003 ])
                (plus:DI (reg/f:DI 128 [ D.5003 ])
                    (reg:DI 130 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 -1
     (nil))
(insn 162 161 163 13 (set (reg/f:DI 132 [ D.5004 ])
        (mem/f:DI (reg/f:DI 131 [ D.5003 ]) [0 *_82+0 S8 A64])) mSector.c:163 -1
     (nil))
(insn 163 162 164 13 (set (mem/f:DI (reg/f:DI 127 [ D.5003 ]) [0 *_78+0 S8 A64])
        (reg/f:DI 132 [ D.5004 ])) mSector.c:163 -1
     (nil))
(insn 164 163 165 13 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 -1
     (nil))
(insn 165 164 166 13 (set (reg:DI 133 [ D.5006 ])
        (sign_extend:DI (reg:SI 197))) mSector.c:164 -1
     (nil))
(insn 166 165 167 13 (parallel [
            (set (reg:DI 134 [ D.5006 ])
                (plus:DI (reg:DI 133 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))
(insn 167 166 168 13 (parallel [
            (set (reg:DI 135 [ D.5006 ])
                (ashift:DI (reg:DI 134 [ D.5006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))
(insn 168 167 169 13 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:164 -1
     (nil))
(insn 169 168 170 13 (parallel [
            (set (reg/f:DI 136 [ D.5004 ])
                (plus:DI (reg:DI 135 [ D.5006 ])
                    (reg/f:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 135 [ D.5006 ]))
        (nil)))
(insn 170 169 171 13 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:164 -1
     (nil))
(insn 171 170 172 13 (set (reg/f:DI 137 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:164 -1
     (nil))
(insn 172 171 173 13 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 -1
     (nil))
(insn 173 172 174 13 (set (reg:DI 138 [ D.5002 ])
        (sign_extend:DI (reg:SI 200))) mSector.c:164 -1
     (nil))
(insn 174 173 175 13 (parallel [
            (set (reg:DI 139 [ D.5002 ])
                (ashift:DI (reg:DI 138 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))
(insn 175 174 176 13 (parallel [
            (set (reg/f:DI 140 [ D.5004 ])
                (plus:DI (reg/f:DI 137 [ D.5004 ])
                    (reg:DI 139 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 -1
     (nil))
(insn 176 175 177 13 (set (reg:XF 141 [ D.5005 ])
        (mem:XF (reg/f:DI 140 [ D.5004 ]) [0 *_91+0 S16 A128])) mSector.c:164 -1
     (nil))
(insn 177 176 178 13 (set (mem:XF (reg/f:DI 136 [ D.5004 ]) [0 *_87+0 S16 A128])
        (reg:XF 141 [ D.5005 ])) mSector.c:164 -1
     (nil))
(insn 178 177 179 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 -1
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              13 (FALLTHRU,DFS_BACK)
(code_label 179 178 180 14 71 "" [1 uses])
(note 180 179 181 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 14 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:161 -1
     (nil))
(insn 182 181 183 14 (set (reg:SI 120 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 201)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:161 -1
     (nil))
(insn 183 182 185 14 (parallel [
            (set (reg:SI 121 [ D.5001 ])
                (plus:SI (reg:SI 120 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 -1
     (nil))
(insn 185 183 186 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 121 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:161 -1
     (nil))
(jump_insn 186 185 187 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:161 -1
     (nil)
 -> 184)
;;  succ:       11
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 187 186 188 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 15 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:167 -1
     (nil))
(insn 189 188 190 15 (set (reg:SI 142 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 202)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:167 -1
     (nil))
(insn 190 189 191 15 (parallel [
            (set (reg:SI 143 [ D.5001 ])
                (plus:SI (reg:SI 142 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:167 -1
     (nil))
(insn 191 190 192 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:167 -1
     (nil))
(jump_insn 192 191 193 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) mSector.c:167 -1
     (nil)
 -> 196)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 193 192 194 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:167 -1
     (nil))
(call_insn 195 194 196 16 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:167 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 196 195 197 17 74 "" [1 uses])
(note 197 196 198 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 17 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 -1
     (nil))
(insn 199 198 200 17 (set (reg:DI 144 [ D.5006 ])
        (sign_extend:DI (reg:SI 203))) mSector.c:168 -1
     (nil))
(insn 200 199 201 17 (parallel [
            (set (reg:DI 145 [ D.5006 ])
                (plus:DI (reg:DI 144 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))
(insn 201 200 202 17 (parallel [
            (set (reg:DI 146 [ D.5006 ])
                (ashift:DI (reg:DI 145 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))
(insn 202 201 203 17 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:168 -1
     (nil))
(insn 203 202 204 17 (parallel [
            (set (reg/f:DI 147 [ D.5003 ])
                (plus:DI (reg:DI 146 [ D.5006 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 146 [ D.5006 ]))
        (nil)))
(insn 204 203 205 17 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:168 -1
     (nil))
(insn 205 204 206 17 (set (reg/f:DI 148 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 205)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:168 -1
     (nil))
(insn 206 205 207 17 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 -1
     (nil))
(insn 207 206 208 17 (set (reg:DI 149 [ D.5002 ])
        (sign_extend:DI (reg:SI 206))) mSector.c:168 -1
     (nil))
(insn 208 207 209 17 (parallel [
            (set (reg:DI 150 [ D.5002 ])
                (ashift:DI (reg:DI 149 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))
(insn 209 208 210 17 (parallel [
            (set (reg/f:DI 151 [ D.5003 ])
                (plus:DI (reg/f:DI 148 [ D.5003 ])
                    (reg:DI 150 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 -1
     (nil))
(insn 210 209 211 17 (set (reg/f:DI 152 [ D.5004 ])
        (mem/f:DI (reg/f:DI 151 [ D.5003 ]) [0 *_103+0 S8 A64])) mSector.c:168 -1
     (nil))
(insn 211 210 212 17 (set (mem/f:DI (reg/f:DI 147 [ D.5003 ]) [0 *_99+0 S8 A64])
        (reg/f:DI 152 [ D.5004 ])) mSector.c:168 -1
     (nil))
(insn 212 211 213 17 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:171 -1
     (nil))
(insn 213 212 214 17 (set (reg/f:DI 153 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 207)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:171 -1
     (nil))
(insn 214 213 215 17 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.5003 ])) mSector.c:171 -1
     (nil))
(call_insn 215 214 216 17 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 216 215 217 17 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:172 -1
     (nil))
(insn 217 216 218 17 (set (reg/f:DI 154 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:172 -1
     (nil))
(insn 218 217 219 17 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.5004 ])) mSector.c:172 -1
     (nil))
(call_insn 219 218 220 17 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 220 219 221 17 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:175 -1
     (nil))
(insn 221 220 222 17 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:175 -1
     (nil))
(insn 222 221 223 17 (set (mem/f/j:DI (plus:DI (reg/f:DI 209)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])
        (reg/f:DI 210)) mSector.c:175 -1
     (nil))
(insn 223 222 224 17 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:176 -1
     (nil))
(insn 224 223 225 17 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:176 -1
     (nil))
(insn 225 224 226 17 (set (mem/f/j:DI (plus:DI (reg/f:DI 211)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])
        (reg/f:DI 212)) mSector.c:176 -1
     (nil))
(insn 226 225 227 17 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 -1
     (nil))
(insn 227 226 228 17 (set (reg:SI 155 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 213)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:179 -1
     (nil))
(insn 228 227 229 17 (parallel [
            (set (reg:SI 156 [ D.5001 ])
                (plus:SI (reg:SI 155 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:179 -1
     (nil))
(insn 229 228 230 17 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 -1
     (nil))
(insn 230 229 231 17 (set (mem/j:SI (plus:DI (reg/f:DI 214)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])
        (reg:SI 156 [ D.5001 ])) mSector.c:179 -1
     (nil))
(insn 231 230 232 17 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 -1
     (nil))
(insn 232 231 233 17 (set (reg:SI 157 [ D.5001 ])
        (mem:SI (reg/f:DI 215) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:180 -1
     (nil))
(insn 233 232 234 17 (parallel [
            (set (reg:SI 158 [ D.5001 ])
                (plus:SI (reg:SI 157 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:180 -1
     (nil))
(insn 234 233 235 17 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 -1
     (nil))
(insn 235 234 236 17 (set (mem:SI (reg/f:DI 216) [0 *st_indx_12(D)+0 S4 A32])
        (reg:SI 158 [ D.5001 ])) mSector.c:180 -1
     (nil))
(insn 236 235 239 17 (set (reg:SI 159 [ D.5001 ])
        (const_int 1 [0x1])) mSector.c:182 -1
     (nil))
(insn 239 236 243 17 (set (reg:SI 160 [ <retval> ])
        (reg:SI 159 [ D.5001 ])) mSector.c:182 -1
     (nil))
(insn 243 239 246 17 (set (reg/i:SI 0 ax)
        (reg:SI 160 [ <retval> ])) mSector.c:183 -1
     (nil))
(insn 246 243 0 17 (use (reg/i:SI 0 ax)) mSector.c:183 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _add_nvp_bound (_add_nvp_bound, funcdef_no=10, decl_uid=4061, cgraph_uid=10)

_add_nvp_bound (struct Aircraft_t * * f, int i, int j, long double * * bound, int k)
{
  long double * p;
  int st_indx;
  int D.4558;
  struct Aircraft_t * D.4557;
  long unsigned int D.4556;
  long unsigned int D.4555;
  struct Aircraft_t * D.4554;
  long double * D.4553;
  long double * * D.4552;
  long unsigned int D.4551;
  long unsigned int D.4550;
  long double * * D.4549;
  struct Aircraft_t * D.4548;
  long unsigned int D.4547;
  long unsigned int D.4546;
  struct Aircraft_t * D.4545;
  long double * D.4544;
  long double * * D.4543;
  sizetype D.4542;
  sizetype D.4541;
  sizetype D.4540;
  long double * * D.4539;
  struct Aircraft_t * D.4538;
  long unsigned int D.4537;
  long unsigned int D.4536;
  struct Aircraft_t * D.4535;
  long double * D.4534;
  long double * * D.4533;
  long unsigned int D.4532;
  long unsigned int D.4531;
  long double * D.4530;
  long double * * D.4529;
  sizetype D.4528;
  sizetype D.4527;
  sizetype D.4526;
  int st_indx.2;
  sizetype _5;
  sizetype _6;
  sizetype _7;
  long double * * _9;
  long double * _10;
  long unsigned int _11;
  long unsigned int _12;
  long double * * _13;
  long double * _14;
  struct Aircraft_t * _16;
  long unsigned int _18;
  long unsigned int _19;
  struct Aircraft_t * _20;
  long double * * _21;
  sizetype _22;
  sizetype _23;
  sizetype _24;
  long double * * _25;
  long double * _26;
  struct Aircraft_t * _27;
  long unsigned int _28;
  long unsigned int _29;
  struct Aircraft_t * _30;
  long double * * _31;
  long unsigned int _32;
  long unsigned int _33;
  long double * * _34;
  long double * _35;
  struct Aircraft_t * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct Aircraft_t * _39;
  int _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_indx.2_2 = j_1(D) + 1;
  st_indx = st_indx.2_2;
  p_3 = falloc_vec (4);
  _5 = (sizetype) k_4(D);
  _6 = _5 + 1;
  _7 = _6 * 8;
  _9 = bound_8(D) + _7;
  _10 = *_9;
  _11 = (long unsigned int) k_4(D);
  _12 = _11 * 8;
  _13 = bound_8(D) + _12;
  _14 = *_13;
  _16 = *f_15(D);
  _18 = (long unsigned int) i_17(D);
  _19 = _18 * 160;
  _20 = _16 + _19;
  _21 = _20->nvp;
  _22 = (sizetype) j_1(D);
  _23 = _22 + 1;
  _24 = _23 * 8;
  _25 = _21 + _24;
  _26 = *_25;
  _27 = *f_15(D);
  _28 = (long unsigned int) i_17(D);
  _29 = _28 * 160;
  _30 = _27 + _29;
  _31 = _30->nvp;
  _32 = (long unsigned int) j_1(D);
  _33 = _32 * 8;
  _34 = _31 + _33;
  _35 = *_34;
  find_intersection (_35, _26, _14, _10, p_3);
  _36 = *f_15(D);
  _37 = (long unsigned int) i_17(D);
  _38 = _37 * 160;
  _39 = _36 + _38;
  add_nvp (_39, &st_indx, p_3);
  _40 = 1;
  st_indx ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _40;
;;    succ:       EXIT

}



Partition map 

Partition 1 (j_1(D) - 1 )
Partition 2 (st_indx.2_2 - 2 )
Partition 3 (p_3 - 3 )
Partition 4 (k_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (bound_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (f_15(D) - 15 )
Partition 16 (_16 - 16 )
Partition 17 (i_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )


Partition map 

Partition 0 (j_1(D) - 1 )
Partition 1 (k_4(D) - 4 )
Partition 2 (bound_8(D) - 8 )
Partition 3 (f_15(D) - 15 )
Partition 4 (i_17(D) - 17 )


Live on entry to BB2 : j_1(D)  k_4(D)  bound_8(D)  f_15(D)  i_17(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (j_1(D) - 1 )
Partition 1 (k_4(D) - 4 )
Partition 2 (bound_8(D) - 8 )
Partition 3 (f_15(D) - 15 )
Partition 4 (i_17(D) - 17 )

After Coalescing:

Partition map 

Partition 0 (j_1(D) - 1 )
Partition 1 (st_indx.2_2 - 2 )
Partition 2 (p_3 - 3 )
Partition 3 (k_4(D) - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (bound_8(D) - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (f_15(D) - 15 )
Partition 15 (_16 - 16 )
Partition 16 (i_17(D) - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )

_add_nvp_bound (struct Aircraft_t * * f, int i, int j, long double * * bound, int k)
{
  long double * p;
  int st_indx;
  int D.4558;
  struct Aircraft_t * D.4557;
  long unsigned int D.4556;
  long unsigned int D.4555;
  struct Aircraft_t * D.4554;
  long double * D.4553;
  long double * * D.4552;
  long unsigned int D.4551;
  long unsigned int D.4550;
  long double * * D.4549;
  struct Aircraft_t * D.4548;
  long unsigned int D.4547;
  long unsigned int D.4546;
  struct Aircraft_t * D.4545;
  long double * D.4544;
  long double * * D.4543;
  sizetype D.4542;
  sizetype D.4541;
  sizetype D.4540;
  long double * * D.4539;
  struct Aircraft_t * D.4538;
  long unsigned int D.4537;
  long unsigned int D.4536;
  struct Aircraft_t * D.4535;
  long double * D.4534;
  long double * * D.4533;
  long unsigned int D.4532;
  long unsigned int D.4531;
  long double * D.4530;
  long double * * D.4529;
  sizetype D.4528;
  sizetype D.4527;
  sizetype D.4526;
  int st_indx.2;
  sizetype _5;
  sizetype _6;
  sizetype _7;
  long double * * _9;
  long double * _10;
  long unsigned int _11;
  long unsigned int _12;
  long double * * _13;
  long double * _14;
  struct Aircraft_t * _16;
  long unsigned int _18;
  long unsigned int _19;
  struct Aircraft_t * _20;
  long double * * _21;
  sizetype _22;
  sizetype _23;
  sizetype _24;
  long double * * _25;
  long double * _26;
  struct Aircraft_t * _27;
  long unsigned int _28;
  long unsigned int _29;
  struct Aircraft_t * _30;
  long double * * _31;
  long unsigned int _32;
  long unsigned int _33;
  long double * * _34;
  long double * _35;
  struct Aircraft_t * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct Aircraft_t * _39;
  int _40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_indx.2_2 = j_1(D) + 1;
  st_indx = st_indx.2_2;
  p_3 = falloc_vec (4);
  _5 = (sizetype) k_4(D);
  _6 = _5 + 1;
  _7 = _6 * 8;
  _9 = bound_8(D) + _7;
  _10 = *_9;
  _11 = (long unsigned int) k_4(D);
  _12 = _11 * 8;
  _13 = bound_8(D) + _12;
  _14 = *_13;
  _16 = *f_15(D);
  _18 = (long unsigned int) i_17(D);
  _19 = _18 * 160;
  _20 = _16 + _19;
  _21 = _20->nvp;
  _22 = (sizetype) j_1(D);
  _23 = _22 + 1;
  _24 = _23 * 8;
  _25 = _21 + _24;
  _26 = *_25;
  _27 = *f_15(D);
  _28 = (long unsigned int) i_17(D);
  _29 = _28 * 160;
  _30 = _27 + _29;
  _31 = _30->nvp;
  _32 = (long unsigned int) j_1(D);
  _33 = _32 * 8;
  _34 = _31 + _33;
  _35 = *_34;
  find_intersection (_35, _26, _14, _10, p_3);
  _36 = *f_15(D);
  _37 = (long unsigned int) i_17(D);
  _38 = _37 * 160;
  _39 = _36 + _38;
  add_nvp (_39, &st_indx, p_3);
  _40 = 1;
  st_indx ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _40;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	p_3
Partition 1: size 4 align 4
	st_indx

;; Generating RTL for gimple basic block 2

;; st_indx.2_2 = j_1(D) + 1;

(insn 10 9 11 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:186 -1
     (nil))

(insn 11 10 0 (parallel [
            (set (reg:SI 59 [ st_indx.2 ])
                (plus:SI (reg:SI 94)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:186 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; st_indx = st_indx.2_2;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 st_indx+0 S4 A32])
        (reg:SI 59 [ st_indx.2 ])) mSector.c:186 -1
     (nil))

;; p_3 = falloc_vec (4);

(insn 13 12 14 (set (reg:SI 5 di)
        (const_int 4 [0x4])) mSector.c:187 -1
     (nil))

(call_insn 14 13 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:187 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(insn 15 14 16 (set (reg:DI 95)
        (reg:DI 0 ax)) mSector.c:187 -1
     (nil))

(insn 16 15 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 95)) mSector.c:187 -1
     (nil))

;; _5 = (sizetype) k_4(D);

(insn 17 16 18 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 18 17 0 (set (reg:DI 60 [ D.5008 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:189 -1
     (nil))

;; _6 = _5 + 1;

(insn 19 18 0 (parallel [
            (set (reg:DI 61 [ D.5008 ])
                (plus:DI (reg:DI 60 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _7 = _6 * 8;

(insn 20 19 0 (parallel [
            (set (reg:DI 62 [ D.5008 ])
                (ashift:DI (reg:DI 61 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _9 = bound_8(D) + _7;

(insn 21 20 22 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg/f:DI 63 [ D.5009 ])
                (plus:DI (reg:DI 62 [ D.5008 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5008 ]))
        (nil)))

;; _10 = *_9;

(insn 23 22 0 (set (reg/f:DI 64 [ D.5010 ])
        (mem/f:DI (reg/f:DI 63 [ D.5009 ]) [0 *_9+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _11 = (long unsigned int) k_4(D);

(insn 24 23 25 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 25 24 0 (set (reg:DI 65 [ D.5011 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:189 -1
     (nil))

;; _12 = _11 * 8;

(insn 26 25 0 (parallel [
            (set (reg:DI 66 [ D.5011 ])
                (ashift:DI (reg:DI 65 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _13 = bound_8(D) + _12;

(insn 27 26 28 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 -1
     (nil))

(insn 28 27 0 (parallel [
            (set (reg/f:DI 67 [ D.5009 ])
                (plus:DI (reg:DI 66 [ D.5011 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5011 ]))
        (nil)))

;; _14 = *_13;

(insn 29 28 0 (set (reg/f:DI 68 [ D.5010 ])
        (mem/f:DI (reg/f:DI 67 [ D.5009 ]) [0 *_13+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _16 = *f_15(D);

(insn 30 29 31 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 -1
     (nil))

(insn 31 30 0 (set (reg/f:DI 69 [ D.5012 ])
        (mem/f:DI (reg/f:DI 100) [0 *f_15(D)+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _18 = (long unsigned int) i_17(D);

(insn 32 31 33 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 33 32 0 (set (reg:DI 70 [ D.5011 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:189 -1
     (nil))

;; _19 = _18 * 160;

(insn 34 33 35 (set (reg:DI 102)
        (reg:DI 70 [ D.5011 ])) mSector.c:189 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 70 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 37 36 38 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

(insn 38 37 39 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 39 38 0 (set (reg:DI 71 [ D.5011 ])
        (reg:DI 102)) mSector.c:189 -1
     (nil))

;; _20 = _16 + _19;

(insn 40 39 0 (parallel [
            (set (reg/f:DI 72 [ D.5012 ])
                (plus:DI (reg/f:DI 69 [ D.5012 ])
                    (reg:DI 71 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _21 = _20->nvp;

(insn 41 40 0 (set (reg/f:DI 73 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72 [ D.5012 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _22 = (sizetype) j_1(D);

(insn 42 41 43 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 43 42 0 (set (reg:DI 74 [ D.5008 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:189 -1
     (nil))

;; _23 = _22 + 1;

(insn 44 43 0 (parallel [
            (set (reg:DI 75 [ D.5008 ])
                (plus:DI (reg:DI 74 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _24 = _23 * 8;

(insn 45 44 0 (parallel [
            (set (reg:DI 76 [ D.5008 ])
                (ashift:DI (reg:DI 75 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _25 = _21 + _24;

(insn 46 45 0 (parallel [
            (set (reg/f:DI 77 [ D.5009 ])
                (plus:DI (reg/f:DI 73 [ D.5009 ])
                    (reg:DI 76 [ D.5008 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _26 = *_25;

(insn 47 46 0 (set (reg/f:DI 78 [ D.5010 ])
        (mem/f:DI (reg/f:DI 77 [ D.5009 ]) [0 *_25+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _27 = *f_15(D);

(insn 48 47 49 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 -1
     (nil))

(insn 49 48 0 (set (reg/f:DI 79 [ D.5012 ])
        (mem/f:DI (reg/f:DI 105) [0 *f_15(D)+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _28 = (long unsigned int) i_17(D);

(insn 50 49 51 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 51 50 0 (set (reg:DI 80 [ D.5011 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:189 -1
     (nil))

;; _29 = _28 * 160;

(insn 52 51 53 (set (reg:DI 107)
        (reg:DI 80 [ D.5011 ])) mSector.c:189 -1
     (nil))

(insn 53 52 54 (parallel [
            (set (reg:DI 107)
                (ashift:DI (reg:DI 107)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

(insn 54 53 55 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 107)
                    (reg:DI 80 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 55 54 56 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 107)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

(insn 56 55 57 (set (reg:DI 107)
        (reg:DI 108)) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 57 56 0 (set (reg:DI 81 [ D.5011 ])
        (reg:DI 107)) mSector.c:189 -1
     (nil))

;; _30 = _27 + _29;

(insn 58 57 0 (parallel [
            (set (reg/f:DI 82 [ D.5012 ])
                (plus:DI (reg/f:DI 79 [ D.5012 ])
                    (reg:DI 81 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _31 = _30->nvp;

(insn 59 58 0 (set (reg/f:DI 83 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82 [ D.5012 ])
                (const_int 8 [0x8])) [0 _30->nvp+0 S8 A64])) mSector.c:189 -1
     (nil))

;; _32 = (long unsigned int) j_1(D);

(insn 60 59 61 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 -1
     (nil))

(insn 61 60 0 (set (reg:DI 84 [ D.5011 ])
        (sign_extend:DI (reg:SI 109))) mSector.c:189 -1
     (nil))

;; _33 = _32 * 8;

(insn 62 61 0 (parallel [
            (set (reg:DI 85 [ D.5011 ])
                (ashift:DI (reg:DI 84 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _34 = _31 + _33;

(insn 63 62 0 (parallel [
            (set (reg/f:DI 86 [ D.5009 ])
                (plus:DI (reg/f:DI 83 [ D.5009 ])
                    (reg:DI 85 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))

;; _35 = *_34;

(insn 64 63 0 (set (reg/f:DI 87 [ D.5010 ])
        (mem/f:DI (reg/f:DI 86 [ D.5009 ]) [0 *_34+0 S8 A64])) mSector.c:189 -1
     (nil))

;; find_intersection (_35, _26, _14, _10, p_3);

(insn 65 64 66 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:189 -1
     (nil))

(insn 66 65 67 (set (reg:DI 37 r8)
        (reg:DI 110)) mSector.c:189 -1
     (nil))

(insn 67 66 68 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5010 ])) mSector.c:189 -1
     (nil))

(insn 68 67 69 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5010 ])) mSector.c:189 -1
     (nil))

(insn 69 68 70 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.5010 ])) mSector.c:189 -1
     (nil))

(insn 70 69 71 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5010 ])) mSector.c:189 -1
     (nil))

(call_insn 71 70 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_intersection") [flags 0x41]  <function_decl 0x7f44d29fc200 find_intersection>) [0 find_intersection S1 A8])
            (const_int 0 [0]))) mSector.c:189 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))

;; _36 = *f_15(D);

(insn 72 71 73 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:190 -1
     (nil))

(insn 73 72 0 (set (reg/f:DI 88 [ D.5012 ])
        (mem/f:DI (reg/f:DI 111) [0 *f_15(D)+0 S8 A64])) mSector.c:190 -1
     (nil))

;; _37 = (long unsigned int) i_17(D);

(insn 74 73 75 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:190 -1
     (nil))

(insn 75 74 0 (set (reg:DI 89 [ D.5011 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:190 -1
     (nil))

;; _38 = _37 * 160;

(insn 76 75 77 (set (reg:DI 113)
        (reg:DI 89 [ D.5011 ])) mSector.c:190 -1
     (nil))

(insn 77 76 78 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))

(insn 78 77 79 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg:DI 113)
                    (reg:DI 89 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 79 78 80 (parallel [
            (set (reg:DI 114)
                (ashift:DI (reg:DI 113)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))

(insn 80 79 81 (set (reg:DI 113)
        (reg:DI 114)) mSector.c:190 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 81 80 0 (set (reg:DI 90 [ D.5011 ])
        (reg:DI 113)) mSector.c:190 -1
     (nil))

;; _39 = _36 + _38;

(insn 82 81 0 (parallel [
            (set (reg/f:DI 91 [ D.5012 ])
                (plus:DI (reg/f:DI 88 [ D.5012 ])
                    (reg:DI 90 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))

;; add_nvp (_39, &st_indx, p_3);

(insn 83 82 84 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:190 -1
     (nil))

(insn 84 83 85 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))

(insn 85 84 86 (set (reg:DI 1 dx)
        (reg:DI 115)) mSector.c:190 -1
     (nil))

(insn 86 85 87 (set (reg:DI 4 si)
        (reg:DI 116)) mSector.c:190 -1
     (nil))

(insn 87 86 88 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5012 ])) mSector.c:190 -1
     (nil))

(call_insn 88 87 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nvp") [flags 0x3]  <function_decl 0x7f44d2a01300 add_nvp>) [0 add_nvp S1 A8])
            (const_int 0 [0]))) mSector.c:190 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; _40 = 1;

(insn 89 88 0 (set (reg:SI 92 [ D.5013 ])
        (const_int 1 [0x1])) mSector.c:191 -1
     (nil))

;; st_indx ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L1>:

(code_label 90 89 91 77 "" [0 uses])

(note 91 90 0 NOTE_INSN_BASIC_BLOCK)

;; return _40;

(insn 92 91 93 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5013 ])) mSector.c:191 -1
     (nil))

(jump_insn 93 92 94 (set (pc)
        (label_ref 0)) mSector.c:191 -1
     (nil))

(barrier 94 93 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:185 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 4 si [ i ])) mSector.c:185 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
        (reg:SI 1 dx [ j ])) mSector.c:185 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
        (reg:DI 2 cx [ bound ])) mSector.c:185 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])
        (reg:SI 37 r8 [ k ])) mSector.c:185 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:186 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 59 [ st_indx.2 ])
                (plus:SI (reg:SI 94)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:186 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 st_indx+0 S4 A32])
        (reg:SI 59 [ st_indx.2 ])) mSector.c:186 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 4 [0x4])) mSector.c:187 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:187 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 95)
        (reg:DI 0 ax)) mSector.c:187 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 95)) mSector.c:187 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 60 [ D.5008 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:189 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 61 [ D.5008 ])
                (plus:DI (reg:DI 60 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 62 [ D.5008 ])
                (ashift:DI (reg:DI 61 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 63 [ D.5009 ])
                (plus:DI (reg:DI 62 [ D.5008 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5008 ]))
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 64 [ D.5010 ])
        (mem/f:DI (reg/f:DI 63 [ D.5009 ]) [0 *_9+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 65 [ D.5011 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:189 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 66 [ D.5011 ])
                (ashift:DI (reg:DI 65 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 67 [ D.5009 ])
                (plus:DI (reg:DI 66 [ D.5011 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5011 ]))
        (nil)))
(insn 29 28 30 2 (set (reg/f:DI 68 [ D.5010 ])
        (mem/f:DI (reg/f:DI 67 [ D.5009 ]) [0 *_13+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 69 [ D.5012 ])
        (mem/f:DI (reg/f:DI 100) [0 *f_15(D)+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 70 [ D.5011 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:189 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 102)
        (reg:DI 70 [ D.5011 ])) mSector.c:189 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 70 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 71 [ D.5011 ])
        (reg:DI 102)) mSector.c:189 -1
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:DI 72 [ D.5012 ])
                (plus:DI (reg/f:DI 69 [ D.5012 ])
                    (reg:DI 71 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 73 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72 [ D.5012 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 42 41 43 2 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 74 [ D.5008 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:189 -1
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg:DI 75 [ D.5008 ])
                (plus:DI (reg:DI 74 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 45 44 46 2 (parallel [
            (set (reg:DI 76 [ D.5008 ])
                (ashift:DI (reg:DI 75 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 46 45 47 2 (parallel [
            (set (reg/f:DI 77 [ D.5009 ])
                (plus:DI (reg/f:DI 73 [ D.5009 ])
                    (reg:DI 76 [ D.5008 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 78 [ D.5010 ])
        (mem/f:DI (reg/f:DI 77 [ D.5009 ]) [0 *_25+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 48 47 49 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 79 [ D.5012 ])
        (mem/f:DI (reg/f:DI 105) [0 *f_15(D)+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 50 49 51 2 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 51 50 52 2 (set (reg:DI 80 [ D.5011 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:189 -1
     (nil))
(insn 52 51 53 2 (set (reg:DI 107)
        (reg:DI 80 [ D.5011 ])) mSector.c:189 -1
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 107)
                (ashift:DI (reg:DI 107)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 107)
                    (reg:DI 80 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 55 54 56 2 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 107)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 56 55 57 2 (set (reg:DI 107)
        (reg:DI 108)) mSector.c:189 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 57 56 58 2 (set (reg:DI 81 [ D.5011 ])
        (reg:DI 107)) mSector.c:189 -1
     (nil))
(insn 58 57 59 2 (parallel [
            (set (reg/f:DI 82 [ D.5012 ])
                (plus:DI (reg/f:DI 79 [ D.5012 ])
                    (reg:DI 81 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 59 58 60 2 (set (reg/f:DI 83 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82 [ D.5012 ])
                (const_int 8 [0x8])) [0 _30->nvp+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 60 59 61 2 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 -1
     (nil))
(insn 61 60 62 2 (set (reg:DI 84 [ D.5011 ])
        (sign_extend:DI (reg:SI 109))) mSector.c:189 -1
     (nil))
(insn 62 61 63 2 (parallel [
            (set (reg:DI 85 [ D.5011 ])
                (ashift:DI (reg:DI 84 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 63 62 64 2 (parallel [
            (set (reg/f:DI 86 [ D.5009 ])
                (plus:DI (reg/f:DI 83 [ D.5009 ])
                    (reg:DI 85 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 -1
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 87 [ D.5010 ])
        (mem/f:DI (reg/f:DI 86 [ D.5009 ]) [0 *_34+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 65 64 66 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:189 -1
     (nil))
(insn 66 65 67 2 (set (reg:DI 37 r8)
        (reg:DI 110)) mSector.c:189 -1
     (nil))
(insn 67 66 68 2 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5010 ])) mSector.c:189 -1
     (nil))
(insn 68 67 69 2 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5010 ])) mSector.c:189 -1
     (nil))
(insn 69 68 70 2 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.5010 ])) mSector.c:189 -1
     (nil))
(insn 70 69 71 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5010 ])) mSector.c:189 -1
     (nil))
(call_insn 71 70 72 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_intersection") [flags 0x41]  <function_decl 0x7f44d29fc200 find_intersection>) [0 find_intersection S1 A8])
            (const_int 0 [0]))) mSector.c:189 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 72 71 73 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:190 -1
     (nil))
(insn 73 72 74 2 (set (reg/f:DI 88 [ D.5012 ])
        (mem/f:DI (reg/f:DI 111) [0 *f_15(D)+0 S8 A64])) mSector.c:190 -1
     (nil))
(insn 74 73 75 2 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:190 -1
     (nil))
(insn 75 74 76 2 (set (reg:DI 89 [ D.5011 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:190 -1
     (nil))
(insn 76 75 77 2 (set (reg:DI 113)
        (reg:DI 89 [ D.5011 ])) mSector.c:190 -1
     (nil))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg:DI 113)
                    (reg:DI 89 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 79 78 80 2 (parallel [
            (set (reg:DI 114)
                (ashift:DI (reg:DI 113)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))
(insn 80 79 81 2 (set (reg:DI 113)
        (reg:DI 114)) mSector.c:190 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 81 80 82 2 (set (reg:DI 90 [ D.5011 ])
        (reg:DI 113)) mSector.c:190 -1
     (nil))
(insn 82 81 83 2 (parallel [
            (set (reg/f:DI 91 [ D.5012 ])
                (plus:DI (reg/f:DI 88 [ D.5012 ])
                    (reg:DI 90 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))
(insn 83 82 84 2 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:190 -1
     (nil))
(insn 84 83 85 2 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 -1
     (nil))
(insn 85 84 86 2 (set (reg:DI 1 dx)
        (reg:DI 115)) mSector.c:190 -1
     (nil))
(insn 86 85 87 2 (set (reg:DI 4 si)
        (reg:DI 116)) mSector.c:190 -1
     (nil))
(insn 87 86 88 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5012 ])) mSector.c:190 -1
     (nil))
(call_insn 88 87 89 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nvp") [flags 0x3]  <function_decl 0x7f44d2a01300 add_nvp>) [0 add_nvp S1 A8])
            (const_int 0 [0]))) mSector.c:190 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 89 88 92 2 (set (reg:SI 92 [ D.5013 ])
        (const_int 1 [0x1])) mSector.c:191 -1
     (nil))
(insn 92 89 96 2 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5013 ])) mSector.c:191 -1
     (nil))
(insn 96 92 99 2 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:192 -1
     (nil))
(insn 99 96 0 2 (use (reg/i:SI 0 ax)) mSector.c:192 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _is_to_add (_is_to_add, funcdef_no=11, decl_uid=4069, cgraph_uid=11)

_is_to_add (struct Aircraft_t f, int xp, long double * * bound, int k)
{
  int D.4619;
  int D.4616;
  long double * D.4615;
  long double * * D.4614;
  long unsigned int D.4613;
  long unsigned int D.4612;
  long double * D.4611;
  long double * * D.4610;
  sizetype D.4609;
  sizetype D.4608;
  sizetype D.4607;
  long double * D.4606;
  long double * * D.4605;
  long unsigned int D.4604;
  long unsigned int D.4603;
  long double * * D.4602;
  int D.4599;
  long double * D.4598;
  long double * * D.4597;
  long unsigned int D.4596;
  long unsigned int D.4595;
  long double * D.4594;
  long double * * D.4593;
  sizetype D.4592;
  sizetype D.4591;
  sizetype D.4590;
  long double * D.4589;
  long double * * D.4588;
  sizetype D.4587;
  sizetype D.4586;
  sizetype D.4585;
  long double * * D.4584;
  int D.4581;
  long double * D.4580;
  long double * * D.4579;
  long unsigned int D.4578;
  long unsigned int D.4577;
  long double * * D.4576;
  long double * D.4575;
  long double * * D.4574;
  sizetype D.4573;
  sizetype D.4572;
  sizetype D.4571;
  long double * * D.4570;
  long double * D.4569;
  long double * * D.4568;
  long unsigned int D.4567;
  long unsigned int D.4566;
  long double * D.4565;
  long double * * D.4564;
  sizetype D.4563;
  sizetype D.4562;
  sizetype D.4561;
  int _1;
  sizetype _3;
  sizetype _4;
  sizetype _5;
  long double * * _7;
  long double * _8;
  long unsigned int _9;
  long unsigned int _10;
  long double * * _11;
  long double * _12;
  long double * * _13;
  sizetype _15;
  sizetype _16;
  sizetype _17;
  long double * * _18;
  long double * _19;
  long double * * _20;
  long unsigned int _21;
  long unsigned int _22;
  long double * * _23;
  long double * _24;
  int _25;
  long double * * _26;
  sizetype _27;
  sizetype _28;
  sizetype _29;
  long double * * _30;
  long double * _31;
  sizetype _32;
  sizetype _33;
  sizetype _34;
  long double * * _35;
  long double * _36;
  long unsigned int _37;
  long unsigned int _38;
  long double * * _39;
  long double * _40;
  int _41;
  long double * * _42;
  long unsigned int _43;
  long unsigned int _44;
  long double * * _45;
  long double * _46;
  sizetype _47;
  sizetype _48;
  sizetype _49;
  long double * * _50;
  long double * _51;
  long unsigned int _52;
  long unsigned int _53;
  long double * * _54;
  long double * _55;
  int _56;
  int _57;
  int _58;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (sizetype) k_2(D);
  _4 = _3 + 1;
  _5 = _4 * 8;
  _7 = bound_6(D) + _5;
  _8 = *_7;
  _9 = (long unsigned int) k_2(D);
  _10 = _9 * 8;
  _11 = bound_6(D) + _10;
  _12 = *_11;
  _13 = f.nvp;
  _15 = (sizetype) xp_14(D);
  _16 = _15 + 1;
  _17 = _16 * 8;
  _18 = _13 + _17;
  _19 = *_18;
  _20 = f.nvp;
  _21 = (long unsigned int) xp_14(D);
  _22 = _21 * 8;
  _23 = _20 + _22;
  _24 = *_23;
  _25 = segments_intersect (_24, _19, _12, _8);
  if (_25 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  _26 = f.nvp;
  _27 = (sizetype) xp_14(D);
  _28 = _27 + 1;
  _29 = _28 * 8;
  _30 = _26 + _29;
  _31 = *_30;
  _32 = (sizetype) k_2(D);
  _33 = _32 + 1;
  _34 = _33 * 8;
  _35 = bound_6(D) + _34;
  _36 = *_35;
  _37 = (long unsigned int) k_2(D);
  _38 = _37 * 8;
  _39 = bound_6(D) + _38;
  _40 = *_39;
  _41 = isbetween (_40, _36, _31);
  if (_41 == 0)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
  _42 = f.nvp;
  _43 = (long unsigned int) xp_14(D);
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) k_2(D);
  _48 = _47 + 1;
  _49 = _48 * 8;
  _50 = bound_6(D) + _49;
  _51 = *_50;
  _52 = (long unsigned int) k_2(D);
  _53 = _52 * 8;
  _54 = bound_6(D) + _53;
  _55 = *_54;
  _56 = isbetween (_55, _51, _46);
  if (_56 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _57 = 1;
  goto <bb 7> (<L6>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       2
;;                3
;;                4
  _58 = 0;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # _1 = PHI <_57(5), _58(6)>
<L6>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (k_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (bound_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (xp_14(D) - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (k_2(D) - 2 )
Partition 2 (bound_6(D) - 6 )
Partition 3 (xp_14(D) - 14 )
Partition 4 (_57 - 57 )
Partition 5 (_58 - 58 )


Live on entry to BB2 : k_2(D)  bound_6(D)  xp_14(D)  

Live on entry to BB3 : k_2(D)  bound_6(D)  xp_14(D)  

Live on entry to BB4 : k_2(D)  bound_6(D)  xp_14(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (k_2(D) - 2 )
Partition 2 (bound_6(D) - 6 )
Partition 3 (xp_14(D) - 14 )
Partition 4 (_57 - 57 )
Partition 5 (_58 - 58 )

Coalesce list: (1)_1 & (58)_58 [map: 0, 5] : Success -> 0
Coalesce list: (1)_1 & (57)_57 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 57 58 )
Partition 1 (k_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (bound_6(D) - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (xp_14(D) - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )

_is_to_add (struct Aircraft_t f, int xp, long double * * bound, int k)
{
  int D.4619;
  int D.4616;
  long double * D.4615;
  long double * * D.4614;
  long unsigned int D.4613;
  long unsigned int D.4612;
  long double * D.4611;
  long double * * D.4610;
  sizetype D.4609;
  sizetype D.4608;
  sizetype D.4607;
  long double * D.4606;
  long double * * D.4605;
  long unsigned int D.4604;
  long unsigned int D.4603;
  long double * * D.4602;
  int D.4599;
  long double * D.4598;
  long double * * D.4597;
  long unsigned int D.4596;
  long unsigned int D.4595;
  long double * D.4594;
  long double * * D.4593;
  sizetype D.4592;
  sizetype D.4591;
  sizetype D.4590;
  long double * D.4589;
  long double * * D.4588;
  sizetype D.4587;
  sizetype D.4586;
  sizetype D.4585;
  long double * * D.4584;
  int D.4581;
  long double * D.4580;
  long double * * D.4579;
  long unsigned int D.4578;
  long unsigned int D.4577;
  long double * * D.4576;
  long double * D.4575;
  long double * * D.4574;
  sizetype D.4573;
  sizetype D.4572;
  sizetype D.4571;
  long double * * D.4570;
  long double * D.4569;
  long double * * D.4568;
  long unsigned int D.4567;
  long unsigned int D.4566;
  long double * D.4565;
  long double * * D.4564;
  sizetype D.4563;
  sizetype D.4562;
  sizetype D.4561;
  int _1;
  sizetype _3;
  sizetype _4;
  sizetype _5;
  long double * * _7;
  long double * _8;
  long unsigned int _9;
  long unsigned int _10;
  long double * * _11;
  long double * _12;
  long double * * _13;
  sizetype _15;
  sizetype _16;
  sizetype _17;
  long double * * _18;
  long double * _19;
  long double * * _20;
  long unsigned int _21;
  long unsigned int _22;
  long double * * _23;
  long double * _24;
  int _25;
  long double * * _26;
  sizetype _27;
  sizetype _28;
  sizetype _29;
  long double * * _30;
  long double * _31;
  sizetype _32;
  sizetype _33;
  sizetype _34;
  long double * * _35;
  long double * _36;
  long unsigned int _37;
  long unsigned int _38;
  long double * * _39;
  long double * _40;
  int _41;
  long double * * _42;
  long unsigned int _43;
  long unsigned int _44;
  long double * * _45;
  long double * _46;
  sizetype _47;
  sizetype _48;
  sizetype _49;
  long double * * _50;
  long double * _51;
  long unsigned int _52;
  long unsigned int _53;
  long double * * _54;
  long double * _55;
  int _56;
  int _57;
  int _58;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (sizetype) k_2(D);
  _4 = _3 + 1;
  _5 = _4 * 8;
  _7 = bound_6(D) + _5;
  _8 = *_7;
  _9 = (long unsigned int) k_2(D);
  _10 = _9 * 8;
  _11 = bound_6(D) + _10;
  _12 = *_11;
  _13 = f.nvp;
  _15 = (sizetype) xp_14(D);
  _16 = _15 + 1;
  _17 = _16 * 8;
  _18 = _13 + _17;
  _19 = *_18;
  _20 = f.nvp;
  _21 = (long unsigned int) xp_14(D);
  _22 = _21 * 8;
  _23 = _20 + _22;
  _24 = *_23;
  _25 = segments_intersect (_24, _19, _12, _8);
  if (_25 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  _26 = f.nvp;
  _27 = (sizetype) xp_14(D);
  _28 = _27 + 1;
  _29 = _28 * 8;
  _30 = _26 + _29;
  _31 = *_30;
  _32 = (sizetype) k_2(D);
  _33 = _32 + 1;
  _34 = _33 * 8;
  _35 = bound_6(D) + _34;
  _36 = *_35;
  _37 = (long unsigned int) k_2(D);
  _38 = _37 * 8;
  _39 = bound_6(D) + _38;
  _40 = *_39;
  _41 = isbetween (_40, _36, _31);
  if (_41 == 0)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
  _42 = f.nvp;
  _43 = (long unsigned int) xp_14(D);
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) k_2(D);
  _48 = _47 + 1;
  _49 = _48 * 8;
  _50 = bound_6(D) + _49;
  _51 = *_50;
  _52 = (long unsigned int) k_2(D);
  _53 = _52 * 8;
  _54 = bound_6(D) + _53;
  _55 = *_54;
  _56 = isbetween (_55, _51, _46);
  if (_56 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _57 = 1;
  goto <bb 7> (<L6>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       2
;;                3
;;                4
  _58 = 0;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # _1 = PHI <_57(5), _58(6)>
<L6>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = (sizetype) k_2(D);

(insn 8 7 9 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 9 8 0 (set (reg:DI 60 [ D.5015 ])
        (sign_extend:DI (reg:SI 113))) mSector.c:196 -1
     (nil))

;; _4 = _3 + 1;

(insn 10 9 0 (parallel [
            (set (reg:DI 61 [ D.5015 ])
                (plus:DI (reg:DI 60 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _5 = _4 * 8;

(insn 11 10 0 (parallel [
            (set (reg:DI 62 [ D.5015 ])
                (ashift:DI (reg:DI 61 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _7 = bound_6(D) + _5;

(insn 12 11 13 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:DI 63 [ D.5016 ])
                (plus:DI (reg:DI 62 [ D.5015 ])
                    (reg/f:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5015 ]))
        (nil)))

;; _8 = *_7;

(insn 14 13 0 (set (reg/f:DI 64 [ D.5017 ])
        (mem/f:DI (reg/f:DI 63 [ D.5016 ]) [0 *_7+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _9 = (long unsigned int) k_2(D);

(insn 15 14 16 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 16 15 0 (set (reg:DI 65 [ D.5018 ])
        (sign_extend:DI (reg:SI 115))) mSector.c:196 -1
     (nil))

;; _10 = _9 * 8;

(insn 17 16 0 (parallel [
            (set (reg:DI 66 [ D.5018 ])
                (ashift:DI (reg:DI 65 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _11 = bound_6(D) + _10;

(insn 18 17 19 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 19 18 0 (parallel [
            (set (reg/f:DI 67 [ D.5016 ])
                (plus:DI (reg:DI 66 [ D.5018 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5018 ]))
        (nil)))

;; _12 = *_11;

(insn 20 19 0 (set (reg/f:DI 68 [ D.5017 ])
        (mem/f:DI (reg/f:DI 67 [ D.5016 ]) [0 *_11+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _13 = f.nvp;

(insn 21 20 0 (set (reg/f:DI 69 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _15 = (sizetype) xp_14(D);

(insn 22 21 23 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 23 22 0 (set (reg:DI 70 [ D.5015 ])
        (sign_extend:DI (reg:SI 117))) mSector.c:196 -1
     (nil))

;; _16 = _15 + 1;

(insn 24 23 0 (parallel [
            (set (reg:DI 71 [ D.5015 ])
                (plus:DI (reg:DI 70 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _17 = _16 * 8;

(insn 25 24 0 (parallel [
            (set (reg:DI 72 [ D.5015 ])
                (ashift:DI (reg:DI 71 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _18 = _13 + _17;

(insn 26 25 0 (parallel [
            (set (reg/f:DI 73 [ D.5016 ])
                (plus:DI (reg/f:DI 69 [ D.5016 ])
                    (reg:DI 72 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _19 = *_18;

(insn 27 26 0 (set (reg/f:DI 74 [ D.5017 ])
        (mem/f:DI (reg/f:DI 73 [ D.5016 ]) [0 *_18+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _20 = f.nvp;

(insn 28 27 0 (set (reg/f:DI 75 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _21 = (long unsigned int) xp_14(D);

(insn 29 28 30 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 30 29 0 (set (reg:DI 76 [ D.5018 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:196 -1
     (nil))

;; _22 = _21 * 8;

(insn 31 30 0 (parallel [
            (set (reg:DI 77 [ D.5018 ])
                (ashift:DI (reg:DI 76 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _23 = _20 + _22;

(insn 32 31 0 (parallel [
            (set (reg/f:DI 78 [ D.5016 ])
                (plus:DI (reg/f:DI 75 [ D.5016 ])
                    (reg:DI 77 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _24 = *_23;

(insn 33 32 0 (set (reg/f:DI 79 [ D.5017 ])
        (mem/f:DI (reg/f:DI 78 [ D.5016 ]) [0 *_23+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _25 = segments_intersect (_24, _19, _12, _8);

(insn 34 33 35 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 35 34 36 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 36 35 37 (set (reg:DI 4 si)
        (reg/f:DI 74 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 37 36 38 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.5017 ])) mSector.c:196 -1
     (nil))

(call_insn 38 37 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("segments_intersect") [flags 0x41]  <function_decl 0x7f44d29f7d00 segments_intersect>) [0 segments_intersect S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))

(insn 39 38 0 (set (reg:SI 80 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))

;; if (_25 != 0)

(insn 40 39 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:196 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _26 = f.nvp;

(insn 43 42 0 (set (reg/f:DI 81 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _27 = (sizetype) xp_14(D);

(insn 44 43 45 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 45 44 0 (set (reg:DI 82 [ D.5015 ])
        (sign_extend:DI (reg:SI 119))) mSector.c:196 -1
     (nil))

;; _28 = _27 + 1;

(insn 46 45 0 (parallel [
            (set (reg:DI 83 [ D.5015 ])
                (plus:DI (reg:DI 82 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _29 = _28 * 8;

(insn 47 46 0 (parallel [
            (set (reg:DI 84 [ D.5015 ])
                (ashift:DI (reg:DI 83 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _30 = _26 + _29;

(insn 48 47 0 (parallel [
            (set (reg/f:DI 85 [ D.5016 ])
                (plus:DI (reg/f:DI 81 [ D.5016 ])
                    (reg:DI 84 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _31 = *_30;

(insn 49 48 0 (set (reg/f:DI 86 [ D.5017 ])
        (mem/f:DI (reg/f:DI 85 [ D.5016 ]) [0 *_30+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _32 = (sizetype) k_2(D);

(insn 50 49 51 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 51 50 0 (set (reg:DI 87 [ D.5015 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:196 -1
     (nil))

;; _33 = _32 + 1;

(insn 52 51 0 (parallel [
            (set (reg:DI 88 [ D.5015 ])
                (plus:DI (reg:DI 87 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _34 = _33 * 8;

(insn 53 52 0 (parallel [
            (set (reg:DI 89 [ D.5015 ])
                (ashift:DI (reg:DI 88 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _35 = bound_6(D) + _34;

(insn 54 53 55 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 55 54 0 (parallel [
            (set (reg/f:DI 90 [ D.5016 ])
                (plus:DI (reg:DI 89 [ D.5015 ])
                    (reg/f:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 89 [ D.5015 ]))
        (nil)))

;; _36 = *_35;

(insn 56 55 0 (set (reg/f:DI 91 [ D.5017 ])
        (mem/f:DI (reg/f:DI 90 [ D.5016 ]) [0 *_35+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _37 = (long unsigned int) k_2(D);

(insn 57 56 58 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 58 57 0 (set (reg:DI 92 [ D.5018 ])
        (sign_extend:DI (reg:SI 122))) mSector.c:196 -1
     (nil))

;; _38 = _37 * 8;

(insn 59 58 0 (parallel [
            (set (reg:DI 93 [ D.5018 ])
                (ashift:DI (reg:DI 92 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _39 = bound_6(D) + _38;

(insn 60 59 61 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 61 60 0 (parallel [
            (set (reg/f:DI 94 [ D.5016 ])
                (plus:DI (reg:DI 93 [ D.5018 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 93 [ D.5018 ]))
        (nil)))

;; _40 = *_39;

(insn 62 61 0 (set (reg/f:DI 95 [ D.5017 ])
        (mem/f:DI (reg/f:DI 94 [ D.5016 ]) [0 *_39+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _41 = isbetween (_40, _36, _31);

(insn 63 62 64 (set (reg:DI 1 dx)
        (reg/f:DI 86 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 64 63 65 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 65 64 66 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.5017 ])) mSector.c:196 -1
     (nil))

(call_insn 66 65 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 67 66 0 (set (reg:SI 96 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))

;; if (_41 == 0)

(insn 68 67 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))

(jump_insn 69 68 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:196 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _42 = f.nvp;

(insn 71 70 0 (set (reg/f:DI 97 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _43 = (long unsigned int) xp_14(D);

(insn 72 71 73 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 73 72 0 (set (reg:DI 98 [ D.5018 ])
        (sign_extend:DI (reg:SI 124))) mSector.c:196 -1
     (nil))

;; _44 = _43 * 8;

(insn 74 73 0 (parallel [
            (set (reg:DI 99 [ D.5018 ])
                (ashift:DI (reg:DI 98 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _45 = _42 + _44;

(insn 75 74 0 (parallel [
            (set (reg/f:DI 100 [ D.5016 ])
                (plus:DI (reg/f:DI 97 [ D.5016 ])
                    (reg:DI 99 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _46 = *_45;

(insn 76 75 0 (set (reg/f:DI 101 [ D.5017 ])
        (mem/f:DI (reg/f:DI 100 [ D.5016 ]) [0 *_45+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _47 = (sizetype) k_2(D);

(insn 77 76 78 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 78 77 0 (set (reg:DI 102 [ D.5015 ])
        (sign_extend:DI (reg:SI 125))) mSector.c:196 -1
     (nil))

;; _48 = _47 + 1;

(insn 79 78 0 (parallel [
            (set (reg:DI 103 [ D.5015 ])
                (plus:DI (reg:DI 102 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _49 = _48 * 8;

(insn 80 79 0 (parallel [
            (set (reg:DI 104 [ D.5015 ])
                (ashift:DI (reg:DI 103 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _50 = bound_6(D) + _49;

(insn 81 80 82 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 82 81 0 (parallel [
            (set (reg/f:DI 105 [ D.5016 ])
                (plus:DI (reg:DI 104 [ D.5015 ])
                    (reg/f:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 104 [ D.5015 ]))
        (nil)))

;; _51 = *_50;

(insn 83 82 0 (set (reg/f:DI 106 [ D.5017 ])
        (mem/f:DI (reg/f:DI 105 [ D.5016 ]) [0 *_50+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _52 = (long unsigned int) k_2(D);

(insn 84 83 85 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))

(insn 85 84 0 (set (reg:DI 107 [ D.5018 ])
        (sign_extend:DI (reg:SI 127))) mSector.c:196 -1
     (nil))

;; _53 = _52 * 8;

(insn 86 85 0 (parallel [
            (set (reg:DI 108 [ D.5018 ])
                (ashift:DI (reg:DI 107 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))

;; _54 = bound_6(D) + _53;

(insn 87 86 88 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))

(insn 88 87 0 (parallel [
            (set (reg/f:DI 109 [ D.5016 ])
                (plus:DI (reg:DI 108 [ D.5018 ])
                    (reg/f:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 108 [ D.5018 ]))
        (nil)))

;; _55 = *_54;

(insn 89 88 0 (set (reg/f:DI 110 [ D.5017 ])
        (mem/f:DI (reg/f:DI 109 [ D.5016 ]) [0 *_54+0 S8 A64])) mSector.c:196 -1
     (nil))

;; _56 = isbetween (_55, _51, _46);

(insn 90 89 91 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 91 90 92 (set (reg:DI 4 si)
        (reg/f:DI 106 [ D.5017 ])) mSector.c:196 -1
     (nil))

(insn 92 91 93 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.5017 ])) mSector.c:196 -1
     (nil))

(call_insn 93 92 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 94 93 0 (set (reg:SI 111 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))

;; if (_56 == 0)

(insn 95 94 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))

(jump_insn 96 95 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:196 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _57 = 1;

(insn 98 97 0 (set (reg:SI 59 [ D.5014 ])
        (const_int 1 [0x1])) mSector.c:197 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 101 100 102 79 "" [0 uses])

(note 102 101 0 NOTE_INSN_BASIC_BLOCK)

;; _58 = 0;

(insn 103 102 0 (set (reg:SI 59 [ D.5014 ])
        (const_int 0 [0])) mSector.c:199 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L6>:

(code_label 104 103 105 80 "" [0 uses])

(note 105 104 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 106 105 107 (set (reg:SI 112 [ <retval> ])
        (reg:SI 59 [ D.5014 ])) -1
     (nil))

(jump_insn 107 106 108 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 108 107 0)
deleting block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])
        (reg:SI 5 di [ xp ])) mSector.c:194 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:194 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 1 dx [ k ])) mSector.c:194 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 60 [ D.5015 ])
        (sign_extend:DI (reg:SI 113))) mSector.c:196 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 61 [ D.5015 ])
                (plus:DI (reg:DI 60 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 62 [ D.5015 ])
                (ashift:DI (reg:DI 61 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 63 [ D.5016 ])
                (plus:DI (reg:DI 62 [ D.5015 ])
                    (reg/f:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5015 ]))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 64 [ D.5017 ])
        (mem/f:DI (reg/f:DI 63 [ D.5016 ]) [0 *_7+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 65 [ D.5018 ])
        (sign_extend:DI (reg:SI 115))) mSector.c:196 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 66 [ D.5018 ])
                (ashift:DI (reg:DI 65 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 67 [ D.5016 ])
                (plus:DI (reg:DI 66 [ D.5018 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5018 ]))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 68 [ D.5017 ])
        (mem/f:DI (reg/f:DI 67 [ D.5016 ]) [0 *_11+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 69 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 70 [ D.5015 ])
        (sign_extend:DI (reg:SI 117))) mSector.c:196 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 71 [ D.5015 ])
                (plus:DI (reg:DI 70 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 72 [ D.5015 ])
                (ashift:DI (reg:DI 71 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 73 [ D.5016 ])
                (plus:DI (reg/f:DI 69 [ D.5016 ])
                    (reg:DI 72 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 74 [ D.5017 ])
        (mem/f:DI (reg/f:DI 73 [ D.5016 ]) [0 *_18+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 75 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 76 [ D.5018 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:196 -1
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 77 [ D.5018 ])
                (ashift:DI (reg:DI 76 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 78 [ D.5016 ])
                (plus:DI (reg/f:DI 75 [ D.5016 ])
                    (reg:DI 77 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 79 [ D.5017 ])
        (mem/f:DI (reg/f:DI 78 [ D.5016 ]) [0 *_23+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 74 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.5017 ])) mSector.c:196 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("segments_intersect") [flags 0x41]  <function_decl 0x7f44d29f7d00 segments_intersect>) [0 segments_intersect S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 39 38 40 2 (set (reg:SI 80 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))
(insn 40 39 41 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 -1
     (nil)
 -> 101)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg/f:DI 81 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 44 43 45 4 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 82 [ D.5015 ])
        (sign_extend:DI (reg:SI 119))) mSector.c:196 -1
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 83 [ D.5015 ])
                (plus:DI (reg:DI 82 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 84 [ D.5015 ])
                (ashift:DI (reg:DI 83 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 85 [ D.5016 ])
                (plus:DI (reg/f:DI 81 [ D.5016 ])
                    (reg:DI 84 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 49 48 50 4 (set (reg/f:DI 86 [ D.5017 ])
        (mem/f:DI (reg/f:DI 85 [ D.5016 ]) [0 *_30+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 50 49 51 4 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 51 50 52 4 (set (reg:DI 87 [ D.5015 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:196 -1
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 88 [ D.5015 ])
                (plus:DI (reg:DI 87 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 89 [ D.5015 ])
                (ashift:DI (reg:DI 88 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 54 53 55 4 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg/f:DI 90 [ D.5016 ])
                (plus:DI (reg:DI 89 [ D.5015 ])
                    (reg/f:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 89 [ D.5015 ]))
        (nil)))
(insn 56 55 57 4 (set (reg/f:DI 91 [ D.5017 ])
        (mem/f:DI (reg/f:DI 90 [ D.5016 ]) [0 *_35+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 57 56 58 4 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 58 57 59 4 (set (reg:DI 92 [ D.5018 ])
        (sign_extend:DI (reg:SI 122))) mSector.c:196 -1
     (nil))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 93 [ D.5018 ])
                (ashift:DI (reg:DI 92 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 60 59 61 4 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 61 60 62 4 (parallel [
            (set (reg/f:DI 94 [ D.5016 ])
                (plus:DI (reg:DI 93 [ D.5018 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 93 [ D.5018 ]))
        (nil)))
(insn 62 61 63 4 (set (reg/f:DI 95 [ D.5017 ])
        (mem/f:DI (reg/f:DI 94 [ D.5016 ]) [0 *_39+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 63 62 64 4 (set (reg:DI 1 dx)
        (reg/f:DI 86 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 64 63 65 4 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 65 64 66 4 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.5017 ])) mSector.c:196 -1
     (nil))
(call_insn 66 65 67 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 67 66 68 4 (set (reg:SI 96 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))
(insn 68 67 69 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))
(jump_insn 69 68 70 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 -1
     (nil)
 -> 101)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 70 69 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 5 (set (reg/f:DI 97 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 72 71 73 5 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 73 72 74 5 (set (reg:DI 98 [ D.5018 ])
        (sign_extend:DI (reg:SI 124))) mSector.c:196 -1
     (nil))
(insn 74 73 75 5 (parallel [
            (set (reg:DI 99 [ D.5018 ])
                (ashift:DI (reg:DI 98 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 75 74 76 5 (parallel [
            (set (reg/f:DI 100 [ D.5016 ])
                (plus:DI (reg/f:DI 97 [ D.5016 ])
                    (reg:DI 99 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 76 75 77 5 (set (reg/f:DI 101 [ D.5017 ])
        (mem/f:DI (reg/f:DI 100 [ D.5016 ]) [0 *_45+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 77 76 78 5 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 78 77 79 5 (set (reg:DI 102 [ D.5015 ])
        (sign_extend:DI (reg:SI 125))) mSector.c:196 -1
     (nil))
(insn 79 78 80 5 (parallel [
            (set (reg:DI 103 [ D.5015 ])
                (plus:DI (reg:DI 102 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 80 79 81 5 (parallel [
            (set (reg:DI 104 [ D.5015 ])
                (ashift:DI (reg:DI 103 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 81 80 82 5 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 82 81 83 5 (parallel [
            (set (reg/f:DI 105 [ D.5016 ])
                (plus:DI (reg:DI 104 [ D.5015 ])
                    (reg/f:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 104 [ D.5015 ]))
        (nil)))
(insn 83 82 84 5 (set (reg/f:DI 106 [ D.5017 ])
        (mem/f:DI (reg/f:DI 105 [ D.5016 ]) [0 *_50+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 84 83 85 5 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 -1
     (nil))
(insn 85 84 86 5 (set (reg:DI 107 [ D.5018 ])
        (sign_extend:DI (reg:SI 127))) mSector.c:196 -1
     (nil))
(insn 86 85 87 5 (parallel [
            (set (reg:DI 108 [ D.5018 ])
                (ashift:DI (reg:DI 107 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (nil))
(insn 87 86 88 5 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 88 87 89 5 (parallel [
            (set (reg/f:DI 109 [ D.5016 ])
                (plus:DI (reg:DI 108 [ D.5018 ])
                    (reg/f:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 108 [ D.5018 ]))
        (nil)))
(insn 89 88 90 5 (set (reg/f:DI 110 [ D.5017 ])
        (mem/f:DI (reg/f:DI 109 [ D.5016 ]) [0 *_54+0 S8 A64])) mSector.c:196 -1
     (nil))
(insn 90 89 91 5 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 91 90 92 5 (set (reg:DI 4 si)
        (reg/f:DI 106 [ D.5017 ])) mSector.c:196 -1
     (nil))
(insn 92 91 93 5 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.5017 ])) mSector.c:196 -1
     (nil))
(call_insn 93 92 94 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 94 93 95 5 (set (reg:SI 111 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 -1
     (nil))
(insn 95 94 96 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 -1
     (nil))
(jump_insn 96 95 97 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 -1
     (nil)
 -> 101)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 97 96 98 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 6 (set (reg:SI 59 [ D.5014 ])
        (const_int 1 [0x1])) mSector.c:197 -1
     (nil))
(jump_insn 99 98 100 6 (set (pc)
        (label_ref 104)) mSector.c:197 -1
     (nil)
 -> 104)
;;  succ:       8

(barrier 100 99 101)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4
;;              5
(code_label 101 100 102 7 79 "" [3 uses])
(note 102 101 103 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 7 (set (reg:SI 59 [ D.5014 ])
        (const_int 0 [0])) mSector.c:199 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 104 103 105 8 80 "" [1 uses])
(note 105 104 106 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 110 8 (set (reg:SI 112 [ <retval> ])
        (reg:SI 59 [ D.5014 ])) -1
     (nil))
(insn 110 106 113 8 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) mSector.c:200 -1
     (nil))
(insn 113 110 0 8 (use (reg/i:SI 0 ax)) mSector.c:200 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function modify_traj_intersect_bound (modify_traj_intersect_bound, funcdef_no=12, decl_uid=1882, cgraph_uid=12)

modify_traj_intersect_bound (struct Aircraft_t * * flight, int * Nflight, struct CONF_t config)
{
  int j;
  int i;
  int D.4655;
  int D.4654;
  long double * D.4653;
  long double * D.4652;
  long double * * D.4651;
  long unsigned int D.4650;
  long unsigned int D.4649;
  long double * * D.4648;
  struct Aircraft_t * D.4647;
  long unsigned int D.4646;
  long unsigned int D.4645;
  struct Aircraft_t * D.4644;
  int D.4643;
  int D.4642;
  struct Aircraft_t * D.4641;
  long unsigned int D.4640;
  long unsigned int D.4639;
  struct Aircraft_t * D.4638;
  long double * D.4637;
  long double * D.4636;
  long double * * D.4635;
  long unsigned int D.4634;
  long unsigned int D.4633;
  long double * * D.4632;
  struct Aircraft_t * D.4631;
  long unsigned int D.4630;
  long unsigned int D.4629;
  struct Aircraft_t * D.4628;
  long double * D.4627;
  long double * D.4626;
  long double * * D.4625;
  struct Aircraft_t * D.4624;
  long unsigned int D.4623;
  long unsigned int D.4622;
  struct Aircraft_t * D.4621;
  int _5;
  struct Aircraft_t * _7;
  long unsigned int _8;
  long unsigned int _9;
  struct Aircraft_t * _10;
  long double * * _11;
  long double * _12;
  long double * _13;
  struct Aircraft_t * _15;
  long unsigned int _16;
  long unsigned int _17;
  struct Aircraft_t * _18;
  int _19;
  int _20;
  struct Aircraft_t * _21;
  long unsigned int _22;
  long unsigned int _23;
  struct Aircraft_t * _24;
  long double * * _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long double * _30;
  struct Aircraft_t * _32;
  long unsigned int _33;
  long unsigned int _34;
  struct Aircraft_t * _35;
  long double * * _36;
  long unsigned int _37;
  long unsigned int _38;
  long double * * _39;
  long double * _40;
  long double * _41;
  int _43;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 7>;
;;    succ:       7

;;   basic block 3, loop depth 0
;;    pred:       7
  _7 = *flight_6(D);
  _8 = (long unsigned int) i_1;
  _9 = _8 * 160;
  _10 = _7 + _9;
  _11 = _10->nvp;
  _12 = *_11;
  _13 = _12 + 48;
  *_13 = 0.0;
  j_14 = 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       5
  _21 = *flight_6(D);
  _22 = (long unsigned int) i_1;
  _23 = _22 * 160;
  _24 = _21 + _23;
  _25 = _24->nvp;
  _26 = (long unsigned int) j_2;
  _27 = _26 * 8;
  _28 = _25 + _27;
  _29 = *_28;
  _30 = _29 + 48;
  *_30 = 1.0e+0;
  j_31 = j_2 + 1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # j_2 = PHI <j_14(3), j_31(4)>
  _15 = *flight_6(D);
  _16 = (long unsigned int) i_1;
  _17 = _16 * 160;
  _18 = _15 + _17;
  _19 = _18->n_nvp;
  _20 = _19 + -2;
  if (_20 > j_2)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  _32 = *flight_6(D);
  _33 = (long unsigned int) i_1;
  _34 = _33 * 160;
  _35 = _32 + _34;
  _36 = _35->nvp;
  _37 = (long unsigned int) j_2;
  _38 = _37 * 8;
  _39 = _36 + _38;
  _40 = *_39;
  _41 = _40 + 48;
  *_41 = 0.0;
  i_42 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_42(6)>
  _5 = *Nflight_4(D);
  if (_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _43 = 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _43;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (Nflight_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (flight_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (j_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (j_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (i_42 - 42 )
Partition 43 (_43 - 43 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (Nflight_4(D) - 4 )
Partition 4 (flight_6(D) - 6 )
Partition 5 (j_14 - 14 )
Partition 6 (j_31 - 31 )
Partition 7 (i_42 - 42 )


Live on entry to BB2 : Nflight_4(D)  flight_6(D)  

Live on entry to BB3 : i_1  Nflight_4(D)  flight_6(D)  

Live on entry to BB4 : i_1  j_2  Nflight_4(D)  flight_6(D)  

Live on entry to BB5 : i_1  Nflight_4(D)  flight_6(D)  

Live on entry to BB6 : i_1  j_2  Nflight_4(D)  flight_6(D)  

Live on entry to BB7 : Nflight_4(D)  flight_6(D)  

Live on entry to BB8 : 

Live on entry to BB9 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_42
(2147483646) j_2 <-> j_14
(2147483646) j_2 <-> j_31

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (Nflight_4(D) - 4 )
Partition 4 (flight_6(D) - 6 )
Partition 5 (j_14 - 14 )
Partition 6 (j_31 - 31 )
Partition 7 (i_42 - 42 )

Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (42)i_42 [map: 0, 7] : Success -> 0
Coalesce list: (2)j_2 & (14)j_14 [map: 1, 5] : Success -> 1
Coalesce list: (2)j_2 & (31)j_31 [map: 1, 6] : Success -> 1
Coalesce list: (1)i_1 & (42)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (31)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (14)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 42 )
Partition 1 (j_2 - 2 14 31 )
Partition 2 (Nflight_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (flight_6(D) - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_15 - 15 )
Partition 13 (_16 - 16 )
Partition 14 (_17 - 17 )
Partition 15 (_18 - 18 )
Partition 16 (_19 - 19 )
Partition 17 (_20 - 20 )
Partition 18 (_21 - 21 )
Partition 19 (_22 - 22 )
Partition 20 (_23 - 23 )
Partition 21 (_24 - 24 )
Partition 22 (_25 - 25 )
Partition 23 (_26 - 26 )
Partition 24 (_27 - 27 )
Partition 25 (_28 - 28 )
Partition 26 (_29 - 29 )
Partition 27 (_30 - 30 )
Partition 28 (_32 - 32 )
Partition 29 (_33 - 33 )
Partition 30 (_34 - 34 )
Partition 31 (_35 - 35 )
Partition 32 (_36 - 36 )
Partition 33 (_37 - 37 )
Partition 34 (_38 - 38 )
Partition 35 (_39 - 39 )
Partition 36 (_40 - 40 )
Partition 37 (_41 - 41 )
Partition 38 (_43 - 43 )

modify_traj_intersect_bound (struct Aircraft_t * * flight, int * Nflight, struct CONF_t config)
{
  int j;
  int i;
  int D.4655;
  int D.4654;
  long double * D.4653;
  long double * D.4652;
  long double * * D.4651;
  long unsigned int D.4650;
  long unsigned int D.4649;
  long double * * D.4648;
  struct Aircraft_t * D.4647;
  long unsigned int D.4646;
  long unsigned int D.4645;
  struct Aircraft_t * D.4644;
  int D.4643;
  int D.4642;
  struct Aircraft_t * D.4641;
  long unsigned int D.4640;
  long unsigned int D.4639;
  struct Aircraft_t * D.4638;
  long double * D.4637;
  long double * D.4636;
  long double * * D.4635;
  long unsigned int D.4634;
  long unsigned int D.4633;
  long double * * D.4632;
  struct Aircraft_t * D.4631;
  long unsigned int D.4630;
  long unsigned int D.4629;
  struct Aircraft_t * D.4628;
  long double * D.4627;
  long double * D.4626;
  long double * * D.4625;
  struct Aircraft_t * D.4624;
  long unsigned int D.4623;
  long unsigned int D.4622;
  struct Aircraft_t * D.4621;
  int _5;
  struct Aircraft_t * _7;
  long unsigned int _8;
  long unsigned int _9;
  struct Aircraft_t * _10;
  long double * * _11;
  long double * _12;
  long double * _13;
  struct Aircraft_t * _15;
  long unsigned int _16;
  long unsigned int _17;
  struct Aircraft_t * _18;
  int _19;
  int _20;
  struct Aircraft_t * _21;
  long unsigned int _22;
  long unsigned int _23;
  struct Aircraft_t * _24;
  long double * * _25;
  long unsigned int _26;
  long unsigned int _27;
  long double * * _28;
  long double * _29;
  long double * _30;
  struct Aircraft_t * _32;
  long unsigned int _33;
  long unsigned int _34;
  struct Aircraft_t * _35;
  long double * * _36;
  long unsigned int _37;
  long unsigned int _38;
  long double * * _39;
  long double * _40;
  long double * _41;
  int _43;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 7>;
;;    succ:       7

;;   basic block 3, loop depth 0
;;    pred:       7
  _7 = *flight_6(D);
  _8 = (long unsigned int) i_1;
  _9 = _8 * 160;
  _10 = _7 + _9;
  _11 = _10->nvp;
  _12 = *_11;
  _13 = _12 + 48;
  *_13 = 0.0;
  j_14 = 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       5
  _21 = *flight_6(D);
  _22 = (long unsigned int) i_1;
  _23 = _22 * 160;
  _24 = _21 + _23;
  _25 = _24->nvp;
  _26 = (long unsigned int) j_2;
  _27 = _26 * 8;
  _28 = _25 + _27;
  _29 = *_28;
  _30 = _29 + 48;
  *_30 = 1.0e+0;
  j_31 = j_2 + 1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # j_2 = PHI <j_14(3), j_31(4)>
  _15 = *flight_6(D);
  _16 = (long unsigned int) i_1;
  _17 = _16 * 160;
  _18 = _15 + _17;
  _19 = _18->n_nvp;
  _20 = _19 + -2;
  if (_20 > j_2)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  _32 = *flight_6(D);
  _33 = (long unsigned int) i_1;
  _34 = _33 * 160;
  _35 = _32 + _34;
  _36 = _35->nvp;
  _37 = (long unsigned int) j_2;
  _38 = _37 * 8;
  _39 = _36 + _38;
  _40 = *_39;
  _41 = _40 + 48;
  *_41 = 0.0;
  i_42 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_42(6)>
  _5 = *Nflight_4(D);
  if (_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _43 = 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _43;
;;    succ:       EXIT

}


Partition 1: size 4 align 4
	j_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = *flight_6(D);

(insn 11 10 12 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:215 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 60 [ D.5020 ])
        (mem/f:DI (reg/f:DI 95) [0 *flight_6(D)+0 S8 A64])) mSector.c:215 -1
     (nil))

;; _8 = (long unsigned int) i_1;

(insn 13 12 14 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:215 -1
     (nil))

(insn 14 13 0 (set (reg:DI 61 [ D.5021 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:215 -1
     (nil))

;; _9 = _8 * 160;

(insn 15 14 16 (set (reg:DI 97)
        (reg:DI 61 [ D.5021 ])) mSector.c:215 -1
     (nil))

(insn 16 15 17 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 97)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg:DI 97)
                    (reg:DI 61 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 18 17 19 (parallel [
            (set (reg:DI 98)
                (ashift:DI (reg:DI 97)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))

(insn 19 18 20 (set (reg:DI 97)
        (reg:DI 98)) mSector.c:215 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 20 19 0 (set (reg:DI 62 [ D.5021 ])
        (reg:DI 97)) mSector.c:215 -1
     (nil))

;; _10 = _7 + _9;

(insn 21 20 0 (parallel [
            (set (reg/f:DI 63 [ D.5020 ])
                (plus:DI (reg/f:DI 60 [ D.5020 ])
                    (reg:DI 62 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))

;; _11 = _10->nvp;

(insn 22 21 0 (set (reg/f:DI 64 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ D.5020 ])
                (const_int 8 [0x8])) [0 _10->nvp+0 S8 A64])) mSector.c:215 -1
     (nil))

;; _12 = *_11;

(insn 23 22 0 (set (reg/f:DI 65 [ D.5023 ])
        (mem/f:DI (reg/f:DI 64 [ D.5022 ]) [0 *_11+0 S8 A64])) mSector.c:215 -1
     (nil))

;; _13 = _12 + 48;

(insn 24 23 0 (parallel [
            (set (reg/f:DI 66 [ D.5023 ])
                (plus:DI (reg/f:DI 65 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))

;; *_13 = 0.0;

(insn 25 24 26 (set (reg:XF 99)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:215 -1
     (nil))

(insn 26 25 0 (set (mem:XF (reg/f:DI 66 [ D.5023 ]) [0 *_13+0 S16 A128])
        (reg:XF 99)) mSector.c:215 -1
     (nil))

;; j_14 = 1;

(insn 27 26 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:216 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _21 = *flight_6(D);

(insn 31 30 32 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 -1
     (nil))

(insn 32 31 0 (set (reg/f:DI 73 [ D.5020 ])
        (mem/f:DI (reg/f:DI 100) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 -1
     (nil))

;; _22 = (long unsigned int) i_1;

(insn 33 32 34 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 -1
     (nil))

(insn 34 33 0 (set (reg:DI 74 [ D.5021 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:216 -1
     (nil))

;; _23 = _22 * 160;

(insn 35 34 36 (set (reg:DI 102)
        (reg:DI 74 [ D.5021 ])) mSector.c:216 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 74 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 38 37 39 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

(insn 39 38 40 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 40 39 0 (set (reg:DI 75 [ D.5021 ])
        (reg:DI 102)) mSector.c:216 -1
     (nil))

;; _24 = _21 + _23;

(insn 41 40 0 (parallel [
            (set (reg/f:DI 76 [ D.5020 ])
                (plus:DI (reg/f:DI 73 [ D.5020 ])
                    (reg:DI 75 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; _25 = _24->nvp;

(insn 42 41 0 (set (reg/f:DI 77 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76 [ D.5020 ])
                (const_int 8 [0x8])) [0 _24->nvp+0 S8 A64])) mSector.c:216 -1
     (nil))

;; _26 = (long unsigned int) j_2;

(insn 43 42 44 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:216 -1
     (nil))

(insn 44 43 0 (set (reg:DI 78 [ D.5021 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:216 -1
     (nil))

;; _27 = _26 * 8;

(insn 45 44 0 (parallel [
            (set (reg:DI 79 [ D.5021 ])
                (ashift:DI (reg:DI 78 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; _28 = _25 + _27;

(insn 46 45 0 (parallel [
            (set (reg/f:DI 80 [ D.5022 ])
                (plus:DI (reg/f:DI 77 [ D.5022 ])
                    (reg:DI 79 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; _29 = *_28;

(insn 47 46 0 (set (reg/f:DI 81 [ D.5023 ])
        (mem/f:DI (reg/f:DI 80 [ D.5022 ]) [0 *_28+0 S8 A64])) mSector.c:216 -1
     (nil))

;; _30 = _29 + 48;

(insn 48 47 0 (parallel [
            (set (reg/f:DI 82 [ D.5023 ])
                (plus:DI (reg/f:DI 81 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; *_30 = 1.0e+0;

(insn 49 48 50 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:216 -1
     (nil))

(insn 50 49 0 (set (mem:XF (reg/f:DI 82 [ D.5023 ]) [0 *_30+0 S16 A128])
        (reg:XF 105)) mSector.c:216 -1
     (nil))

;; j_31 = j_2 + 1;

(insn 51 50 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 52 51 53 83 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = *flight_6(D);

(insn 54 53 55 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 -1
     (nil))

(insn 55 54 0 (set (reg/f:DI 67 [ D.5020 ])
        (mem/f:DI (reg/f:DI 106) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 -1
     (nil))

;; _16 = (long unsigned int) i_1;

(insn 56 55 57 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 -1
     (nil))

(insn 57 56 0 (set (reg:DI 68 [ D.5021 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:216 -1
     (nil))

;; _17 = _16 * 160;

(insn 58 57 59 (set (reg:DI 108)
        (reg:DI 68 [ D.5021 ])) mSector.c:216 -1
     (nil))

(insn 59 58 60 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

(insn 60 59 61 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 68 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 61 60 62 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

(insn 62 61 63 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 63 62 0 (set (reg:DI 69 [ D.5021 ])
        (reg:DI 108)) mSector.c:216 -1
     (nil))

;; _18 = _15 + _17;

(insn 64 63 0 (parallel [
            (set (reg/f:DI 70 [ D.5020 ])
                (plus:DI (reg/f:DI 67 [ D.5020 ])
                    (reg:DI 69 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; _19 = _18->n_nvp;

(insn 65 64 0 (set (reg:SI 71 [ D.5019 ])
        (mem/j:SI (plus:DI (reg/f:DI 70 [ D.5020 ])
                (const_int 4 [0x4])) [0 _18->n_nvp+0 S4 A32])) mSector.c:216 -1
     (nil))

;; _20 = _19 + -2;

(insn 66 65 0 (parallel [
            (set (reg:SI 72 [ D.5019 ])
                (plus:SI (reg:SI 71 [ D.5019 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))

;; if (_20 > j_2)

(insn 68 66 69 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 72 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) mSector.c:216 -1
     (nil))

(jump_insn 69 68 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:216 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _32 = *flight_6(D);

(insn 71 70 72 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:217 -1
     (nil))

(insn 72 71 0 (set (reg/f:DI 83 [ D.5020 ])
        (mem/f:DI (reg/f:DI 110) [0 *flight_6(D)+0 S8 A64])) mSector.c:217 -1
     (nil))

;; _33 = (long unsigned int) i_1;

(insn 73 72 74 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:217 -1
     (nil))

(insn 74 73 0 (set (reg:DI 84 [ D.5021 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:217 -1
     (nil))

;; _34 = _33 * 160;

(insn 75 74 76 (set (reg:DI 112)
        (reg:DI 84 [ D.5021 ])) mSector.c:217 -1
     (nil))

(insn 76 75 77 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

(insn 77 76 78 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 84 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 78 77 79 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

(insn 79 78 80 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:217 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 80 79 0 (set (reg:DI 85 [ D.5021 ])
        (reg:DI 112)) mSector.c:217 -1
     (nil))

;; _35 = _32 + _34;

(insn 81 80 0 (parallel [
            (set (reg/f:DI 86 [ D.5020 ])
                (plus:DI (reg/f:DI 83 [ D.5020 ])
                    (reg:DI 85 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

;; _36 = _35->nvp;

(insn 82 81 0 (set (reg/f:DI 87 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 86 [ D.5020 ])
                (const_int 8 [0x8])) [0 _35->nvp+0 S8 A64])) mSector.c:217 -1
     (nil))

;; _37 = (long unsigned int) j_2;

(insn 83 82 84 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:217 -1
     (nil))

(insn 84 83 0 (set (reg:DI 88 [ D.5021 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:217 -1
     (nil))

;; _38 = _37 * 8;

(insn 85 84 0 (parallel [
            (set (reg:DI 89 [ D.5021 ])
                (ashift:DI (reg:DI 88 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

;; _39 = _36 + _38;

(insn 86 85 0 (parallel [
            (set (reg/f:DI 90 [ D.5022 ])
                (plus:DI (reg/f:DI 87 [ D.5022 ])
                    (reg:DI 89 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

;; _40 = *_39;

(insn 87 86 0 (set (reg/f:DI 91 [ D.5023 ])
        (mem/f:DI (reg/f:DI 90 [ D.5022 ]) [0 *_39+0 S8 A64])) mSector.c:217 -1
     (nil))

;; _41 = _40 + 48;

(insn 88 87 0 (parallel [
            (set (reg/f:DI 92 [ D.5023 ])
                (plus:DI (reg/f:DI 91 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))

;; *_41 = 0.0;

(insn 89 88 90 (set (reg:XF 115)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:217 -1
     (nil))

(insn 90 89 0 (set (mem:XF (reg/f:DI 92 [ D.5023 ]) [0 *_41+0 S16 A128])
        (reg:XF 115)) mSector.c:217 -1
     (nil))

;; i_42 = i_1 + 1;

(insn 91 90 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 92 91 93 82 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = *Nflight_4(D);

(insn 94 93 95 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:214 -1
     (nil))

(insn 95 94 0 (set (reg:SI 59 [ D.5019 ])
        (mem:SI (reg/f:DI 116) [0 *Nflight_4(D)+0 S4 A32])) mSector.c:214 -1
     (nil))

;; if (_5 > i_1)

(insn 97 95 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mSector.c:214 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) mSector.c:214 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _43 = 1;

(insn 100 99 0 (set (reg:SI 93 [ D.5019 ])
        (const_int 1 [0x1])) mSector.c:220 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 101 100 102 86 "" [0 uses])

(note 102 101 0 NOTE_INSN_BASIC_BLOCK)

;; return _43;

(insn 103 102 104 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.5019 ])) mSector.c:220 -1
     (nil))

(jump_insn 104 103 105 (set (pc)
        (label_ref 0)) mSector.c:220 -1
     (nil))

(barrier 105 104 0)
deleting block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:202 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:202 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:214 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 92)) mSector.c:214 -1
     (nil)
 -> 92)
;;  succ:       8

(barrier 9 8 96)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 96 9 10 4 85 "" [1 uses])
(note 10 96 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:215 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 60 [ D.5020 ])
        (mem/f:DI (reg/f:DI 95) [0 *flight_6(D)+0 S8 A64])) mSector.c:215 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:215 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 61 [ D.5021 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:215 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 97)
        (reg:DI 61 [ D.5021 ])) mSector.c:215 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 97)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg:DI 97)
                    (reg:DI 61 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 98)
                (ashift:DI (reg:DI 97)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 97)
        (reg:DI 98)) mSector.c:215 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 4 (set (reg:DI 62 [ D.5021 ])
        (reg:DI 97)) mSector.c:215 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 63 [ D.5020 ])
                (plus:DI (reg/f:DI 60 [ D.5020 ])
                    (reg:DI 62 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 64 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ D.5020 ])
                (const_int 8 [0x8])) [0 _10->nvp+0 S8 A64])) mSector.c:215 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 65 [ D.5023 ])
        (mem/f:DI (reg/f:DI 64 [ D.5022 ]) [0 *_11+0 S8 A64])) mSector.c:215 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 66 [ D.5023 ])
                (plus:DI (reg/f:DI 65 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 -1
     (nil))
(insn 25 24 26 4 (set (reg:XF 99)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:215 -1
     (nil))
(insn 26 25 27 4 (set (mem:XF (reg/f:DI 66 [ D.5023 ]) [0 *_13+0 S16 A128])
        (reg:XF 99)) mSector.c:215 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:216 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref 52)) mSector.c:216 -1
     (nil)
 -> 52)
;;  succ:       6

(barrier 29 28 67)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 67 29 30 5 84 "" [1 uses])
(note 30 67 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 73 [ D.5020 ])
        (mem/f:DI (reg/f:DI 100) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 74 [ D.5021 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:216 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 102)
        (reg:DI 74 [ D.5021 ])) mSector.c:216 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 74 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 40 39 41 5 (set (reg:DI 75 [ D.5021 ])
        (reg:DI 102)) mSector.c:216 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 76 [ D.5020 ])
                (plus:DI (reg/f:DI 73 [ D.5020 ])
                    (reg:DI 75 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 77 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76 [ D.5020 ])
                (const_int 8 [0x8])) [0 _24->nvp+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 43 42 44 5 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:216 -1
     (nil))
(insn 44 43 45 5 (set (reg:DI 78 [ D.5021 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:216 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 79 [ D.5021 ])
                (ashift:DI (reg:DI 78 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 80 [ D.5022 ])
                (plus:DI (reg/f:DI 77 [ D.5022 ])
                    (reg:DI 79 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 47 46 48 5 (set (reg/f:DI 81 [ D.5023 ])
        (mem/f:DI (reg/f:DI 80 [ D.5022 ]) [0 *_28+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg/f:DI 82 [ D.5023 ])
                (plus:DI (reg/f:DI 81 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 49 48 50 5 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:216 -1
     (nil))
(insn 50 49 51 5 (set (mem:XF (reg/f:DI 82 [ D.5023 ]) [0 *_30+0 S16 A128])
        (reg:XF 105)) mSector.c:216 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU,DFS_BACK)
(code_label 52 51 53 6 83 "" [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 55 54 56 6 (set (reg/f:DI 67 [ D.5020 ])
        (mem/f:DI (reg/f:DI 106) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 -1
     (nil))
(insn 56 55 57 6 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 68 [ D.5021 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:216 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 108)
        (reg:DI 68 [ D.5021 ])) mSector.c:216 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 68 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 63 62 64 6 (set (reg:DI 69 [ D.5021 ])
        (reg:DI 108)) mSector.c:216 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 70 [ D.5020 ])
                (plus:DI (reg/f:DI 67 [ D.5020 ])
                    (reg:DI 69 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 65 64 66 6 (set (reg:SI 71 [ D.5019 ])
        (mem/j:SI (plus:DI (reg/f:DI 70 [ D.5020 ])
                (const_int 4 [0x4])) [0 _18->n_nvp+0 S4 A32])) mSector.c:216 -1
     (nil))
(insn 66 65 68 6 (parallel [
            (set (reg:SI 72 [ D.5019 ])
                (plus:SI (reg:SI 71 [ D.5019 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 -1
     (nil))
(insn 68 66 69 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 72 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) mSector.c:216 -1
     (nil))
(jump_insn 69 68 70 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:216 -1
     (nil)
 -> 67)
;;  succ:       5
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 7 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:217 -1
     (nil))
(insn 72 71 73 7 (set (reg/f:DI 83 [ D.5020 ])
        (mem/f:DI (reg/f:DI 110) [0 *flight_6(D)+0 S8 A64])) mSector.c:217 -1
     (nil))
(insn 73 72 74 7 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:217 -1
     (nil))
(insn 74 73 75 7 (set (reg:DI 84 [ D.5021 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:217 -1
     (nil))
(insn 75 74 76 7 (set (reg:DI 112)
        (reg:DI 84 [ D.5021 ])) mSector.c:217 -1
     (nil))
(insn 76 75 77 7 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 77 76 78 7 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 84 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 78 77 79 7 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 79 78 80 7 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:217 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 80 79 81 7 (set (reg:DI 85 [ D.5021 ])
        (reg:DI 112)) mSector.c:217 -1
     (nil))
(insn 81 80 82 7 (parallel [
            (set (reg/f:DI 86 [ D.5020 ])
                (plus:DI (reg/f:DI 83 [ D.5020 ])
                    (reg:DI 85 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 82 81 83 7 (set (reg/f:DI 87 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 86 [ D.5020 ])
                (const_int 8 [0x8])) [0 _35->nvp+0 S8 A64])) mSector.c:217 -1
     (nil))
(insn 83 82 84 7 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:217 -1
     (nil))
(insn 84 83 85 7 (set (reg:DI 88 [ D.5021 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:217 -1
     (nil))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 89 [ D.5021 ])
                (ashift:DI (reg:DI 88 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 86 85 87 7 (parallel [
            (set (reg/f:DI 90 [ D.5022 ])
                (plus:DI (reg/f:DI 87 [ D.5022 ])
                    (reg:DI 89 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 87 86 88 7 (set (reg/f:DI 91 [ D.5023 ])
        (mem/f:DI (reg/f:DI 90 [ D.5022 ]) [0 *_39+0 S8 A64])) mSector.c:217 -1
     (nil))
(insn 88 87 89 7 (parallel [
            (set (reg/f:DI 92 [ D.5023 ])
                (plus:DI (reg/f:DI 91 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 -1
     (nil))
(insn 89 88 90 7 (set (reg:XF 115)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:217 -1
     (nil))
(insn 90 89 91 7 (set (mem:XF (reg/f:DI 92 [ D.5023 ]) [0 *_41+0 S16 A128])
        (reg:XF 115)) mSector.c:217 -1
     (nil))
(insn 91 90 92 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:214 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              7 (FALLTHRU,DFS_BACK)
(code_label 92 91 93 8 82 "" [1 uses])
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:214 -1
     (nil))
(insn 95 94 97 8 (set (reg:SI 59 [ D.5019 ])
        (mem:SI (reg/f:DI 116) [0 *Nflight_4(D)+0 S4 A32])) mSector.c:214 -1
     (nil))
(insn 97 95 98 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mSector.c:214 -1
     (nil))
(jump_insn 98 97 99 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) mSector.c:214 -1
     (nil)
 -> 96)
;;  succ:       4
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 103 9 (set (reg:SI 93 [ D.5019 ])
        (const_int 1 [0x1])) mSector.c:220 -1
     (nil))
(insn 103 100 107 9 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.5019 ])) mSector.c:220 -1
     (nil))
(insn 107 103 110 9 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) mSector.c:221 -1
     (nil))
(insn 110 107 0 9 (use (reg/i:SI 0 ax)) mSector.c:221 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function set_boundary_flag_onFlight (set_boundary_flag_onFlight, funcdef_no=13, decl_uid=1890, cgraph_uid=13)

set_boundary_flag_onFlight (struct Aircraft_t * * f, int * Nflight, struct CONF_t c)
{
  int N;
  int j;
  int i;
  int D.4857;
  int D.4856;
  int D.4855;
  int D.4854;
  struct Aircraft_t * D.4853;
  long unsigned int D.4852;
  long unsigned int D.4851;
  struct Aircraft_t * D.4850;
  struct Aircraft_t * D.4849;
  long unsigned int D.4848;
  long unsigned int D.4847;
  struct Aircraft_t * D.4846;
  int D.4843;
  struct Aircraft_t * D.4842;
  long unsigned int D.4841;
  long unsigned int D.4840;
  struct Aircraft_t * D.4839;
  int D.4838;
  struct Aircraft_t * D.4837;
  long unsigned int D.4836;
  long unsigned int D.4835;
  struct Aircraft_t * D.4834;
  int D.4833;
  struct Aircraft_t * D.4832;
  long unsigned int D.4831;
  long unsigned int D.4830;
  struct Aircraft_t * D.4829;
  int D.4826;
  struct Aircraft_t * D.4825;
  long unsigned int D.4824;
  long unsigned int D.4823;
  struct Aircraft_t * D.4822;
  int D.4821;
  struct Aircraft_t * D.4820;
  long unsigned int D.4819;
  long unsigned int D.4818;
  struct Aircraft_t * D.4817;
  struct Aircraft_t * D.4816;
  long unsigned int D.4815;
  long unsigned int D.4814;
  struct Aircraft_t * D.4813;
  int D.4810;
  long double * D.4809;
  long double * * D.4808;
  sizetype D.4807;
  long unsigned int D.4806;
  long unsigned int D.4805;
  long double * * D.4804;
  struct Aircraft_t * D.4803;
  long unsigned int D.4802;
  long unsigned int D.4801;
  struct Aircraft_t * D.4800;
  long double * * D.4799;
  int D.4798;
  int D.4795;
  long double * D.4794;
  long double * * D.4793;
  long unsigned int D.4792;
  long unsigned int D.4791;
  long double * * D.4790;
  struct Aircraft_t * D.4789;
  long unsigned int D.4788;
  long unsigned int D.4787;
  struct Aircraft_t * D.4786;
  long double * * D.4785;
  int D.4784;
  int D.4783;
  struct Aircraft_t * D.4782;
  long unsigned int D.4781;
  long unsigned int D.4780;
  struct Aircraft_t * D.4779;
  int i.3;
  int D.4775;
  int D.4774;
  struct Aircraft_t * D.4773;
  long unsigned int D.4772;
  long unsigned int D.4771;
  struct Aircraft_t * D.4770;
  int D.4769;
  int D.4768;
  struct Aircraft_t * D.4767;
  long unsigned int D.4766;
  long unsigned int D.4765;
  struct Aircraft_t * D.4764;
  struct Aircraft_t * D.4763;
  long unsigned int D.4762;
  long unsigned int D.4761;
  struct Aircraft_t * D.4760;
  int D.4759;
  long double * D.4758;
  long double * * D.4757;
  sizetype D.4756;
  sizetype D.4755;
  sizetype D.4754;
  long double * * D.4753;
  struct Aircraft_t * D.4752;
  long unsigned int D.4751;
  long unsigned int D.4750;
  struct Aircraft_t * D.4749;
  long double * * D.4748;
  int D.4747;
  int D.4745;
  long double * D.4744;
  long double * * D.4743;
  long unsigned int D.4742;
  long unsigned int D.4741;
  long double * * D.4740;
  struct Aircraft_t * D.4739;
  long unsigned int D.4738;
  long unsigned int D.4737;
  struct Aircraft_t * D.4736;
  long double * * D.4735;
  int D.4734;
  int D.4731;
  int D.4730;
  struct Aircraft_t * D.4729;
  long unsigned int D.4728;
  long unsigned int D.4727;
  struct Aircraft_t * D.4726;
  long double * D.4725;
  long double * D.4724;
  long double * * D.4723;
  long unsigned int D.4722;
  long unsigned int D.4721;
  long double * * D.4720;
  struct Aircraft_t * D.4719;
  long unsigned int D.4718;
  long unsigned int D.4717;
  struct Aircraft_t * D.4716;
  long double * D.4715;
  long double * D.4714;
  long double * * D.4713;
  long unsigned int D.4712;
  long unsigned int D.4711;
  long double * * D.4710;
  struct Aircraft_t * D.4709;
  long unsigned int D.4708;
  long unsigned int D.4707;
  struct Aircraft_t * D.4706;
  long double D.4704;
  long double * D.4703;
  long double * D.4702;
  long double * * D.4701;
  long unsigned int D.4700;
  long unsigned int D.4699;
  long double * * D.4698;
  struct Aircraft_t * D.4697;
  long unsigned int D.4696;
  long unsigned int D.4695;
  struct Aircraft_t * D.4694;
  int D.4693;
  long double * D.4692;
  long double * * D.4691;
  sizetype D.4690;
  sizetype D.4689;
  sizetype D.4688;
  long double * * D.4687;
  struct Aircraft_t * D.4686;
  long unsigned int D.4685;
  long unsigned int D.4684;
  struct Aircraft_t * D.4683;
  long double * * D.4682;
  int D.4681;
  int D.4679;
  long double * D.4678;
  long double * * D.4677;
  long unsigned int D.4676;
  long unsigned int D.4675;
  long double * * D.4674;
  struct Aircraft_t * D.4673;
  long unsigned int D.4672;
  long unsigned int D.4671;
  struct Aircraft_t * D.4670;
  long double * * D.4669;
  int D.4668;
  struct Aircraft_t * D.4664;
  long unsigned int D.4663;
  long unsigned int D.4662;
  struct Aircraft_t * D.4661;
  struct Aircraft_t * D.4660;
  long unsigned int D.4659;
  long unsigned int D.4658;
  struct Aircraft_t * D.4657;
  int _8;
  struct Aircraft_t * _10;
  long unsigned int _11;
  long unsigned int _12;
  struct Aircraft_t * _13;
  struct Aircraft_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  struct Aircraft_t * _17;
  struct Aircraft_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  int _24;
  int _25;
  int _26;
  long double * * _27;
  struct Aircraft_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  struct Aircraft_t * _31;
  long double * * _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * * _35;
  long double * _36;
  int _37;
  int _38;
  long double * * _39;
  struct Aircraft_t * _40;
  long unsigned int _41;
  long unsigned int _42;
  struct Aircraft_t * _43;
  long double * * _44;
  sizetype _45;
  sizetype _46;
  sizetype _47;
  long double * * _48;
  long double * _49;
  int _50;
  struct Aircraft_t * _51;
  long unsigned int _52;
  long unsigned int _53;
  struct Aircraft_t * _54;
  long double * * _55;
  long unsigned int _56;
  long unsigned int _57;
  long double * * _58;
  long double * _59;
  long double * _60;
  long double _61;
  struct Aircraft_t * _62;
  long unsigned int _63;
  long unsigned int _64;
  struct Aircraft_t * _65;
  long double * * _66;
  long unsigned int _67;
  long unsigned int _68;
  long double * * _69;
  long double * _70;
  long double * _71;
  struct Aircraft_t * _72;
  long unsigned int _73;
  long unsigned int _74;
  struct Aircraft_t * _75;
  long double * * _76;
  long unsigned int _77;
  long unsigned int _78;
  long double * * _79;
  long double * _80;
  long double * _81;
  struct Aircraft_t * _84;
  long unsigned int _85;
  long unsigned int _86;
  struct Aircraft_t * _87;
  int _88;
  int _89;
  int _90;
  long double * * _91;
  struct Aircraft_t * _92;
  long unsigned int _93;
  long unsigned int _94;
  struct Aircraft_t * _95;
  long double * * _96;
  long unsigned int _97;
  long unsigned int _98;
  long double * * _99;
  long double * _100;
  int _101;
  int _102;
  long double * * _103;
  struct Aircraft_t * _104;
  long unsigned int _105;
  long unsigned int _106;
  struct Aircraft_t * _107;
  long double * * _108;
  sizetype _109;
  sizetype _110;
  sizetype _111;
  long double * * _112;
  long double * _113;
  int _114;
  struct Aircraft_t * _116;
  long unsigned int _117;
  long unsigned int _118;
  struct Aircraft_t * _119;
  struct Aircraft_t * _120;
  long unsigned int _121;
  long unsigned int _122;
  struct Aircraft_t * _123;
  int _124;
  int _125;
  struct Aircraft_t * _128;
  long unsigned int _129;
  long unsigned int _130;
  struct Aircraft_t * _131;
  int _132;
  struct Aircraft_t * _134;
  long unsigned int _135;
  long unsigned int _136;
  struct Aircraft_t * _137;
  int _138;
  int _139;
  long double * * _140;
  struct Aircraft_t * _141;
  long unsigned int _142;
  long unsigned int _143;
  struct Aircraft_t * _144;
  long double * * _145;
  long unsigned int _146;
  long unsigned int _147;
  long double * * _148;
  long double * _149;
  int _150;
  int _151;
  long double * * _152;
  struct Aircraft_t * _153;
  long unsigned int _154;
  long unsigned int _155;
  struct Aircraft_t * _156;
  long double * * _157;
  long unsigned int _158;
  long unsigned int _159;
  sizetype _160;
  long double * * _161;
  long double * _162;
  int _163;
  struct Aircraft_t * _164;
  long unsigned int _165;
  long unsigned int _166;
  struct Aircraft_t * _167;
  struct Aircraft_t * _169;
  long unsigned int _170;
  long unsigned int _171;
  struct Aircraft_t * _172;
  int _173;
  struct Aircraft_t * _174;
  long unsigned int _175;
  long unsigned int _176;
  struct Aircraft_t * _177;
  int _178;
  struct Aircraft_t * _179;
  long unsigned int _180;
  long unsigned int _181;
  struct Aircraft_t * _182;
  int _183;
  struct Aircraft_t * _184;
  long unsigned int _185;
  long unsigned int _186;
  struct Aircraft_t * _187;
  int _188;
  struct Aircraft_t * _189;
  long unsigned int _190;
  long unsigned int _191;
  struct Aircraft_t * _192;
  struct Aircraft_t * _193;
  long unsigned int _194;
  long unsigned int _195;
  struct Aircraft_t * _196;
  int _197;
  int _198;
  int _200;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 30>;
;;    succ:       30

;;   basic block 3, loop depth 0
;;    pred:       30
  _10 = *f_9(D);
  _11 = (long unsigned int) i_2;
  _12 = _11 * 160;
  _13 = _10 + _12;
  _13->st_indx = 1;
  _14 = *f_9(D);
  _15 = (long unsigned int) i_2;
  _16 = _15 * 160;
  _17 = _14 + _16;
  _17->ready = 0;
  j_18 = 0;
  N_19 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       10
  _26 = c.Nbound;
  _27 = c.bound;
  _28 = *f_9(D);
  _29 = (long unsigned int) i_2;
  _30 = _29 * 160;
  _31 = _28 + _30;
  _32 = _31->nvp;
  _33 = (long unsigned int) j_3;
  _34 = _33 * 8;
  _35 = _32 + _34;
  _36 = *_35;
  _37 = point_in_polygon (_36, _27, _26);
  if (_37 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _38 = c.Nbound;
  _39 = c.bound;
  _40 = *f_9(D);
  _41 = (long unsigned int) i_2;
  _42 = _41 * 160;
  _43 = _40 + _42;
  _44 = _43->nvp;
  _45 = (sizetype) j_3;
  _46 = _45 + 1;
  _47 = _46 * 8;
  _48 = _44 + _47;
  _49 = *_48;
  _50 = point_in_polygon (_49, _39, _38);
  if (_50 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _51 = *f_9(D);
  _52 = (long unsigned int) i_2;
  _53 = _52 * 160;
  _54 = _51 + _53;
  _55 = _54->nvp;
  _56 = (long unsigned int) j_3;
  _57 = _56 * 8;
  _58 = _55 + _57;
  _59 = *_58;
  _60 = _59 + 32;
  _61 = *_60;
  if (_61 >= 2.4e+2)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _62 = *f_9(D);
  _63 = (long unsigned int) i_2;
  _64 = _63 * 160;
  _65 = _62 + _64;
  _66 = _65->nvp;
  _67 = (long unsigned int) j_3;
  _68 = _67 * 8;
  _69 = _66 + _68;
  _70 = *_69;
  _71 = _70 + 48;
  *_71 = 1.0e+0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
  _72 = *f_9(D);
  _73 = (long unsigned int) i_2;
  _74 = _73 * 160;
  _75 = _72 + _74;
  _76 = _75->nvp;
  _77 = (long unsigned int) j_3;
  _78 = _77 * 8;
  _79 = _76 + _78;
  _80 = *_79;
  _81 = _80 + 48;
  *_81 = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  j_82 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_3 = PHI <j_18(3), j_82(9)>
  _20 = *f_9(D);
  _21 = (long unsigned int) i_2;
  _22 = _21 * 160;
  _23 = _20 + _22;
  _24 = _23->n_nvp;
  _25 = _24 + -1;
  if (_25 > j_3)
    goto <bb 4>;
  else
    goto <bb 11>;
;;    succ:       4
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  j_83 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 12, loop depth 0
;;    pred:       16
  _90 = c.Nbound;
  _91 = c.bound;
  _92 = *f_9(D);
  _93 = (long unsigned int) i_2;
  _94 = _93 * 160;
  _95 = _92 + _94;
  _96 = _95->nvp;
  _97 = (long unsigned int) j_4;
  _98 = _97 * 8;
  _99 = _96 + _98;
  _100 = *_99;
  _101 = point_in_polygon (_100, _91, _90);
  if (_101 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  _102 = c.Nbound;
  _103 = c.bound;
  _104 = *f_9(D);
  _105 = (long unsigned int) i_2;
  _106 = _105 * 160;
  _107 = _104 + _106;
  _108 = _107->nvp;
  _109 = (sizetype) j_4;
  _110 = _109 + 1;
  _111 = _110 * 8;
  _112 = _108 + _111;
  _113 = *_112;
  _114 = point_in_polygon (_113, _103, _102);
  if (_114 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  _116 = *f_9(D);
  _117 = (long unsigned int) i_2;
  _118 = _117 * 160;
  _119 = _116 + _118;
  _119->bound[0] = j_4;
  goto <bb 17>;
;;    succ:       17

;;   basic block 15, loop depth 0
;;    pred:       13
  j_115 = j_4 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       11
;;                15
  # j_4 = PHI <j_83(11), j_115(15)>
  _84 = *f_9(D);
  _85 = (long unsigned int) i_2;
  _86 = _85 * 160;
  _87 = _84 + _86;
  _88 = _87->n_nvp;
  _89 = _88 + -1;
  if (_89 > j_4)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 17, loop depth 0
;;    pred:       14
;;                16
  _120 = *f_9(D);
  _121 = (long unsigned int) i_2;
  _122 = _121 * 160;
  _123 = _120 + _122;
  _124 = _123->n_nvp;
  _125 = _124 + -1;
  if (_125 == j_4)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 0
;;    pred:       17
  i.3_126 = i_2;
  i_127 = i.3_126 + -1;
  remove_aircraft (f_9(D), Nflight_7(D), i.3_126);
  _128 = *f_9(D);
  _129 = (long unsigned int) i_127;
  _130 = _129 * 160;
  _131 = _128 + _130;
  _132 = _131->ID;
  printf ("Removed %d Aircraft\n", _132);
  // predicted unlikely by continue predictor.
  goto <bb 29>;
;;    succ:       29

;;   basic block 19, loop depth 0
;;    pred:       17
  j_133 = j_4 + 1;
  goto <bb 24>;
;;    succ:       24

;;   basic block 20, loop depth 0
;;    pred:       24
  _139 = c.Nbound;
  _140 = c.bound;
  _141 = *f_9(D);
  _142 = (long unsigned int) i_2;
  _143 = _142 * 160;
  _144 = _141 + _143;
  _145 = _144->nvp;
  _146 = (long unsigned int) j_5;
  _147 = _146 * 8;
  _148 = _145 + _147;
  _149 = *_148;
  _150 = point_in_polygon (_149, _140, _139);
  if (_150 == 0)
    goto <bb 21>;
  else
    goto <bb 23>;
;;    succ:       21
;;                23

;;   basic block 21, loop depth 0
;;    pred:       20
  _151 = c.Nbound;
  _152 = c.bound;
  _153 = *f_9(D);
  _154 = (long unsigned int) i_2;
  _155 = _154 * 160;
  _156 = _153 + _155;
  _157 = _156->nvp;
  _158 = (long unsigned int) j_5;
  _159 = _158 * 8;
  _160 = _159 + 18446744073709551608;
  _161 = _157 + _160;
  _162 = *_161;
  _163 = point_in_polygon (_162, _152, _151);
  if (_163 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22
;;                23

;;   basic block 22, loop depth 0
;;    pred:       21
  _164 = *f_9(D);
  _165 = (long unsigned int) i_2;
  _166 = _165 * 160;
  _167 = _164 + _166;
  _167->bound[1] = j_5;
  goto <bb 25>;
;;    succ:       25

;;   basic block 23, loop depth 0
;;    pred:       20
;;                21
  j_168 = j_5 + 1;
;;    succ:       24

;;   basic block 24, loop depth 0
;;    pred:       19
;;                23
  # j_5 = PHI <j_133(19), j_168(23)>
  _134 = *f_9(D);
  _135 = (long unsigned int) i_2;
  _136 = _135 * 160;
  _137 = _134 + _136;
  _138 = _137->n_nvp;
  if (_138 > j_5)
    goto <bb 20>;
  else
    goto <bb 25>;
;;    succ:       20
;;                25

;;   basic block 25, loop depth 0
;;    pred:       22
;;                24
  _169 = *f_9(D);
  _170 = (long unsigned int) i_2;
  _171 = _170 * 160;
  _172 = _169 + _171;
  _173 = _172->n_nvp;
  if (_173 == j_5)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 0
;;    pred:       25
  _174 = *f_9(D);
  _175 = (long unsigned int) i_2;
  _176 = _175 * 160;
  _177 = _174 + _176;
  _178 = j_5 + -1;
  _177->bound[1] = _178;
;;    succ:       27

;;   basic block 27, loop depth 0
;;    pred:       25
;;                26
  _179 = *f_9(D);
  _180 = (long unsigned int) i_2;
  _181 = _180 * 160;
  _182 = _179 + _181;
  _183 = _182->bound[0];
  _184 = *f_9(D);
  _185 = (long unsigned int) i_2;
  _186 = _185 * 160;
  _187 = _184 + _186;
  _188 = _187->bound[1];
  if (_183 == _188)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28
;;                29

;;   basic block 28, loop depth 0
;;    pred:       27
  __builtin_puts (&"SOmetingh wrong"[0]);
  _189 = *f_9(D);
  _190 = (long unsigned int) i_2;
  _191 = _190 * 160;
  _192 = _189 + _191;
  _193 = *f_9(D);
  _194 = (long unsigned int) i_2;
  _195 = _194 * 160;
  _196 = _193 + _195;
  _197 = _196->bound[1];
  _198 = _197 + 1;
  _192->bound[1] = _198;
;;    succ:       29

;;   basic block 29, loop depth 0
;;    pred:       18
;;                27
;;                28
  # i_1 = PHI <i_127(18), i_2(27), i_2(28)>
  i_199 = i_1 + 1;
;;    succ:       30

;;   basic block 30, loop depth 0
;;    pred:       2
;;                29
  # i_2 = PHI <i_6(2), i_199(29)>
  _8 = *Nflight_7(D);
  if (_8 > i_2)
    goto <bb 3>;
  else
    goto <bb 31>;
;;    succ:       3
;;                31

;;   basic block 31, loop depth 0
;;    pred:       30
  _200 = 1;
;;    succ:       32

;;   basic block 32, loop depth 0
;;    pred:       31
<L31>:
  return _200;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (j_3 - 3 )
Partition 4 (j_4 - 4 )
Partition 5 (j_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (Nflight_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (f_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (j_18 - 18 )
Partition 19 (N_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (j_82 - 82 )
Partition 83 (j_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (j_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (i.3_126 - 126 )
Partition 127 (i_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (j_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (_165 - 165 )
Partition 166 (_166 - 166 )
Partition 167 (_167 - 167 )
Partition 168 (j_168 - 168 )
Partition 169 (_169 - 169 )
Partition 170 (_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (_172 - 172 )
Partition 173 (_173 - 173 )
Partition 174 (_174 - 174 )
Partition 175 (_175 - 175 )
Partition 176 (_176 - 176 )
Partition 177 (_177 - 177 )
Partition 178 (_178 - 178 )
Partition 179 (_179 - 179 )
Partition 180 (_180 - 180 )
Partition 181 (_181 - 181 )
Partition 182 (_182 - 182 )
Partition 183 (_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )
Partition 190 (_190 - 190 )
Partition 191 (_191 - 191 )
Partition 192 (_192 - 192 )
Partition 193 (_193 - 193 )
Partition 194 (_194 - 194 )
Partition 195 (_195 - 195 )
Partition 196 (_196 - 196 )
Partition 197 (_197 - 197 )
Partition 198 (_198 - 198 )
Partition 199 (i_199 - 199 )
Partition 200 (_200 - 200 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nflight_7(D) - 7 )
Partition 7 (f_9(D) - 9 )
Partition 8 (j_18 - 18 )
Partition 9 (j_82 - 82 )
Partition 10 (j_83 - 83 )
Partition 11 (j_115 - 115 )
Partition 12 (i_127 - 127 )
Partition 13 (j_133 - 133 )
Partition 14 (j_168 - 168 )
Partition 15 (i_199 - 199 )


Live on entry to BB2 : Nflight_7(D)  f_9(D)  

Live on entry to BB3 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB4 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB5 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB6 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB7 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB8 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB9 : i_2  j_3  Nflight_7(D)  f_9(D)  

Live on entry to BB10 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB11 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB12 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB13 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB14 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB15 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB16 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB17 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB18 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB19 : i_2  j_4  Nflight_7(D)  f_9(D)  

Live on entry to BB20 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB21 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB22 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB23 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB24 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB25 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB26 : i_2  j_5  Nflight_7(D)  f_9(D)  

Live on entry to BB27 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB28 : i_2  Nflight_7(D)  f_9(D)  

Live on entry to BB29 : Nflight_7(D)  f_9(D)  

Live on entry to BB30 : Nflight_7(D)  f_9(D)  

Live on entry to BB31 : 

Live on entry to BB32 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_127
(2147483646) i_1 <-> i_199
(2147483646) j_3 <-> j_4
(2147483646) j_3 <-> j_5
(2147483646) j_3 <-> j_18
(2147483646) j_3 <-> j_82
(2147483646) j_3 <-> j_83
(2147483646) j_3 <-> j_115
(2147483646) j_3 <-> j_133
(2147483646) j_3 <-> j_168

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (j_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (j_5 - 5 )
Partition 5 (i_6 - 6 )
Partition 6 (Nflight_7(D) - 7 )
Partition 7 (f_9(D) - 9 )
Partition 8 (j_18 - 18 )
Partition 9 (j_82 - 82 )
Partition 10 (j_83 - 83 )
Partition 11 (j_115 - 115 )
Partition 12 (i_127 - 127 )
Partition 13 (j_133 - 133 )
Partition 14 (j_168 - 168 )
Partition 15 (i_199 - 199 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (6)i_6 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (127)i_127 [map: 0, 12] : Success -> 0
Coalesce list: (1)i_1 & (199)i_199 [map: 0, 15] : Success -> 0
Coalesce list: (3)j_3 & (4)j_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)j_3 & (5)j_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)j_3 & (18)j_18 [map: 2, 8] : Success -> 2
Coalesce list: (3)j_3 & (82)j_82 [map: 2, 9] : Success -> 2
Coalesce list: (3)j_3 & (83)j_83 [map: 2, 10] : Success -> 2
Coalesce list: (3)j_3 & (115)j_115 [map: 2, 11] : Success -> 2
Coalesce list: (3)j_3 & (133)j_133 [map: 2, 13] : Success -> 2
Coalesce list: (3)j_3 & (168)j_168 [map: 2, 14] : Success -> 2
Coalesce list: (2)i_1 & (199)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (6)i_1: Already Coalesced.
Coalesce list: (5)j_3 & (168)j_3: Already Coalesced.
Coalesce list: (5)j_3 & (133)j_3: Already Coalesced.
Coalesce list: (4)j_3 & (115)j_3: Already Coalesced.
Coalesce list: (4)j_3 & (83)j_3: Already Coalesced.
Coalesce list: (3)j_3 & (82)j_3: Already Coalesced.
Coalesce list: (3)j_3 & (18)j_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 6 127 199 )
Partition 1 (j_3 - 3 4 5 18 82 83 115 133 168 )
Partition 2 (Nflight_7(D) - 7 )
Partition 3 (_8 - 8 )
Partition 4 (f_9(D) - 9 )
Partition 5 (_10 - 10 )
Partition 6 (_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (N_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_24 - 24 )
Partition 19 (_25 - 25 )
Partition 20 (_26 - 26 )
Partition 21 (_27 - 27 )
Partition 22 (_28 - 28 )
Partition 23 (_29 - 29 )
Partition 24 (_30 - 30 )
Partition 25 (_31 - 31 )
Partition 26 (_32 - 32 )
Partition 27 (_33 - 33 )
Partition 28 (_34 - 34 )
Partition 29 (_35 - 35 )
Partition 30 (_36 - 36 )
Partition 31 (_37 - 37 )
Partition 32 (_38 - 38 )
Partition 33 (_39 - 39 )
Partition 34 (_40 - 40 )
Partition 35 (_41 - 41 )
Partition 36 (_42 - 42 )
Partition 37 (_43 - 43 )
Partition 38 (_44 - 44 )
Partition 39 (_45 - 45 )
Partition 40 (_46 - 46 )
Partition 41 (_47 - 47 )
Partition 42 (_48 - 48 )
Partition 43 (_49 - 49 )
Partition 44 (_50 - 50 )
Partition 45 (_51 - 51 )
Partition 46 (_52 - 52 )
Partition 47 (_53 - 53 )
Partition 48 (_54 - 54 )
Partition 49 (_55 - 55 )
Partition 50 (_56 - 56 )
Partition 51 (_57 - 57 )
Partition 52 (_58 - 58 )
Partition 53 (_59 - 59 )
Partition 54 (_60 - 60 )
Partition 55 (_61 - 61 )
Partition 56 (_62 - 62 )
Partition 57 (_63 - 63 )
Partition 58 (_64 - 64 )
Partition 59 (_65 - 65 )
Partition 60 (_66 - 66 )
Partition 61 (_67 - 67 )
Partition 62 (_68 - 68 )
Partition 63 (_69 - 69 )
Partition 64 (_70 - 70 )
Partition 65 (_71 - 71 )
Partition 66 (_72 - 72 )
Partition 67 (_73 - 73 )
Partition 68 (_74 - 74 )
Partition 69 (_75 - 75 )
Partition 70 (_76 - 76 )
Partition 71 (_77 - 77 )
Partition 72 (_78 - 78 )
Partition 73 (_79 - 79 )
Partition 74 (_80 - 80 )
Partition 75 (_81 - 81 )
Partition 76 (_84 - 84 )
Partition 77 (_85 - 85 )
Partition 78 (_86 - 86 )
Partition 79 (_87 - 87 )
Partition 80 (_88 - 88 )
Partition 81 (_89 - 89 )
Partition 82 (_90 - 90 )
Partition 83 (_91 - 91 )
Partition 84 (_92 - 92 )
Partition 85 (_93 - 93 )
Partition 86 (_94 - 94 )
Partition 87 (_95 - 95 )
Partition 88 (_96 - 96 )
Partition 89 (_97 - 97 )
Partition 90 (_98 - 98 )
Partition 91 (_99 - 99 )
Partition 92 (_100 - 100 )
Partition 93 (_101 - 101 )
Partition 94 (_102 - 102 )
Partition 95 (_103 - 103 )
Partition 96 (_104 - 104 )
Partition 97 (_105 - 105 )
Partition 98 (_106 - 106 )
Partition 99 (_107 - 107 )
Partition 100 (_108 - 108 )
Partition 101 (_109 - 109 )
Partition 102 (_110 - 110 )
Partition 103 (_111 - 111 )
Partition 104 (_112 - 112 )
Partition 105 (_113 - 113 )
Partition 106 (_114 - 114 )
Partition 107 (_116 - 116 )
Partition 108 (_117 - 117 )
Partition 109 (_118 - 118 )
Partition 110 (_119 - 119 )
Partition 111 (_120 - 120 )
Partition 112 (_121 - 121 )
Partition 113 (_122 - 122 )
Partition 114 (_123 - 123 )
Partition 115 (_124 - 124 )
Partition 116 (_125 - 125 )
Partition 117 (i.3_126 - 126 )
Partition 118 (_128 - 128 )
Partition 119 (_129 - 129 )
Partition 120 (_130 - 130 )
Partition 121 (_131 - 131 )
Partition 122 (_132 - 132 )
Partition 123 (_134 - 134 )
Partition 124 (_135 - 135 )
Partition 125 (_136 - 136 )
Partition 126 (_137 - 137 )
Partition 127 (_138 - 138 )
Partition 128 (_139 - 139 )
Partition 129 (_140 - 140 )
Partition 130 (_141 - 141 )
Partition 131 (_142 - 142 )
Partition 132 (_143 - 143 )
Partition 133 (_144 - 144 )
Partition 134 (_145 - 145 )
Partition 135 (_146 - 146 )
Partition 136 (_147 - 147 )
Partition 137 (_148 - 148 )
Partition 138 (_149 - 149 )
Partition 139 (_150 - 150 )
Partition 140 (_151 - 151 )
Partition 141 (_152 - 152 )
Partition 142 (_153 - 153 )
Partition 143 (_154 - 154 )
Partition 144 (_155 - 155 )
Partition 145 (_156 - 156 )
Partition 146 (_157 - 157 )
Partition 147 (_158 - 158 )
Partition 148 (_159 - 159 )
Partition 149 (_160 - 160 )
Partition 150 (_161 - 161 )
Partition 151 (_162 - 162 )
Partition 152 (_163 - 163 )
Partition 153 (_164 - 164 )
Partition 154 (_165 - 165 )
Partition 155 (_166 - 166 )
Partition 156 (_167 - 167 )
Partition 157 (_169 - 169 )
Partition 158 (_170 - 170 )
Partition 159 (_171 - 171 )
Partition 160 (_172 - 172 )
Partition 161 (_173 - 173 )
Partition 162 (_174 - 174 )
Partition 163 (_175 - 175 )
Partition 164 (_176 - 176 )
Partition 165 (_177 - 177 )
Partition 166 (_178 - 178 )
Partition 167 (_179 - 179 )
Partition 168 (_180 - 180 )
Partition 169 (_181 - 181 )
Partition 170 (_182 - 182 )
Partition 171 (_183 - 183 )
Partition 172 (_184 - 184 )
Partition 173 (_185 - 185 )
Partition 174 (_186 - 186 )
Partition 175 (_187 - 187 )
Partition 176 (_188 - 188 )
Partition 177 (_189 - 189 )
Partition 178 (_190 - 190 )
Partition 179 (_191 - 191 )
Partition 180 (_192 - 192 )
Partition 181 (_193 - 193 )
Partition 182 (_194 - 194 )
Partition 183 (_195 - 195 )
Partition 184 (_196 - 196 )
Partition 185 (_197 - 197 )
Partition 186 (_198 - 198 )
Partition 187 (_200 - 200 )

set_boundary_flag_onFlight (struct Aircraft_t * * f, int * Nflight, struct CONF_t c)
{
  int N;
  int j;
  int i;
  int D.4857;
  int D.4856;
  int D.4855;
  int D.4854;
  struct Aircraft_t * D.4853;
  long unsigned int D.4852;
  long unsigned int D.4851;
  struct Aircraft_t * D.4850;
  struct Aircraft_t * D.4849;
  long unsigned int D.4848;
  long unsigned int D.4847;
  struct Aircraft_t * D.4846;
  int D.4843;
  struct Aircraft_t * D.4842;
  long unsigned int D.4841;
  long unsigned int D.4840;
  struct Aircraft_t * D.4839;
  int D.4838;
  struct Aircraft_t * D.4837;
  long unsigned int D.4836;
  long unsigned int D.4835;
  struct Aircraft_t * D.4834;
  int D.4833;
  struct Aircraft_t * D.4832;
  long unsigned int D.4831;
  long unsigned int D.4830;
  struct Aircraft_t * D.4829;
  int D.4826;
  struct Aircraft_t * D.4825;
  long unsigned int D.4824;
  long unsigned int D.4823;
  struct Aircraft_t * D.4822;
  int D.4821;
  struct Aircraft_t * D.4820;
  long unsigned int D.4819;
  long unsigned int D.4818;
  struct Aircraft_t * D.4817;
  struct Aircraft_t * D.4816;
  long unsigned int D.4815;
  long unsigned int D.4814;
  struct Aircraft_t * D.4813;
  int D.4810;
  long double * D.4809;
  long double * * D.4808;
  sizetype D.4807;
  long unsigned int D.4806;
  long unsigned int D.4805;
  long double * * D.4804;
  struct Aircraft_t * D.4803;
  long unsigned int D.4802;
  long unsigned int D.4801;
  struct Aircraft_t * D.4800;
  long double * * D.4799;
  int D.4798;
  int D.4795;
  long double * D.4794;
  long double * * D.4793;
  long unsigned int D.4792;
  long unsigned int D.4791;
  long double * * D.4790;
  struct Aircraft_t * D.4789;
  long unsigned int D.4788;
  long unsigned int D.4787;
  struct Aircraft_t * D.4786;
  long double * * D.4785;
  int D.4784;
  int D.4783;
  struct Aircraft_t * D.4782;
  long unsigned int D.4781;
  long unsigned int D.4780;
  struct Aircraft_t * D.4779;
  int i.3;
  int D.4775;
  int D.4774;
  struct Aircraft_t * D.4773;
  long unsigned int D.4772;
  long unsigned int D.4771;
  struct Aircraft_t * D.4770;
  int D.4769;
  int D.4768;
  struct Aircraft_t * D.4767;
  long unsigned int D.4766;
  long unsigned int D.4765;
  struct Aircraft_t * D.4764;
  struct Aircraft_t * D.4763;
  long unsigned int D.4762;
  long unsigned int D.4761;
  struct Aircraft_t * D.4760;
  int D.4759;
  long double * D.4758;
  long double * * D.4757;
  sizetype D.4756;
  sizetype D.4755;
  sizetype D.4754;
  long double * * D.4753;
  struct Aircraft_t * D.4752;
  long unsigned int D.4751;
  long unsigned int D.4750;
  struct Aircraft_t * D.4749;
  long double * * D.4748;
  int D.4747;
  int D.4745;
  long double * D.4744;
  long double * * D.4743;
  long unsigned int D.4742;
  long unsigned int D.4741;
  long double * * D.4740;
  struct Aircraft_t * D.4739;
  long unsigned int D.4738;
  long unsigned int D.4737;
  struct Aircraft_t * D.4736;
  long double * * D.4735;
  int D.4734;
  int D.4731;
  int D.4730;
  struct Aircraft_t * D.4729;
  long unsigned int D.4728;
  long unsigned int D.4727;
  struct Aircraft_t * D.4726;
  long double * D.4725;
  long double * D.4724;
  long double * * D.4723;
  long unsigned int D.4722;
  long unsigned int D.4721;
  long double * * D.4720;
  struct Aircraft_t * D.4719;
  long unsigned int D.4718;
  long unsigned int D.4717;
  struct Aircraft_t * D.4716;
  long double * D.4715;
  long double * D.4714;
  long double * * D.4713;
  long unsigned int D.4712;
  long unsigned int D.4711;
  long double * * D.4710;
  struct Aircraft_t * D.4709;
  long unsigned int D.4708;
  long unsigned int D.4707;
  struct Aircraft_t * D.4706;
  long double D.4704;
  long double * D.4703;
  long double * D.4702;
  long double * * D.4701;
  long unsigned int D.4700;
  long unsigned int D.4699;
  long double * * D.4698;
  struct Aircraft_t * D.4697;
  long unsigned int D.4696;
  long unsigned int D.4695;
  struct Aircraft_t * D.4694;
  int D.4693;
  long double * D.4692;
  long double * * D.4691;
  sizetype D.4690;
  sizetype D.4689;
  sizetype D.4688;
  long double * * D.4687;
  struct Aircraft_t * D.4686;
  long unsigned int D.4685;
  long unsigned int D.4684;
  struct Aircraft_t * D.4683;
  long double * * D.4682;
  int D.4681;
  int D.4679;
  long double * D.4678;
  long double * * D.4677;
  long unsigned int D.4676;
  long unsigned int D.4675;
  long double * * D.4674;
  struct Aircraft_t * D.4673;
  long unsigned int D.4672;
  long unsigned int D.4671;
  struct Aircraft_t * D.4670;
  long double * * D.4669;
  int D.4668;
  struct Aircraft_t * D.4664;
  long unsigned int D.4663;
  long unsigned int D.4662;
  struct Aircraft_t * D.4661;
  struct Aircraft_t * D.4660;
  long unsigned int D.4659;
  long unsigned int D.4658;
  struct Aircraft_t * D.4657;
  int _8;
  struct Aircraft_t * _10;
  long unsigned int _11;
  long unsigned int _12;
  struct Aircraft_t * _13;
  struct Aircraft_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  struct Aircraft_t * _17;
  struct Aircraft_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  struct Aircraft_t * _23;
  int _24;
  int _25;
  int _26;
  long double * * _27;
  struct Aircraft_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  struct Aircraft_t * _31;
  long double * * _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * * _35;
  long double * _36;
  int _37;
  int _38;
  long double * * _39;
  struct Aircraft_t * _40;
  long unsigned int _41;
  long unsigned int _42;
  struct Aircraft_t * _43;
  long double * * _44;
  sizetype _45;
  sizetype _46;
  sizetype _47;
  long double * * _48;
  long double * _49;
  int _50;
  struct Aircraft_t * _51;
  long unsigned int _52;
  long unsigned int _53;
  struct Aircraft_t * _54;
  long double * * _55;
  long unsigned int _56;
  long unsigned int _57;
  long double * * _58;
  long double * _59;
  long double * _60;
  long double _61;
  struct Aircraft_t * _62;
  long unsigned int _63;
  long unsigned int _64;
  struct Aircraft_t * _65;
  long double * * _66;
  long unsigned int _67;
  long unsigned int _68;
  long double * * _69;
  long double * _70;
  long double * _71;
  struct Aircraft_t * _72;
  long unsigned int _73;
  long unsigned int _74;
  struct Aircraft_t * _75;
  long double * * _76;
  long unsigned int _77;
  long unsigned int _78;
  long double * * _79;
  long double * _80;
  long double * _81;
  struct Aircraft_t * _84;
  long unsigned int _85;
  long unsigned int _86;
  struct Aircraft_t * _87;
  int _88;
  int _89;
  int _90;
  long double * * _91;
  struct Aircraft_t * _92;
  long unsigned int _93;
  long unsigned int _94;
  struct Aircraft_t * _95;
  long double * * _96;
  long unsigned int _97;
  long unsigned int _98;
  long double * * _99;
  long double * _100;
  int _101;
  int _102;
  long double * * _103;
  struct Aircraft_t * _104;
  long unsigned int _105;
  long unsigned int _106;
  struct Aircraft_t * _107;
  long double * * _108;
  sizetype _109;
  sizetype _110;
  sizetype _111;
  long double * * _112;
  long double * _113;
  int _114;
  struct Aircraft_t * _116;
  long unsigned int _117;
  long unsigned int _118;
  struct Aircraft_t * _119;
  struct Aircraft_t * _120;
  long unsigned int _121;
  long unsigned int _122;
  struct Aircraft_t * _123;
  int _124;
  int _125;
  struct Aircraft_t * _128;
  long unsigned int _129;
  long unsigned int _130;
  struct Aircraft_t * _131;
  int _132;
  struct Aircraft_t * _134;
  long unsigned int _135;
  long unsigned int _136;
  struct Aircraft_t * _137;
  int _138;
  int _139;
  long double * * _140;
  struct Aircraft_t * _141;
  long unsigned int _142;
  long unsigned int _143;
  struct Aircraft_t * _144;
  long double * * _145;
  long unsigned int _146;
  long unsigned int _147;
  long double * * _148;
  long double * _149;
  int _150;
  int _151;
  long double * * _152;
  struct Aircraft_t * _153;
  long unsigned int _154;
  long unsigned int _155;
  struct Aircraft_t * _156;
  long double * * _157;
  long unsigned int _158;
  long unsigned int _159;
  sizetype _160;
  long double * * _161;
  long double * _162;
  int _163;
  struct Aircraft_t * _164;
  long unsigned int _165;
  long unsigned int _166;
  struct Aircraft_t * _167;
  struct Aircraft_t * _169;
  long unsigned int _170;
  long unsigned int _171;
  struct Aircraft_t * _172;
  int _173;
  struct Aircraft_t * _174;
  long unsigned int _175;
  long unsigned int _176;
  struct Aircraft_t * _177;
  int _178;
  struct Aircraft_t * _179;
  long unsigned int _180;
  long unsigned int _181;
  struct Aircraft_t * _182;
  int _183;
  struct Aircraft_t * _184;
  long unsigned int _185;
  long unsigned int _186;
  struct Aircraft_t * _187;
  int _188;
  struct Aircraft_t * _189;
  long unsigned int _190;
  long unsigned int _191;
  struct Aircraft_t * _192;
  struct Aircraft_t * _193;
  long unsigned int _194;
  long unsigned int _195;
  struct Aircraft_t * _196;
  int _197;
  int _198;
  int _200;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_6 = 0;
  goto <bb 30>;
;;    succ:       30

;;   basic block 3, loop depth 0
;;    pred:       30
  _10 = *f_9(D);
  _11 = (long unsigned int) i_2;
  _12 = _11 * 160;
  _13 = _10 + _12;
  _13->st_indx = 1;
  _14 = *f_9(D);
  _15 = (long unsigned int) i_2;
  _16 = _15 * 160;
  _17 = _14 + _16;
  _17->ready = 0;
  j_18 = 0;
  N_19 = 0;
  goto <bb 10>;
;;    succ:       10

;;   basic block 4, loop depth 0
;;    pred:       10
  _26 = c.Nbound;
  _27 = c.bound;
  _28 = *f_9(D);
  _29 = (long unsigned int) i_2;
  _30 = _29 * 160;
  _31 = _28 + _30;
  _32 = _31->nvp;
  _33 = (long unsigned int) j_3;
  _34 = _33 * 8;
  _35 = _32 + _34;
  _36 = *_35;
  _37 = point_in_polygon (_36, _27, _26);
  if (_37 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _38 = c.Nbound;
  _39 = c.bound;
  _40 = *f_9(D);
  _41 = (long unsigned int) i_2;
  _42 = _41 * 160;
  _43 = _40 + _42;
  _44 = _43->nvp;
  _45 = (sizetype) j_3;
  _46 = _45 + 1;
  _47 = _46 * 8;
  _48 = _44 + _47;
  _49 = *_48;
  _50 = point_in_polygon (_49, _39, _38);
  if (_50 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _51 = *f_9(D);
  _52 = (long unsigned int) i_2;
  _53 = _52 * 160;
  _54 = _51 + _53;
  _55 = _54->nvp;
  _56 = (long unsigned int) j_3;
  _57 = _56 * 8;
  _58 = _55 + _57;
  _59 = *_58;
  _60 = _59 + 32;
  _61 = *_60;
  if (_61 >= 2.4e+2)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _62 = *f_9(D);
  _63 = (long unsigned int) i_2;
  _64 = _63 * 160;
  _65 = _62 + _64;
  _66 = _65->nvp;
  _67 = (long unsigned int) j_3;
  _68 = _67 * 8;
  _69 = _66 + _68;
  _70 = *_69;
  _71 = _70 + 48;
  *_71 = 1.0e+0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
  _72 = *f_9(D);
  _73 = (long unsigned int) i_2;
  _74 = _73 * 160;
  _75 = _72 + _74;
  _76 = _75->nvp;
  _77 = (long unsigned int) j_3;
  _78 = _77 * 8;
  _79 = _76 + _78;
  _80 = *_79;
  _81 = _80 + 48;
  *_81 = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  j_82 = j_3 + 1;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       3
;;                9
  # j_3 = PHI <j_18(3), j_82(9)>
  _20 = *f_9(D);
  _21 = (long unsigned int) i_2;
  _22 = _21 * 160;
  _23 = _20 + _22;
  _24 = _23->n_nvp;
  _25 = _24 + -1;
  if (_25 > j_3)
    goto <bb 4>;
  else
    goto <bb 11>;
;;    succ:       4
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  j_83 = 0;
  goto <bb 16>;
;;    succ:       16

;;   basic block 12, loop depth 0
;;    pred:       16
  _90 = c.Nbound;
  _91 = c.bound;
  _92 = *f_9(D);
  _93 = (long unsigned int) i_2;
  _94 = _93 * 160;
  _95 = _92 + _94;
  _96 = _95->nvp;
  _97 = (long unsigned int) j_4;
  _98 = _97 * 8;
  _99 = _96 + _98;
  _100 = *_99;
  _101 = point_in_polygon (_100, _91, _90);
  if (_101 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  _102 = c.Nbound;
  _103 = c.bound;
  _104 = *f_9(D);
  _105 = (long unsigned int) i_2;
  _106 = _105 * 160;
  _107 = _104 + _106;
  _108 = _107->nvp;
  _109 = (sizetype) j_4;
  _110 = _109 + 1;
  _111 = _110 * 8;
  _112 = _108 + _111;
  _113 = *_112;
  _114 = point_in_polygon (_113, _103, _102);
  if (_114 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  _116 = *f_9(D);
  _117 = (long unsigned int) i_2;
  _118 = _117 * 160;
  _119 = _116 + _118;
  _119->bound[0] = j_4;
  goto <bb 17>;
;;    succ:       17

;;   basic block 15, loop depth 0
;;    pred:       13
  j_115 = j_4 + 1;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       11
;;                15
  # j_4 = PHI <j_83(11), j_115(15)>
  _84 = *f_9(D);
  _85 = (long unsigned int) i_2;
  _86 = _85 * 160;
  _87 = _84 + _86;
  _88 = _87->n_nvp;
  _89 = _88 + -1;
  if (_89 > j_4)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 17, loop depth 0
;;    pred:       14
;;                16
  _120 = *f_9(D);
  _121 = (long unsigned int) i_2;
  _122 = _121 * 160;
  _123 = _120 + _122;
  _124 = _123->n_nvp;
  _125 = _124 + -1;
  if (_125 == j_4)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 0
;;    pred:       17
  i.3_126 = i_2;
  i_127 = i.3_126 + -1;
  remove_aircraft (f_9(D), Nflight_7(D), i.3_126);
  _128 = *f_9(D);
  _129 = (long unsigned int) i_127;
  _130 = _129 * 160;
  _131 = _128 + _130;
  _132 = _131->ID;
  printf ("Removed %d Aircraft\n", _132);
  // predicted unlikely by continue predictor.
  goto <bb 29>;
;;    succ:       29

;;   basic block 19, loop depth 0
;;    pred:       17
  j_133 = j_4 + 1;
  goto <bb 24>;
;;    succ:       24

;;   basic block 20, loop depth 0
;;    pred:       24
  _139 = c.Nbound;
  _140 = c.bound;
  _141 = *f_9(D);
  _142 = (long unsigned int) i_2;
  _143 = _142 * 160;
  _144 = _141 + _143;
  _145 = _144->nvp;
  _146 = (long unsigned int) j_5;
  _147 = _146 * 8;
  _148 = _145 + _147;
  _149 = *_148;
  _150 = point_in_polygon (_149, _140, _139);
  if (_150 == 0)
    goto <bb 21>;
  else
    goto <bb 23>;
;;    succ:       21
;;                23

;;   basic block 21, loop depth 0
;;    pred:       20
  _151 = c.Nbound;
  _152 = c.bound;
  _153 = *f_9(D);
  _154 = (long unsigned int) i_2;
  _155 = _154 * 160;
  _156 = _153 + _155;
  _157 = _156->nvp;
  _158 = (long unsigned int) j_5;
  _159 = _158 * 8;
  _160 = _159 + 18446744073709551608;
  _161 = _157 + _160;
  _162 = *_161;
  _163 = point_in_polygon (_162, _152, _151);
  if (_163 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22
;;                23

;;   basic block 22, loop depth 0
;;    pred:       21
  _164 = *f_9(D);
  _165 = (long unsigned int) i_2;
  _166 = _165 * 160;
  _167 = _164 + _166;
  _167->bound[1] = j_5;
  goto <bb 25>;
;;    succ:       25

;;   basic block 23, loop depth 0
;;    pred:       20
;;                21
  j_168 = j_5 + 1;
;;    succ:       24

;;   basic block 24, loop depth 0
;;    pred:       19
;;                23
  # j_5 = PHI <j_133(19), j_168(23)>
  _134 = *f_9(D);
  _135 = (long unsigned int) i_2;
  _136 = _135 * 160;
  _137 = _134 + _136;
  _138 = _137->n_nvp;
  if (_138 > j_5)
    goto <bb 20>;
  else
    goto <bb 25>;
;;    succ:       20
;;                25

;;   basic block 25, loop depth 0
;;    pred:       22
;;                24
  _169 = *f_9(D);
  _170 = (long unsigned int) i_2;
  _171 = _170 * 160;
  _172 = _169 + _171;
  _173 = _172->n_nvp;
  if (_173 == j_5)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 0
;;    pred:       25
  _174 = *f_9(D);
  _175 = (long unsigned int) i_2;
  _176 = _175 * 160;
  _177 = _174 + _176;
  _178 = j_5 + -1;
  _177->bound[1] = _178;
;;    succ:       27

;;   basic block 27, loop depth 0
;;    pred:       25
;;                26
  _179 = *f_9(D);
  _180 = (long unsigned int) i_2;
  _181 = _180 * 160;
  _182 = _179 + _181;
  _183 = _182->bound[0];
  _184 = *f_9(D);
  _185 = (long unsigned int) i_2;
  _186 = _185 * 160;
  _187 = _184 + _186;
  _188 = _187->bound[1];
  if (_183 == _188)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28
;;                29

;;   basic block 28, loop depth 0
;;    pred:       27
  __builtin_puts (&"SOmetingh wrong"[0]);
  _189 = *f_9(D);
  _190 = (long unsigned int) i_2;
  _191 = _190 * 160;
  _192 = _189 + _191;
  _193 = *f_9(D);
  _194 = (long unsigned int) i_2;
  _195 = _194 * 160;
  _196 = _193 + _195;
  _197 = _196->bound[1];
  _198 = _197 + 1;
  _192->bound[1] = _198;
;;    succ:       29

;;   basic block 29, loop depth 0
;;    pred:       18
;;                27
;;                28
  # i_1 = PHI <i_127(18), i_2(27), i_2(28)>
  i_199 = i_1 + 1;
;;    succ:       30

;;   basic block 30, loop depth 0
;;    pred:       2
;;                29
  # i_2 = PHI <i_6(2), i_199(29)>
  _8 = *Nflight_7(D);
  if (_8 > i_2)
    goto <bb 3>;
  else
    goto <bb 31>;
;;    succ:       3
;;                31

;;   basic block 31, loop depth 0
;;    pred:       30
  _200 = 1;
;;    succ:       32

;;   basic block 32, loop depth 0
;;    pred:       31
<L31>:
  return _200;
;;    succ:       EXIT

}


Partition 2: size 4 align 4
	N_19
Partition 1: size 4 align 4
	j_3
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_6 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:225 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _10 = *f_9(D);

(insn 11 10 12 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:226 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 60 [ D.5025 ])
        (mem/f:DI (reg/f:DI 243) [0 *f_9(D)+0 S8 A64])) mSector.c:226 -1
     (nil))

;; _11 = (long unsigned int) i_2;

(insn 13 12 14 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:226 -1
     (nil))

(insn 14 13 0 (set (reg:DI 61 [ D.5026 ])
        (sign_extend:DI (reg:SI 244))) mSector.c:226 -1
     (nil))

;; _12 = _11 * 160;

(insn 15 14 16 (set (reg:DI 245)
        (reg:DI 61 [ D.5026 ])) mSector.c:226 -1
     (nil))

(insn 16 15 17 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 245)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg:DI 245)
                    (reg:DI 61 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 18 17 19 (parallel [
            (set (reg:DI 246)
                (ashift:DI (reg:DI 245)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))

(insn 19 18 20 (set (reg:DI 245)
        (reg:DI 246)) mSector.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 20 19 0 (set (reg:DI 62 [ D.5026 ])
        (reg:DI 245)) mSector.c:226 -1
     (nil))

;; _13 = _10 + _12;

(insn 21 20 0 (parallel [
            (set (reg/f:DI 63 [ D.5025 ])
                (plus:DI (reg/f:DI 60 [ D.5025 ])
                    (reg:DI 62 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))

;; _13->st_indx = 1;

(insn 22 21 0 (set (mem/j:SI (plus:DI (reg/f:DI 63 [ D.5025 ])
                (const_int 44 [0x2c])) [0 _13->st_indx+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:226 -1
     (nil))

;; _14 = *f_9(D);

(insn 23 22 24 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:227 -1
     (nil))

(insn 24 23 0 (set (reg/f:DI 64 [ D.5025 ])
        (mem/f:DI (reg/f:DI 247) [0 *f_9(D)+0 S8 A64])) mSector.c:227 -1
     (nil))

;; _15 = (long unsigned int) i_2;

(insn 25 24 26 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:227 -1
     (nil))

(insn 26 25 0 (set (reg:DI 65 [ D.5026 ])
        (sign_extend:DI (reg:SI 248))) mSector.c:227 -1
     (nil))

;; _16 = _15 * 160;

(insn 27 26 28 (set (reg:DI 249)
        (reg:DI 65 [ D.5026 ])) mSector.c:227 -1
     (nil))

(insn 28 27 29 (parallel [
            (set (reg:DI 249)
                (ashift:DI (reg:DI 249)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))

(insn 29 28 30 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg:DI 249)
                    (reg:DI 65 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 30 29 31 (parallel [
            (set (reg:DI 250)
                (ashift:DI (reg:DI 249)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))

(insn 31 30 32 (set (reg:DI 249)
        (reg:DI 250)) mSector.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 32 31 0 (set (reg:DI 66 [ D.5026 ])
        (reg:DI 249)) mSector.c:227 -1
     (nil))

;; _17 = _14 + _16;

(insn 33 32 0 (parallel [
            (set (reg/f:DI 67 [ D.5025 ])
                (plus:DI (reg/f:DI 64 [ D.5025 ])
                    (reg:DI 66 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))

;; _17->ready = 0;

(insn 34 33 0 (set (mem/j:SI (plus:DI (reg/f:DI 67 [ D.5025 ])
                (const_int 40 [0x28])) [0 _17->ready+0 S4 A64])
        (const_int 0 [0])) mSector.c:227 -1
     (nil))

;; j_18 = 0;

(insn 35 34 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 -1
     (nil))

;; N_19 = 0;

(insn 36 35 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _26 = c.Nbound;

(insn 40 39 0 (set (reg:SI 74 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:229 -1
     (nil))

;; _27 = c.bound;

(insn 41 40 0 (set (reg/f:DI 75 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _28 = *f_9(D);

(insn 42 41 43 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))

(insn 43 42 0 (set (reg/f:DI 76 [ D.5025 ])
        (mem/f:DI (reg/f:DI 251) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _29 = (long unsigned int) i_2;

(insn 44 43 45 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 45 44 0 (set (reg:DI 77 [ D.5026 ])
        (sign_extend:DI (reg:SI 252))) mSector.c:229 -1
     (nil))

;; _30 = _29 * 160;

(insn 46 45 47 (set (reg:DI 253)
        (reg:DI 77 [ D.5026 ])) mSector.c:229 -1
     (nil))

(insn 47 46 48 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 253)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 48 47 49 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 253)
                    (reg:DI 77 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 49 48 50 (parallel [
            (set (reg:DI 254)
                (ashift:DI (reg:DI 253)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 50 49 51 (set (reg:DI 253)
        (reg:DI 254)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 51 50 0 (set (reg:DI 78 [ D.5026 ])
        (reg:DI 253)) mSector.c:229 -1
     (nil))

;; _31 = _28 + _30;

(insn 52 51 0 (parallel [
            (set (reg/f:DI 79 [ D.5025 ])
                (plus:DI (reg/f:DI 76 [ D.5025 ])
                    (reg:DI 78 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _32 = _31->nvp;

(insn 53 52 0 (set (reg/f:DI 80 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79 [ D.5025 ])
                (const_int 8 [0x8])) [0 _31->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _33 = (long unsigned int) j_3;

(insn 54 53 55 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 55 54 0 (set (reg:DI 81 [ D.5026 ])
        (sign_extend:DI (reg:SI 255))) mSector.c:229 -1
     (nil))

;; _34 = _33 * 8;

(insn 56 55 0 (parallel [
            (set (reg:DI 82 [ D.5026 ])
                (ashift:DI (reg:DI 81 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _35 = _32 + _34;

(insn 57 56 0 (parallel [
            (set (reg/f:DI 83 [ D.5027 ])
                (plus:DI (reg/f:DI 80 [ D.5027 ])
                    (reg:DI 82 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _36 = *_35;

(insn 58 57 0 (set (reg/f:DI 84 [ D.5028 ])
        (mem/f:DI (reg/f:DI 83 [ D.5027 ]) [0 *_35+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _37 = point_in_polygon (_36, _27, _26);

(insn 59 58 60 (set (reg:SI 1 dx)
        (reg:SI 74 [ D.5024 ])) mSector.c:229 -1
     (nil))

(insn 60 59 61 (set (reg:DI 4 si)
        (reg/f:DI 75 [ D.5027 ])) mSector.c:229 -1
     (nil))

(insn 61 60 62 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.5028 ])) mSector.c:229 -1
     (nil))

(call_insn 62 61 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 63 62 0 (set (reg:SI 85 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 -1
     (nil))

;; if (_37 != 0)

(insn 64 63 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:229 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _38 = c.Nbound;

(insn 67 66 0 (set (reg:SI 86 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:229 -1
     (nil))

;; _39 = c.bound;

(insn 68 67 0 (set (reg/f:DI 87 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _40 = *f_9(D);

(insn 69 68 70 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))

(insn 70 69 0 (set (reg/f:DI 88 [ D.5025 ])
        (mem/f:DI (reg/f:DI 256) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _41 = (long unsigned int) i_2;

(insn 71 70 72 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 72 71 0 (set (reg:DI 89 [ D.5026 ])
        (sign_extend:DI (reg:SI 257))) mSector.c:229 -1
     (nil))

;; _42 = _41 * 160;

(insn 73 72 74 (set (reg:DI 258)
        (reg:DI 89 [ D.5026 ])) mSector.c:229 -1
     (nil))

(insn 74 73 75 (parallel [
            (set (reg:DI 258)
                (ashift:DI (reg:DI 258)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 75 74 76 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg:DI 258)
                    (reg:DI 89 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 76 75 77 (parallel [
            (set (reg:DI 259)
                (ashift:DI (reg:DI 258)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 77 76 78 (set (reg:DI 258)
        (reg:DI 259)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 78 77 0 (set (reg:DI 90 [ D.5026 ])
        (reg:DI 258)) mSector.c:229 -1
     (nil))

;; _43 = _40 + _42;

(insn 79 78 0 (parallel [
            (set (reg/f:DI 91 [ D.5025 ])
                (plus:DI (reg/f:DI 88 [ D.5025 ])
                    (reg:DI 90 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _44 = _43->nvp;

(insn 80 79 0 (set (reg/f:DI 92 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 91 [ D.5025 ])
                (const_int 8 [0x8])) [0 _43->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _45 = (sizetype) j_3;

(insn 81 80 82 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 82 81 0 (set (reg:DI 93 [ D.5029 ])
        (sign_extend:DI (reg:SI 260))) mSector.c:229 -1
     (nil))

;; _46 = _45 + 1;

(insn 83 82 0 (parallel [
            (set (reg:DI 94 [ D.5029 ])
                (plus:DI (reg:DI 93 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _47 = _46 * 8;

(insn 84 83 0 (parallel [
            (set (reg:DI 95 [ D.5029 ])
                (ashift:DI (reg:DI 94 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _48 = _44 + _47;

(insn 85 84 0 (parallel [
            (set (reg/f:DI 96 [ D.5027 ])
                (plus:DI (reg/f:DI 92 [ D.5027 ])
                    (reg:DI 95 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _49 = *_48;

(insn 86 85 0 (set (reg/f:DI 97 [ D.5028 ])
        (mem/f:DI (reg/f:DI 96 [ D.5027 ]) [0 *_48+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _50 = point_in_polygon (_49, _39, _38);

(insn 87 86 88 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.5024 ])) mSector.c:229 -1
     (nil))

(insn 88 87 89 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.5027 ])) mSector.c:229 -1
     (nil))

(insn 89 88 90 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5028 ])) mSector.c:229 -1
     (nil))

(call_insn 90 89 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 91 90 0 (set (reg:SI 98 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 -1
     (nil))

;; if (_50 != 0)

(insn 92 91 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:229 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 94 93 95 90 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; _51 = *f_9(D);

(insn 96 95 97 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))

(insn 97 96 0 (set (reg/f:DI 99 [ D.5025 ])
        (mem/f:DI (reg/f:DI 261) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _52 = (long unsigned int) i_2;

(insn 98 97 99 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 99 98 0 (set (reg:DI 100 [ D.5026 ])
        (sign_extend:DI (reg:SI 262))) mSector.c:229 -1
     (nil))

;; _53 = _52 * 160;

(insn 100 99 101 (set (reg:DI 263)
        (reg:DI 100 [ D.5026 ])) mSector.c:229 -1
     (nil))

(insn 101 100 102 (parallel [
            (set (reg:DI 263)
                (ashift:DI (reg:DI 263)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 102 101 103 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg:DI 263)
                    (reg:DI 100 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 103 102 104 (parallel [
            (set (reg:DI 264)
                (ashift:DI (reg:DI 263)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

(insn 104 103 105 (set (reg:DI 263)
        (reg:DI 264)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 105 104 0 (set (reg:DI 101 [ D.5026 ])
        (reg:DI 263)) mSector.c:229 -1
     (nil))

;; _54 = _51 + _53;

(insn 106 105 0 (parallel [
            (set (reg/f:DI 102 [ D.5025 ])
                (plus:DI (reg/f:DI 99 [ D.5025 ])
                    (reg:DI 101 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _55 = _54->nvp;

(insn 107 106 0 (set (reg/f:DI 103 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 102 [ D.5025 ])
                (const_int 8 [0x8])) [0 _54->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _56 = (long unsigned int) j_3;

(insn 108 107 109 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))

(insn 109 108 0 (set (reg:DI 104 [ D.5026 ])
        (sign_extend:DI (reg:SI 265))) mSector.c:229 -1
     (nil))

;; _57 = _56 * 8;

(insn 110 109 0 (parallel [
            (set (reg:DI 105 [ D.5026 ])
                (ashift:DI (reg:DI 104 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _58 = _55 + _57;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 106 [ D.5027 ])
                (plus:DI (reg/f:DI 103 [ D.5027 ])
                    (reg:DI 105 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _59 = *_58;

(insn 112 111 0 (set (reg/f:DI 107 [ D.5028 ])
        (mem/f:DI (reg/f:DI 106 [ D.5027 ]) [0 *_58+0 S8 A64])) mSector.c:229 -1
     (nil))

;; _60 = _59 + 32;

(insn 113 112 0 (parallel [
            (set (reg/f:DI 108 [ D.5028 ])
                (plus:DI (reg/f:DI 107 [ D.5028 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))

;; _61 = *_60;

(insn 114 113 0 (set (reg:XF 109 [ D.5030 ])
        (mem:XF (reg/f:DI 108 [ D.5028 ]) [0 *_60+0 S16 A128])) mSector.c:229 -1
     (nil))

;; if (_61 >= 2.4e+2)

(insn 115 114 116 (set (reg:XF 266)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mSector.c:229 -1
     (expr_list:REG_EQUAL (const_double:XF 2.4e+2 [0x0.fp+8])
        (nil)))

(insn 116 115 117 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 109 [ D.5030 ])
            (reg:XF 266))) mSector.c:229 -1
     (nil))

(jump_insn 117 116 118 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) mSector.c:229 -1
     (nil))

(jump_insn 118 117 119 (set (pc)
        (label_ref 0)) mSector.c:229 -1
     (nil))

(barrier 119 118 120)

(code_label 120 119 0 92 "" [0 uses])

;; Generating RTL for gimple basic block 7

;; _62 = *f_9(D);

(insn 122 121 123 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:230 -1
     (nil))

(insn 123 122 0 (set (reg/f:DI 110 [ D.5025 ])
        (mem/f:DI (reg/f:DI 267) [0 *f_9(D)+0 S8 A64])) mSector.c:230 -1
     (nil))

;; _63 = (long unsigned int) i_2;

(insn 124 123 125 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:230 -1
     (nil))

(insn 125 124 0 (set (reg:DI 111 [ D.5026 ])
        (sign_extend:DI (reg:SI 268))) mSector.c:230 -1
     (nil))

;; _64 = _63 * 160;

(insn 126 125 127 (set (reg:DI 269)
        (reg:DI 111 [ D.5026 ])) mSector.c:230 -1
     (nil))

(insn 127 126 128 (parallel [
            (set (reg:DI 269)
                (ashift:DI (reg:DI 269)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

(insn 128 127 129 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg:DI 269)
                    (reg:DI 111 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 129 128 130 (parallel [
            (set (reg:DI 270)
                (ashift:DI (reg:DI 269)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

(insn 130 129 131 (set (reg:DI 269)
        (reg:DI 270)) mSector.c:230 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 131 130 0 (set (reg:DI 112 [ D.5026 ])
        (reg:DI 269)) mSector.c:230 -1
     (nil))

;; _65 = _62 + _64;

(insn 132 131 0 (parallel [
            (set (reg/f:DI 113 [ D.5025 ])
                (plus:DI (reg/f:DI 110 [ D.5025 ])
                    (reg:DI 112 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

;; _66 = _65->nvp;

(insn 133 132 0 (set (reg/f:DI 114 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 113 [ D.5025 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mSector.c:230 -1
     (nil))

;; _67 = (long unsigned int) j_3;

(insn 134 133 135 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:230 -1
     (nil))

(insn 135 134 0 (set (reg:DI 115 [ D.5026 ])
        (sign_extend:DI (reg:SI 271))) mSector.c:230 -1
     (nil))

;; _68 = _67 * 8;

(insn 136 135 0 (parallel [
            (set (reg:DI 116 [ D.5026 ])
                (ashift:DI (reg:DI 115 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

;; _69 = _66 + _68;

(insn 137 136 0 (parallel [
            (set (reg/f:DI 117 [ D.5027 ])
                (plus:DI (reg/f:DI 114 [ D.5027 ])
                    (reg:DI 116 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

;; _70 = *_69;

(insn 138 137 0 (set (reg/f:DI 118 [ D.5028 ])
        (mem/f:DI (reg/f:DI 117 [ D.5027 ]) [0 *_69+0 S8 A64])) mSector.c:230 -1
     (nil))

;; _71 = _70 + 48;

(insn 139 138 0 (parallel [
            (set (reg/f:DI 119 [ D.5028 ])
                (plus:DI (reg/f:DI 118 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))

;; *_71 = 1.0e+0;

(insn 140 139 141 (set (reg:XF 272)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:230 -1
     (nil))

(insn 141 140 0 (set (mem:XF (reg/f:DI 119 [ D.5028 ]) [0 *_71+0 S16 A128])
        (reg:XF 272)) mSector.c:230 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 144 143 145 91 "" [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; _72 = *f_9(D);

(insn 146 145 147 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:232 -1
     (nil))

(insn 147 146 0 (set (reg/f:DI 120 [ D.5025 ])
        (mem/f:DI (reg/f:DI 273) [0 *f_9(D)+0 S8 A64])) mSector.c:232 -1
     (nil))

;; _73 = (long unsigned int) i_2;

(insn 148 147 149 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:232 -1
     (nil))

(insn 149 148 0 (set (reg:DI 121 [ D.5026 ])
        (sign_extend:DI (reg:SI 274))) mSector.c:232 -1
     (nil))

;; _74 = _73 * 160;

(insn 150 149 151 (set (reg:DI 275)
        (reg:DI 121 [ D.5026 ])) mSector.c:232 -1
     (nil))

(insn 151 150 152 (parallel [
            (set (reg:DI 275)
                (ashift:DI (reg:DI 275)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

(insn 152 151 153 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg:DI 275)
                    (reg:DI 121 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 153 152 154 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 275)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

(insn 154 153 155 (set (reg:DI 275)
        (reg:DI 276)) mSector.c:232 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 155 154 0 (set (reg:DI 122 [ D.5026 ])
        (reg:DI 275)) mSector.c:232 -1
     (nil))

;; _75 = _72 + _74;

(insn 156 155 0 (parallel [
            (set (reg/f:DI 123 [ D.5025 ])
                (plus:DI (reg/f:DI 120 [ D.5025 ])
                    (reg:DI 122 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

;; _76 = _75->nvp;

(insn 157 156 0 (set (reg/f:DI 124 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 123 [ D.5025 ])
                (const_int 8 [0x8])) [0 _75->nvp+0 S8 A64])) mSector.c:232 -1
     (nil))

;; _77 = (long unsigned int) j_3;

(insn 158 157 159 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:232 -1
     (nil))

(insn 159 158 0 (set (reg:DI 125 [ D.5026 ])
        (sign_extend:DI (reg:SI 277))) mSector.c:232 -1
     (nil))

;; _78 = _77 * 8;

(insn 160 159 0 (parallel [
            (set (reg:DI 126 [ D.5026 ])
                (ashift:DI (reg:DI 125 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

;; _79 = _76 + _78;

(insn 161 160 0 (parallel [
            (set (reg/f:DI 127 [ D.5027 ])
                (plus:DI (reg/f:DI 124 [ D.5027 ])
                    (reg:DI 126 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

;; _80 = *_79;

(insn 162 161 0 (set (reg/f:DI 128 [ D.5028 ])
        (mem/f:DI (reg/f:DI 127 [ D.5027 ]) [0 *_79+0 S8 A64])) mSector.c:232 -1
     (nil))

;; _81 = _80 + 48;

(insn 163 162 0 (parallel [
            (set (reg/f:DI 129 [ D.5028 ])
                (plus:DI (reg/f:DI 128 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))

;; *_81 = 0.0;

(insn 164 163 165 (set (reg:XF 278)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:232 -1
     (nil))

(insn 165 164 0 (set (mem:XF (reg/f:DI 129 [ D.5028 ]) [0 *_81+0 S16 A128])
        (reg:XF 278)) mSector.c:232 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 166 165 167 93 "" [0 uses])

(note 167 166 0 NOTE_INSN_BASIC_BLOCK)

;; j_82 = j_3 + 1;

(insn 168 167 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 169 168 170 89 "" [0 uses])

(note 170 169 0 NOTE_INSN_BASIC_BLOCK)

;; _20 = *f_9(D);

(insn 171 170 172 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:228 -1
     (nil))

(insn 172 171 0 (set (reg/f:DI 68 [ D.5025 ])
        (mem/f:DI (reg/f:DI 279) [0 *f_9(D)+0 S8 A64])) mSector.c:228 -1
     (nil))

;; _21 = (long unsigned int) i_2;

(insn 173 172 174 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:228 -1
     (nil))

(insn 174 173 0 (set (reg:DI 69 [ D.5026 ])
        (sign_extend:DI (reg:SI 280))) mSector.c:228 -1
     (nil))

;; _22 = _21 * 160;

(insn 175 174 176 (set (reg:DI 281)
        (reg:DI 69 [ D.5026 ])) mSector.c:228 -1
     (nil))

(insn 176 175 177 (parallel [
            (set (reg:DI 281)
                (ashift:DI (reg:DI 281)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))

(insn 177 176 178 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg:DI 281)
                    (reg:DI 69 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 178 177 179 (parallel [
            (set (reg:DI 282)
                (ashift:DI (reg:DI 281)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))

(insn 179 178 180 (set (reg:DI 281)
        (reg:DI 282)) mSector.c:228 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 180 179 0 (set (reg:DI 70 [ D.5026 ])
        (reg:DI 281)) mSector.c:228 -1
     (nil))

;; _23 = _20 + _22;

(insn 181 180 0 (parallel [
            (set (reg/f:DI 71 [ D.5025 ])
                (plus:DI (reg/f:DI 68 [ D.5025 ])
                    (reg:DI 70 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))

;; _24 = _23->n_nvp;

(insn 182 181 0 (set (reg:SI 72 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5025 ])
                (const_int 4 [0x4])) [0 _23->n_nvp+0 S4 A32])) mSector.c:228 -1
     (nil))

;; _25 = _24 + -1;

(insn 183 182 0 (parallel [
            (set (reg:SI 73 [ D.5024 ])
                (plus:SI (reg:SI 72 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))

;; if (_25 > j_3)

(insn 185 183 186 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:228 -1
     (nil))

(jump_insn 186 185 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:228 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; j_83 = 0;

(insn 188 187 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:238 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _90 = c.Nbound;

(insn 192 191 0 (set (reg:SI 136 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:238 -1
     (nil))

;; _91 = c.bound;

(insn 193 192 0 (set (reg/f:DI 137 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _92 = *f_9(D);

(insn 194 193 195 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))

(insn 195 194 0 (set (reg/f:DI 138 [ D.5025 ])
        (mem/f:DI (reg/f:DI 283) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _93 = (long unsigned int) i_2;

(insn 196 195 197 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))

(insn 197 196 0 (set (reg:DI 139 [ D.5026 ])
        (sign_extend:DI (reg:SI 284))) mSector.c:238 -1
     (nil))

;; _94 = _93 * 160;

(insn 198 197 199 (set (reg:DI 285)
        (reg:DI 139 [ D.5026 ])) mSector.c:238 -1
     (nil))

(insn 199 198 200 (parallel [
            (set (reg:DI 285)
                (ashift:DI (reg:DI 285)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 200 199 201 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg:DI 285)
                    (reg:DI 139 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 201 200 202 (parallel [
            (set (reg:DI 286)
                (ashift:DI (reg:DI 285)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 202 201 203 (set (reg:DI 285)
        (reg:DI 286)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 203 202 0 (set (reg:DI 140 [ D.5026 ])
        (reg:DI 285)) mSector.c:238 -1
     (nil))

;; _95 = _92 + _94;

(insn 204 203 0 (parallel [
            (set (reg/f:DI 141 [ D.5025 ])
                (plus:DI (reg/f:DI 138 [ D.5025 ])
                    (reg:DI 140 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _96 = _95->nvp;

(insn 205 204 0 (set (reg/f:DI 142 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 141 [ D.5025 ])
                (const_int 8 [0x8])) [0 _95->nvp+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _97 = (long unsigned int) j_4;

(insn 206 205 207 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 -1
     (nil))

(insn 207 206 0 (set (reg:DI 143 [ D.5026 ])
        (sign_extend:DI (reg:SI 287))) mSector.c:238 -1
     (nil))

;; _98 = _97 * 8;

(insn 208 207 0 (parallel [
            (set (reg:DI 144 [ D.5026 ])
                (ashift:DI (reg:DI 143 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _99 = _96 + _98;

(insn 209 208 0 (parallel [
            (set (reg/f:DI 145 [ D.5027 ])
                (plus:DI (reg/f:DI 142 [ D.5027 ])
                    (reg:DI 144 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _100 = *_99;

(insn 210 209 0 (set (reg/f:DI 146 [ D.5028 ])
        (mem/f:DI (reg/f:DI 145 [ D.5027 ]) [0 *_99+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _101 = point_in_polygon (_100, _91, _90);

(insn 211 210 212 (set (reg:SI 1 dx)
        (reg:SI 136 [ D.5024 ])) mSector.c:238 -1
     (nil))

(insn 212 211 213 (set (reg:DI 4 si)
        (reg/f:DI 137 [ D.5027 ])) mSector.c:238 -1
     (nil))

(insn 213 212 214 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.5028 ])) mSector.c:238 -1
     (nil))

(call_insn 214 213 215 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 215 214 0 (set (reg:SI 147 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 -1
     (nil))

;; if (_101 != 0)

(insn 216 215 217 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil))

(jump_insn 217 216 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:238 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _102 = c.Nbound;

(insn 219 218 0 (set (reg:SI 148 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:238 -1
     (nil))

;; _103 = c.bound;

(insn 220 219 0 (set (reg/f:DI 149 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _104 = *f_9(D);

(insn 221 220 222 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))

(insn 222 221 0 (set (reg/f:DI 150 [ D.5025 ])
        (mem/f:DI (reg/f:DI 288) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _105 = (long unsigned int) i_2;

(insn 223 222 224 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))

(insn 224 223 0 (set (reg:DI 151 [ D.5026 ])
        (sign_extend:DI (reg:SI 289))) mSector.c:238 -1
     (nil))

;; _106 = _105 * 160;

(insn 225 224 226 (set (reg:DI 290)
        (reg:DI 151 [ D.5026 ])) mSector.c:238 -1
     (nil))

(insn 226 225 227 (parallel [
            (set (reg:DI 290)
                (ashift:DI (reg:DI 290)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 227 226 228 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 290)
                    (reg:DI 151 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 228 227 229 (parallel [
            (set (reg:DI 291)
                (ashift:DI (reg:DI 290)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 229 228 230 (set (reg:DI 290)
        (reg:DI 291)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 230 229 0 (set (reg:DI 152 [ D.5026 ])
        (reg:DI 290)) mSector.c:238 -1
     (nil))

;; _107 = _104 + _106;

(insn 231 230 0 (parallel [
            (set (reg/f:DI 153 [ D.5025 ])
                (plus:DI (reg/f:DI 150 [ D.5025 ])
                    (reg:DI 152 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _108 = _107->nvp;

(insn 232 231 0 (set (reg/f:DI 154 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 153 [ D.5025 ])
                (const_int 8 [0x8])) [0 _107->nvp+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _109 = (sizetype) j_4;

(insn 233 232 234 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 -1
     (nil))

(insn 234 233 0 (set (reg:DI 155 [ D.5029 ])
        (sign_extend:DI (reg:SI 292))) mSector.c:238 -1
     (nil))

;; _110 = _109 + 1;

(insn 235 234 0 (parallel [
            (set (reg:DI 156 [ D.5029 ])
                (plus:DI (reg:DI 155 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _111 = _110 * 8;

(insn 236 235 0 (parallel [
            (set (reg:DI 157 [ D.5029 ])
                (ashift:DI (reg:DI 156 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _112 = _108 + _111;

(insn 237 236 0 (parallel [
            (set (reg/f:DI 158 [ D.5027 ])
                (plus:DI (reg/f:DI 154 [ D.5027 ])
                    (reg:DI 157 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _113 = *_112;

(insn 238 237 0 (set (reg/f:DI 159 [ D.5028 ])
        (mem/f:DI (reg/f:DI 158 [ D.5027 ]) [0 *_112+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _114 = point_in_polygon (_113, _103, _102);

(insn 239 238 240 (set (reg:SI 1 dx)
        (reg:SI 148 [ D.5024 ])) mSector.c:238 -1
     (nil))

(insn 240 239 241 (set (reg:DI 4 si)
        (reg/f:DI 149 [ D.5027 ])) mSector.c:238 -1
     (nil))

(insn 241 240 242 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.5028 ])) mSector.c:238 -1
     (nil))

(call_insn 242 241 243 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 243 242 0 (set (reg:SI 160 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 -1
     (nil))

;; if (_114 != 0)

(insn 244 243 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil))

(jump_insn 245 244 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:238 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 246 245 247 96 "" [0 uses])

(note 247 246 0 NOTE_INSN_BASIC_BLOCK)

;; _116 = *f_9(D);

(insn 248 247 249 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:239 -1
     (nil))

(insn 249 248 0 (set (reg/f:DI 161 [ D.5025 ])
        (mem/f:DI (reg/f:DI 293) [0 *f_9(D)+0 S8 A64])) mSector.c:239 -1
     (nil))

;; _117 = (long unsigned int) i_2;

(insn 250 249 251 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:239 -1
     (nil))

(insn 251 250 0 (set (reg:DI 162 [ D.5026 ])
        (sign_extend:DI (reg:SI 294))) mSector.c:239 -1
     (nil))

;; _118 = _117 * 160;

(insn 252 251 253 (set (reg:DI 295)
        (reg:DI 162 [ D.5026 ])) mSector.c:239 -1
     (nil))

(insn 253 252 254 (parallel [
            (set (reg:DI 295)
                (ashift:DI (reg:DI 295)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))

(insn 254 253 255 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg:DI 295)
                    (reg:DI 162 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 255 254 256 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 295)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))

(insn 256 255 257 (set (reg:DI 295)
        (reg:DI 296)) mSector.c:239 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 257 256 0 (set (reg:DI 163 [ D.5026 ])
        (reg:DI 295)) mSector.c:239 -1
     (nil))

;; _119 = _116 + _118;

(insn 258 257 0 (parallel [
            (set (reg/f:DI 164 [ D.5025 ])
                (plus:DI (reg/f:DI 161 [ D.5025 ])
                    (reg:DI 163 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))

;; _119->bound[0] = j_4;

(insn 259 258 260 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:239 -1
     (nil))

(insn 260 259 0 (set (mem/j:SI (plus:DI (reg/f:DI 164 [ D.5025 ])
                (const_int 112 [0x70])) [0 _119->bound+0 S4 A128])
        (reg:SI 297)) mSector.c:239 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 263 262 264 97 "" [0 uses])

(note 264 263 0 NOTE_INSN_BASIC_BLOCK)

;; j_115 = j_4 + 1;

(insn 265 264 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 266 265 267 95 "" [0 uses])

(note 267 266 0 NOTE_INSN_BASIC_BLOCK)

;; _84 = *f_9(D);

(insn 268 267 269 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))

(insn 269 268 0 (set (reg/f:DI 130 [ D.5025 ])
        (mem/f:DI (reg/f:DI 298) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))

;; _85 = (long unsigned int) i_2;

(insn 270 269 271 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))

(insn 271 270 0 (set (reg:DI 131 [ D.5026 ])
        (sign_extend:DI (reg:SI 299))) mSector.c:238 -1
     (nil))

;; _86 = _85 * 160;

(insn 272 271 273 (set (reg:DI 300)
        (reg:DI 131 [ D.5026 ])) mSector.c:238 -1
     (nil))

(insn 273 272 274 (parallel [
            (set (reg:DI 300)
                (ashift:DI (reg:DI 300)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 274 273 275 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg:DI 300)
                    (reg:DI 131 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 275 274 276 (parallel [
            (set (reg:DI 301)
                (ashift:DI (reg:DI 300)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

(insn 276 275 277 (set (reg:DI 300)
        (reg:DI 301)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 277 276 0 (set (reg:DI 132 [ D.5026 ])
        (reg:DI 300)) mSector.c:238 -1
     (nil))

;; _87 = _84 + _86;

(insn 278 277 0 (parallel [
            (set (reg/f:DI 133 [ D.5025 ])
                (plus:DI (reg/f:DI 130 [ D.5025 ])
                    (reg:DI 132 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; _88 = _87->n_nvp;

(insn 279 278 0 (set (reg:SI 134 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 133 [ D.5025 ])
                (const_int 4 [0x4])) [0 _87->n_nvp+0 S4 A32])) mSector.c:238 -1
     (nil))

;; _89 = _88 + -1;

(insn 280 279 0 (parallel [
            (set (reg:SI 135 [ D.5024 ])
                (plus:SI (reg:SI 134 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))

;; if (_89 > j_4)

(insn 282 280 283 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 135 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:238 -1
     (nil))

(jump_insn 283 282 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) mSector.c:238 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 284 283 285 98 "" [0 uses])

(note 285 284 0 NOTE_INSN_BASIC_BLOCK)

;; _120 = *f_9(D);

(insn 286 285 287 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:242 -1
     (nil))

(insn 287 286 0 (set (reg/f:DI 165 [ D.5025 ])
        (mem/f:DI (reg/f:DI 302) [0 *f_9(D)+0 S8 A64])) mSector.c:242 -1
     (nil))

;; _121 = (long unsigned int) i_2;

(insn 288 287 289 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:242 -1
     (nil))

(insn 289 288 0 (set (reg:DI 166 [ D.5026 ])
        (sign_extend:DI (reg:SI 303))) mSector.c:242 -1
     (nil))

;; _122 = _121 * 160;

(insn 290 289 291 (set (reg:DI 304)
        (reg:DI 166 [ D.5026 ])) mSector.c:242 -1
     (nil))

(insn 291 290 292 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))

(insn 292 291 293 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 166 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 293 292 294 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))

(insn 294 293 295 (set (reg:DI 304)
        (reg:DI 305)) mSector.c:242 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 295 294 0 (set (reg:DI 167 [ D.5026 ])
        (reg:DI 304)) mSector.c:242 -1
     (nil))

;; _123 = _120 + _122;

(insn 296 295 0 (parallel [
            (set (reg/f:DI 168 [ D.5025 ])
                (plus:DI (reg/f:DI 165 [ D.5025 ])
                    (reg:DI 167 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))

;; _124 = _123->n_nvp;

(insn 297 296 0 (set (reg:SI 169 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 168 [ D.5025 ])
                (const_int 4 [0x4])) [0 _123->n_nvp+0 S4 A32])) mSector.c:242 -1
     (nil))

;; _125 = _124 + -1;

(insn 298 297 0 (parallel [
            (set (reg:SI 170 [ D.5024 ])
                (plus:SI (reg:SI 169 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))

;; if (_125 == j_4)

(insn 299 298 300 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:242 -1
     (nil))

(jump_insn 300 299 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:242 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; i.3_126 = i_2;

(insn 302 301 0 (set (reg:SI 171 [ i.3 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:243 -1
     (nil))

;; i_127 = i.3_126 + -1;

(insn 303 302 304 (parallel [
            (set (reg:SI 306)
                (plus:SI (reg:SI 171 [ i.3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:243 -1
     (nil))

(insn 304 303 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 306)) mSector.c:243 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 171 [ i.3 ])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; remove_aircraft (f_9(D), Nflight_7(D), i.3_126);

(insn 305 304 306 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:243 -1
     (nil))

(insn 306 305 307 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:243 -1
     (nil))

(insn 307 306 308 (set (reg:SI 1 dx)
        (reg:SI 171 [ i.3 ])) mSector.c:243 -1
     (nil))

(insn 308 307 309 (set (reg:DI 4 si)
        (reg:DI 307)) mSector.c:243 -1
     (nil))

(insn 309 308 310 (set (reg:DI 5 di)
        (reg:DI 308)) mSector.c:243 -1
     (nil))

(call_insn 310 309 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_aircraft") [flags 0x3]  <function_decl 0x7f44d2a01700 remove_aircraft>) [0 remove_aircraft S1 A8])
            (const_int 0 [0]))) mSector.c:243 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

;; _128 = *f_9(D);

(insn 311 310 312 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:244 -1
     (nil))

(insn 312 311 0 (set (reg/f:DI 172 [ D.5025 ])
        (mem/f:DI (reg/f:DI 309) [0 *f_9(D)+0 S8 A64])) mSector.c:244 -1
     (nil))

;; _129 = (long unsigned int) i_127;

(insn 313 312 314 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:244 -1
     (nil))

(insn 314 313 0 (set (reg:DI 173 [ D.5026 ])
        (sign_extend:DI (reg:SI 310))) mSector.c:244 -1
     (nil))

;; _130 = _129 * 160;

(insn 315 314 316 (set (reg:DI 311)
        (reg:DI 173 [ D.5026 ])) mSector.c:244 -1
     (nil))

(insn 316 315 317 (parallel [
            (set (reg:DI 311)
                (ashift:DI (reg:DI 311)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))

(insn 317 316 318 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 311)
                    (reg:DI 173 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 318 317 319 (parallel [
            (set (reg:DI 312)
                (ashift:DI (reg:DI 311)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))

(insn 319 318 320 (set (reg:DI 311)
        (reg:DI 312)) mSector.c:244 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 320 319 0 (set (reg:DI 174 [ D.5026 ])
        (reg:DI 311)) mSector.c:244 -1
     (nil))

;; _131 = _128 + _130;

(insn 321 320 0 (parallel [
            (set (reg/f:DI 175 [ D.5025 ])
                (plus:DI (reg/f:DI 172 [ D.5025 ])
                    (reg:DI 174 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))

;; _132 = _131->ID;

(insn 322 321 0 (set (reg:SI 176 [ D.5024 ])
        (mem/j:SI (reg/f:DI 175 [ D.5025 ]) [0 _131->ID+0 S4 A128])) mSector.c:244 -1
     (nil))

;; printf ("Removed %d Aircraft\n", _132);

(insn 323 322 324 (set (reg:SI 4 si)
        (reg:SI 176 [ D.5024 ])) mSector.c:244 -1
     (nil))

(insn 324 323 325 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f44d28a47b8 *.LC13>)) mSector.c:244 -1
     (nil))

(insn 325 324 326 (set (reg:QI 0 ax)
        (const_int 0 [0])) mSector.c:244 -1
     (nil))

(call_insn 326 325 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f44d2950f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mSector.c:244 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))

;; // predicted unlikely by continue predictor.

(nil)

;; Generating RTL for gimple basic block 19

;; 

(code_label 329 328 330 100 "" [0 uses])

(note 330 329 0 NOTE_INSN_BASIC_BLOCK)

;; j_133 = j_4 + 1;

(insn 331 330 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; _139 = c.Nbound;

(insn 335 334 0 (set (reg:SI 182 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:248 -1
     (nil))

;; _140 = c.bound;

(insn 336 335 0 (set (reg/f:DI 183 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _141 = *f_9(D);

(insn 337 336 338 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))

(insn 338 337 0 (set (reg/f:DI 184 [ D.5025 ])
        (mem/f:DI (reg/f:DI 313) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _142 = (long unsigned int) i_2;

(insn 339 338 340 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))

(insn 340 339 0 (set (reg:DI 185 [ D.5026 ])
        (sign_extend:DI (reg:SI 314))) mSector.c:248 -1
     (nil))

;; _143 = _142 * 160;

(insn 341 340 342 (set (reg:DI 315)
        (reg:DI 185 [ D.5026 ])) mSector.c:248 -1
     (nil))

(insn 342 341 343 (parallel [
            (set (reg:DI 315)
                (ashift:DI (reg:DI 315)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 343 342 344 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg:DI 315)
                    (reg:DI 185 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 344 343 345 (parallel [
            (set (reg:DI 316)
                (ashift:DI (reg:DI 315)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 345 344 346 (set (reg:DI 315)
        (reg:DI 316)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 346 345 0 (set (reg:DI 186 [ D.5026 ])
        (reg:DI 315)) mSector.c:248 -1
     (nil))

;; _144 = _141 + _143;

(insn 347 346 0 (parallel [
            (set (reg/f:DI 187 [ D.5025 ])
                (plus:DI (reg/f:DI 184 [ D.5025 ])
                    (reg:DI 186 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _145 = _144->nvp;

(insn 348 347 0 (set (reg/f:DI 188 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 187 [ D.5025 ])
                (const_int 8 [0x8])) [0 _144->nvp+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _146 = (long unsigned int) j_5;

(insn 349 348 350 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 -1
     (nil))

(insn 350 349 0 (set (reg:DI 189 [ D.5026 ])
        (sign_extend:DI (reg:SI 317))) mSector.c:248 -1
     (nil))

;; _147 = _146 * 8;

(insn 351 350 0 (parallel [
            (set (reg:DI 190 [ D.5026 ])
                (ashift:DI (reg:DI 189 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _148 = _145 + _147;

(insn 352 351 0 (parallel [
            (set (reg/f:DI 191 [ D.5027 ])
                (plus:DI (reg/f:DI 188 [ D.5027 ])
                    (reg:DI 190 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _149 = *_148;

(insn 353 352 0 (set (reg/f:DI 192 [ D.5028 ])
        (mem/f:DI (reg/f:DI 191 [ D.5027 ]) [0 *_148+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _150 = point_in_polygon (_149, _140, _139);

(insn 354 353 355 (set (reg:SI 1 dx)
        (reg:SI 182 [ D.5024 ])) mSector.c:248 -1
     (nil))

(insn 355 354 356 (set (reg:DI 4 si)
        (reg/f:DI 183 [ D.5027 ])) mSector.c:248 -1
     (nil))

(insn 356 355 357 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.5028 ])) mSector.c:248 -1
     (nil))

(call_insn 357 356 358 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 358 357 0 (set (reg:SI 193 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 -1
     (nil))

;; if (_150 == 0)

(insn 359 358 360 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil))

(jump_insn 360 359 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:248 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; _151 = c.Nbound;

(insn 362 361 0 (set (reg:SI 194 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:248 -1
     (nil))

;; _152 = c.bound;

(insn 363 362 0 (set (reg/f:DI 195 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _153 = *f_9(D);

(insn 364 363 365 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))

(insn 365 364 0 (set (reg/f:DI 196 [ D.5025 ])
        (mem/f:DI (reg/f:DI 318) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _154 = (long unsigned int) i_2;

(insn 366 365 367 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))

(insn 367 366 0 (set (reg:DI 197 [ D.5026 ])
        (sign_extend:DI (reg:SI 319))) mSector.c:248 -1
     (nil))

;; _155 = _154 * 160;

(insn 368 367 369 (set (reg:DI 320)
        (reg:DI 197 [ D.5026 ])) mSector.c:248 -1
     (nil))

(insn 369 368 370 (parallel [
            (set (reg:DI 320)
                (ashift:DI (reg:DI 320)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 370 369 371 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg:DI 320)
                    (reg:DI 197 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 371 370 372 (parallel [
            (set (reg:DI 321)
                (ashift:DI (reg:DI 320)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 372 371 373 (set (reg:DI 320)
        (reg:DI 321)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 373 372 0 (set (reg:DI 198 [ D.5026 ])
        (reg:DI 320)) mSector.c:248 -1
     (nil))

;; _156 = _153 + _155;

(insn 374 373 0 (parallel [
            (set (reg/f:DI 199 [ D.5025 ])
                (plus:DI (reg/f:DI 196 [ D.5025 ])
                    (reg:DI 198 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _157 = _156->nvp;

(insn 375 374 0 (set (reg/f:DI 200 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199 [ D.5025 ])
                (const_int 8 [0x8])) [0 _156->nvp+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _158 = (long unsigned int) j_5;

(insn 376 375 377 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 -1
     (nil))

(insn 377 376 0 (set (reg:DI 201 [ D.5026 ])
        (sign_extend:DI (reg:SI 322))) mSector.c:248 -1
     (nil))

;; _159 = _158 * 8;

(insn 378 377 0 (parallel [
            (set (reg:DI 202 [ D.5026 ])
                (ashift:DI (reg:DI 201 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _160 = _159 + 18446744073709551608;

(insn 379 378 0 (parallel [
            (set (reg:DI 203 [ D.5029 ])
                (plus:DI (reg:DI 202 [ D.5026 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _161 = _157 + _160;

(insn 380 379 0 (parallel [
            (set (reg/f:DI 204 [ D.5027 ])
                (plus:DI (reg/f:DI 200 [ D.5027 ])
                    (reg:DI 203 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _162 = *_161;

(insn 381 380 0 (set (reg/f:DI 205 [ D.5028 ])
        (mem/f:DI (reg/f:DI 204 [ D.5027 ]) [0 *_161+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _163 = point_in_polygon (_162, _152, _151);

(insn 382 381 383 (set (reg:SI 1 dx)
        (reg:SI 194 [ D.5024 ])) mSector.c:248 -1
     (nil))

(insn 383 382 384 (set (reg:DI 4 si)
        (reg/f:DI 195 [ D.5027 ])) mSector.c:248 -1
     (nil))

(insn 384 383 385 (set (reg:DI 5 di)
        (reg/f:DI 205 [ D.5028 ])) mSector.c:248 -1
     (nil))

(call_insn 385 384 386 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))

(insn 386 385 0 (set (reg:SI 206 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 -1
     (nil))

;; if (_163 != 0)

(insn 387 386 388 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 206 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil))

(jump_insn 388 387 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:248 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _164 = *f_9(D);

(insn 390 389 391 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:249 -1
     (nil))

(insn 391 390 0 (set (reg/f:DI 207 [ D.5025 ])
        (mem/f:DI (reg/f:DI 323) [0 *f_9(D)+0 S8 A64])) mSector.c:249 -1
     (nil))

;; _165 = (long unsigned int) i_2;

(insn 392 391 393 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:249 -1
     (nil))

(insn 393 392 0 (set (reg:DI 208 [ D.5026 ])
        (sign_extend:DI (reg:SI 324))) mSector.c:249 -1
     (nil))

;; _166 = _165 * 160;

(insn 394 393 395 (set (reg:DI 325)
        (reg:DI 208 [ D.5026 ])) mSector.c:249 -1
     (nil))

(insn 395 394 396 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))

(insn 396 395 397 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 325)
                    (reg:DI 208 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 397 396 398 (parallel [
            (set (reg:DI 326)
                (ashift:DI (reg:DI 325)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))

(insn 398 397 399 (set (reg:DI 325)
        (reg:DI 326)) mSector.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 399 398 0 (set (reg:DI 209 [ D.5026 ])
        (reg:DI 325)) mSector.c:249 -1
     (nil))

;; _167 = _164 + _166;

(insn 400 399 0 (parallel [
            (set (reg/f:DI 210 [ D.5025 ])
                (plus:DI (reg/f:DI 207 [ D.5025 ])
                    (reg:DI 209 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))

;; _167->bound[1] = j_5;

(insn 401 400 402 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:249 -1
     (nil))

(insn 402 401 0 (set (mem/j:SI (plus:DI (reg/f:DI 210 [ D.5025 ])
                (const_int 116 [0x74])) [0 _167->bound+4 S4 A32])
        (reg:SI 327)) mSector.c:249 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 405 404 406 103 "" [0 uses])

(note 406 405 0 NOTE_INSN_BASIC_BLOCK)

;; j_168 = j_5 + 1;

(insn 407 406 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 408 407 409 102 "" [0 uses])

(note 409 408 0 NOTE_INSN_BASIC_BLOCK)

;; _134 = *f_9(D);

(insn 410 409 411 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))

(insn 411 410 0 (set (reg/f:DI 177 [ D.5025 ])
        (mem/f:DI (reg/f:DI 328) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))

;; _135 = (long unsigned int) i_2;

(insn 412 411 413 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))

(insn 413 412 0 (set (reg:DI 178 [ D.5026 ])
        (sign_extend:DI (reg:SI 329))) mSector.c:248 -1
     (nil))

;; _136 = _135 * 160;

(insn 414 413 415 (set (reg:DI 330)
        (reg:DI 178 [ D.5026 ])) mSector.c:248 -1
     (nil))

(insn 415 414 416 (parallel [
            (set (reg:DI 330)
                (ashift:DI (reg:DI 330)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 416 415 417 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg:DI 330)
                    (reg:DI 178 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 417 416 418 (parallel [
            (set (reg:DI 331)
                (ashift:DI (reg:DI 330)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

(insn 418 417 419 (set (reg:DI 330)
        (reg:DI 331)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 419 418 0 (set (reg:DI 179 [ D.5026 ])
        (reg:DI 330)) mSector.c:248 -1
     (nil))

;; _137 = _134 + _136;

(insn 420 419 0 (parallel [
            (set (reg/f:DI 180 [ D.5025 ])
                (plus:DI (reg/f:DI 177 [ D.5025 ])
                    (reg:DI 179 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))

;; _138 = _137->n_nvp;

(insn 421 420 0 (set (reg:SI 181 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 180 [ D.5025 ])
                (const_int 4 [0x4])) [0 _137->n_nvp+0 S4 A32])) mSector.c:248 -1
     (nil))

;; if (_138 > j_5)

(insn 423 421 424 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 181 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:248 -1
     (nil))

(jump_insn 424 423 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) mSector.c:248 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 425 424 426 104 "" [0 uses])

(note 426 425 0 NOTE_INSN_BASIC_BLOCK)

;; _169 = *f_9(D);

(insn 427 426 428 (set (reg/f:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 -1
     (nil))

(insn 428 427 0 (set (reg/f:DI 211 [ D.5025 ])
        (mem/f:DI (reg/f:DI 332) [0 *f_9(D)+0 S8 A64])) mSector.c:252 -1
     (nil))

;; _170 = (long unsigned int) i_2;

(insn 429 428 430 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 -1
     (nil))

(insn 430 429 0 (set (reg:DI 212 [ D.5026 ])
        (sign_extend:DI (reg:SI 333))) mSector.c:252 -1
     (nil))

;; _171 = _170 * 160;

(insn 431 430 432 (set (reg:DI 334)
        (reg:DI 212 [ D.5026 ])) mSector.c:252 -1
     (nil))

(insn 432 431 433 (parallel [
            (set (reg:DI 334)
                (ashift:DI (reg:DI 334)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

(insn 433 432 434 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg:DI 334)
                    (reg:DI 212 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 434 433 435 (parallel [
            (set (reg:DI 335)
                (ashift:DI (reg:DI 334)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

(insn 435 434 436 (set (reg:DI 334)
        (reg:DI 335)) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 436 435 0 (set (reg:DI 213 [ D.5026 ])
        (reg:DI 334)) mSector.c:252 -1
     (nil))

;; _172 = _169 + _171;

(insn 437 436 0 (parallel [
            (set (reg/f:DI 214 [ D.5025 ])
                (plus:DI (reg/f:DI 211 [ D.5025 ])
                    (reg:DI 213 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

;; _173 = _172->n_nvp;

(insn 438 437 0 (set (reg:SI 215 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 214 [ D.5025 ])
                (const_int 4 [0x4])) [0 _172->n_nvp+0 S4 A32])) mSector.c:252 -1
     (nil))

;; if (_173 == j_5)

(insn 439 438 440 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:252 -1
     (nil))

(jump_insn 440 439 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:252 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; _174 = *f_9(D);

(insn 442 441 443 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 -1
     (nil))

(insn 443 442 0 (set (reg/f:DI 216 [ D.5025 ])
        (mem/f:DI (reg/f:DI 336) [0 *f_9(D)+0 S8 A64])) mSector.c:252 -1
     (nil))

;; _175 = (long unsigned int) i_2;

(insn 444 443 445 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 -1
     (nil))

(insn 445 444 0 (set (reg:DI 217 [ D.5026 ])
        (sign_extend:DI (reg:SI 337))) mSector.c:252 -1
     (nil))

;; _176 = _175 * 160;

(insn 446 445 447 (set (reg:DI 338)
        (reg:DI 217 [ D.5026 ])) mSector.c:252 -1
     (nil))

(insn 447 446 448 (parallel [
            (set (reg:DI 338)
                (ashift:DI (reg:DI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

(insn 448 447 449 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg:DI 338)
                    (reg:DI 217 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 449 448 450 (parallel [
            (set (reg:DI 339)
                (ashift:DI (reg:DI 338)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

(insn 450 449 451 (set (reg:DI 338)
        (reg:DI 339)) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 451 450 0 (set (reg:DI 218 [ D.5026 ])
        (reg:DI 338)) mSector.c:252 -1
     (nil))

;; _177 = _174 + _176;

(insn 452 451 0 (parallel [
            (set (reg/f:DI 219 [ D.5025 ])
                (plus:DI (reg/f:DI 216 [ D.5025 ])
                    (reg:DI 218 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))

;; _178 = j_5 + -1;

(insn 453 452 454 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:252 -1
     (nil))

(insn 454 453 0 (parallel [
            (set (reg:SI 220 [ D.5024 ])
                (plus:SI (reg:SI 340)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _177->bound[1] = _178;

(insn 455 454 0 (set (mem/j:SI (plus:DI (reg/f:DI 219 [ D.5025 ])
                (const_int 116 [0x74])) [0 _177->bound+4 S4 A32])
        (reg:SI 220 [ D.5024 ])) mSector.c:252 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 456 455 457 106 "" [0 uses])

(note 457 456 0 NOTE_INSN_BASIC_BLOCK)

;; _179 = *f_9(D);

(insn 458 457 459 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 -1
     (nil))

(insn 459 458 0 (set (reg/f:DI 221 [ D.5025 ])
        (mem/f:DI (reg/f:DI 341) [0 *f_9(D)+0 S8 A64])) mSector.c:255 -1
     (nil))

;; _180 = (long unsigned int) i_2;

(insn 460 459 461 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 -1
     (nil))

(insn 461 460 0 (set (reg:DI 222 [ D.5026 ])
        (sign_extend:DI (reg:SI 342))) mSector.c:255 -1
     (nil))

;; _181 = _180 * 160;

(insn 462 461 463 (set (reg:DI 343)
        (reg:DI 222 [ D.5026 ])) mSector.c:255 -1
     (nil))

(insn 463 462 464 (parallel [
            (set (reg:DI 343)
                (ashift:DI (reg:DI 343)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

(insn 464 463 465 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg:DI 343)
                    (reg:DI 222 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 465 464 466 (parallel [
            (set (reg:DI 344)
                (ashift:DI (reg:DI 343)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

(insn 466 465 467 (set (reg:DI 343)
        (reg:DI 344)) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 467 466 0 (set (reg:DI 223 [ D.5026 ])
        (reg:DI 343)) mSector.c:255 -1
     (nil))

;; _182 = _179 + _181;

(insn 468 467 0 (parallel [
            (set (reg/f:DI 224 [ D.5025 ])
                (plus:DI (reg/f:DI 221 [ D.5025 ])
                    (reg:DI 223 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

;; _183 = _182->bound[0];

(insn 469 468 0 (set (reg:SI 225 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 224 [ D.5025 ])
                (const_int 112 [0x70])) [0 _182->bound+0 S4 A128])) mSector.c:255 -1
     (nil))

;; _184 = *f_9(D);

(insn 470 469 471 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 -1
     (nil))

(insn 471 470 0 (set (reg/f:DI 226 [ D.5025 ])
        (mem/f:DI (reg/f:DI 345) [0 *f_9(D)+0 S8 A64])) mSector.c:255 -1
     (nil))

;; _185 = (long unsigned int) i_2;

(insn 472 471 473 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 -1
     (nil))

(insn 473 472 0 (set (reg:DI 227 [ D.5026 ])
        (sign_extend:DI (reg:SI 346))) mSector.c:255 -1
     (nil))

;; _186 = _185 * 160;

(insn 474 473 475 (set (reg:DI 347)
        (reg:DI 227 [ D.5026 ])) mSector.c:255 -1
     (nil))

(insn 475 474 476 (parallel [
            (set (reg:DI 347)
                (ashift:DI (reg:DI 347)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

(insn 476 475 477 (parallel [
            (set (reg:DI 347)
                (plus:DI (reg:DI 347)
                    (reg:DI 227 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 477 476 478 (parallel [
            (set (reg:DI 348)
                (ashift:DI (reg:DI 347)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

(insn 478 477 479 (set (reg:DI 347)
        (reg:DI 348)) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 479 478 0 (set (reg:DI 228 [ D.5026 ])
        (reg:DI 347)) mSector.c:255 -1
     (nil))

;; _187 = _184 + _186;

(insn 480 479 0 (parallel [
            (set (reg/f:DI 229 [ D.5025 ])
                (plus:DI (reg/f:DI 226 [ D.5025 ])
                    (reg:DI 228 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))

;; _188 = _187->bound[1];

(insn 481 480 0 (set (reg:SI 230 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 229 [ D.5025 ])
                (const_int 116 [0x74])) [0 _187->bound+4 S4 A32])) mSector.c:255 -1
     (nil))

;; if (_183 == _188)

(insn 482 481 483 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 225 [ D.5024 ])
            (reg:SI 230 [ D.5024 ]))) mSector.c:255 -1
     (nil))

(jump_insn 483 482 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:255 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; __builtin_puts (&"SOmetingh wrong"[0]);

(insn 485 484 486 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f44d28a4850 *.LC14>)) mSector.c:256 -1
     (nil))

(call_insn 486 485 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:256 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _189 = *f_9(D);

(insn 487 486 488 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 -1
     (nil))

(insn 488 487 0 (set (reg/f:DI 231 [ D.5025 ])
        (mem/f:DI (reg/f:DI 349) [0 *f_9(D)+0 S8 A64])) mSector.c:257 -1
     (nil))

;; _190 = (long unsigned int) i_2;

(insn 489 488 490 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 -1
     (nil))

(insn 490 489 0 (set (reg:DI 232 [ D.5026 ])
        (sign_extend:DI (reg:SI 350))) mSector.c:257 -1
     (nil))

;; _191 = _190 * 160;

(insn 491 490 492 (set (reg:DI 351)
        (reg:DI 232 [ D.5026 ])) mSector.c:257 -1
     (nil))

(insn 492 491 493 (parallel [
            (set (reg:DI 351)
                (ashift:DI (reg:DI 351)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

(insn 493 492 494 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg:DI 351)
                    (reg:DI 232 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 494 493 495 (parallel [
            (set (reg:DI 352)
                (ashift:DI (reg:DI 351)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

(insn 495 494 496 (set (reg:DI 351)
        (reg:DI 352)) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 496 495 0 (set (reg:DI 233 [ D.5026 ])
        (reg:DI 351)) mSector.c:257 -1
     (nil))

;; _192 = _189 + _191;

(insn 497 496 0 (parallel [
            (set (reg/f:DI 234 [ D.5025 ])
                (plus:DI (reg/f:DI 231 [ D.5025 ])
                    (reg:DI 233 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

;; _193 = *f_9(D);

(insn 498 497 499 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 -1
     (nil))

(insn 499 498 0 (set (reg/f:DI 235 [ D.5025 ])
        (mem/f:DI (reg/f:DI 353) [0 *f_9(D)+0 S8 A64])) mSector.c:257 -1
     (nil))

;; _194 = (long unsigned int) i_2;

(insn 500 499 501 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 -1
     (nil))

(insn 501 500 0 (set (reg:DI 236 [ D.5026 ])
        (sign_extend:DI (reg:SI 354))) mSector.c:257 -1
     (nil))

;; _195 = _194 * 160;

(insn 502 501 503 (set (reg:DI 355)
        (reg:DI 236 [ D.5026 ])) mSector.c:257 -1
     (nil))

(insn 503 502 504 (parallel [
            (set (reg:DI 355)
                (ashift:DI (reg:DI 355)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

(insn 504 503 505 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg:DI 355)
                    (reg:DI 236 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 505 504 506 (parallel [
            (set (reg:DI 356)
                (ashift:DI (reg:DI 355)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

(insn 506 505 507 (set (reg:DI 355)
        (reg:DI 356)) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 507 506 0 (set (reg:DI 237 [ D.5026 ])
        (reg:DI 355)) mSector.c:257 -1
     (nil))

;; _196 = _193 + _195;

(insn 508 507 0 (parallel [
            (set (reg/f:DI 238 [ D.5025 ])
                (plus:DI (reg/f:DI 235 [ D.5025 ])
                    (reg:DI 237 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

;; _197 = _196->bound[1];

(insn 509 508 0 (set (reg:SI 239 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 238 [ D.5025 ])
                (const_int 116 [0x74])) [0 _196->bound+4 S4 A32])) mSector.c:257 -1
     (nil))

;; _198 = _197 + 1;

(insn 510 509 0 (parallel [
            (set (reg:SI 240 [ D.5024 ])
                (plus:SI (reg:SI 239 [ D.5024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))

;; _192->bound[1] = _198;

(insn 511 510 0 (set (mem/j:SI (plus:DI (reg/f:DI 234 [ D.5025 ])
                (const_int 116 [0x74])) [0 _192->bound+4 S4 A32])
        (reg:SI 240 [ D.5024 ])) mSector.c:257 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; 

(code_label 512 511 513 101 "" [0 uses])

(note 513 512 0 NOTE_INSN_BASIC_BLOCK)

;; i_199 = i_1 + 1;

(insn 514 513 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:225 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 515 514 516 88 "" [0 uses])

(note 516 515 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = *Nflight_7(D);

(insn 517 516 518 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:225 -1
     (nil))

(insn 518 517 0 (set (reg:SI 59 [ D.5024 ])
        (mem:SI (reg/f:DI 357) [0 *Nflight_7(D)+0 S4 A32])) mSector.c:225 -1
     (nil))

;; if (_8 > i_2)

(insn 520 518 521 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mSector.c:225 -1
     (nil))

(jump_insn 521 520 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) mSector.c:225 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; _200 = 1;

(insn 523 522 0 (set (reg:SI 241 [ D.5024 ])
        (const_int 1 [0x1])) mSector.c:262 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; <L31>:

(code_label 524 523 525 108 "" [0 uses])

(note 525 524 0 NOTE_INSN_BASIC_BLOCK)

;; return _200;

(insn 526 525 527 (set (reg:SI 242 [ <retval> ])
        (reg:SI 241 [ D.5024 ])) mSector.c:262 -1
     (nil))

(jump_insn 527 526 528 (set (pc)
        (label_ref 0)) mSector.c:262 -1
     (nil))

(barrier 528 527 0)
Purged non-fallthru edges from bb 36
deleting block 34


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 7->9 redirected to 10
Forwarding edge 7->8 to 11 failed.
Forwarding edge 7->8 to 11 failed.
deleting block 9
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.
Merging block 36 into block 34...
Merged blocks 34 and 36.
Merged 34 and 36 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 11 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:223 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:223 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:225 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 515)) mSector.c:225 -1
     (nil)
 -> 515)
;;  succ:       33

(barrier 9 8 519)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 519 9 10 4 107 "" [1 uses])
(note 10 519 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:226 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 60 [ D.5025 ])
        (mem/f:DI (reg/f:DI 243) [0 *f_9(D)+0 S8 A64])) mSector.c:226 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:226 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 61 [ D.5026 ])
        (sign_extend:DI (reg:SI 244))) mSector.c:226 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 245)
        (reg:DI 61 [ D.5026 ])) mSector.c:226 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 245)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg:DI 245)
                    (reg:DI 61 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 246)
                (ashift:DI (reg:DI 245)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 245)
        (reg:DI 246)) mSector.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 4 (set (reg:DI 62 [ D.5026 ])
        (reg:DI 245)) mSector.c:226 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 63 [ D.5025 ])
                (plus:DI (reg/f:DI 60 [ D.5025 ])
                    (reg:DI 62 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 -1
     (nil))
(insn 22 21 23 4 (set (mem/j:SI (plus:DI (reg/f:DI 63 [ D.5025 ])
                (const_int 44 [0x2c])) [0 _13->st_indx+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:226 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:227 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 64 [ D.5025 ])
        (mem/f:DI (reg/f:DI 247) [0 *f_9(D)+0 S8 A64])) mSector.c:227 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:227 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 65 [ D.5026 ])
        (sign_extend:DI (reg:SI 248))) mSector.c:227 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 249)
        (reg:DI 65 [ D.5026 ])) mSector.c:227 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 249)
                (ashift:DI (reg:DI 249)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg:DI 249)
                    (reg:DI 65 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 250)
                (ashift:DI (reg:DI 249)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 249)
        (reg:DI 250)) mSector.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 32 31 33 4 (set (reg:DI 66 [ D.5026 ])
        (reg:DI 249)) mSector.c:227 -1
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 67 [ D.5025 ])
                (plus:DI (reg/f:DI 64 [ D.5025 ])
                    (reg:DI 66 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 -1
     (nil))
(insn 34 33 35 4 (set (mem/j:SI (plus:DI (reg/f:DI 67 [ D.5025 ])
                (const_int 40 [0x28])) [0 _17->ready+0 S4 A64])
        (const_int 0 [0])) mSector.c:227 -1
     (nil))
(insn 35 34 36 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 -1
     (nil))
(insn 36 35 37 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (label_ref 169)) mSector.c:228 -1
     (nil)
 -> 169)
;;  succ:       13

(barrier 38 37 184)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 184 38 39 5 94 "" [1 uses])
(note 39 184 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg:SI 74 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:229 -1
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 75 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 76 [ D.5025 ])
        (mem/f:DI (reg/f:DI 251) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 44 43 45 5 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 45 44 46 5 (set (reg:DI 77 [ D.5026 ])
        (sign_extend:DI (reg:SI 252))) mSector.c:229 -1
     (nil))
(insn 46 45 47 5 (set (reg:DI 253)
        (reg:DI 77 [ D.5026 ])) mSector.c:229 -1
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 253)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 253)
                    (reg:DI 77 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 254)
                (ashift:DI (reg:DI 253)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 50 49 51 5 (set (reg:DI 253)
        (reg:DI 254)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 51 50 52 5 (set (reg:DI 78 [ D.5026 ])
        (reg:DI 253)) mSector.c:229 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg/f:DI 79 [ D.5025 ])
                (plus:DI (reg/f:DI 76 [ D.5025 ])
                    (reg:DI 78 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 53 52 54 5 (set (reg/f:DI 80 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79 [ D.5025 ])
                (const_int 8 [0x8])) [0 _31->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 55 54 56 5 (set (reg:DI 81 [ D.5026 ])
        (sign_extend:DI (reg:SI 255))) mSector.c:229 -1
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg:DI 82 [ D.5026 ])
                (ashift:DI (reg:DI 81 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg/f:DI 83 [ D.5027 ])
                (plus:DI (reg/f:DI 80 [ D.5027 ])
                    (reg:DI 82 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 58 57 59 5 (set (reg/f:DI 84 [ D.5028 ])
        (mem/f:DI (reg/f:DI 83 [ D.5027 ]) [0 *_35+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 59 58 60 5 (set (reg:SI 1 dx)
        (reg:SI 74 [ D.5024 ])) mSector.c:229 -1
     (nil))
(insn 60 59 61 5 (set (reg:DI 4 si)
        (reg/f:DI 75 [ D.5027 ])) mSector.c:229 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.5028 ])) mSector.c:229 -1
     (nil))
(call_insn 62 61 63 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 64 5 (set (reg:SI 85 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 -1
     (nil))
(insn 64 63 65 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil))
(jump_insn 65 64 66 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mSector.c:229 -1
     (nil)
 -> 94)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (set (reg:SI 86 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:229 -1
     (nil))
(insn 68 67 69 6 (set (reg/f:DI 87 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 69 68 70 6 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 70 69 71 6 (set (reg/f:DI 88 [ D.5025 ])
        (mem/f:DI (reg/f:DI 256) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 71 70 72 6 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 72 71 73 6 (set (reg:DI 89 [ D.5026 ])
        (sign_extend:DI (reg:SI 257))) mSector.c:229 -1
     (nil))
(insn 73 72 74 6 (set (reg:DI 258)
        (reg:DI 89 [ D.5026 ])) mSector.c:229 -1
     (nil))
(insn 74 73 75 6 (parallel [
            (set (reg:DI 258)
                (ashift:DI (reg:DI 258)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg:DI 258)
                    (reg:DI 89 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 76 75 77 6 (parallel [
            (set (reg:DI 259)
                (ashift:DI (reg:DI 258)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 77 76 78 6 (set (reg:DI 258)
        (reg:DI 259)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 78 77 79 6 (set (reg:DI 90 [ D.5026 ])
        (reg:DI 258)) mSector.c:229 -1
     (nil))
(insn 79 78 80 6 (parallel [
            (set (reg/f:DI 91 [ D.5025 ])
                (plus:DI (reg/f:DI 88 [ D.5025 ])
                    (reg:DI 90 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 80 79 81 6 (set (reg/f:DI 92 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 91 [ D.5025 ])
                (const_int 8 [0x8])) [0 _43->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 81 80 82 6 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 82 81 83 6 (set (reg:DI 93 [ D.5029 ])
        (sign_extend:DI (reg:SI 260))) mSector.c:229 -1
     (nil))
(insn 83 82 84 6 (parallel [
            (set (reg:DI 94 [ D.5029 ])
                (plus:DI (reg:DI 93 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 84 83 85 6 (parallel [
            (set (reg:DI 95 [ D.5029 ])
                (ashift:DI (reg:DI 94 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 85 84 86 6 (parallel [
            (set (reg/f:DI 96 [ D.5027 ])
                (plus:DI (reg/f:DI 92 [ D.5027 ])
                    (reg:DI 95 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 86 85 87 6 (set (reg/f:DI 97 [ D.5028 ])
        (mem/f:DI (reg/f:DI 96 [ D.5027 ]) [0 *_48+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 87 86 88 6 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.5024 ])) mSector.c:229 -1
     (nil))
(insn 88 87 89 6 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.5027 ])) mSector.c:229 -1
     (nil))
(insn 89 88 90 6 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5028 ])) mSector.c:229 -1
     (nil))
(call_insn 90 89 91 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 91 90 92 6 (set (reg:SI 98 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 -1
     (nil))
(insn 92 91 93 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 -1
     (nil))
(jump_insn 93 92 94 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mSector.c:229 -1
     (nil)
 -> 144)
;;  succ:       7 (FALLTHRU)
;;              11

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 94 93 95 7 90 "" [1 uses])
(note 95 94 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 7 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 97 96 98 7 (set (reg/f:DI 99 [ D.5025 ])
        (mem/f:DI (reg/f:DI 261) [0 *f_9(D)+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 98 97 99 7 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 99 98 100 7 (set (reg:DI 100 [ D.5026 ])
        (sign_extend:DI (reg:SI 262))) mSector.c:229 -1
     (nil))
(insn 100 99 101 7 (set (reg:DI 263)
        (reg:DI 100 [ D.5026 ])) mSector.c:229 -1
     (nil))
(insn 101 100 102 7 (parallel [
            (set (reg:DI 263)
                (ashift:DI (reg:DI 263)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 102 101 103 7 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg:DI 263)
                    (reg:DI 100 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 103 102 104 7 (parallel [
            (set (reg:DI 264)
                (ashift:DI (reg:DI 263)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 104 103 105 7 (set (reg:DI 263)
        (reg:DI 264)) mSector.c:229 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 105 104 106 7 (set (reg:DI 101 [ D.5026 ])
        (reg:DI 263)) mSector.c:229 -1
     (nil))
(insn 106 105 107 7 (parallel [
            (set (reg/f:DI 102 [ D.5025 ])
                (plus:DI (reg/f:DI 99 [ D.5025 ])
                    (reg:DI 101 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 107 106 108 7 (set (reg/f:DI 103 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 102 [ D.5025 ])
                (const_int 8 [0x8])) [0 _54->nvp+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 108 107 109 7 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 -1
     (nil))
(insn 109 108 110 7 (set (reg:DI 104 [ D.5026 ])
        (sign_extend:DI (reg:SI 265))) mSector.c:229 -1
     (nil))
(insn 110 109 111 7 (parallel [
            (set (reg:DI 105 [ D.5026 ])
                (ashift:DI (reg:DI 104 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 111 110 112 7 (parallel [
            (set (reg/f:DI 106 [ D.5027 ])
                (plus:DI (reg/f:DI 103 [ D.5027 ])
                    (reg:DI 105 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 112 111 113 7 (set (reg/f:DI 107 [ D.5028 ])
        (mem/f:DI (reg/f:DI 106 [ D.5027 ]) [0 *_58+0 S8 A64])) mSector.c:229 -1
     (nil))
(insn 113 112 114 7 (parallel [
            (set (reg/f:DI 108 [ D.5028 ])
                (plus:DI (reg/f:DI 107 [ D.5028 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 -1
     (nil))
(insn 114 113 115 7 (set (reg:XF 109 [ D.5030 ])
        (mem:XF (reg/f:DI 108 [ D.5028 ]) [0 *_60+0 S16 A128])) mSector.c:229 -1
     (nil))
(insn 115 114 116 7 (set (reg:XF 266)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mSector.c:229 -1
     (expr_list:REG_EQUAL (const_double:XF 2.4e+2 [0x0.fp+8])
        (nil)))
(insn 116 115 117 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 109 [ D.5030 ])
            (reg:XF 266))) mSector.c:229 -1
     (nil))
(jump_insn 117 116 535 7 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 538)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 538)
;;  succ:       10
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 535 117 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 118 535 119 8 (set (pc)
        (label_ref 144)) mSector.c:229 -1
     (nil)
 -> 144)
;;  succ:       11

(barrier 119 118 538)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 538 119 121 10 109 "" [1 uses])
(note 121 538 122 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 10 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:230 -1
     (nil))
(insn 123 122 124 10 (set (reg/f:DI 110 [ D.5025 ])
        (mem/f:DI (reg/f:DI 267) [0 *f_9(D)+0 S8 A64])) mSector.c:230 -1
     (nil))
(insn 124 123 125 10 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:230 -1
     (nil))
(insn 125 124 126 10 (set (reg:DI 111 [ D.5026 ])
        (sign_extend:DI (reg:SI 268))) mSector.c:230 -1
     (nil))
(insn 126 125 127 10 (set (reg:DI 269)
        (reg:DI 111 [ D.5026 ])) mSector.c:230 -1
     (nil))
(insn 127 126 128 10 (parallel [
            (set (reg:DI 269)
                (ashift:DI (reg:DI 269)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 128 127 129 10 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg:DI 269)
                    (reg:DI 111 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 129 128 130 10 (parallel [
            (set (reg:DI 270)
                (ashift:DI (reg:DI 269)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 130 129 131 10 (set (reg:DI 269)
        (reg:DI 270)) mSector.c:230 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 131 130 132 10 (set (reg:DI 112 [ D.5026 ])
        (reg:DI 269)) mSector.c:230 -1
     (nil))
(insn 132 131 133 10 (parallel [
            (set (reg/f:DI 113 [ D.5025 ])
                (plus:DI (reg/f:DI 110 [ D.5025 ])
                    (reg:DI 112 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 133 132 134 10 (set (reg/f:DI 114 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 113 [ D.5025 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mSector.c:230 -1
     (nil))
(insn 134 133 135 10 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:230 -1
     (nil))
(insn 135 134 136 10 (set (reg:DI 115 [ D.5026 ])
        (sign_extend:DI (reg:SI 271))) mSector.c:230 -1
     (nil))
(insn 136 135 137 10 (parallel [
            (set (reg:DI 116 [ D.5026 ])
                (ashift:DI (reg:DI 115 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 137 136 138 10 (parallel [
            (set (reg/f:DI 117 [ D.5027 ])
                (plus:DI (reg/f:DI 114 [ D.5027 ])
                    (reg:DI 116 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 138 137 139 10 (set (reg/f:DI 118 [ D.5028 ])
        (mem/f:DI (reg/f:DI 117 [ D.5027 ]) [0 *_69+0 S8 A64])) mSector.c:230 -1
     (nil))
(insn 139 138 140 10 (parallel [
            (set (reg/f:DI 119 [ D.5028 ])
                (plus:DI (reg/f:DI 118 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 -1
     (nil))
(insn 140 139 141 10 (set (reg:XF 272)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:230 -1
     (nil))
(insn 141 140 142 10 (set (mem:XF (reg/f:DI 119 [ D.5028 ]) [0 *_71+0 S16 A128])
        (reg:XF 272)) mSector.c:230 -1
     (nil))
(jump_insn 142 141 143 10 (set (pc)
        (label_ref 166)) mSector.c:230 -1
     (nil)
 -> 166)
;;  succ:       12

(barrier 143 142 144)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              8
(code_label 144 143 145 11 91 "" [2 uses])
(note 145 144 146 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 11 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:232 -1
     (nil))
(insn 147 146 148 11 (set (reg/f:DI 120 [ D.5025 ])
        (mem/f:DI (reg/f:DI 273) [0 *f_9(D)+0 S8 A64])) mSector.c:232 -1
     (nil))
(insn 148 147 149 11 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:232 -1
     (nil))
(insn 149 148 150 11 (set (reg:DI 121 [ D.5026 ])
        (sign_extend:DI (reg:SI 274))) mSector.c:232 -1
     (nil))
(insn 150 149 151 11 (set (reg:DI 275)
        (reg:DI 121 [ D.5026 ])) mSector.c:232 -1
     (nil))
(insn 151 150 152 11 (parallel [
            (set (reg:DI 275)
                (ashift:DI (reg:DI 275)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 152 151 153 11 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg:DI 275)
                    (reg:DI 121 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 153 152 154 11 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 275)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 154 153 155 11 (set (reg:DI 275)
        (reg:DI 276)) mSector.c:232 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 155 154 156 11 (set (reg:DI 122 [ D.5026 ])
        (reg:DI 275)) mSector.c:232 -1
     (nil))
(insn 156 155 157 11 (parallel [
            (set (reg/f:DI 123 [ D.5025 ])
                (plus:DI (reg/f:DI 120 [ D.5025 ])
                    (reg:DI 122 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 157 156 158 11 (set (reg/f:DI 124 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 123 [ D.5025 ])
                (const_int 8 [0x8])) [0 _75->nvp+0 S8 A64])) mSector.c:232 -1
     (nil))
(insn 158 157 159 11 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:232 -1
     (nil))
(insn 159 158 160 11 (set (reg:DI 125 [ D.5026 ])
        (sign_extend:DI (reg:SI 277))) mSector.c:232 -1
     (nil))
(insn 160 159 161 11 (parallel [
            (set (reg:DI 126 [ D.5026 ])
                (ashift:DI (reg:DI 125 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 161 160 162 11 (parallel [
            (set (reg/f:DI 127 [ D.5027 ])
                (plus:DI (reg/f:DI 124 [ D.5027 ])
                    (reg:DI 126 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 162 161 163 11 (set (reg/f:DI 128 [ D.5028 ])
        (mem/f:DI (reg/f:DI 127 [ D.5027 ]) [0 *_79+0 S8 A64])) mSector.c:232 -1
     (nil))
(insn 163 162 164 11 (parallel [
            (set (reg/f:DI 129 [ D.5028 ])
                (plus:DI (reg/f:DI 128 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 -1
     (nil))
(insn 164 163 165 11 (set (reg:XF 278)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:232 -1
     (nil))
(insn 165 164 166 11 (set (mem:XF (reg/f:DI 129 [ D.5028 ]) [0 *_81+0 S16 A128])
        (reg:XF 278)) mSector.c:232 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 166 165 167 12 93 "" [1 uses])
(note 167 166 168 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              12 (FALLTHRU,DFS_BACK)
(code_label 169 168 170 13 89 "" [1 uses])
(note 170 169 171 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 13 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:228 -1
     (nil))
(insn 172 171 173 13 (set (reg/f:DI 68 [ D.5025 ])
        (mem/f:DI (reg/f:DI 279) [0 *f_9(D)+0 S8 A64])) mSector.c:228 -1
     (nil))
(insn 173 172 174 13 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:228 -1
     (nil))
(insn 174 173 175 13 (set (reg:DI 69 [ D.5026 ])
        (sign_extend:DI (reg:SI 280))) mSector.c:228 -1
     (nil))
(insn 175 174 176 13 (set (reg:DI 281)
        (reg:DI 69 [ D.5026 ])) mSector.c:228 -1
     (nil))
(insn 176 175 177 13 (parallel [
            (set (reg:DI 281)
                (ashift:DI (reg:DI 281)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))
(insn 177 176 178 13 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg:DI 281)
                    (reg:DI 69 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 178 177 179 13 (parallel [
            (set (reg:DI 282)
                (ashift:DI (reg:DI 281)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))
(insn 179 178 180 13 (set (reg:DI 281)
        (reg:DI 282)) mSector.c:228 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 180 179 181 13 (set (reg:DI 70 [ D.5026 ])
        (reg:DI 281)) mSector.c:228 -1
     (nil))
(insn 181 180 182 13 (parallel [
            (set (reg/f:DI 71 [ D.5025 ])
                (plus:DI (reg/f:DI 68 [ D.5025 ])
                    (reg:DI 70 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))
(insn 182 181 183 13 (set (reg:SI 72 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5025 ])
                (const_int 4 [0x4])) [0 _23->n_nvp+0 S4 A32])) mSector.c:228 -1
     (nil))
(insn 183 182 185 13 (parallel [
            (set (reg:SI 73 [ D.5024 ])
                (plus:SI (reg:SI 72 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 -1
     (nil))
(insn 185 183 186 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:228 -1
     (nil))
(jump_insn 186 185 187 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:228 -1
     (nil)
 -> 184)
;;  succ:       5
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 187 186 188 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 14 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:238 -1
     (nil))
(jump_insn 189 188 190 14 (set (pc)
        (label_ref 266)) mSector.c:238 -1
     (nil)
 -> 266)
;;  succ:       19

(barrier 190 189 281)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 281 190 191 15 99 "" [1 uses])
(note 191 281 192 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 15 (set (reg:SI 136 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:238 -1
     (nil))
(insn 193 192 194 15 (set (reg/f:DI 137 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 194 193 195 15 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 195 194 196 15 (set (reg/f:DI 138 [ D.5025 ])
        (mem/f:DI (reg/f:DI 283) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 196 195 197 15 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 197 196 198 15 (set (reg:DI 139 [ D.5026 ])
        (sign_extend:DI (reg:SI 284))) mSector.c:238 -1
     (nil))
(insn 198 197 199 15 (set (reg:DI 285)
        (reg:DI 139 [ D.5026 ])) mSector.c:238 -1
     (nil))
(insn 199 198 200 15 (parallel [
            (set (reg:DI 285)
                (ashift:DI (reg:DI 285)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 200 199 201 15 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg:DI 285)
                    (reg:DI 139 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 201 200 202 15 (parallel [
            (set (reg:DI 286)
                (ashift:DI (reg:DI 285)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 202 201 203 15 (set (reg:DI 285)
        (reg:DI 286)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 203 202 204 15 (set (reg:DI 140 [ D.5026 ])
        (reg:DI 285)) mSector.c:238 -1
     (nil))
(insn 204 203 205 15 (parallel [
            (set (reg/f:DI 141 [ D.5025 ])
                (plus:DI (reg/f:DI 138 [ D.5025 ])
                    (reg:DI 140 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 205 204 206 15 (set (reg/f:DI 142 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 141 [ D.5025 ])
                (const_int 8 [0x8])) [0 _95->nvp+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 206 205 207 15 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 207 206 208 15 (set (reg:DI 143 [ D.5026 ])
        (sign_extend:DI (reg:SI 287))) mSector.c:238 -1
     (nil))
(insn 208 207 209 15 (parallel [
            (set (reg:DI 144 [ D.5026 ])
                (ashift:DI (reg:DI 143 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 209 208 210 15 (parallel [
            (set (reg/f:DI 145 [ D.5027 ])
                (plus:DI (reg/f:DI 142 [ D.5027 ])
                    (reg:DI 144 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 210 209 211 15 (set (reg/f:DI 146 [ D.5028 ])
        (mem/f:DI (reg/f:DI 145 [ D.5027 ]) [0 *_99+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 211 210 212 15 (set (reg:SI 1 dx)
        (reg:SI 136 [ D.5024 ])) mSector.c:238 -1
     (nil))
(insn 212 211 213 15 (set (reg:DI 4 si)
        (reg/f:DI 137 [ D.5027 ])) mSector.c:238 -1
     (nil))
(insn 213 212 214 15 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.5028 ])) mSector.c:238 -1
     (nil))
(call_insn 214 213 215 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 215 214 216 15 (set (reg:SI 147 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 -1
     (nil))
(insn 216 215 217 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil))
(jump_insn 217 216 218 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) mSector.c:238 -1
     (nil)
 -> 246)
;;  succ:       17
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 218 217 219 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 16 (set (reg:SI 148 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:238 -1
     (nil))
(insn 220 219 221 16 (set (reg/f:DI 149 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 221 220 222 16 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 222 221 223 16 (set (reg/f:DI 150 [ D.5025 ])
        (mem/f:DI (reg/f:DI 288) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 223 222 224 16 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 224 223 225 16 (set (reg:DI 151 [ D.5026 ])
        (sign_extend:DI (reg:SI 289))) mSector.c:238 -1
     (nil))
(insn 225 224 226 16 (set (reg:DI 290)
        (reg:DI 151 [ D.5026 ])) mSector.c:238 -1
     (nil))
(insn 226 225 227 16 (parallel [
            (set (reg:DI 290)
                (ashift:DI (reg:DI 290)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 227 226 228 16 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 290)
                    (reg:DI 151 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 228 227 229 16 (parallel [
            (set (reg:DI 291)
                (ashift:DI (reg:DI 290)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 229 228 230 16 (set (reg:DI 290)
        (reg:DI 291)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 230 229 231 16 (set (reg:DI 152 [ D.5026 ])
        (reg:DI 290)) mSector.c:238 -1
     (nil))
(insn 231 230 232 16 (parallel [
            (set (reg/f:DI 153 [ D.5025 ])
                (plus:DI (reg/f:DI 150 [ D.5025 ])
                    (reg:DI 152 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 232 231 233 16 (set (reg/f:DI 154 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 153 [ D.5025 ])
                (const_int 8 [0x8])) [0 _107->nvp+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 233 232 234 16 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 234 233 235 16 (set (reg:DI 155 [ D.5029 ])
        (sign_extend:DI (reg:SI 292))) mSector.c:238 -1
     (nil))
(insn 235 234 236 16 (parallel [
            (set (reg:DI 156 [ D.5029 ])
                (plus:DI (reg:DI 155 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 236 235 237 16 (parallel [
            (set (reg:DI 157 [ D.5029 ])
                (ashift:DI (reg:DI 156 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 237 236 238 16 (parallel [
            (set (reg/f:DI 158 [ D.5027 ])
                (plus:DI (reg/f:DI 154 [ D.5027 ])
                    (reg:DI 157 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 238 237 239 16 (set (reg/f:DI 159 [ D.5028 ])
        (mem/f:DI (reg/f:DI 158 [ D.5027 ]) [0 *_112+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 239 238 240 16 (set (reg:SI 1 dx)
        (reg:SI 148 [ D.5024 ])) mSector.c:238 -1
     (nil))
(insn 240 239 241 16 (set (reg:DI 4 si)
        (reg/f:DI 149 [ D.5027 ])) mSector.c:238 -1
     (nil))
(insn 241 240 242 16 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.5028 ])) mSector.c:238 -1
     (nil))
(call_insn 242 241 243 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 243 242 244 16 (set (reg:SI 160 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 -1
     (nil))
(insn 244 243 245 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 -1
     (nil))
(jump_insn 245 244 246 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) mSector.c:238 -1
     (nil)
 -> 263)
;;  succ:       17 (FALLTHRU)
;;              18

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 246 245 247 17 96 "" [1 uses])
(note 247 246 248 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 17 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:239 -1
     (nil))
(insn 249 248 250 17 (set (reg/f:DI 161 [ D.5025 ])
        (mem/f:DI (reg/f:DI 293) [0 *f_9(D)+0 S8 A64])) mSector.c:239 -1
     (nil))
(insn 250 249 251 17 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:239 -1
     (nil))
(insn 251 250 252 17 (set (reg:DI 162 [ D.5026 ])
        (sign_extend:DI (reg:SI 294))) mSector.c:239 -1
     (nil))
(insn 252 251 253 17 (set (reg:DI 295)
        (reg:DI 162 [ D.5026 ])) mSector.c:239 -1
     (nil))
(insn 253 252 254 17 (parallel [
            (set (reg:DI 295)
                (ashift:DI (reg:DI 295)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))
(insn 254 253 255 17 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg:DI 295)
                    (reg:DI 162 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 255 254 256 17 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 295)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))
(insn 256 255 257 17 (set (reg:DI 295)
        (reg:DI 296)) mSector.c:239 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 257 256 258 17 (set (reg:DI 163 [ D.5026 ])
        (reg:DI 295)) mSector.c:239 -1
     (nil))
(insn 258 257 259 17 (parallel [
            (set (reg/f:DI 164 [ D.5025 ])
                (plus:DI (reg/f:DI 161 [ D.5025 ])
                    (reg:DI 163 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 -1
     (nil))
(insn 259 258 260 17 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:239 -1
     (nil))
(insn 260 259 261 17 (set (mem/j:SI (plus:DI (reg/f:DI 164 [ D.5025 ])
                (const_int 112 [0x70])) [0 _119->bound+0 S4 A128])
        (reg:SI 297)) mSector.c:239 -1
     (nil))
(jump_insn 261 260 262 17 (set (pc)
        (label_ref 284)) mSector.c:240 -1
     (nil)
 -> 284)
;;  succ:       20

(barrier 262 261 263)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 263 262 264 18 97 "" [1 uses])
(note 264 263 265 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
;;  succ:       19 (FALLTHRU,DFS_BACK)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              18 (FALLTHRU,DFS_BACK)
(code_label 266 265 267 19 95 "" [1 uses])
(note 267 266 268 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 19 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 269 268 270 19 (set (reg/f:DI 130 [ D.5025 ])
        (mem/f:DI (reg/f:DI 298) [0 *f_9(D)+0 S8 A64])) mSector.c:238 -1
     (nil))
(insn 270 269 271 19 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 271 270 272 19 (set (reg:DI 131 [ D.5026 ])
        (sign_extend:DI (reg:SI 299))) mSector.c:238 -1
     (nil))
(insn 272 271 273 19 (set (reg:DI 300)
        (reg:DI 131 [ D.5026 ])) mSector.c:238 -1
     (nil))
(insn 273 272 274 19 (parallel [
            (set (reg:DI 300)
                (ashift:DI (reg:DI 300)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 274 273 275 19 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg:DI 300)
                    (reg:DI 131 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 275 274 276 19 (parallel [
            (set (reg:DI 301)
                (ashift:DI (reg:DI 300)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 276 275 277 19 (set (reg:DI 300)
        (reg:DI 301)) mSector.c:238 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 277 276 278 19 (set (reg:DI 132 [ D.5026 ])
        (reg:DI 300)) mSector.c:238 -1
     (nil))
(insn 278 277 279 19 (parallel [
            (set (reg/f:DI 133 [ D.5025 ])
                (plus:DI (reg/f:DI 130 [ D.5025 ])
                    (reg:DI 132 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 279 278 280 19 (set (reg:SI 134 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 133 [ D.5025 ])
                (const_int 4 [0x4])) [0 _87->n_nvp+0 S4 A32])) mSector.c:238 -1
     (nil))
(insn 280 279 282 19 (parallel [
            (set (reg:SI 135 [ D.5024 ])
                (plus:SI (reg:SI 134 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 -1
     (nil))
(insn 282 280 283 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 135 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:238 -1
     (nil))
(jump_insn 283 282 284 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) mSector.c:238 -1
     (nil)
 -> 281)
;;  succ:       15
;;              20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              19 (FALLTHRU)
(code_label 284 283 285 20 98 "" [1 uses])
(note 285 284 286 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 20 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:242 -1
     (nil))
(insn 287 286 288 20 (set (reg/f:DI 165 [ D.5025 ])
        (mem/f:DI (reg/f:DI 302) [0 *f_9(D)+0 S8 A64])) mSector.c:242 -1
     (nil))
(insn 288 287 289 20 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:242 -1
     (nil))
(insn 289 288 290 20 (set (reg:DI 166 [ D.5026 ])
        (sign_extend:DI (reg:SI 303))) mSector.c:242 -1
     (nil))
(insn 290 289 291 20 (set (reg:DI 304)
        (reg:DI 166 [ D.5026 ])) mSector.c:242 -1
     (nil))
(insn 291 290 292 20 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))
(insn 292 291 293 20 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 166 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 293 292 294 20 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))
(insn 294 293 295 20 (set (reg:DI 304)
        (reg:DI 305)) mSector.c:242 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 295 294 296 20 (set (reg:DI 167 [ D.5026 ])
        (reg:DI 304)) mSector.c:242 -1
     (nil))
(insn 296 295 297 20 (parallel [
            (set (reg/f:DI 168 [ D.5025 ])
                (plus:DI (reg/f:DI 165 [ D.5025 ])
                    (reg:DI 167 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))
(insn 297 296 298 20 (set (reg:SI 169 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 168 [ D.5025 ])
                (const_int 4 [0x4])) [0 _123->n_nvp+0 S4 A32])) mSector.c:242 -1
     (nil))
(insn 298 297 299 20 (parallel [
            (set (reg:SI 170 [ D.5024 ])
                (plus:SI (reg:SI 169 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 -1
     (nil))
(insn 299 298 300 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:242 -1
     (nil))
(jump_insn 300 299 301 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) mSector.c:242 -1
     (nil)
 -> 329)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 301 300 302 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 21 (set (reg:SI 171 [ i.3 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:243 -1
     (nil))
(insn 303 302 304 21 (parallel [
            (set (reg:SI 306)
                (plus:SI (reg:SI 171 [ i.3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:243 -1
     (nil))
(insn 304 303 305 21 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 306)) mSector.c:243 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 171 [ i.3 ])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 305 304 306 21 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:243 -1
     (nil))
(insn 306 305 307 21 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:243 -1
     (nil))
(insn 307 306 308 21 (set (reg:SI 1 dx)
        (reg:SI 171 [ i.3 ])) mSector.c:243 -1
     (nil))
(insn 308 307 309 21 (set (reg:DI 4 si)
        (reg:DI 307)) mSector.c:243 -1
     (nil))
(insn 309 308 310 21 (set (reg:DI 5 di)
        (reg:DI 308)) mSector.c:243 -1
     (nil))
(call_insn 310 309 311 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_aircraft") [flags 0x3]  <function_decl 0x7f44d2a01700 remove_aircraft>) [0 remove_aircraft S1 A8])
            (const_int 0 [0]))) mSector.c:243 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 311 310 312 21 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:244 -1
     (nil))
(insn 312 311 313 21 (set (reg/f:DI 172 [ D.5025 ])
        (mem/f:DI (reg/f:DI 309) [0 *f_9(D)+0 S8 A64])) mSector.c:244 -1
     (nil))
(insn 313 312 314 21 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:244 -1
     (nil))
(insn 314 313 315 21 (set (reg:DI 173 [ D.5026 ])
        (sign_extend:DI (reg:SI 310))) mSector.c:244 -1
     (nil))
(insn 315 314 316 21 (set (reg:DI 311)
        (reg:DI 173 [ D.5026 ])) mSector.c:244 -1
     (nil))
(insn 316 315 317 21 (parallel [
            (set (reg:DI 311)
                (ashift:DI (reg:DI 311)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))
(insn 317 316 318 21 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 311)
                    (reg:DI 173 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 318 317 319 21 (parallel [
            (set (reg:DI 312)
                (ashift:DI (reg:DI 311)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))
(insn 319 318 320 21 (set (reg:DI 311)
        (reg:DI 312)) mSector.c:244 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 320 319 321 21 (set (reg:DI 174 [ D.5026 ])
        (reg:DI 311)) mSector.c:244 -1
     (nil))
(insn 321 320 322 21 (parallel [
            (set (reg/f:DI 175 [ D.5025 ])
                (plus:DI (reg/f:DI 172 [ D.5025 ])
                    (reg:DI 174 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 -1
     (nil))
(insn 322 321 323 21 (set (reg:SI 176 [ D.5024 ])
        (mem/j:SI (reg/f:DI 175 [ D.5025 ]) [0 _131->ID+0 S4 A128])) mSector.c:244 -1
     (nil))
(insn 323 322 324 21 (set (reg:SI 4 si)
        (reg:SI 176 [ D.5024 ])) mSector.c:244 -1
     (nil))
(insn 324 323 325 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f44d28a47b8 *.LC13>)) mSector.c:244 -1
     (nil))
(insn 325 324 326 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) mSector.c:244 -1
     (nil))
(call_insn 326 325 327 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f44d2950f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mSector.c:244 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(jump_insn 327 326 328 21 (set (pc)
        (label_ref 512)) mSector.c:245 -1
     (nil)
 -> 512)
;;  succ:       32

(barrier 328 327 329)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 329 328 330 22 100 "" [1 uses])
(note 330 329 331 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(jump_insn 332 331 333 22 (set (pc)
        (label_ref 408)) mSector.c:248 -1
     (nil)
 -> 408)
;;  succ:       27

(barrier 333 332 422)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 422 333 334 23 105 "" [1 uses])
(note 334 422 335 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 23 (set (reg:SI 182 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:248 -1
     (nil))
(insn 336 335 337 23 (set (reg/f:DI 183 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 337 336 338 23 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 338 337 339 23 (set (reg/f:DI 184 [ D.5025 ])
        (mem/f:DI (reg/f:DI 313) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 339 338 340 23 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 340 339 341 23 (set (reg:DI 185 [ D.5026 ])
        (sign_extend:DI (reg:SI 314))) mSector.c:248 -1
     (nil))
(insn 341 340 342 23 (set (reg:DI 315)
        (reg:DI 185 [ D.5026 ])) mSector.c:248 -1
     (nil))
(insn 342 341 343 23 (parallel [
            (set (reg:DI 315)
                (ashift:DI (reg:DI 315)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 343 342 344 23 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg:DI 315)
                    (reg:DI 185 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 344 343 345 23 (parallel [
            (set (reg:DI 316)
                (ashift:DI (reg:DI 315)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 345 344 346 23 (set (reg:DI 315)
        (reg:DI 316)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 346 345 347 23 (set (reg:DI 186 [ D.5026 ])
        (reg:DI 315)) mSector.c:248 -1
     (nil))
(insn 347 346 348 23 (parallel [
            (set (reg/f:DI 187 [ D.5025 ])
                (plus:DI (reg/f:DI 184 [ D.5025 ])
                    (reg:DI 186 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 348 347 349 23 (set (reg/f:DI 188 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 187 [ D.5025 ])
                (const_int 8 [0x8])) [0 _144->nvp+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 349 348 350 23 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 350 349 351 23 (set (reg:DI 189 [ D.5026 ])
        (sign_extend:DI (reg:SI 317))) mSector.c:248 -1
     (nil))
(insn 351 350 352 23 (parallel [
            (set (reg:DI 190 [ D.5026 ])
                (ashift:DI (reg:DI 189 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 352 351 353 23 (parallel [
            (set (reg/f:DI 191 [ D.5027 ])
                (plus:DI (reg/f:DI 188 [ D.5027 ])
                    (reg:DI 190 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 353 352 354 23 (set (reg/f:DI 192 [ D.5028 ])
        (mem/f:DI (reg/f:DI 191 [ D.5027 ]) [0 *_148+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 354 353 355 23 (set (reg:SI 1 dx)
        (reg:SI 182 [ D.5024 ])) mSector.c:248 -1
     (nil))
(insn 355 354 356 23 (set (reg:DI 4 si)
        (reg/f:DI 183 [ D.5027 ])) mSector.c:248 -1
     (nil))
(insn 356 355 357 23 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.5028 ])) mSector.c:248 -1
     (nil))
(call_insn 357 356 358 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 358 357 359 23 (set (reg:SI 193 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 -1
     (nil))
(insn 359 358 360 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil))
(jump_insn 360 359 361 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 -1
     (nil)
 -> 405)
;;  succ:       24 (FALLTHRU)
;;              26

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 361 360 362 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 24 (set (reg:SI 194 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 53 virtual-incoming-args) [0 c.Nbound+0 S4 A128])) mSector.c:248 -1
     (nil))
(insn 363 362 364 24 (set (reg/f:DI 195 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 364 363 365 24 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 365 364 366 24 (set (reg/f:DI 196 [ D.5025 ])
        (mem/f:DI (reg/f:DI 318) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 366 365 367 24 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 367 366 368 24 (set (reg:DI 197 [ D.5026 ])
        (sign_extend:DI (reg:SI 319))) mSector.c:248 -1
     (nil))
(insn 368 367 369 24 (set (reg:DI 320)
        (reg:DI 197 [ D.5026 ])) mSector.c:248 -1
     (nil))
(insn 369 368 370 24 (parallel [
            (set (reg:DI 320)
                (ashift:DI (reg:DI 320)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 370 369 371 24 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg:DI 320)
                    (reg:DI 197 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 371 370 372 24 (parallel [
            (set (reg:DI 321)
                (ashift:DI (reg:DI 320)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 372 371 373 24 (set (reg:DI 320)
        (reg:DI 321)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 373 372 374 24 (set (reg:DI 198 [ D.5026 ])
        (reg:DI 320)) mSector.c:248 -1
     (nil))
(insn 374 373 375 24 (parallel [
            (set (reg/f:DI 199 [ D.5025 ])
                (plus:DI (reg/f:DI 196 [ D.5025 ])
                    (reg:DI 198 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 375 374 376 24 (set (reg/f:DI 200 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199 [ D.5025 ])
                (const_int 8 [0x8])) [0 _156->nvp+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 376 375 377 24 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 377 376 378 24 (set (reg:DI 201 [ D.5026 ])
        (sign_extend:DI (reg:SI 322))) mSector.c:248 -1
     (nil))
(insn 378 377 379 24 (parallel [
            (set (reg:DI 202 [ D.5026 ])
                (ashift:DI (reg:DI 201 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 379 378 380 24 (parallel [
            (set (reg:DI 203 [ D.5029 ])
                (plus:DI (reg:DI 202 [ D.5026 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 380 379 381 24 (parallel [
            (set (reg/f:DI 204 [ D.5027 ])
                (plus:DI (reg/f:DI 200 [ D.5027 ])
                    (reg:DI 203 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 381 380 382 24 (set (reg/f:DI 205 [ D.5028 ])
        (mem/f:DI (reg/f:DI 204 [ D.5027 ]) [0 *_161+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 382 381 383 24 (set (reg:SI 1 dx)
        (reg:SI 194 [ D.5024 ])) mSector.c:248 -1
     (nil))
(insn 383 382 384 24 (set (reg:DI 4 si)
        (reg/f:DI 195 [ D.5027 ])) mSector.c:248 -1
     (nil))
(insn 384 383 385 24 (set (reg:DI 5 di)
        (reg/f:DI 205 [ D.5028 ])) mSector.c:248 -1
     (nil))
(call_insn 385 384 386 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 386 385 387 24 (set (reg:SI 206 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 -1
     (nil))
(insn 387 386 388 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 206 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 -1
     (nil))
(jump_insn 388 387 389 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 -1
     (nil)
 -> 405)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 389 388 390 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 25 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:249 -1
     (nil))
(insn 391 390 392 25 (set (reg/f:DI 207 [ D.5025 ])
        (mem/f:DI (reg/f:DI 323) [0 *f_9(D)+0 S8 A64])) mSector.c:249 -1
     (nil))
(insn 392 391 393 25 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:249 -1
     (nil))
(insn 393 392 394 25 (set (reg:DI 208 [ D.5026 ])
        (sign_extend:DI (reg:SI 324))) mSector.c:249 -1
     (nil))
(insn 394 393 395 25 (set (reg:DI 325)
        (reg:DI 208 [ D.5026 ])) mSector.c:249 -1
     (nil))
(insn 395 394 396 25 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))
(insn 396 395 397 25 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 325)
                    (reg:DI 208 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 397 396 398 25 (parallel [
            (set (reg:DI 326)
                (ashift:DI (reg:DI 325)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))
(insn 398 397 399 25 (set (reg:DI 325)
        (reg:DI 326)) mSector.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 399 398 400 25 (set (reg:DI 209 [ D.5026 ])
        (reg:DI 325)) mSector.c:249 -1
     (nil))
(insn 400 399 401 25 (parallel [
            (set (reg/f:DI 210 [ D.5025 ])
                (plus:DI (reg/f:DI 207 [ D.5025 ])
                    (reg:DI 209 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 -1
     (nil))
(insn 401 400 402 25 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:249 -1
     (nil))
(insn 402 401 403 25 (set (mem/j:SI (plus:DI (reg/f:DI 210 [ D.5025 ])
                (const_int 116 [0x74])) [0 _167->bound+4 S4 A32])
        (reg:SI 327)) mSector.c:249 -1
     (nil))
(jump_insn 403 402 404 25 (set (pc)
        (label_ref 425)) mSector.c:250 -1
     (nil)
 -> 425)
;;  succ:       28

(barrier 404 403 405)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
;;              24
(code_label 405 404 406 26 103 "" [2 uses])
(note 406 405 407 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 26 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
;;  succ:       27 (FALLTHRU,DFS_BACK)

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              26 (FALLTHRU,DFS_BACK)
(code_label 408 407 409 27 102 "" [1 uses])
(note 409 408 410 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 27 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 411 410 412 27 (set (reg/f:DI 177 [ D.5025 ])
        (mem/f:DI (reg/f:DI 328) [0 *f_9(D)+0 S8 A64])) mSector.c:248 -1
     (nil))
(insn 412 411 413 27 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 413 412 414 27 (set (reg:DI 178 [ D.5026 ])
        (sign_extend:DI (reg:SI 329))) mSector.c:248 -1
     (nil))
(insn 414 413 415 27 (set (reg:DI 330)
        (reg:DI 178 [ D.5026 ])) mSector.c:248 -1
     (nil))
(insn 415 414 416 27 (parallel [
            (set (reg:DI 330)
                (ashift:DI (reg:DI 330)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 416 415 417 27 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg:DI 330)
                    (reg:DI 178 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 417 416 418 27 (parallel [
            (set (reg:DI 331)
                (ashift:DI (reg:DI 330)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 418 417 419 27 (set (reg:DI 330)
        (reg:DI 331)) mSector.c:248 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 419 418 420 27 (set (reg:DI 179 [ D.5026 ])
        (reg:DI 330)) mSector.c:248 -1
     (nil))
(insn 420 419 421 27 (parallel [
            (set (reg/f:DI 180 [ D.5025 ])
                (plus:DI (reg/f:DI 177 [ D.5025 ])
                    (reg:DI 179 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 -1
     (nil))
(insn 421 420 423 27 (set (reg:SI 181 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 180 [ D.5025 ])
                (const_int 4 [0x4])) [0 _137->n_nvp+0 S4 A32])) mSector.c:248 -1
     (nil))
(insn 423 421 424 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 181 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:248 -1
     (nil))
(jump_insn 424 423 425 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) mSector.c:248 -1
     (nil)
 -> 422)
;;  succ:       23
;;              28 (FALLTHRU)

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              27 (FALLTHRU)
(code_label 425 424 426 28 104 "" [1 uses])
(note 426 425 427 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 28 (set (reg/f:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 -1
     (nil))
(insn 428 427 429 28 (set (reg/f:DI 211 [ D.5025 ])
        (mem/f:DI (reg/f:DI 332) [0 *f_9(D)+0 S8 A64])) mSector.c:252 -1
     (nil))
(insn 429 428 430 28 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 -1
     (nil))
(insn 430 429 431 28 (set (reg:DI 212 [ D.5026 ])
        (sign_extend:DI (reg:SI 333))) mSector.c:252 -1
     (nil))
(insn 431 430 432 28 (set (reg:DI 334)
        (reg:DI 212 [ D.5026 ])) mSector.c:252 -1
     (nil))
(insn 432 431 433 28 (parallel [
            (set (reg:DI 334)
                (ashift:DI (reg:DI 334)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 433 432 434 28 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg:DI 334)
                    (reg:DI 212 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 434 433 435 28 (parallel [
            (set (reg:DI 335)
                (ashift:DI (reg:DI 334)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 435 434 436 28 (set (reg:DI 334)
        (reg:DI 335)) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 436 435 437 28 (set (reg:DI 213 [ D.5026 ])
        (reg:DI 334)) mSector.c:252 -1
     (nil))
(insn 437 436 438 28 (parallel [
            (set (reg/f:DI 214 [ D.5025 ])
                (plus:DI (reg/f:DI 211 [ D.5025 ])
                    (reg:DI 213 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 438 437 439 28 (set (reg:SI 215 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 214 [ D.5025 ])
                (const_int 4 [0x4])) [0 _172->n_nvp+0 S4 A32])) mSector.c:252 -1
     (nil))
(insn 439 438 440 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:252 -1
     (nil))
(jump_insn 440 439 441 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) mSector.c:252 -1
     (nil)
 -> 456)
;;  succ:       29 (FALLTHRU)
;;              30

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 441 440 442 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 29 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 -1
     (nil))
(insn 443 442 444 29 (set (reg/f:DI 216 [ D.5025 ])
        (mem/f:DI (reg/f:DI 336) [0 *f_9(D)+0 S8 A64])) mSector.c:252 -1
     (nil))
(insn 444 443 445 29 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 -1
     (nil))
(insn 445 444 446 29 (set (reg:DI 217 [ D.5026 ])
        (sign_extend:DI (reg:SI 337))) mSector.c:252 -1
     (nil))
(insn 446 445 447 29 (set (reg:DI 338)
        (reg:DI 217 [ D.5026 ])) mSector.c:252 -1
     (nil))
(insn 447 446 448 29 (parallel [
            (set (reg:DI 338)
                (ashift:DI (reg:DI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 448 447 449 29 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg:DI 338)
                    (reg:DI 217 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 449 448 450 29 (parallel [
            (set (reg:DI 339)
                (ashift:DI (reg:DI 338)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 450 449 451 29 (set (reg:DI 338)
        (reg:DI 339)) mSector.c:252 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 451 450 452 29 (set (reg:DI 218 [ D.5026 ])
        (reg:DI 338)) mSector.c:252 -1
     (nil))
(insn 452 451 453 29 (parallel [
            (set (reg/f:DI 219 [ D.5025 ])
                (plus:DI (reg/f:DI 216 [ D.5025 ])
                    (reg:DI 218 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (nil))
(insn 453 452 454 29 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:252 -1
     (nil))
(insn 454 453 455 29 (parallel [
            (set (reg:SI 220 [ D.5024 ])
                (plus:SI (reg:SI 340)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 455 454 456 29 (set (mem/j:SI (plus:DI (reg/f:DI 219 [ D.5025 ])
                (const_int 116 [0x74])) [0 _177->bound+4 S4 A32])
        (reg:SI 220 [ D.5024 ])) mSector.c:252 -1
     (nil))
;;  succ:       30 (FALLTHRU)

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
;;              29 (FALLTHRU)
(code_label 456 455 457 30 106 "" [1 uses])
(note 457 456 458 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 30 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 -1
     (nil))
(insn 459 458 460 30 (set (reg/f:DI 221 [ D.5025 ])
        (mem/f:DI (reg/f:DI 341) [0 *f_9(D)+0 S8 A64])) mSector.c:255 -1
     (nil))
(insn 460 459 461 30 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 -1
     (nil))
(insn 461 460 462 30 (set (reg:DI 222 [ D.5026 ])
        (sign_extend:DI (reg:SI 342))) mSector.c:255 -1
     (nil))
(insn 462 461 463 30 (set (reg:DI 343)
        (reg:DI 222 [ D.5026 ])) mSector.c:255 -1
     (nil))
(insn 463 462 464 30 (parallel [
            (set (reg:DI 343)
                (ashift:DI (reg:DI 343)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 464 463 465 30 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg:DI 343)
                    (reg:DI 222 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 465 464 466 30 (parallel [
            (set (reg:DI 344)
                (ashift:DI (reg:DI 343)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 466 465 467 30 (set (reg:DI 343)
        (reg:DI 344)) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 467 466 468 30 (set (reg:DI 223 [ D.5026 ])
        (reg:DI 343)) mSector.c:255 -1
     (nil))
(insn 468 467 469 30 (parallel [
            (set (reg/f:DI 224 [ D.5025 ])
                (plus:DI (reg/f:DI 221 [ D.5025 ])
                    (reg:DI 223 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 469 468 470 30 (set (reg:SI 225 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 224 [ D.5025 ])
                (const_int 112 [0x70])) [0 _182->bound+0 S4 A128])) mSector.c:255 -1
     (nil))
(insn 470 469 471 30 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 -1
     (nil))
(insn 471 470 472 30 (set (reg/f:DI 226 [ D.5025 ])
        (mem/f:DI (reg/f:DI 345) [0 *f_9(D)+0 S8 A64])) mSector.c:255 -1
     (nil))
(insn 472 471 473 30 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 -1
     (nil))
(insn 473 472 474 30 (set (reg:DI 227 [ D.5026 ])
        (sign_extend:DI (reg:SI 346))) mSector.c:255 -1
     (nil))
(insn 474 473 475 30 (set (reg:DI 347)
        (reg:DI 227 [ D.5026 ])) mSector.c:255 -1
     (nil))
(insn 475 474 476 30 (parallel [
            (set (reg:DI 347)
                (ashift:DI (reg:DI 347)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 476 475 477 30 (parallel [
            (set (reg:DI 347)
                (plus:DI (reg:DI 347)
                    (reg:DI 227 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 477 476 478 30 (parallel [
            (set (reg:DI 348)
                (ashift:DI (reg:DI 347)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 478 477 479 30 (set (reg:DI 347)
        (reg:DI 348)) mSector.c:255 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 479 478 480 30 (set (reg:DI 228 [ D.5026 ])
        (reg:DI 347)) mSector.c:255 -1
     (nil))
(insn 480 479 481 30 (parallel [
            (set (reg/f:DI 229 [ D.5025 ])
                (plus:DI (reg/f:DI 226 [ D.5025 ])
                    (reg:DI 228 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 -1
     (nil))
(insn 481 480 482 30 (set (reg:SI 230 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 229 [ D.5025 ])
                (const_int 116 [0x74])) [0 _187->bound+4 S4 A32])) mSector.c:255 -1
     (nil))
(insn 482 481 483 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 225 [ D.5024 ])
            (reg:SI 230 [ D.5024 ]))) mSector.c:255 -1
     (nil))
(jump_insn 483 482 484 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mSector.c:255 -1
     (nil)
 -> 512)
;;  succ:       31 (FALLTHRU)
;;              32

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 484 483 485 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f44d28a4850 *.LC14>)) mSector.c:256 -1
     (nil))
(call_insn 486 485 487 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:256 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 31 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 -1
     (nil))
(insn 488 487 489 31 (set (reg/f:DI 231 [ D.5025 ])
        (mem/f:DI (reg/f:DI 349) [0 *f_9(D)+0 S8 A64])) mSector.c:257 -1
     (nil))
(insn 489 488 490 31 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 -1
     (nil))
(insn 490 489 491 31 (set (reg:DI 232 [ D.5026 ])
        (sign_extend:DI (reg:SI 350))) mSector.c:257 -1
     (nil))
(insn 491 490 492 31 (set (reg:DI 351)
        (reg:DI 232 [ D.5026 ])) mSector.c:257 -1
     (nil))
(insn 492 491 493 31 (parallel [
            (set (reg:DI 351)
                (ashift:DI (reg:DI 351)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 493 492 494 31 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg:DI 351)
                    (reg:DI 232 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 494 493 495 31 (parallel [
            (set (reg:DI 352)
                (ashift:DI (reg:DI 351)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 495 494 496 31 (set (reg:DI 351)
        (reg:DI 352)) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 496 495 497 31 (set (reg:DI 233 [ D.5026 ])
        (reg:DI 351)) mSector.c:257 -1
     (nil))
(insn 497 496 498 31 (parallel [
            (set (reg/f:DI 234 [ D.5025 ])
                (plus:DI (reg/f:DI 231 [ D.5025 ])
                    (reg:DI 233 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 498 497 499 31 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 -1
     (nil))
(insn 499 498 500 31 (set (reg/f:DI 235 [ D.5025 ])
        (mem/f:DI (reg/f:DI 353) [0 *f_9(D)+0 S8 A64])) mSector.c:257 -1
     (nil))
(insn 500 499 501 31 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 -1
     (nil))
(insn 501 500 502 31 (set (reg:DI 236 [ D.5026 ])
        (sign_extend:DI (reg:SI 354))) mSector.c:257 -1
     (nil))
(insn 502 501 503 31 (set (reg:DI 355)
        (reg:DI 236 [ D.5026 ])) mSector.c:257 -1
     (nil))
(insn 503 502 504 31 (parallel [
            (set (reg:DI 355)
                (ashift:DI (reg:DI 355)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 504 503 505 31 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg:DI 355)
                    (reg:DI 236 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 505 504 506 31 (parallel [
            (set (reg:DI 356)
                (ashift:DI (reg:DI 355)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 506 505 507 31 (set (reg:DI 355)
        (reg:DI 356)) mSector.c:257 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 507 506 508 31 (set (reg:DI 237 [ D.5026 ])
        (reg:DI 355)) mSector.c:257 -1
     (nil))
(insn 508 507 509 31 (parallel [
            (set (reg/f:DI 238 [ D.5025 ])
                (plus:DI (reg/f:DI 235 [ D.5025 ])
                    (reg:DI 237 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 509 508 510 31 (set (reg:SI 239 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 238 [ D.5025 ])
                (const_int 116 [0x74])) [0 _196->bound+4 S4 A32])) mSector.c:257 -1
     (nil))
(insn 510 509 511 31 (parallel [
            (set (reg:SI 240 [ D.5024 ])
                (plus:SI (reg:SI 239 [ D.5024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 -1
     (nil))
(insn 511 510 512 31 (set (mem/j:SI (plus:DI (reg/f:DI 234 [ D.5025 ])
                (const_int 116 [0x74])) [0 _192->bound+4 S4 A32])
        (reg:SI 240 [ D.5024 ])) mSector.c:257 -1
     (nil))
;;  succ:       32 (FALLTHRU)

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
;;              30
;;              31 (FALLTHRU)
(code_label 512 511 513 32 101 "" [2 uses])
(note 513 512 514 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 32 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:225 -1
     (nil))
;;  succ:       33 (FALLTHRU,DFS_BACK)

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              32 (FALLTHRU,DFS_BACK)
(code_label 515 514 516 33 88 "" [1 uses])
(note 516 515 517 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 33 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:225 -1
     (nil))
(insn 518 517 520 33 (set (reg:SI 59 [ D.5024 ])
        (mem:SI (reg/f:DI 357) [0 *Nflight_7(D)+0 S4 A32])) mSector.c:225 -1
     (nil))
(insn 520 518 521 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mSector.c:225 -1
     (nil))
(jump_insn 521 520 522 33 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) mSector.c:225 -1
     (nil)
 -> 519)
;;  succ:       4
;;              34 (FALLTHRU)

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
(note 522 521 523 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 526 34 (set (reg:SI 241 [ D.5024 ])
        (const_int 1 [0x1])) mSector.c:262 -1
     (nil))
(insn 526 523 530 34 (set (reg:SI 242 [ <retval> ])
        (reg:SI 241 [ D.5024 ])) mSector.c:262 -1
     (nil))
(insn 530 526 533 34 (set (reg/i:SI 0 ax)
        (reg:SI 242 [ <retval> ])) mSector.c:263 -1
     (nil))
(insn 533 530 0 34 (use (reg/i:SI 0 ax)) mSector.c:263 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function is_on_bound (is_on_bound, funcdef_no=14, decl_uid=1900, cgraph_uid=14)

is_on_bound (long double * p, long double * * bound, int N)
{
  int i;
  int D.4872;
  int D.4871;
  int D.4868;
  long double * D.4867;
  long double * * D.4866;
  long unsigned int D.4865;
  long unsigned int D.4864;
  long double * D.4863;
  long double * * D.4862;
  sizetype D.4861;
  sizetype D.4860;
  sizetype D.4859;
  int _2;
  int _5;
  sizetype _6;
  sizetype _7;
  sizetype _8;
  long double * * _10;
  long double * _11;
  long unsigned int _12;
  long unsigned int _13;
  long double * * _14;
  long double * _15;
  int _17;
  int _18;
  int _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _6 = (sizetype) i_1;
  _7 = _6 + 1;
  _8 = _7 * 8;
  _10 = bound_9(D) + _8;
  _11 = *_10;
  _12 = (long unsigned int) i_1;
  _13 = _12 * 8;
  _14 = bound_9(D) + _13;
  _15 = *_14;
  _17 = isbetween (_15, _11, p_16(D));
  if (_17 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _18 = 1;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       3
  i_19 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_3(2), i_19(5)>
  _5 = N_4(D) + -1;
  if (_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _20 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # _2 = PHI <_18(4), _20(7)>
<L5>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (N_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (bound_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (p_16(D) - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (_20 - 20 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (N_4(D) - 4 )
Partition 4 (bound_9(D) - 9 )
Partition 5 (p_16(D) - 16 )
Partition 6 (_18 - 18 )
Partition 7 (i_19 - 19 )
Partition 8 (_20 - 20 )


Live on entry to BB2 : N_4(D)  bound_9(D)  p_16(D)  

Live on entry to BB3 : i_1  N_4(D)  bound_9(D)  p_16(D)  

Live on entry to BB4 : 

Live on entry to BB5 : i_1  N_4(D)  bound_9(D)  p_16(D)  

Live on entry to BB6 : N_4(D)  bound_9(D)  p_16(D)  

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_19
(2147483646) i_1 <-> i_3

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (N_4(D) - 4 )
Partition 4 (bound_9(D) - 9 )
Partition 5 (p_16(D) - 16 )
Partition 6 (_18 - 18 )
Partition 7 (i_19 - 19 )
Partition 8 (_20 - 20 )

Coalesce list: (1)i_1 & (19)i_19 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (2)_2 & (20)_20 [map: 1, 8] : Success -> 1
Coalesce list: (2)_2 & (18)_18 [map: 1, 6] : Success -> 1
Coalesce list: (1)i_1 & (19)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 19 )
Partition 1 (_2 - 2 18 20 )
Partition 2 (N_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (bound_9(D) - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_14 - 14 )
Partition 13 (_15 - 15 )
Partition 14 (p_16(D) - 16 )
Partition 15 (_17 - 17 )

is_on_bound (long double * p, long double * * bound, int N)
{
  int i;
  int D.4872;
  int D.4871;
  int D.4868;
  long double * D.4867;
  long double * * D.4866;
  long unsigned int D.4865;
  long unsigned int D.4864;
  long double * D.4863;
  long double * * D.4862;
  sizetype D.4861;
  sizetype D.4860;
  sizetype D.4859;
  int _2;
  int _5;
  sizetype _6;
  sizetype _7;
  sizetype _8;
  long double * * _10;
  long double * _11;
  long unsigned int _12;
  long unsigned int _13;
  long double * * _14;
  long double * _15;
  int _17;
  int _18;
  int _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _6 = (sizetype) i_1;
  _7 = _6 + 1;
  _8 = _7 * 8;
  _10 = bound_9(D) + _8;
  _11 = *_10;
  _12 = (long unsigned int) i_1;
  _13 = _12 * 8;
  _14 = bound_9(D) + _13;
  _15 = *_14;
  _17 = isbetween (_15, _11, p_16(D));
  if (_17 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _18 = 1;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       3
  i_19 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_3(2), i_19(5)>
  _5 = N_4(D) + -1;
  if (_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _20 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # _2 = PHI <_18(4), _20(7)>
<L5>:
  return _2;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:267 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _6 = (sizetype) i_1;

(insn 12 11 13 (set (reg:SI 72)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 -1
     (nil))

(insn 13 12 0 (set (reg:DI 61 [ D.5034 ])
        (sign_extend:DI (reg:SI 72))) mSector.c:267 -1
     (nil))

;; _7 = _6 + 1;

(insn 14 13 0 (parallel [
            (set (reg:DI 62 [ D.5034 ])
                (plus:DI (reg:DI 61 [ D.5034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))

;; _8 = _7 * 8;

(insn 15 14 0 (parallel [
            (set (reg:DI 63 [ D.5034 ])
                (ashift:DI (reg:DI 62 [ D.5034 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))

;; _10 = bound_9(D) + _8;

(insn 16 15 17 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 -1
     (nil))

(insn 17 16 0 (parallel [
            (set (reg/f:DI 64 [ D.5035 ])
                (plus:DI (reg:DI 63 [ D.5034 ])
                    (reg/f:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 63 [ D.5034 ]))
        (nil)))

;; _11 = *_10;

(insn 18 17 0 (set (reg/f:DI 65 [ D.5036 ])
        (mem/f:DI (reg/f:DI 64 [ D.5035 ]) [0 *_10+0 S8 A64])) mSector.c:267 -1
     (nil))

;; _12 = (long unsigned int) i_1;

(insn 19 18 20 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 -1
     (nil))

(insn 20 19 0 (set (reg:DI 66 [ D.5037 ])
        (sign_extend:DI (reg:SI 74))) mSector.c:267 -1
     (nil))

;; _13 = _12 * 8;

(insn 21 20 0 (parallel [
            (set (reg:DI 67 [ D.5037 ])
                (ashift:DI (reg:DI 66 [ D.5037 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))

;; _14 = bound_9(D) + _13;

(insn 22 21 23 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 -1
     (nil))

(insn 23 22 0 (parallel [
            (set (reg/f:DI 68 [ D.5035 ])
                (plus:DI (reg:DI 67 [ D.5037 ])
                    (reg/f:DI 75)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 67 [ D.5037 ]))
        (nil)))

;; _15 = *_14;

(insn 24 23 0 (set (reg/f:DI 69 [ D.5036 ])
        (mem/f:DI (reg/f:DI 68 [ D.5035 ]) [0 *_14+0 S8 A64])) mSector.c:267 -1
     (nil))

;; _17 = isbetween (_15, _11, p_16(D));

(insn 25 24 26 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:267 -1
     (nil))

(insn 26 25 27 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:267 -1
     (nil))

(insn 27 26 28 (set (reg:DI 4 si)
        (reg/f:DI 65 [ D.5036 ])) mSector.c:267 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/f:DI 69 [ D.5036 ])) mSector.c:267 -1
     (nil))

(call_insn 29 28 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:267 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 30 29 0 (set (reg:SI 70 [ D.5033 ])
        (reg:SI 0 ax)) mSector.c:267 -1
     (nil))

;; if (_17 != 0)

(insn 31 30 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.5033 ])
            (const_int 0 [0]))) mSector.c:267 -1
     (nil))

(jump_insn 32 31 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mSector.c:267 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _18 = 1;

(insn 34 33 0 (set (reg:SI 59 [ D.5033 ])
        (const_int 1 [0x1])) mSector.c:267 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 112 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; i_19 = i_1 + 1;

(insn 39 38 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 40 39 41 111 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = N_4(D) + -1;

(insn 42 41 43 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])) mSector.c:267 -1
     (nil))

(insn 43 42 0 (parallel [
            (set (reg:SI 60 [ D.5033 ])
                (plus:SI (reg:SI 77)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; if (_5 > i_1)

(insn 45 43 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 60 [ D.5033 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:267 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) mSector.c:267 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _20 = 0;

(insn 48 47 0 (set (reg:SI 59 [ D.5033 ])
        (const_int 0 [0])) mSector.c:268 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; <L5>:

(code_label 49 48 50 113 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 51 50 52 (set (reg:SI 71 [ <retval> ])
        (reg:SI 59 [ D.5033 ])) -1
     (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 53 52 0)
deleting block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:265 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:265 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
        (reg:SI 1 dx [ N ])) mSector.c:265 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:267 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 40)) mSector.c:267 -1
     (nil)
 -> 40)
;;  succ:       7

(barrier 10 9 44)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 44 10 11 4 114 "" [1 uses])
(note 11 44 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 72)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 61 [ D.5034 ])
        (sign_extend:DI (reg:SI 72))) mSector.c:267 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 62 [ D.5034 ])
                (plus:DI (reg:DI 61 [ D.5034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 63 [ D.5034 ])
                (ashift:DI (reg:DI 62 [ D.5034 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg/f:DI 64 [ D.5035 ])
                (plus:DI (reg:DI 63 [ D.5034 ])
                    (reg/f:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 63 [ D.5034 ]))
        (nil)))
(insn 18 17 19 4 (set (reg/f:DI 65 [ D.5036 ])
        (mem/f:DI (reg/f:DI 64 [ D.5035 ]) [0 *_10+0 S8 A64])) mSector.c:267 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 66 [ D.5037 ])
        (sign_extend:DI (reg:SI 74))) mSector.c:267 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 67 [ D.5037 ])
                (ashift:DI (reg:DI 66 [ D.5037 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 68 [ D.5035 ])
                (plus:DI (reg:DI 67 [ D.5037 ])
                    (reg/f:DI 75)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 67 [ D.5037 ]))
        (nil)))
(insn 24 23 25 4 (set (reg/f:DI 69 [ D.5036 ])
        (mem/f:DI (reg/f:DI 68 [ D.5035 ]) [0 *_14+0 S8 A64])) mSector.c:267 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:267 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:267 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (reg/f:DI 65 [ D.5036 ])) mSector.c:267 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg/f:DI 69 [ D.5036 ])) mSector.c:267 -1
     (nil))
(call_insn 29 28 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:267 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 4 (set (reg:SI 70 [ D.5033 ])
        (reg:SI 0 ax)) mSector.c:267 -1
     (nil))
(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.5033 ])
            (const_int 0 [0]))) mSector.c:267 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) mSector.c:267 -1
     (nil)
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 59 [ D.5033 ])
        (const_int 1 [0x1])) mSector.c:267 -1
     (nil))
(jump_insn 35 34 36 5 (set (pc)
        (label_ref 49)) mSector.c:267 -1
     (nil)
 -> 49)
;;  succ:       9

(barrier 36 35 37)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 37 36 38 6 112 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              6 (FALLTHRU,DFS_BACK)
(code_label 40 39 41 7 111 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])) mSector.c:267 -1
     (nil))
(insn 43 42 45 7 (parallel [
            (set (reg:SI 60 [ D.5033 ])
                (plus:SI (reg:SI 77)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 45 43 46 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 60 [ D.5033 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:267 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) mSector.c:267 -1
     (nil)
 -> 44)
;;  succ:       4
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg:SI 59 [ D.5033 ])
        (const_int 0 [0])) mSector.c:268 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              8 (FALLTHRU)
(code_label 49 48 50 9 113 "" [1 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 55 9 (set (reg:SI 71 [ <retval> ])
        (reg:SI 59 [ D.5033 ])) -1
     (nil))
(insn 55 51 58 9 (set (reg/i:SI 0 ax)
        (reg:SI 71 [ <retval> ])) mSector.c:269 -1
     (nil))
(insn 58 55 0 9 (use (reg/i:SI 0 ax)) mSector.c:269 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _alloc_shock (_alloc_shock, funcdef_no=15, decl_uid=4116, cgraph_uid=15)

_alloc_shock (struct CONF_t conf, struct SHOCK_t * shock)
{
  int D.4887;
  long double * * D.4886;
  int D.4885;
  int D.4884;
  long double D.4883;
  long double D.4882;
  int D.4881;
  long double D.4880;
  long double D.4879;
  long double D.4878;
  long double D.4877;
  long double D.4876;
  long double D.4875;
  int D.4874;
  int _1;
  long double _2;
  long double _3;
  long double _4;
  long double _5;
  long double _6;
  long double _7;
  int _8;
  long double _9;
  long double _10;
  int _11;
  int _13;
  long double * * _14;
  int _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = conf.nsim;
  _2 = (long double) _1;
  _3 = conf.f_lvl[1];
  _4 = conf.f_lvl[0];
  _5 = _3 - _4;
  _6 = _5 / 1.0e+1;
  _7 = _2 * _6;
  _8 = conf.Nm_shock;
  _9 = (long double) _8;
  _10 = _7 * _9;
  _11 = (int) _10;
  shock_12(D)->Nshock = _11;
  _13 = shock_12(D)->Nshock;
  _14 = falloc_matrix (_13, 6);
  shock_12(D)->shock = _14;
  _15 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _15;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (shock_12(D) - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )


Partition map 

Partition 0 (shock_12(D) - 12 )


Live on entry to BB2 : shock_12(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (shock_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (shock_12(D) - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )

_alloc_shock (struct CONF_t conf, struct SHOCK_t * shock)
{
  int D.4887;
  long double * * D.4886;
  int D.4885;
  int D.4884;
  long double D.4883;
  long double D.4882;
  int D.4881;
  long double D.4880;
  long double D.4879;
  long double D.4878;
  long double D.4877;
  long double D.4876;
  long double D.4875;
  int D.4874;
  int _1;
  long double _2;
  long double _3;
  long double _4;
  long double _5;
  long double _6;
  long double _7;
  int _8;
  long double _9;
  long double _10;
  int _11;
  int _13;
  long double * * _14;
  int _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = conf.nsim;
  _2 = (long double) _1;
  _3 = conf.f_lvl[1];
  _4 = conf.f_lvl[0];
  _5 = _3 - _4;
  _6 = _5 / 1.0e+1;
  _7 = _2 * _6;
  _8 = conf.Nm_shock;
  _9 = (long double) _8;
  _10 = _7 * _9;
  _11 = (int) _10;
  shock_12(D)->Nshock = _11;
  _13 = shock_12(D)->Nshock;
  _14 = falloc_matrix (_13, 6);
  shock_12(D)->shock = _14;
  _15 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _15;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = conf.nsim;

(insn 6 5 0 (set (reg:SI 59 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 32 [0x20])) [0 conf.nsim+0 S4 A128])) mSector.c:272 -1
     (nil))

;; _2 = (long double) _1;

(insn 7 6 0 (set (reg:XF 60 [ D.5039 ])
        (float:XF (reg:SI 59 [ D.5038 ]))) mSector.c:272 -1
     (nil))

;; _3 = conf.f_lvl[1];

(insn 8 7 0 (set (reg:XF 61 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 176 [0xb0])) [0 conf.f_lvl+16 S16 A128])) mSector.c:272 -1
     (nil))

;; _4 = conf.f_lvl[0];

(insn 9 8 0 (set (reg:XF 62 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 160 [0xa0])) [0 conf.f_lvl+0 S16 A128])) mSector.c:272 -1
     (nil))

;; _5 = _3 - _4;

(insn 10 9 0 (set (reg:XF 63 [ D.5039 ])
        (minus:XF (reg:XF 61 [ D.5039 ])
            (reg:XF 62 [ D.5039 ]))) mSector.c:272 -1
     (nil))

;; _6 = _5 / 1.0e+1;

(insn 11 10 12 (set (reg:XF 74)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mSector.c:272 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+1 [0x0.ap+4])
        (nil)))

(insn 12 11 0 (set (reg:XF 64 [ D.5039 ])
        (div:XF (reg:XF 63 [ D.5039 ])
            (reg:XF 74))) mSector.c:272 -1
     (nil))

;; _7 = _2 * _6;

(insn 13 12 0 (set (reg:XF 65 [ D.5039 ])
        (mult:XF (reg:XF 60 [ D.5039 ])
            (reg:XF 64 [ D.5039 ]))) mSector.c:272 -1
     (nil))

;; _8 = conf.Nm_shock;

(insn 14 13 0 (set (reg:SI 66 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 116 [0x74])) [0 conf.Nm_shock+0 S4 A32])) mSector.c:272 -1
     (nil))

;; _9 = (long double) _8;

(insn 15 14 0 (set (reg:XF 67 [ D.5039 ])
        (float:XF (reg:SI 66 [ D.5038 ]))) mSector.c:272 -1
     (nil))

;; _10 = _7 * _9;

(insn 16 15 0 (set (reg:XF 68 [ D.5039 ])
        (mult:XF (reg:XF 65 [ D.5039 ])
            (reg:XF 67 [ D.5039 ]))) mSector.c:272 -1
     (nil))

;; _11 = (int) _10;

(insn 17 16 0 (parallel [
            (set (reg:SI 69 [ D.5038 ])
                (fix:SI (reg:XF 68 [ D.5039 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:272 -1
     (nil))

;; shock_12(D)->Nshock = _11;

(insn 18 17 19 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:272 -1
     (nil))

(insn 19 18 0 (set (mem/j:SI (reg/f:DI 75) [0 shock_12(D)->Nshock+0 S4 A64])
        (reg:SI 69 [ D.5038 ])) mSector.c:272 -1
     (nil))

;; _13 = shock_12(D)->Nshock;

(insn 20 19 21 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 -1
     (nil))

(insn 21 20 0 (set (reg:SI 70 [ D.5038 ])
        (mem/j:SI (reg/f:DI 76) [0 shock_12(D)->Nshock+0 S4 A64])) mSector.c:273 -1
     (nil))

;; _14 = falloc_matrix (_13, 6);

(insn 22 21 23 (set (reg:SI 4 si)
        (const_int 6 [0x6])) mSector.c:273 -1
     (nil))

(insn 23 22 24 (set (reg:SI 5 di)
        (reg:SI 70 [ D.5038 ])) mSector.c:273 -1
     (nil))

(call_insn 24 23 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:273 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 25 24 0 (set (reg/f:DI 71 [ D.5040 ])
        (reg:DI 0 ax)) mSector.c:273 -1
     (nil))

;; shock_12(D)->shock = _14;

(insn 26 25 27 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 -1
     (nil))

(insn 27 26 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 shock_12(D)->shock+0 S8 A64])
        (reg/f:DI 71 [ D.5040 ])) mSector.c:273 -1
     (nil))

;; _15 = 1;

(insn 28 27 0 (set (reg:SI 72 [ D.5038 ])
        (const_int 1 [0x1])) mSector.c:274 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 29 28 30 116 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _15;

(insn 31 30 32 (set (reg:SI 73 [ <retval> ])
        (reg:SI 72 [ D.5038 ])) mSector.c:274 -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) mSector.c:274 -1
     (nil))

(barrier 33 32 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])
        (reg:DI 5 di [ shock ])) mSector.c:271 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 59 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 32 [0x20])) [0 conf.nsim+0 S4 A128])) mSector.c:272 -1
     (nil))
(insn 7 6 8 2 (set (reg:XF 60 [ D.5039 ])
        (float:XF (reg:SI 59 [ D.5038 ]))) mSector.c:272 -1
     (nil))
(insn 8 7 9 2 (set (reg:XF 61 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 176 [0xb0])) [0 conf.f_lvl+16 S16 A128])) mSector.c:272 -1
     (nil))
(insn 9 8 10 2 (set (reg:XF 62 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 160 [0xa0])) [0 conf.f_lvl+0 S16 A128])) mSector.c:272 -1
     (nil))
(insn 10 9 11 2 (set (reg:XF 63 [ D.5039 ])
        (minus:XF (reg:XF 61 [ D.5039 ])
            (reg:XF 62 [ D.5039 ]))) mSector.c:272 -1
     (nil))
(insn 11 10 12 2 (set (reg:XF 74)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mSector.c:272 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 12 11 13 2 (set (reg:XF 64 [ D.5039 ])
        (div:XF (reg:XF 63 [ D.5039 ])
            (reg:XF 74))) mSector.c:272 -1
     (nil))
(insn 13 12 14 2 (set (reg:XF 65 [ D.5039 ])
        (mult:XF (reg:XF 60 [ D.5039 ])
            (reg:XF 64 [ D.5039 ]))) mSector.c:272 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 66 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 116 [0x74])) [0 conf.Nm_shock+0 S4 A32])) mSector.c:272 -1
     (nil))
(insn 15 14 16 2 (set (reg:XF 67 [ D.5039 ])
        (float:XF (reg:SI 66 [ D.5038 ]))) mSector.c:272 -1
     (nil))
(insn 16 15 17 2 (set (reg:XF 68 [ D.5039 ])
        (mult:XF (reg:XF 65 [ D.5039 ])
            (reg:XF 67 [ D.5039 ]))) mSector.c:272 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 69 [ D.5038 ])
                (fix:SI (reg:XF 68 [ D.5039 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:272 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:272 -1
     (nil))
(insn 19 18 20 2 (set (mem/j:SI (reg/f:DI 75) [0 shock_12(D)->Nshock+0 S4 A64])
        (reg:SI 69 [ D.5038 ])) mSector.c:272 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 70 [ D.5038 ])
        (mem/j:SI (reg/f:DI 76) [0 shock_12(D)->Nshock+0 S4 A64])) mSector.c:273 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (const_int 6 [0x6])) mSector.c:273 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 70 [ D.5038 ])) mSector.c:273 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:273 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 2 (set (reg/f:DI 71 [ D.5040 ])
        (reg:DI 0 ax)) mSector.c:273 -1
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 -1
     (nil))
(insn 27 26 28 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 shock_12(D)->shock+0 S8 A64])
        (reg/f:DI 71 [ D.5040 ])) mSector.c:273 -1
     (nil))
(insn 28 27 31 2 (set (reg:SI 72 [ D.5038 ])
        (const_int 1 [0x1])) mSector.c:274 -1
     (nil))
(insn 31 28 35 2 (set (reg:SI 73 [ <retval> ])
        (reg:SI 72 [ D.5038 ])) mSector.c:274 -1
     (nil))
(insn 35 31 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 73 [ <retval> ])) mSector.c:275 -1
     (nil))
(insn 38 35 0 2 (use (reg/i:SI 0 ax)) mSector.c:275 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _set_cross_timeM1 (_set_cross_timeM1, funcdef_no=16, decl_uid=4120, cgraph_uid=16)

_set_cross_timeM1 (struct Aircraft_t * * f, int N)
{
  int i;
  int D.4922;
  long double D.4921;
  long double D.4920;
  long double * D.4919;
  long unsigned int D.4918;
  long unsigned int D.4917;
  int D.4916;
  struct Aircraft_t * D.4915;
  long unsigned int D.4914;
  long unsigned int D.4913;
  struct Aircraft_t * D.4912;
  long double * D.4911;
  struct Aircraft_t * D.4910;
  long unsigned int D.4909;
  long unsigned int D.4908;
  struct Aircraft_t * D.4907;
  long double D.4906;
  long double * D.4905;
  long unsigned int D.4904;
  long unsigned int D.4903;
  int D.4902;
  struct Aircraft_t * D.4901;
  long unsigned int D.4900;
  long unsigned int D.4899;
  struct Aircraft_t * D.4898;
  long double * D.4897;
  struct Aircraft_t * D.4896;
  long unsigned int D.4895;
  long unsigned int D.4894;
  struct Aircraft_t * D.4893;
  struct Aircraft_t * D.4892;
  long unsigned int D.4891;
  long unsigned int D.4890;
  struct Aircraft_t * D.4889;
  struct Aircraft_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _8;
  struct Aircraft_t * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct Aircraft_t * _12;
  long double * _13;
  struct Aircraft_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  struct Aircraft_t * _17;
  int _18;
  long unsigned int _19;
  long unsigned int _20;
  long double * _21;
  long double _22;
  struct Aircraft_t * _23;
  long unsigned int _24;
  long unsigned int _25;
  struct Aircraft_t * _26;
  long double * _27;
  struct Aircraft_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  struct Aircraft_t * _31;
  int _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * _35;
  long double _36;
  long double _37;
  int _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_2 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = *f_4(D);
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _8 = _5 + _7;
  _9 = *f_4(D);
  _10 = (long unsigned int) i_1;
  _11 = _10 * 160;
  _12 = _9 + _11;
  _13 = _12->time;
  _14 = *f_4(D);
  _15 = (long unsigned int) i_1;
  _16 = _15 * 160;
  _17 = _14 + _16;
  _18 = _17->bound[1];
  _19 = (long unsigned int) _18;
  _20 = _19 * 16;
  _21 = _13 + _20;
  _22 = *_21;
  _23 = *f_4(D);
  _24 = (long unsigned int) i_1;
  _25 = _24 * 160;
  _26 = _23 + _25;
  _27 = _26->time;
  _28 = *f_4(D);
  _29 = (long unsigned int) i_1;
  _30 = _29 * 160;
  _31 = _28 + _30;
  _32 = _31->bound[0];
  _33 = (long unsigned int) _32;
  _34 = _33 * 16;
  _35 = _27 + _34;
  _36 = *_35;
  _37 = _22 - _36;
  _8->delta_t[0] = _37;
  i_38 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_2(2), i_38(3)>
  if (i_1 < N_3(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _39 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _39;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (N_3(D) - 3 )
Partition 4 (f_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (i_38 - 38 )
Partition 39 (_39 - 39 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (N_3(D) - 3 )
Partition 3 (f_4(D) - 4 )
Partition 4 (i_38 - 38 )


Live on entry to BB2 : N_3(D)  f_4(D)  

Live on entry to BB3 : i_1  N_3(D)  f_4(D)  

Live on entry to BB4 : N_3(D)  f_4(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_38
(2147483646) i_1 <-> i_2

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (N_3(D) - 3 )
Partition 3 (f_4(D) - 4 )
Partition 4 (i_38 - 38 )

Coalesce list: (1)i_1 & (38)i_38 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (38)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (2)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 38 )
Partition 1 (N_3(D) - 3 )
Partition 2 (f_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_14 - 14 )
Partition 13 (_15 - 15 )
Partition 14 (_16 - 16 )
Partition 15 (_17 - 17 )
Partition 16 (_18 - 18 )
Partition 17 (_19 - 19 )
Partition 18 (_20 - 20 )
Partition 19 (_21 - 21 )
Partition 20 (_22 - 22 )
Partition 21 (_23 - 23 )
Partition 22 (_24 - 24 )
Partition 23 (_25 - 25 )
Partition 24 (_26 - 26 )
Partition 25 (_27 - 27 )
Partition 26 (_28 - 28 )
Partition 27 (_29 - 29 )
Partition 28 (_30 - 30 )
Partition 29 (_31 - 31 )
Partition 30 (_32 - 32 )
Partition 31 (_33 - 33 )
Partition 32 (_34 - 34 )
Partition 33 (_35 - 35 )
Partition 34 (_36 - 36 )
Partition 35 (_37 - 37 )
Partition 36 (_39 - 39 )

_set_cross_timeM1 (struct Aircraft_t * * f, int N)
{
  int i;
  int D.4922;
  long double D.4921;
  long double D.4920;
  long double * D.4919;
  long unsigned int D.4918;
  long unsigned int D.4917;
  int D.4916;
  struct Aircraft_t * D.4915;
  long unsigned int D.4914;
  long unsigned int D.4913;
  struct Aircraft_t * D.4912;
  long double * D.4911;
  struct Aircraft_t * D.4910;
  long unsigned int D.4909;
  long unsigned int D.4908;
  struct Aircraft_t * D.4907;
  long double D.4906;
  long double * D.4905;
  long unsigned int D.4904;
  long unsigned int D.4903;
  int D.4902;
  struct Aircraft_t * D.4901;
  long unsigned int D.4900;
  long unsigned int D.4899;
  struct Aircraft_t * D.4898;
  long double * D.4897;
  struct Aircraft_t * D.4896;
  long unsigned int D.4895;
  long unsigned int D.4894;
  struct Aircraft_t * D.4893;
  struct Aircraft_t * D.4892;
  long unsigned int D.4891;
  long unsigned int D.4890;
  struct Aircraft_t * D.4889;
  struct Aircraft_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _8;
  struct Aircraft_t * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct Aircraft_t * _12;
  long double * _13;
  struct Aircraft_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  struct Aircraft_t * _17;
  int _18;
  long unsigned int _19;
  long unsigned int _20;
  long double * _21;
  long double _22;
  struct Aircraft_t * _23;
  long unsigned int _24;
  long unsigned int _25;
  struct Aircraft_t * _26;
  long double * _27;
  struct Aircraft_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  struct Aircraft_t * _31;
  int _32;
  long unsigned int _33;
  long unsigned int _34;
  long double * _35;
  long double _36;
  long double _37;
  int _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_2 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = *f_4(D);
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _8 = _5 + _7;
  _9 = *f_4(D);
  _10 = (long unsigned int) i_1;
  _11 = _10 * 160;
  _12 = _9 + _11;
  _13 = _12->time;
  _14 = *f_4(D);
  _15 = (long unsigned int) i_1;
  _16 = _15 * 160;
  _17 = _14 + _16;
  _18 = _17->bound[1];
  _19 = (long unsigned int) _18;
  _20 = _19 * 16;
  _21 = _13 + _20;
  _22 = *_21;
  _23 = *f_4(D);
  _24 = (long unsigned int) i_1;
  _25 = _24 * 160;
  _26 = _23 + _25;
  _27 = _26->time;
  _28 = *f_4(D);
  _29 = (long unsigned int) i_1;
  _30 = _29 * 160;
  _31 = _28 + _30;
  _32 = _31->bound[0];
  _33 = (long unsigned int) _32;
  _34 = _33 * 16;
  _35 = _27 + _34;
  _36 = *_35;
  _37 = _22 - _36;
  _8->delta_t[0] = _37;
  i_38 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_2(2), i_38(3)>
  if (i_1 < N_3(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _39 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _39;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_2 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:279 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = *f_4(D);

(insn 11 10 12 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 59 [ D.5041 ])
        (mem/f:DI (reg/f:DI 94) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))

;; _6 = (long unsigned int) i_1;

(insn 13 12 14 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 14 13 0 (set (reg:DI 60 [ D.5042 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:279 -1
     (nil))

;; _7 = _6 * 160;

(insn 15 14 16 (set (reg:DI 96)
        (reg:DI 60 [ D.5042 ])) mSector.c:279 -1
     (nil))

(insn 16 15 17 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 60 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 18 17 19 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 19 18 20 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 20 19 0 (set (reg:DI 61 [ D.5042 ])
        (reg:DI 96)) mSector.c:279 -1
     (nil))

;; _8 = _5 + _7;

(insn 21 20 0 (parallel [
            (set (reg/f:DI 62 [ D.5041 ])
                (plus:DI (reg/f:DI 59 [ D.5041 ])
                    (reg:DI 61 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _9 = *f_4(D);

(insn 22 21 23 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))

(insn 23 22 0 (set (reg/f:DI 63 [ D.5041 ])
        (mem/f:DI (reg/f:DI 98) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))

;; _10 = (long unsigned int) i_1;

(insn 24 23 25 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 25 24 0 (set (reg:DI 64 [ D.5042 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:279 -1
     (nil))

;; _11 = _10 * 160;

(insn 26 25 27 (set (reg:DI 100)
        (reg:DI 64 [ D.5042 ])) mSector.c:279 -1
     (nil))

(insn 27 26 28 (parallel [
            (set (reg:DI 100)
                (ashift:DI (reg:DI 100)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 28 27 29 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 100)
                    (reg:DI 64 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 29 28 30 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 30 29 31 (set (reg:DI 100)
        (reg:DI 101)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 31 30 0 (set (reg:DI 65 [ D.5042 ])
        (reg:DI 100)) mSector.c:279 -1
     (nil))

;; _12 = _9 + _11;

(insn 32 31 0 (parallel [
            (set (reg/f:DI 66 [ D.5041 ])
                (plus:DI (reg/f:DI 63 [ D.5041 ])
                    (reg:DI 65 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _13 = _12->time;

(insn 33 32 0 (set (reg/f:DI 67 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.5041 ])
                (const_int 16 [0x10])) [0 _12->time+0 S8 A128])) mSector.c:279 -1
     (nil))

;; _14 = *f_4(D);

(insn 34 33 35 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))

(insn 35 34 0 (set (reg/f:DI 68 [ D.5041 ])
        (mem/f:DI (reg/f:DI 102) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))

;; _15 = (long unsigned int) i_1;

(insn 36 35 37 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 37 36 0 (set (reg:DI 69 [ D.5042 ])
        (sign_extend:DI (reg:SI 103))) mSector.c:279 -1
     (nil))

;; _16 = _15 * 160;

(insn 38 37 39 (set (reg:DI 104)
        (reg:DI 69 [ D.5042 ])) mSector.c:279 -1
     (nil))

(insn 39 38 40 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 104)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 40 39 41 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 104)
                    (reg:DI 69 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 41 40 42 (parallel [
            (set (reg:DI 105)
                (ashift:DI (reg:DI 104)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 42 41 43 (set (reg:DI 104)
        (reg:DI 105)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 43 42 0 (set (reg:DI 70 [ D.5042 ])
        (reg:DI 104)) mSector.c:279 -1
     (nil))

;; _17 = _14 + _16;

(insn 44 43 0 (parallel [
            (set (reg/f:DI 71 [ D.5041 ])
                (plus:DI (reg/f:DI 68 [ D.5041 ])
                    (reg:DI 70 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _18 = _17->bound[1];

(insn 45 44 0 (set (reg:SI 72 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5041 ])
                (const_int 116 [0x74])) [0 _17->bound+4 S4 A32])) mSector.c:279 -1
     (nil))

;; _19 = (long unsigned int) _18;

(insn 46 45 0 (set (reg:DI 73 [ D.5042 ])
        (sign_extend:DI (reg:SI 72 [ D.5044 ]))) mSector.c:279 -1
     (nil))

;; _20 = _19 * 16;

(insn 47 46 0 (parallel [
            (set (reg:DI 74 [ D.5042 ])
                (ashift:DI (reg:DI 73 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _21 = _13 + _20;

(insn 48 47 0 (parallel [
            (set (reg/f:DI 75 [ D.5043 ])
                (plus:DI (reg/f:DI 67 [ D.5043 ])
                    (reg:DI 74 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _22 = *_21;

(insn 49 48 0 (set (reg:XF 76 [ D.5045 ])
        (mem:XF (reg/f:DI 75 [ D.5043 ]) [0 *_21+0 S16 A128])) mSector.c:279 -1
     (nil))

;; _23 = *f_4(D);

(insn 50 49 51 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))

(insn 51 50 0 (set (reg/f:DI 77 [ D.5041 ])
        (mem/f:DI (reg/f:DI 106) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))

;; _24 = (long unsigned int) i_1;

(insn 52 51 53 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 53 52 0 (set (reg:DI 78 [ D.5042 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:279 -1
     (nil))

;; _25 = _24 * 160;

(insn 54 53 55 (set (reg:DI 108)
        (reg:DI 78 [ D.5042 ])) mSector.c:279 -1
     (nil))

(insn 55 54 56 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 56 55 57 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 78 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 57 56 58 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 58 57 59 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 59 58 0 (set (reg:DI 79 [ D.5042 ])
        (reg:DI 108)) mSector.c:279 -1
     (nil))

;; _26 = _23 + _25;

(insn 60 59 0 (parallel [
            (set (reg/f:DI 80 [ D.5041 ])
                (plus:DI (reg/f:DI 77 [ D.5041 ])
                    (reg:DI 79 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _27 = _26->time;

(insn 61 60 0 (set (reg/f:DI 81 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80 [ D.5041 ])
                (const_int 16 [0x10])) [0 _26->time+0 S8 A128])) mSector.c:279 -1
     (nil))

;; _28 = *f_4(D);

(insn 62 61 63 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))

(insn 63 62 0 (set (reg/f:DI 82 [ D.5041 ])
        (mem/f:DI (reg/f:DI 110) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))

;; _29 = (long unsigned int) i_1;

(insn 64 63 65 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 65 64 0 (set (reg:DI 83 [ D.5042 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:279 -1
     (nil))

;; _30 = _29 * 160;

(insn 66 65 67 (set (reg:DI 112)
        (reg:DI 83 [ D.5042 ])) mSector.c:279 -1
     (nil))

(insn 67 66 68 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 68 67 69 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 83 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 69 68 70 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

(insn 70 69 71 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 71 70 0 (set (reg:DI 84 [ D.5042 ])
        (reg:DI 112)) mSector.c:279 -1
     (nil))

;; _31 = _28 + _30;

(insn 72 71 0 (parallel [
            (set (reg/f:DI 85 [ D.5041 ])
                (plus:DI (reg/f:DI 82 [ D.5041 ])
                    (reg:DI 84 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _32 = _31->bound[0];

(insn 73 72 0 (set (reg:SI 86 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 85 [ D.5041 ])
                (const_int 112 [0x70])) [0 _31->bound+0 S4 A128])) mSector.c:279 -1
     (nil))

;; _33 = (long unsigned int) _32;

(insn 74 73 0 (set (reg:DI 87 [ D.5042 ])
        (sign_extend:DI (reg:SI 86 [ D.5044 ]))) mSector.c:279 -1
     (nil))

;; _34 = _33 * 16;

(insn 75 74 0 (parallel [
            (set (reg:DI 88 [ D.5042 ])
                (ashift:DI (reg:DI 87 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _35 = _27 + _34;

(insn 76 75 0 (parallel [
            (set (reg/f:DI 89 [ D.5043 ])
                (plus:DI (reg/f:DI 81 [ D.5043 ])
                    (reg:DI 88 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; _36 = *_35;

(insn 77 76 0 (set (reg:XF 90 [ D.5045 ])
        (mem:XF (reg/f:DI 89 [ D.5043 ]) [0 *_35+0 S16 A128])) mSector.c:279 -1
     (nil))

;; _37 = _22 - _36;

(insn 78 77 0 (set (reg:XF 91 [ D.5045 ])
        (minus:XF (reg:XF 76 [ D.5045 ])
            (reg:XF 90 [ D.5045 ]))) mSector.c:279 -1
     (nil))

;; _8->delta_t[0] = _37;

(insn 79 78 0 (set (mem/j:XF (plus:DI (reg/f:DI 62 [ D.5041 ])
                (const_int 128 [0x80])) [0 _8->delta_t+0 S16 A128])
        (reg:XF 91 [ D.5045 ])) mSector.c:279 -1
     (nil))

;; i_38 = i_1 + 1;

(insn 80 79 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 81 80 82 118 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < N_3(D))

(insn 84 82 85 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))

(insn 85 84 86 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mSector.c:279 -1
     (nil))

(jump_insn 86 85 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) mSector.c:279 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _39 = 1;

(insn 88 87 0 (set (reg:SI 92 [ D.5044 ])
        (const_int 1 [0x1])) mSector.c:280 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 89 88 90 120 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; return _39;

(insn 91 90 92 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5044 ])) mSector.c:280 -1
     (nil))

(jump_insn 92 91 93 (set (pc)
        (label_ref 0)) mSector.c:280 -1
     (nil))

(barrier 93 92 0)
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:277 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mSector.c:277 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:279 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 81)) mSector.c:279 -1
     (nil)
 -> 81)
;;  succ:       5

(barrier 9 8 83)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 83 9 10 4 119 "" [1 uses])
(note 10 83 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 59 [ D.5041 ])
        (mem/f:DI (reg/f:DI 94) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 60 [ D.5042 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:279 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 96)
        (reg:DI 60 [ D.5042 ])) mSector.c:279 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 60 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 4 (set (reg:DI 61 [ D.5042 ])
        (reg:DI 96)) mSector.c:279 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 62 [ D.5041 ])
                (plus:DI (reg/f:DI 59 [ D.5041 ])
                    (reg:DI 61 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 63 [ D.5041 ])
        (mem/f:DI (reg/f:DI 98) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 64 [ D.5042 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:279 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 100)
        (reg:DI 64 [ D.5042 ])) mSector.c:279 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 100)
                (ashift:DI (reg:DI 100)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 100)
                    (reg:DI 64 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 100)
        (reg:DI 101)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 31 30 32 4 (set (reg:DI 65 [ D.5042 ])
        (reg:DI 100)) mSector.c:279 -1
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 66 [ D.5041 ])
                (plus:DI (reg/f:DI 63 [ D.5041 ])
                    (reg:DI 65 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 67 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.5041 ])
                (const_int 16 [0x10])) [0 _12->time+0 S8 A128])) mSector.c:279 -1
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 68 [ D.5041 ])
        (mem/f:DI (reg/f:DI 102) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 69 [ D.5042 ])
        (sign_extend:DI (reg:SI 103))) mSector.c:279 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 104)
        (reg:DI 69 [ D.5042 ])) mSector.c:279 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 104)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 104)
                    (reg:DI 69 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 105)
                (ashift:DI (reg:DI 104)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 104)
        (reg:DI 105)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 43 42 44 4 (set (reg:DI 70 [ D.5042 ])
        (reg:DI 104)) mSector.c:279 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 71 [ D.5041 ])
                (plus:DI (reg/f:DI 68 [ D.5041 ])
                    (reg:DI 70 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 45 44 46 4 (set (reg:SI 72 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5041 ])
                (const_int 116 [0x74])) [0 _17->bound+4 S4 A32])) mSector.c:279 -1
     (nil))
(insn 46 45 47 4 (set (reg:DI 73 [ D.5042 ])
        (sign_extend:DI (reg:SI 72 [ D.5044 ]))) mSector.c:279 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 74 [ D.5042 ])
                (ashift:DI (reg:DI 73 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 75 [ D.5043 ])
                (plus:DI (reg/f:DI 67 [ D.5043 ])
                    (reg:DI 74 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 49 48 50 4 (set (reg:XF 76 [ D.5045 ])
        (mem:XF (reg/f:DI 75 [ D.5043 ]) [0 *_21+0 S16 A128])) mSector.c:279 -1
     (nil))
(insn 50 49 51 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 77 [ D.5041 ])
        (mem/f:DI (reg/f:DI 106) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 52 51 53 4 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 53 52 54 4 (set (reg:DI 78 [ D.5042 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:279 -1
     (nil))
(insn 54 53 55 4 (set (reg:DI 108)
        (reg:DI 78 [ D.5042 ])) mSector.c:279 -1
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 78 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 57 56 58 4 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 58 57 59 4 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 59 58 60 4 (set (reg:DI 79 [ D.5042 ])
        (reg:DI 108)) mSector.c:279 -1
     (nil))
(insn 60 59 61 4 (parallel [
            (set (reg/f:DI 80 [ D.5041 ])
                (plus:DI (reg/f:DI 77 [ D.5041 ])
                    (reg:DI 79 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 61 60 62 4 (set (reg/f:DI 81 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80 [ D.5041 ])
                (const_int 16 [0x10])) [0 _26->time+0 S8 A128])) mSector.c:279 -1
     (nil))
(insn 62 61 63 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 63 62 64 4 (set (reg/f:DI 82 [ D.5041 ])
        (mem/f:DI (reg/f:DI 110) [0 *f_4(D)+0 S8 A64])) mSector.c:279 -1
     (nil))
(insn 64 63 65 4 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 65 64 66 4 (set (reg:DI 83 [ D.5042 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:279 -1
     (nil))
(insn 66 65 67 4 (set (reg:DI 112)
        (reg:DI 83 [ D.5042 ])) mSector.c:279 -1
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 83 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 70 69 71 4 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:279 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 71 70 72 4 (set (reg:DI 84 [ D.5042 ])
        (reg:DI 112)) mSector.c:279 -1
     (nil))
(insn 72 71 73 4 (parallel [
            (set (reg/f:DI 85 [ D.5041 ])
                (plus:DI (reg/f:DI 82 [ D.5041 ])
                    (reg:DI 84 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 73 72 74 4 (set (reg:SI 86 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 85 [ D.5041 ])
                (const_int 112 [0x70])) [0 _31->bound+0 S4 A128])) mSector.c:279 -1
     (nil))
(insn 74 73 75 4 (set (reg:DI 87 [ D.5042 ])
        (sign_extend:DI (reg:SI 86 [ D.5044 ]))) mSector.c:279 -1
     (nil))
(insn 75 74 76 4 (parallel [
            (set (reg:DI 88 [ D.5042 ])
                (ashift:DI (reg:DI 87 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 76 75 77 4 (parallel [
            (set (reg/f:DI 89 [ D.5043 ])
                (plus:DI (reg/f:DI 81 [ D.5043 ])
                    (reg:DI 88 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
(insn 77 76 78 4 (set (reg:XF 90 [ D.5045 ])
        (mem:XF (reg/f:DI 89 [ D.5043 ]) [0 *_35+0 S16 A128])) mSector.c:279 -1
     (nil))
(insn 78 77 79 4 (set (reg:XF 91 [ D.5045 ])
        (minus:XF (reg:XF 76 [ D.5045 ])
            (reg:XF 90 [ D.5045 ]))) mSector.c:279 -1
     (nil))
(insn 79 78 80 4 (set (mem/j:XF (plus:DI (reg/f:DI 62 [ D.5041 ])
                (const_int 128 [0x80])) [0 _8->delta_t+0 S16 A128])
        (reg:XF 91 [ D.5045 ])) mSector.c:279 -1
     (nil))
(insn 80 79 81 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 81 80 82 5 118 "" [1 uses])
(note 82 81 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 5 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 -1
     (nil))
(insn 85 84 86 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mSector.c:279 -1
     (nil))
(jump_insn 86 85 87 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) mSector.c:279 -1
     (nil)
 -> 83)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 87 86 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 91 6 (set (reg:SI 92 [ D.5044 ])
        (const_int 1 [0x1])) mSector.c:280 -1
     (nil))
(insn 91 88 95 6 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5044 ])) mSector.c:280 -1
     (nil))
(insn 95 91 98 6 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:281 -1
     (nil))
(insn 98 95 0 6 (use (reg/i:SI 0 ax)) mSector.c:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _alloc_flight_pos (_alloc_flight_pos, funcdef_no=17, decl_uid=4129, cgraph_uid=17)

_alloc_flight_pos (struct Aircraft_t * * f, int N_f, struct CONF_t * conf)
{
  int i;
  int D.4931;
  long double * * D.4930;
  int D.4929;
  int D.4928;
  struct Aircraft_t * D.4927;
  long unsigned int D.4926;
  long unsigned int D.4925;
  struct Aircraft_t * D.4924;
  struct Aircraft_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _8;
  int _10;
  int _11;
  long double * * _12;
  int _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_2 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = *f_4(D);
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _8 = _5 + _7;
  _10 = conf_9(D)->t_w;
  _11 = _10 * 2;
  _12 = falloc_matrix (_11, 4);
  _8->pos = _12;
  i_13 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_2(2), i_13(3)>
  if (i_1 < N_f_3(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _14 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _14;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (N_f_3(D) - 3 )
Partition 4 (f_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (conf_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 14 (_14 - 14 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (N_f_3(D) - 3 )
Partition 3 (f_4(D) - 4 )
Partition 4 (conf_9(D) - 9 )
Partition 5 (i_13 - 13 )


Live on entry to BB2 : N_f_3(D)  f_4(D)  conf_9(D)  

Live on entry to BB3 : i_1  N_f_3(D)  f_4(D)  conf_9(D)  

Live on entry to BB4 : N_f_3(D)  f_4(D)  conf_9(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_13
(2147483646) i_1 <-> i_2

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (N_f_3(D) - 3 )
Partition 3 (f_4(D) - 4 )
Partition 4 (conf_9(D) - 9 )
Partition 5 (i_13 - 13 )

Coalesce list: (1)i_1 & (13)i_13 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (13)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (2)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 13 )
Partition 1 (N_f_3(D) - 3 )
Partition 2 (f_4(D) - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (conf_9(D) - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_14 - 14 )

_alloc_flight_pos (struct Aircraft_t * * f, int N_f, struct CONF_t * conf)
{
  int i;
  int D.4931;
  long double * * D.4930;
  int D.4929;
  int D.4928;
  struct Aircraft_t * D.4927;
  long unsigned int D.4926;
  long unsigned int D.4925;
  struct Aircraft_t * D.4924;
  struct Aircraft_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct Aircraft_t * _8;
  int _10;
  int _11;
  long double * * _12;
  int _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_2 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = *f_4(D);
  _6 = (long unsigned int) i_1;
  _7 = _6 * 160;
  _8 = _5 + _7;
  _10 = conf_9(D)->t_w;
  _11 = _10 * 2;
  _12 = falloc_matrix (_11, 4);
  _8->pos = _12;
  i_13 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_2(2), i_13(3)>
  if (i_1 < N_f_3(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _14 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _14;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; i_2 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:285 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = *f_4(D);

(insn 12 11 13 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:285 -1
     (nil))

(insn 13 12 0 (set (reg/f:DI 59 [ D.5046 ])
        (mem/f:DI (reg/f:DI 68) [0 *f_4(D)+0 S8 A64])) mSector.c:285 -1
     (nil))

;; _6 = (long unsigned int) i_1;

(insn 14 13 15 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 -1
     (nil))

(insn 15 14 0 (set (reg:DI 60 [ D.5047 ])
        (sign_extend:DI (reg:SI 69))) mSector.c:285 -1
     (nil))

;; _7 = _6 * 160;

(insn 16 15 17 (set (reg:DI 70)
        (reg:DI 60 [ D.5047 ])) mSector.c:285 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))

(insn 18 17 19 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 60 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 19 18 20 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))

(insn 20 19 21 (set (reg:DI 70)
        (reg:DI 71)) mSector.c:285 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 160 [0xa0]))
        (nil)))

(insn 21 20 0 (set (reg:DI 61 [ D.5047 ])
        (reg:DI 70)) mSector.c:285 -1
     (nil))

;; _8 = _5 + _7;

(insn 22 21 0 (parallel [
            (set (reg/f:DI 62 [ D.5046 ])
                (plus:DI (reg/f:DI 59 [ D.5046 ])
                    (reg:DI 61 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))

;; _10 = conf_9(D)->t_w;

(insn 23 22 24 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 conf+0 S8 A64])) mSector.c:285 -1
     (nil))

(insn 24 23 0 (set (reg:SI 63 [ D.5048 ])
        (mem/j:SI (plus:DI (reg/f:DI 72)
                (const_int 192 [0xc0])) [0 conf_9(D)->t_w+0 S4 A128])) mSector.c:285 -1
     (nil))

;; _11 = _10 * 2;

(insn 25 24 0 (parallel [
            (set (reg:SI 64 [ D.5048 ])
                (ashift:SI (reg:SI 63 [ D.5048 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))

;; _12 = falloc_matrix (_11, 4);

(insn 26 25 27 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mSector.c:285 -1
     (nil))

(insn 27 26 28 (set (reg:SI 5 di)
        (reg:SI 64 [ D.5048 ])) mSector.c:285 -1
     (nil))

(call_insn 28 27 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:285 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

(insn 29 28 0 (set (reg/f:DI 65 [ D.5049 ])
        (reg:DI 0 ax)) mSector.c:285 -1
     (nil))

;; _8->pos = _12;

(insn 30 29 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 62 [ D.5046 ])
                (const_int 32 [0x20])) [0 _8->pos+0 S8 A128])
        (reg/f:DI 65 [ D.5049 ])) mSector.c:285 -1
     (nil))

;; i_13 = i_1 + 1;

(insn 31 30 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 32 31 33 122 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < N_f_3(D))

(insn 35 33 36 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 -1
     (nil))

(insn 36 35 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 N_f+0 S4 A32]))) mSector.c:285 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) mSector.c:285 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _14 = 1;

(insn 39 38 0 (set (reg:SI 66 [ D.5048 ])
        (const_int 1 [0x1])) mSector.c:286 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 40 39 41 124 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; return _14;

(insn 42 41 43 (set (reg:SI 67 [ <retval> ])
        (reg:SI 66 [ D.5048 ])) mSector.c:286 -1
     (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 0)) mSector.c:286 -1
     (nil))

(barrier 44 43 0)
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:283 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 N_f+0 S4 A32])
        (reg:SI 4 si [ N_f ])) mSector.c:283 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 conf+0 S8 A64])
        (reg:DI 1 dx [ conf ])) mSector.c:283 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:285 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 32)) mSector.c:285 -1
     (nil)
 -> 32)
;;  succ:       5

(barrier 10 9 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 34 10 11 4 123 "" [1 uses])
(note 11 34 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:285 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 59 [ D.5046 ])
        (mem/f:DI (reg/f:DI 68) [0 *f_4(D)+0 S8 A64])) mSector.c:285 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 60 [ D.5047 ])
        (sign_extend:DI (reg:SI 69))) mSector.c:285 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 70)
        (reg:DI 60 [ D.5047 ])) mSector.c:285 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 60 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 70)
        (reg:DI 71)) mSector.c:285 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 21 20 22 4 (set (reg:DI 61 [ D.5047 ])
        (reg:DI 70)) mSector.c:285 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 62 [ D.5046 ])
                (plus:DI (reg/f:DI 59 [ D.5046 ])
                    (reg:DI 61 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 conf+0 S8 A64])) mSector.c:285 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 63 [ D.5048 ])
        (mem/j:SI (plus:DI (reg/f:DI 72)
                (const_int 192 [0xc0])) [0 conf_9(D)->t_w+0 S4 A128])) mSector.c:285 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:SI 64 [ D.5048 ])
                (ashift:SI (reg:SI 63 [ D.5048 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mSector.c:285 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 5 di)
        (reg:SI 64 [ D.5048 ])) mSector.c:285 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:285 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 4 (set (reg/f:DI 65 [ D.5049 ])
        (reg:DI 0 ax)) mSector.c:285 -1
     (nil))
(insn 30 29 31 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 62 [ D.5046 ])
                (const_int 32 [0x20])) [0 _8->pos+0 S8 A128])
        (reg/f:DI 65 [ D.5049 ])) mSector.c:285 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 32 31 33 5 122 "" [1 uses])
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 5 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 N_f+0 S4 A32]))) mSector.c:285 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) mSector.c:285 -1
     (nil)
 -> 34)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 6 (set (reg:SI 66 [ D.5048 ])
        (const_int 1 [0x1])) mSector.c:286 -1
     (nil))
(insn 42 39 46 6 (set (reg:SI 67 [ <retval> ])
        (reg:SI 66 [ D.5048 ])) mSector.c:286 -1
     (nil))
(insn 46 42 49 6 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) mSector.c:287 -1
     (nil))
(insn 49 46 0 6 (use (reg/i:SI 0 ax)) mSector.c:287 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function init_Sector (init_Sector, funcdef_no=18, decl_uid=1896, cgraph_uid=18)

init_Sector (struct Aircraft_t * * flight, int * Nflight, struct CONF_t * config, struct SHOCK_t * shock, char * input_ABM)
{
  int D.4935;
  int D.4934;
  int D.4933;
  int _4;
  int _6;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  get_boundary ("CONF/bound_latlon.dat", config_1(D));
  get_configuration ("CONF/config.cfg", config_1(D));
  __builtin_puts (&"Generate Point"[0]);
  generate_temporary_point (config_1(D));
  _4 = get_M1 (input_ABM_2(D), flight_3(D));
  *Nflight_5(D) = _4;
  modify_traj_intersect_bound (flight_3(D), Nflight_5(D), *config_1(D));
  _6 = *Nflight_5(D);
  _alloc_flight_pos (flight_3(D), _6, config_1(D));
  _alloc_shock (*config_1(D), shock_7(D));
  get_temp_shock (config_1(D));
  _8 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 1 (config_1(D) - 1 )
Partition 2 (input_ABM_2(D) - 2 )
Partition 3 (flight_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (Nflight_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (shock_7(D) - 7 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (config_1(D) - 1 )
Partition 1 (input_ABM_2(D) - 2 )
Partition 2 (flight_3(D) - 3 )
Partition 3 (Nflight_5(D) - 5 )
Partition 4 (shock_7(D) - 7 )


Live on entry to BB2 : config_1(D)  input_ABM_2(D)  flight_3(D)  Nflight_5(D)  shock_7(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (config_1(D) - 1 )
Partition 1 (input_ABM_2(D) - 2 )
Partition 2 (flight_3(D) - 3 )
Partition 3 (Nflight_5(D) - 5 )
Partition 4 (shock_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (config_1(D) - 1 )
Partition 1 (input_ABM_2(D) - 2 )
Partition 2 (flight_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (Nflight_5(D) - 5 )
Partition 5 (_6 - 6 )
Partition 6 (shock_7(D) - 7 )
Partition 7 (_8 - 8 )

init_Sector (struct Aircraft_t * * flight, int * Nflight, struct CONF_t * config, struct SHOCK_t * shock, char * input_ABM)
{
  int D.4935;
  int D.4934;
  int D.4933;
  int _4;
  int _6;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  get_boundary ("CONF/bound_latlon.dat", config_1(D));
  get_configuration ("CONF/config.cfg", config_1(D));
  __builtin_puts (&"Generate Point"[0]);
  generate_temporary_point (config_1(D));
  _4 = get_M1 (input_ABM_2(D), flight_3(D));
  *Nflight_5(D) = _4;
  modify_traj_intersect_bound (flight_3(D), Nflight_5(D), *config_1(D));
  _6 = *Nflight_5(D);
  _alloc_flight_pos (flight_3(D), _6, config_1(D));
  _alloc_shock (*config_1(D), shock_7(D));
  get_temp_shock (config_1(D));
  _8 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _8;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; get_boundary ("CONF/bound_latlon.dat", config_1(D));

(insn 10 9 11 (set (reg:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:291 -1
     (nil))

(insn 11 10 12 (set (reg:DI 4 si)
        (reg:DI 63)) mSector.c:291 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f44d24df4c0 *.LC16>)) mSector.c:291 -1
     (nil))

(call_insn 13 12 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_boundary") [flags 0x41]  <function_decl 0x7f44d29f7200 get_boundary>) [0 get_boundary S1 A8])
            (const_int 0 [0]))) mSector.c:291 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

;; get_configuration ("CONF/config.cfg", config_1(D));

(insn 14 13 15 (set (reg:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:292 -1
     (nil))

(insn 15 14 16 (set (reg:DI 4 si)
        (reg:DI 64)) mSector.c:292 -1
     (nil))

(insn 16 15 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f44d24df558 *.LC17>)) mSector.c:292 -1
     (nil))

(call_insn 17 16 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_configuration") [flags 0x41]  <function_decl 0x7f44d29f7300 get_configuration>) [0 get_configuration S1 A8])
            (const_int 0 [0]))) mSector.c:292 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

;; __builtin_puts (&"Generate Point"[0]);

(insn 18 17 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f44d24df5f0 *.LC18>)) mSector.c:294 -1
     (nil))

(call_insn 19 18 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:294 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; generate_temporary_point (config_1(D));

(insn 20 19 21 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:295 -1
     (nil))

(insn 21 20 22 (set (reg:DI 5 di)
        (reg:DI 65)) mSector.c:295 -1
     (nil))

(call_insn 22 21 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("generate_temporary_point") [flags 0x3]  <function_decl 0x7f44d29fcf00 generate_temporary_point>) [0 generate_temporary_point S1 A8])
            (const_int 0 [0]))) mSector.c:295 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _4 = get_M1 (input_ABM_2(D), flight_3(D));

(insn 23 22 24 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:297 -1
     (nil))

(insn 24 23 25 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])) mSector.c:297 -1
     (nil))

(insn 25 24 26 (set (reg:DI 4 si)
        (reg:DI 66)) mSector.c:297 -1
     (nil))

(insn 26 25 27 (set (reg:DI 5 di)
        (reg:DI 67)) mSector.c:297 -1
     (nil))

(call_insn 27 26 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_M1") [flags 0x41]  <function_decl 0x7f44d29f7100 get_M1>) [0 get_M1 S1 A8])
            (const_int 0 [0]))) mSector.c:297 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 28 27 0 (set (reg:SI 59 [ D.5050 ])
        (reg:SI 0 ax)) mSector.c:297 -1
     (nil))

;; *Nflight_5(D) = _4;

(insn 29 28 30 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:297 -1
     (nil))

(insn 30 29 0 (set (mem:SI (reg/f:DI 68) [0 *Nflight_5(D)+0 S4 A32])
        (reg:SI 59 [ D.5050 ])) mSector.c:297 -1
     (nil))

;; modify_traj_intersect_bound (flight_3(D), Nflight_5(D), *config_1(D));

(insn 31 30 32 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:299 -1
     (nil))

(insn 32 31 33 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:299 -1
     (nil))

(insn 33 32 34 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:299 -1
     (nil))

(insn 34 33 35 (set (reg:DI 72)
        (reg/f:DI 56 virtual-outgoing-args)) mSector.c:299 -1
     (nil))

(insn 35 34 36 (set (reg:DI 73)
        (reg/f:DI 71)) mSector.c:299 -1
     (nil))

(insn 36 35 37 (set (reg:DI 74)
        (const_int 38 [0x26])) mSector.c:299 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:DI 74)
                (const_int 0 [0]))
            (set (reg:DI 72)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 72)))
            (set (reg:DI 73)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 73)))
            (set (mem:BLK (reg:DI 72) [0  S304 A128])
                (mem:BLK (reg:DI 73) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 74))
        ]) mSector.c:299 -1
     (nil))

(insn 38 37 39 (set (reg:DI 4 si)
        (reg:DI 69)) mSector.c:299 -1
     (nil))

(insn 39 38 40 (set (reg:DI 5 di)
        (reg:DI 70)) mSector.c:299 -1
     (nil))

(call_insn 40 39 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("modify_traj_intersect_bound") [flags 0x3]  <function_decl 0x7f44d2a01200 modify_traj_intersect_bound>) [0 modify_traj_intersect_bound S1 A8])
            (const_int 304 [0x130]))) mSector.c:299 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 56 virtual-outgoing-args) [0  S304 A128]))
                (nil)))))

;; _6 = *Nflight_5(D);

(insn 41 40 42 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:309 -1
     (nil))

(insn 42 41 0 (set (reg:SI 60 [ D.5050 ])
        (mem:SI (reg/f:DI 75) [0 *Nflight_5(D)+0 S4 A32])) mSector.c:309 -1
     (nil))

;; _alloc_flight_pos (flight_3(D), _6, config_1(D));

(insn 43 42 44 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:309 -1
     (nil))

(insn 44 43 45 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:309 -1
     (nil))

(insn 45 44 46 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:309 -1
     (nil))

(insn 46 45 47 (set (reg:SI 4 si)
        (reg:SI 60 [ D.5050 ])) mSector.c:309 -1
     (nil))

(insn 47 46 48 (set (reg:DI 5 di)
        (reg:DI 77)) mSector.c:309 -1
     (nil))

(call_insn 48 47 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_flight_pos") [flags 0x3]  <function_decl 0x7f44d278ca00 _alloc_flight_pos>) [0 _alloc_flight_pos S1 A8])
            (const_int 0 [0]))) mSector.c:309 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; _alloc_shock (*config_1(D), shock_7(D));

(insn 49 48 50 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])) mSector.c:311 -1
     (nil))

(insn 50 49 51 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:311 -1
     (nil))

(insn 51 50 52 (set (reg:DI 80)
        (reg/f:DI 56 virtual-outgoing-args)) mSector.c:311 -1
     (nil))

(insn 52 51 53 (set (reg:DI 81)
        (reg/f:DI 79)) mSector.c:311 -1
     (nil))

(insn 53 52 54 (set (reg:DI 82)
        (const_int 38 [0x26])) mSector.c:311 -1
     (nil))

(insn 54 53 55 (parallel [
            (set (reg:DI 82)
                (const_int 0 [0]))
            (set (reg:DI 80)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 80)))
            (set (reg:DI 81)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 81)))
            (set (mem:BLK (reg:DI 80) [0  S304 A128])
                (mem:BLK (reg:DI 81) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 82))
        ]) mSector.c:311 -1
     (nil))

(insn 55 54 56 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:311 -1
     (nil))

(call_insn 56 55 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_shock") [flags 0x3]  <function_decl 0x7f44d278c800 _alloc_shock>) [0 _alloc_shock S1 A8])
            (const_int 304 [0x130]))) mSector.c:311 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 56 virtual-outgoing-args) [0  S304 A128]))
            (nil))))

;; get_temp_shock (config_1(D));

(insn 57 56 58 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:312 -1
     (nil))

(insn 58 57 59 (set (reg:DI 5 di)
        (reg:DI 83)) mSector.c:312 -1
     (nil))

(call_insn 59 58 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_temp_shock") [flags 0x41]  <function_decl 0x7f44d29f7400 get_temp_shock>) [0 get_temp_shock S1 A8])
            (const_int 0 [0]))) mSector.c:312 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _8 = 1;

(insn 60 59 0 (set (reg:SI 61 [ D.5050 ])
        (const_int 1 [0x1])) mSector.c:315 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 61 60 62 126 "" [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 63 62 64 (set (reg:SI 62 [ <retval> ])
        (reg:SI 61 [ D.5050 ])) mSector.c:315 -1
     (nil))

(jump_insn 64 63 65 (set (pc)
        (label_ref 0)) mSector.c:315 -1
     (nil))

(barrier 65 64 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:289 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:289 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])
        (reg:DI 1 dx [ config ])) mSector.c:289 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])
        (reg:DI 2 cx [ shock ])) mSector.c:289 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])
        (reg:DI 37 r8 [ input_ABM ])) mSector.c:289 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:291 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 63)) mSector.c:291 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f44d24df4c0 *.LC16>)) mSector.c:291 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_boundary") [flags 0x41]  <function_decl 0x7f44d29f7200 get_boundary>) [0 get_boundary S1 A8])
            (const_int 0 [0]))) mSector.c:291 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:292 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 64)) mSector.c:292 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f44d24df558 *.LC17>)) mSector.c:292 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_configuration") [flags 0x41]  <function_decl 0x7f44d29f7300 get_configuration>) [0 get_configuration S1 A8])
            (const_int 0 [0]))) mSector.c:292 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f44d24df5f0 *.LC18>)) mSector.c:294 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:294 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:295 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 65)) mSector.c:295 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("generate_temporary_point") [flags 0x3]  <function_decl 0x7f44d29fcf00 generate_temporary_point>) [0 generate_temporary_point S1 A8])
            (const_int 0 [0]))) mSector.c:295 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:297 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])) mSector.c:297 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 66)) mSector.c:297 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 67)) mSector.c:297 -1
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_M1") [flags 0x41]  <function_decl 0x7f44d29f7100 get_M1>) [0 get_M1 S1 A8])
            (const_int 0 [0]))) mSector.c:297 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 28 27 29 2 (set (reg:SI 59 [ D.5050 ])
        (reg:SI 0 ax)) mSector.c:297 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:297 -1
     (nil))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 68) [0 *Nflight_5(D)+0 S4 A32])
        (reg:SI 59 [ D.5050 ])) mSector.c:297 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:299 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:299 -1
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:299 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 72)
        (reg/f:DI 56 virtual-outgoing-args)) mSector.c:299 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 73)
        (reg/f:DI 71)) mSector.c:299 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 74)
        (const_int 38 [0x26])) mSector.c:299 -1
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 74)
                (const_int 0 [0]))
            (set (reg:DI 72)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 72)))
            (set (reg:DI 73)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 73)))
            (set (mem:BLK (reg:DI 72) [0  S304 A128])
                (mem:BLK (reg:DI 73) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 74))
        ]) mSector.c:299 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 4 si)
        (reg:DI 69)) mSector.c:299 -1
     (nil))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg:DI 70)) mSector.c:299 -1
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("modify_traj_intersect_bound") [flags 0x3]  <function_decl 0x7f44d2a01200 modify_traj_intersect_bound>) [0 modify_traj_intersect_bound S1 A8])
            (const_int 304 [0x130]))) mSector.c:299 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 56 virtual-outgoing-args) [0  S304 A128]))
                (nil)))))
(insn 41 40 42 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:309 -1
     (nil))
(insn 42 41 43 2 (set (reg:SI 60 [ D.5050 ])
        (mem:SI (reg/f:DI 75) [0 *Nflight_5(D)+0 S4 A32])) mSector.c:309 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:309 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:309 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:309 -1
     (nil))
(insn 46 45 47 2 (set (reg:SI 4 si)
        (reg:SI 60 [ D.5050 ])) mSector.c:309 -1
     (nil))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg:DI 77)) mSector.c:309 -1
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_flight_pos") [flags 0x3]  <function_decl 0x7f44d278ca00 _alloc_flight_pos>) [0 _alloc_flight_pos S1 A8])
            (const_int 0 [0]))) mSector.c:309 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 2 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])) mSector.c:311 -1
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:311 -1
     (nil))
(insn 51 50 52 2 (set (reg:DI 80)
        (reg/f:DI 56 virtual-outgoing-args)) mSector.c:311 -1
     (nil))
(insn 52 51 53 2 (set (reg:DI 81)
        (reg/f:DI 79)) mSector.c:311 -1
     (nil))
(insn 53 52 54 2 (set (reg:DI 82)
        (const_int 38 [0x26])) mSector.c:311 -1
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 82)
                (const_int 0 [0]))
            (set (reg:DI 80)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 80)))
            (set (reg:DI 81)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 81)))
            (set (mem:BLK (reg:DI 80) [0  S304 A128])
                (mem:BLK (reg:DI 81) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 82))
        ]) mSector.c:311 -1
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:311 -1
     (nil))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_shock") [flags 0x3]  <function_decl 0x7f44d278c800 _alloc_shock>) [0 _alloc_shock S1 A8])
            (const_int 304 [0x130]))) mSector.c:311 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 56 virtual-outgoing-args) [0  S304 A128]))
            (nil))))
(insn 57 56 58 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:312 -1
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 83)) mSector.c:312 -1
     (nil))
(call_insn 59 58 60 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_temp_shock") [flags 0x41]  <function_decl 0x7f44d29f7400 get_temp_shock>) [0 get_temp_shock S1 A8])
            (const_int 0 [0]))) mSector.c:312 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 63 2 (set (reg:SI 61 [ D.5050 ])
        (const_int 1 [0x1])) mSector.c:315 -1
     (nil))
(insn 63 60 67 2 (set (reg:SI 62 [ <retval> ])
        (reg:SI 61 [ D.5050 ])) mSector.c:315 -1
     (nil))
(insn 67 63 70 2 (set (reg/i:SI 0 ax)
        (reg:SI 62 [ <retval> ])) mSector.c:316 -1
     (nil))
(insn 70 67 0 2 (use (reg/i:SI 0 ax)) mSector.c:316 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

