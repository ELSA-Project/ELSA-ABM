
;; Function _convert_time (_convert_time, funcdef_no=2, decl_uid=3111, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 18 (  1.5)
scanning new insn with uid = 125.
scanning new insn with uid = 126.
scanning new insn with uid = 127.
scanning new insn with uid = 130.
scanning new insn with uid = 131.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns


_convert_time

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 10[st(2)] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2]
;;  ref usage 	r0={28d,27u} r1={12d,7u,6e} r2={5d} r4={5d} r5={9d,5u} r6={3d,57u} r7={4d,20u} r8={9d,6u} r9={6d,2u} r10={5d,1u} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={20d,3u} r18={4d} r19={4d} r20={1d,1u,6e} r21={8d,3u} r22={8d,3u} r23={6d,1u} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 412{264d,136u,12e} in 84{80 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 4 1 125 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 125 4 126 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:20 -1
     (nil))
(insn/f 126 125 127 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:20 -1
     (nil))
(insn/f 127 126 128 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:20 -1
     (nil))
(note 128 127 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 128 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
        (reg:DI 5 di [ c ])) mQuery.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ c ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) mQuery.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [86])
        (nil)))
(call_insn/i 8 7 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 10 8 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32])
        (reg:SI 0 ax [87])) mQuery.c:24 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [87])
        (nil)))
(insn 11 10 112 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:25 89 {*movsi_internal}
     (nil))
(jump_insn 112 11 113 2 (set (pc)
        (label_ref 16)) mQuery.c:25 650 {jump}
     (nil)
 -> 16)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 113 112 23)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 23 113 14 3 3 "" [1 uses])
(note 14 23 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 16 15 17 4 2 "" [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:25 89 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 1 dx [orig:59 D.3671 ] [59])
        (sign_extend:DI (reg:SI 0 ax [88]))) mQuery.c:25 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [88])
        (nil)))
(insn 20 19 21 4 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:25 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 0 ax [orig:60 D.3672 ] [60])
                (plus:DI (reg/f:DI 0 ax [89])
                    (reg:DI 1 dx [orig:59 D.3671 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.3671 ] [59])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:59 D.3671 ] [59]))
                (nil)))))
(insn 22 21 24 4 (set (reg:QI 0 ax [orig:61 D.3673 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 D.3672 ] [60]) [0 *_8+0 S1 A8])) mQuery.c:25 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.3672 ] [60])
        (nil)))
(insn 24 22 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.3673 ] [61])
            (const_int 58 [0x3a]))) mQuery.c:25 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.3673 ] [61])
        (nil)))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) mQuery.c:25 612 {*jcc_1}
     (nil)
 -> 23)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 273 {*addsi_1}
     (nil))
(insn 28 27 29 5 (set (reg:SI 0 ax [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:26 89 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 1 dx [orig:62 D.3671 ] [62])
        (sign_extend:DI (reg:SI 0 ax [90]))) mQuery.c:26 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [90])
        (nil)))
(insn 30 29 31 5 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:26 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.3674 ] [63])
                (plus:DI (reg/f:DI 0 ax [91])
                    (reg:DI 1 dx [orig:62 D.3671 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [91])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.3671 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.3671 ] [62]))
                (nil)))))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:63 D.3674 ] [63])) mQuery.c:26 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.3674 ] [63])
        (nil)))
(call_insn/i 33 32 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:26 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 35 33 114 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32])
        (reg:SI 0 ax [92])) mQuery.c:26 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [92])
        (nil)))
(jump_insn 114 35 115 5 (set (pc)
        (label_ref 40)) mQuery.c:27 650 {jump}
     (nil)
 -> 40)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 115 114 47)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 47 115 38 6 5 "" [1 uses])
(note 38 47 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 40 39 41 7 4 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:SI 0 ax [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:27 89 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:DI 1 dx [orig:64 D.3671 ] [64])
        (sign_extend:DI (reg:SI 0 ax [93]))) mQuery.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [93])
        (nil)))
(insn 44 43 45 7 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.3672 ] [65])
                (plus:DI (reg/f:DI 0 ax [94])
                    (reg:DI 1 dx [orig:64 D.3671 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.3671 ] [64])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:64 D.3671 ] [64]))
                (nil)))))
(insn 46 45 48 7 (set (reg:QI 0 ax [orig:66 D.3673 ] [66])
        (mem:QI (reg/f:DI 0 ax [orig:65 D.3672 ] [65]) [0 *_16+0 S1 A8])) mQuery.c:27 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.3672 ] [65])
        (nil)))
(insn 48 46 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:66 D.3673 ] [66])
            (const_int 58 [0x3a]))) mQuery.c:27 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:66 D.3673 ] [66])
        (nil)))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) mQuery.c:27 612 {*jcc_1}
     (nil)
 -> 47)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 273 {*addsi_1}
     (nil))
(insn 52 51 53 8 (set (reg:SI 0 ax [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:28 89 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:DI 1 dx [orig:67 D.3671 ] [67])
        (sign_extend:DI (reg:SI 0 ax [95]))) mQuery.c:28 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [95])
        (nil)))
(insn 54 53 55 8 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:28 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 8 (parallel [
            (set (reg/f:DI 0 ax [orig:68 D.3674 ] [68])
                (plus:DI (reg/f:DI 0 ax [96])
                    (reg:DI 1 dx [orig:67 D.3671 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [96])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:67 D.3671 ] [67])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:67 D.3671 ] [67]))
                (nil)))))
(insn 56 55 57 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:68 D.3674 ] [68])) mQuery.c:28 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.3674 ] [68])
        (nil)))
(call_insn/i 57 56 59 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:28 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 57 116 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32])
        (reg:SI 0 ax [97])) mQuery.c:28 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [97])
        (nil)))
(jump_insn 116 59 117 8 (set (pc)
        (label_ref 64)) mQuery.c:29 650 {jump}
     (nil)
 -> 64)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 117 116 71)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 71 117 62 9 7 "" [1 uses])
(note 62 71 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 64 63 65 10 6 "" [1 uses])
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg:SI 0 ax [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:29 89 {*movsi_internal}
     (nil))
(insn 67 66 68 10 (set (reg:DI 1 dx [orig:69 D.3671 ] [69])
        (sign_extend:DI (reg:SI 0 ax [98]))) mQuery.c:29 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [98])
        (nil)))
(insn 68 67 69 10 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:29 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.3672 ] [70])
                (plus:DI (reg/f:DI 0 ax [99])
                    (reg:DI 1 dx [orig:69 D.3671 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.3671 ] [69])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:69 D.3671 ] [69]))
                (nil)))))
(insn 70 69 72 10 (set (reg:QI 0 ax [orig:71 D.3673 ] [71])
        (mem:QI (reg/f:DI 0 ax [orig:70 D.3672 ] [70]) [0 *_24+0 S1 A8])) mQuery.c:29 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.3672 ] [70])
        (nil)))
(insn 72 70 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:71 D.3673 ] [71])
            (const_int 58 [0x3a]))) mQuery.c:29 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:71 D.3673 ] [71])
        (nil)))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mQuery.c:29 612 {*jcc_1}
     (nil)
 -> 71)
;;  succ:       9
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 273 {*addsi_1}
     (nil))
(insn 76 75 77 11 (set (reg:SI 0 ax [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:30 89 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:DI 1 dx [orig:72 D.3671 ] [72])
        (sign_extend:DI (reg:SI 0 ax [100]))) mQuery.c:30 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [100])
        (nil)))
(insn 78 77 79 11 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:30 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 11 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.3674 ] [73])
                (plus:DI (reg/f:DI 0 ax [101])
                    (reg:DI 1 dx [orig:72 D.3671 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [101])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.3671 ] [72])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
                    (reg:DI 1 dx [orig:72 D.3671 ] [72]))
                (nil)))))
(insn 80 79 81 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:73 D.3674 ] [73])) mQuery.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.3674 ] [73])
        (nil)))
(call_insn/i 81 80 83 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:30 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 83 81 84 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32])
        (reg:SI 0 ax [102])) mQuery.c:30 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [102])
        (nil)))
(insn 84 83 85 11 (set (reg:DF 21 xmm0 [orig:74 D.3675 ] [74])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32]))) mQuery.c:32 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 85 84 86 11 (set (reg:DF 22 xmm1 [103])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) mQuery.c:32 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 86 85 87 11 (set (reg:DF 22 xmm1 [orig:75 D.3675 ] [75])
        (mult:DF (reg:DF 22 xmm1 [103])
            (reg:DF 21 xmm0 [orig:74 D.3675 ] [74]))) mQuery.c:32 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [103])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:74 D.3675 ] [74])
            (nil))))
(insn 87 86 88 11 (set (reg:DF 21 xmm0 [orig:76 D.3675 ] [76])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32]))) mQuery.c:32 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 88 87 89 11 (set (reg:DF 23 xmm2 [104])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) mQuery.c:32 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 89 88 90 11 (set (reg:DF 21 xmm0 [orig:77 D.3675 ] [77])
        (mult:DF (reg:DF 21 xmm0 [orig:76 D.3675 ] [76])
            (reg:DF 23 xmm2 [104]))) mQuery.c:32 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [104])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:76 D.3675 ] [76])
            (nil))))
(insn 90 89 119 11 (set (reg:DF 22 xmm1 [orig:78 D.3675 ] [78])
        (plus:DF (reg:DF 22 xmm1 [orig:78 D.3675 ] [78])
            (reg:DF 21 xmm0 [orig:77 D.3675 ] [77]))) mQuery.c:32 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:77 D.3675 ] [77])
        (nil)))
(insn 119 90 91 11 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A128])
        (reg:DF 22 xmm1 [orig:78 D.3675 ] [78])) mQuery.c:32 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:78 D.3675 ] [78])
        (nil)))
(insn 91 119 92 11 (set (reg:XF 9 st(1) [orig:79 D.3676 ] [79])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A128]))) mQuery.c:32 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 78 [ D.3675 ])
        (nil)))
(insn 92 91 93 11 (set (reg:XF 8 st [orig:80 D.3676 ] [80])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32]))) mQuery.c:32 256 {*floatsixf2_i387}
     (nil))
(insn 93 92 94 11 (set (reg:XF 9 st(1) [orig:81 D.3676 ] [81])
        (plus:XF (reg:XF 9 st(1) [orig:79 D.3676 ] [79])
            (reg:XF 8 st [orig:80 D.3676 ] [80]))) mQuery.c:32 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:80 D.3676 ] [80])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:79 D.3676 ] [79])
            (nil))))
(insn 94 93 95 11 (set (reg:XF 10 st(2) [orig:82 D.3676 ] [82])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32]))) mQuery.c:32 256 {*floatsixf2_i387}
     (nil))
(insn 95 94 96 11 (set (reg:XF 8 st [105])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mQuery.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 96 95 97 11 (set (reg:XF 8 st [orig:83 D.3676 ] [83])
        (div:XF (reg:XF 10 st(2) [orig:82 D.3676 ] [82])
            (reg:XF 8 st [105]))) mQuery.c:32 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [105])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:82 D.3676 ] [82])
            (nil))))
(insn 97 96 98 11 (set (reg:XF 8 st [106])
        (plus:XF (reg:XF 8 st [orig:83 D.3676 ] [83])
            (reg:XF 9 st(1) [orig:81 D.3676 ] [81]))) mQuery.c:32 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:83 D.3676 ] [83])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:81 D.3676 ] [81])
            (nil))))
(insn 98 97 121 11 (set (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])
        (reg:XF 8 st [106])) mQuery.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [106])
        (nil)))
(insn 121 98 122 11 (set (reg:DI 0 ax)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S8 A128])) mQuery.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 11 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 time+8 S4 A64])) mQuery.c:34 89 {*movsi_internal}
     (nil))
(insn 123 122 124 11 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A128])
        (reg:DI 0 ax)) mQuery.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 120 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S4 A64])
        (reg:SI 1 dx)) mQuery.c:34 89 {*movsi_internal}
     (nil))
(insn 120 124 109 11 (set (reg:XF 8 st [orig:85 <retval> ] [85])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S16 A128])) mQuery.c:34 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 109)
        (nil)))
(insn 109 120 129 11 (use (reg/i:XF 8 st)) mQuery.c:35 -1
     (nil))
(note 129 109 130 11 NOTE_INSN_EPILOGUE_BEG)
(insn/f 130 129 131 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:35 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 131 130 132 11 (simple_return) mQuery.c:35 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 20 [frame]

(barrier 132 131 0)

;; Function _calculate_velocity (_calculate_velocity, funcdef_no=3, decl_uid=3130, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 21 (  1.8)
scanning new insn with uid = 224.
scanning new insn with uid = 225.
scanning new insn with uid = 226.
scanning new insn with uid = 227.
scanning new insn with uid = 230.
scanning new insn with uid = 231.
scanning new insn with uid = 232.
scanning new insn with uid = 233.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 167.
starting the processing of deferred insns
ending the processing of deferred insns


_calculate_velocity

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={86d,84u} r1={48d,54u,18e} r2={5d,2u} r3={4d,4u} r4={5d,3u} r5={5d,3u} r6={3d,52u} r7={7d,22u} r8={6d,6u} r9={5d,3u} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={63d,3u} r18={2d} r19={2d} r20={1d,1u,9e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 584{320d,237u,27e} in 172{170 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
(note 5 1 224 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 224 5 225 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:37 -1
     (nil))
(insn/f 225 224 226 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:37 -1
     (nil))
(insn/f 226 225 227 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mQuery.c:37 -1
     (nil))
(insn/f 227 226 228 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:37 -1
     (nil))
(note 228 227 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 228 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mQuery.c:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mQuery.c:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ Nflight ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 215 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:40 89 {*movsi_internal}
     (nil))
(jump_insn 215 7 216 2 (set (pc)
        (label_ref 192)) mQuery.c:40 650 {jump}
     (nil)
 -> 192)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 216 215 194)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 194 216 10 3 16 "" [1 uses])
(note 10 194 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 217 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:41 89 {*movsi_internal}
     (nil))
(jump_insn 217 11 218 3 (set (pc)
        (label_ref 173)) mQuery.c:41 650 {jump}
     (nil)
 -> 173)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 218 217 187)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 8 [st] 9 [st(1)] 17 [flags]
(code_label 187 218 14 4 15 "" [1 uses])
(note 14 187 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 0 ax [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx [orig:64 D.3678 ] [64])
        (sign_extend:DI (reg:SI 0 ax [134]))) mQuery.c:42 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [134])
        (nil)))
(insn 17 16 18 4 (set (reg:DI 0 ax [135])
        (reg:DI 1 dx [orig:64 D.3678 ] [64])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 0 ax [135])
                (ashift:DI (reg:DI 0 ax [135])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 0 ax [135])
                (plus:DI (reg:DI 0 ax [135])
                    (reg:DI 1 dx [orig:64 D.3678 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.3678 ] [64])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:64 D.3678 ] [64])
                (const_int 5 [0x5]))
            (nil))))
(insn 20 19 22 4 (parallel [
            (set (reg:DI 0 ax [136])
                (ashift:DI (reg:DI 0 ax [135])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [135])
        (nil)))
(insn 22 20 23 4 (set (reg:DI 1 dx [orig:65 D.3678 ] [65])
        (reg:DI 0 ax [135])) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [135])
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.3679 ] [66])
                (plus:DI (reg/f:DI 0 ax [137])
                    (reg:DI 1 dx [orig:65 D.3678 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [137])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.3678 ] [65])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:65 D.3678 ] [65]))
                (nil)))))
(insn 25 24 26 4 (set (reg/f:DI 0 ax [orig:67 D.3681 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:66 D.3679 ] [66])
                (const_int 16 [0x10])) [0 _14->time+0 S8 A128])) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.3679 ] [66])
        (nil)))
(insn 26 25 27 4 (set (reg:SI 1 dx [138])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 1 dx [orig:68 D.3682 ] [68])
        (sign_extend:DI (reg:SI 1 dx [138]))) mQuery.c:42 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [138])
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 1 dx [orig:69 D.3682 ] [69])
                (plus:DI (reg:DI 1 dx [orig:68 D.3682 ] [68])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.3682 ] [68])
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 1 dx [orig:70 D.3682 ] [70])
                (ashift:DI (reg:DI 1 dx [orig:69 D.3682 ] [69])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.3682 ] [69])
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.3681 ] [71])
                (plus:DI (reg/f:DI 0 ax [orig:67 D.3681 ] [67])
                    (reg:DI 1 dx [orig:70 D.3682 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.3682 ] [70])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.3681 ] [67])
            (nil))))
(insn 31 30 32 4 (set (reg:XF 9 st(1) [orig:72 D.3683 ] [72])
        (mem:XF (reg/f:DI 0 ax [orig:71 D.3681 ] [71]) [0 *_19+0 S16 A128])) mQuery.c:42 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.3681 ] [71])
        (nil)))
(insn 32 31 33 4 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 1 dx [orig:73 D.3678 ] [73])
        (sign_extend:DI (reg:SI 0 ax [139]))) mQuery.c:42 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [139])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 0 ax [140])
        (reg:DI 1 dx [orig:73 D.3678 ] [73])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 0 ax [140])
                (ashift:DI (reg:DI 0 ax [140])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 0 ax [140])
                (plus:DI (reg:DI 0 ax [140])
                    (reg:DI 1 dx [orig:73 D.3678 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:73 D.3678 ] [73])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:73 D.3678 ] [73])
                (const_int 5 [0x5]))
            (nil))))
(insn 37 36 39 4 (parallel [
            (set (reg:DI 0 ax [141])
                (ashift:DI (reg:DI 0 ax [140])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [140])
        (nil)))
(insn 39 37 40 4 (set (reg:DI 1 dx [orig:74 D.3678 ] [74])
        (reg:DI 0 ax [140])) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [140])
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg/f:DI 0 ax [orig:75 D.3679 ] [75])
                (plus:DI (reg/f:DI 0 ax [142])
                    (reg:DI 1 dx [orig:74 D.3678 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [142])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.3678 ] [74])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:74 D.3678 ] [74]))
                (nil)))))
(insn 42 41 43 4 (set (reg/f:DI 0 ax [orig:76 D.3681 ] [76])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:75 D.3679 ] [75])
                (const_int 16 [0x10])) [0 _23->time+0 S8 A128])) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.3679 ] [75])
        (nil)))
(insn 43 42 44 4 (set (reg:SI 1 dx [143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 1 dx [orig:77 D.3678 ] [77])
        (sign_extend:DI (reg:SI 1 dx [143]))) mQuery.c:42 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [143])
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 1 dx [orig:78 D.3678 ] [78])
                (ashift:DI (reg:DI 1 dx [orig:77 D.3678 ] [77])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:77 D.3678 ] [77])
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 0 ax [orig:79 D.3681 ] [79])
                (plus:DI (reg/f:DI 0 ax [orig:76 D.3681 ] [76])
                    (reg:DI 1 dx [orig:78 D.3678 ] [78])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:78 D.3678 ] [78])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:76 D.3681 ] [76])
            (nil))))
(insn 47 46 48 4 (set (reg:XF 8 st [orig:80 D.3683 ] [80])
        (mem:XF (reg/f:DI 0 ax [orig:79 D.3681 ] [79]) [0 *_27+0 S16 A128])) mQuery.c:42 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.3681 ] [79])
        (nil)))
(insn 48 47 49 4 (set (reg:XF 8 st [144])
        (minus:XF (reg:XF 9 st(1) [orig:72 D.3683 ] [72])
            (reg:XF 8 st [orig:80 D.3683 ] [80]))) mQuery.c:42 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:80 D.3683 ] [80])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:72 D.3683 ] [72])
            (nil))))
(insn 49 48 50 4 (set (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 t+0 S16 A128])
        (reg:XF 8 st [144])) mQuery.c:42 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [144])
        (nil)))
(insn 50 49 51 4 (set (reg:XF 9 st(1) [145])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 t+0 S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 4 (set (reg:XF 8 st [146])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0000000000000000208166817117216851329430937767028809e-3 [0x0.83126e978d4fep-9])
        (nil)))
(insn 52 51 53 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [145])
            (reg:XF 8 st [146]))) mQuery.c:43 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [146])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [145])
            (nil))))
(jump_insn 53 52 57 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 219)
            (pc))) mQuery.c:43 612 {*jcc_1}
     (nil)
 -> 219)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 57 53 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 5 (set (reg:SI 0 ax [147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:DI 1 dx [orig:81 D.3678 ] [81])
        (sign_extend:DI (reg:SI 0 ax [147]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [147])
        (nil)))
(insn 60 59 61 5 (set (reg:DI 0 ax [148])
        (reg:DI 1 dx [orig:81 D.3678 ] [81])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 5 (parallel [
            (set (reg:DI 0 ax [148])
                (ashift:DI (reg:DI 0 ax [148])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 62 61 63 5 (parallel [
            (set (reg:DI 0 ax [148])
                (plus:DI (reg:DI 0 ax [148])
                    (reg:DI 1 dx [orig:81 D.3678 ] [81])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:81 D.3678 ] [81])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:81 D.3678 ] [81])
                (const_int 5 [0x5]))
            (nil))))
(insn 63 62 65 5 (parallel [
            (set (reg:DI 0 ax [149])
                (ashift:DI (reg:DI 0 ax [148])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [148])
        (nil)))
(insn 65 63 66 5 (set (reg:DI 1 dx [orig:82 D.3678 ] [82])
        (reg:DI 0 ax [148])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [148])
        (nil)))
(insn 66 65 67 5 (set (reg/f:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 5 (parallel [
            (set (reg/f:DI 0 ax [orig:83 D.3679 ] [83])
                (plus:DI (reg/f:DI 0 ax [150])
                    (reg:DI 1 dx [orig:82 D.3678 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [150])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:82 D.3678 ] [82])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:82 D.3678 ] [82]))
                (nil)))))
(insn 68 67 69 5 (set (reg/f:DI 0 ax [orig:84 D.3681 ] [84])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:83 D.3679 ] [83])
                (const_int 24 [0x18])) [0 _32->vel+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 D.3679 ] [83])
        (nil)))
(insn 69 68 70 5 (set (reg:SI 1 dx [151])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 70 69 71 5 (set (reg:DI 1 dx [orig:85 D.3678 ] [85])
        (sign_extend:DI (reg:SI 1 dx [151]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [151])
        (nil)))
(insn 71 70 223 5 (parallel [
            (set (reg:DI 1 dx [orig:86 D.3678 ] [86])
                (ashift:DI (reg:DI 1 dx [orig:85 D.3678 ] [85])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:85 D.3678 ] [85])
        (nil)))
(insn 223 71 73 5 (set (reg/f:DI 3 bx [orig:87 D.3681 ] [87])
        (plus:DI (reg/f:DI 0 ax [orig:84 D.3681 ] [84])
            (reg:DI 1 dx [orig:86 D.3678 ] [86]))) mQuery.c:43 267 {*leadi}
     (nil))
(insn 73 223 74 5 (set (reg:SI 0 ax [152])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 74 73 75 5 (set (reg:DI 1 dx [orig:88 D.3678 ] [88])
        (sign_extend:DI (reg:SI 0 ax [152]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [152])
        (nil)))
(insn 75 74 76 5 (set (reg:DI 0 ax [153])
        (reg:DI 1 dx [orig:88 D.3678 ] [88])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 5 (parallel [
            (set (reg:DI 0 ax [153])
                (ashift:DI (reg:DI 0 ax [153])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 77 76 78 5 (parallel [
            (set (reg:DI 0 ax [153])
                (plus:DI (reg:DI 0 ax [153])
                    (reg:DI 1 dx [orig:88 D.3678 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:88 D.3678 ] [88])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:88 D.3678 ] [88])
                (const_int 5 [0x5]))
            (nil))))
(insn 78 77 80 5 (parallel [
            (set (reg:DI 0 ax [154])
                (ashift:DI (reg:DI 0 ax [153])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [153])
        (nil)))
(insn 80 78 81 5 (set (reg:DI 1 dx [orig:89 D.3678 ] [89])
        (reg:DI 0 ax [153])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [153])
        (nil)))
(insn 81 80 82 5 (set (reg/f:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 5 (parallel [
            (set (reg/f:DI 0 ax [orig:90 D.3679 ] [90])
                (plus:DI (reg/f:DI 0 ax [155])
                    (reg:DI 1 dx [orig:89 D.3678 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [155])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:89 D.3678 ] [89])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:89 D.3678 ] [89]))
                (nil)))))
(insn 83 82 84 5 (set (reg/f:DI 0 ax [orig:91 D.3684 ] [91])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:90 D.3679 ] [90])
                (const_int 8 [0x8])) [0 _39->nvp+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 D.3679 ] [90])
        (nil)))
(insn 84 83 85 5 (set (reg:SI 1 dx [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 85 84 86 5 (set (reg:DI 1 dx [orig:92 D.3682 ] [92])
        (sign_extend:DI (reg:SI 1 dx [156]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [156])
        (nil)))
(insn 86 85 87 5 (parallel [
            (set (reg:DI 1 dx [orig:93 D.3682 ] [93])
                (plus:DI (reg:DI 1 dx [orig:92 D.3682 ] [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:92 D.3682 ] [92])
        (nil)))
(insn 87 86 88 5 (parallel [
            (set (reg:DI 1 dx [orig:94 D.3682 ] [94])
                (ashift:DI (reg:DI 1 dx [orig:93 D.3682 ] [93])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:93 D.3682 ] [93])
        (nil)))
(insn 88 87 89 5 (parallel [
            (set (reg/f:DI 0 ax [orig:95 D.3684 ] [95])
                (plus:DI (reg/f:DI 0 ax [orig:91 D.3684 ] [91])
                    (reg:DI 1 dx [orig:94 D.3682 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:94 D.3682 ] [94])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.3684 ] [91])
            (nil))))
(insn 89 88 90 5 (set (reg/f:DI 2 cx [orig:96 D.3681 ] [96])
        (mem/f:DI (reg/f:DI 0 ax [orig:95 D.3684 ] [95]) [0 *_44+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:95 D.3684 ] [95])
        (nil)))
(insn 90 89 91 5 (set (reg:SI 0 ax [157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 91 90 92 5 (set (reg:DI 1 dx [orig:97 D.3678 ] [97])
        (sign_extend:DI (reg:SI 0 ax [157]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [157])
        (nil)))
(insn 92 91 93 5 (set (reg:DI 0 ax [158])
        (reg:DI 1 dx [orig:97 D.3678 ] [97])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 93 92 94 5 (parallel [
            (set (reg:DI 0 ax [158])
                (ashift:DI (reg:DI 0 ax [158])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 94 93 95 5 (parallel [
            (set (reg:DI 0 ax [158])
                (plus:DI (reg:DI 0 ax [158])
                    (reg:DI 1 dx [orig:97 D.3678 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:97 D.3678 ] [97])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:97 D.3678 ] [97])
                (const_int 5 [0x5]))
            (nil))))
(insn 95 94 97 5 (parallel [
            (set (reg:DI 0 ax [159])
                (ashift:DI (reg:DI 0 ax [158])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [158])
        (nil)))
(insn 97 95 98 5 (set (reg:DI 1 dx [orig:98 D.3678 ] [98])
        (reg:DI 0 ax [158])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [158])
        (nil)))
(insn 98 97 99 5 (set (reg/f:DI 0 ax [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 5 (parallel [
            (set (reg/f:DI 0 ax [orig:99 D.3679 ] [99])
                (plus:DI (reg/f:DI 0 ax [160])
                    (reg:DI 1 dx [orig:98 D.3678 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [160])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:98 D.3678 ] [98])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:98 D.3678 ] [98]))
                (nil)))))
(insn 100 99 101 5 (set (reg/f:DI 0 ax [orig:100 D.3684 ] [100])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:99 D.3679 ] [99])
                (const_int 8 [0x8])) [0 _48->nvp+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:99 D.3679 ] [99])
        (nil)))
(insn 101 100 102 5 (set (reg:SI 1 dx [161])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 102 101 103 5 (set (reg:DI 1 dx [orig:101 D.3678 ] [101])
        (sign_extend:DI (reg:SI 1 dx [161]))) mQuery.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [161])
        (nil)))
(insn 103 102 104 5 (parallel [
            (set (reg:DI 1 dx [orig:102 D.3678 ] [102])
                (ashift:DI (reg:DI 1 dx [orig:101 D.3678 ] [101])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:101 D.3678 ] [101])
        (nil)))
(insn 104 103 105 5 (parallel [
            (set (reg/f:DI 0 ax [orig:103 D.3684 ] [103])
                (plus:DI (reg/f:DI 0 ax [orig:100 D.3684 ] [100])
                    (reg:DI 1 dx [orig:102 D.3678 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:102 D.3678 ] [102])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:100 D.3684 ] [100])
            (nil))))
(insn 105 104 106 5 (set (reg/f:DI 0 ax [orig:104 D.3681 ] [104])
        (mem/f:DI (reg/f:DI 0 ax [orig:103 D.3684 ] [103]) [0 *_52+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:103 D.3684 ] [103])
        (nil)))
(insn 106 105 107 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:96 D.3681 ] [96])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:96 D.3681 ] [96])
        (nil)))
(insn 107 106 108 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:104 D.3681 ] [104])) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:104 D.3681 ] [104])
        (nil)))
(call_insn 108 107 110 5 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:43 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 110 108 111 5 (set (reg:XF 9 st(1) [162])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 t+0 S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 111 110 112 5 (set (reg:XF 8 st [orig:106 D.3683 ] [106])
        (div:XF (reg:XF 8 st [orig:105 D.3683 ] [105])
            (reg:XF 9 st(1) [162]))) mQuery.c:43 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 9 st(1) [162])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:105 D.3683 ] [105])
            (nil))))
(insn 112 111 220 5 (set (mem:XF (reg/f:DI 3 bx [orig:87 D.3681 ] [87]) [0 *_36+0 S16 A128])
        (reg:XF 8 st [orig:106 D.3683 ] [106])) mQuery.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:106 D.3683 ] [106])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:87 D.3681 ] [87])
            (nil))))
(jump_insn 220 112 221 5 (set (pc)
        (label_ref 170)) 650 {jump}
     (nil)
 -> 170)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 221 220 219)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 219 221 116 6 19 "" [1 uses])
(note 116 219 117 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 6 (set (reg:SI 0 ax [163])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 118 117 119 6 (set (reg:DI 1 dx [orig:107 D.3678 ] [107])
        (sign_extend:DI (reg:SI 0 ax [163]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [163])
        (nil)))
(insn 119 118 120 6 (set (reg:DI 0 ax [164])
        (reg:DI 1 dx [orig:107 D.3678 ] [107])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 6 (parallel [
            (set (reg:DI 0 ax [164])
                (ashift:DI (reg:DI 0 ax [164])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 121 120 122 6 (parallel [
            (set (reg:DI 0 ax [164])
                (plus:DI (reg:DI 0 ax [164])
                    (reg:DI 1 dx [orig:107 D.3678 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:107 D.3678 ] [107])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:107 D.3678 ] [107])
                (const_int 5 [0x5]))
            (nil))))
(insn 122 121 124 6 (parallel [
            (set (reg:DI 0 ax [165])
                (ashift:DI (reg:DI 0 ax [164])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [164])
        (nil)))
(insn 124 122 125 6 (set (reg:DI 1 dx [orig:108 D.3678 ] [108])
        (reg:DI 0 ax [164])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [164])
        (nil)))
(insn 125 124 126 6 (set (reg/f:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 6 (parallel [
            (set (reg/f:DI 0 ax [orig:109 D.3679 ] [109])
                (plus:DI (reg/f:DI 0 ax [166])
                    (reg:DI 1 dx [orig:108 D.3678 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [166])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:108 D.3678 ] [108])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:108 D.3678 ] [108]))
                (nil)))))
(insn 127 126 128 6 (set (reg/f:DI 0 ax [orig:110 D.3681 ] [110])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:109 D.3679 ] [109])
                (const_int 24 [0x18])) [0 _58->vel+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.3679 ] [109])
        (nil)))
(insn 128 127 129 6 (set (reg:SI 1 dx [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 129 128 130 6 (set (reg:DI 1 dx [orig:111 D.3678 ] [111])
        (sign_extend:DI (reg:SI 1 dx [167]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [167])
        (nil)))
(insn 130 129 222 6 (parallel [
            (set (reg:DI 1 dx [orig:112 D.3678 ] [112])
                (ashift:DI (reg:DI 1 dx [orig:111 D.3678 ] [111])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:111 D.3678 ] [111])
        (nil)))
(insn 222 130 132 6 (set (reg/f:DI 3 bx [orig:113 D.3681 ] [113])
        (plus:DI (reg/f:DI 0 ax [orig:110 D.3681 ] [110])
            (reg:DI 1 dx [orig:112 D.3678 ] [112]))) mQuery.c:44 267 {*leadi}
     (nil))
(insn 132 222 133 6 (set (reg:SI 0 ax [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 133 132 134 6 (set (reg:DI 1 dx [orig:114 D.3678 ] [114])
        (sign_extend:DI (reg:SI 0 ax [168]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [168])
        (nil)))
(insn 134 133 135 6 (set (reg:DI 0 ax [169])
        (reg:DI 1 dx [orig:114 D.3678 ] [114])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 135 134 136 6 (parallel [
            (set (reg:DI 0 ax [169])
                (ashift:DI (reg:DI 0 ax [169])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 136 135 137 6 (parallel [
            (set (reg:DI 0 ax [169])
                (plus:DI (reg:DI 0 ax [169])
                    (reg:DI 1 dx [orig:114 D.3678 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:114 D.3678 ] [114])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:114 D.3678 ] [114])
                (const_int 5 [0x5]))
            (nil))))
(insn 137 136 139 6 (parallel [
            (set (reg:DI 0 ax [170])
                (ashift:DI (reg:DI 0 ax [169])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [169])
        (nil)))
(insn 139 137 140 6 (set (reg:DI 1 dx [orig:115 D.3678 ] [115])
        (reg:DI 0 ax [169])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [169])
        (nil)))
(insn 140 139 141 6 (set (reg/f:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 6 (parallel [
            (set (reg/f:DI 0 ax [orig:116 D.3679 ] [116])
                (plus:DI (reg/f:DI 0 ax [171])
                    (reg:DI 1 dx [orig:115 D.3678 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [171])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:115 D.3678 ] [115])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:115 D.3678 ] [115]))
                (nil)))))
(insn 142 141 143 6 (set (reg/f:DI 0 ax [orig:117 D.3684 ] [117])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:116 D.3679 ] [116])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:116 D.3679 ] [116])
        (nil)))
(insn 143 142 144 6 (set (reg:SI 1 dx [172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 144 143 145 6 (set (reg:DI 1 dx [orig:118 D.3682 ] [118])
        (sign_extend:DI (reg:SI 1 dx [172]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [172])
        (nil)))
(insn 145 144 146 6 (parallel [
            (set (reg:DI 1 dx [orig:119 D.3682 ] [119])
                (plus:DI (reg:DI 1 dx [orig:118 D.3682 ] [118])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:118 D.3682 ] [118])
        (nil)))
(insn 146 145 147 6 (parallel [
            (set (reg:DI 1 dx [orig:120 D.3682 ] [120])
                (ashift:DI (reg:DI 1 dx [orig:119 D.3682 ] [119])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:119 D.3682 ] [119])
        (nil)))
(insn 147 146 148 6 (parallel [
            (set (reg/f:DI 0 ax [orig:121 D.3684 ] [121])
                (plus:DI (reg/f:DI 0 ax [orig:117 D.3684 ] [117])
                    (reg:DI 1 dx [orig:120 D.3682 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:120 D.3682 ] [120])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:117 D.3684 ] [117])
            (nil))))
(insn 148 147 149 6 (set (reg/f:DI 2 cx [orig:122 D.3681 ] [122])
        (mem/f:DI (reg/f:DI 0 ax [orig:121 D.3684 ] [121]) [0 *_70+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:121 D.3684 ] [121])
        (nil)))
(insn 149 148 150 6 (set (reg:SI 0 ax [173])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 150 149 151 6 (set (reg:DI 1 dx [orig:123 D.3678 ] [123])
        (sign_extend:DI (reg:SI 0 ax [173]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [173])
        (nil)))
(insn 151 150 152 6 (set (reg:DI 0 ax [174])
        (reg:DI 1 dx [orig:123 D.3678 ] [123])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 6 (parallel [
            (set (reg:DI 0 ax [174])
                (ashift:DI (reg:DI 0 ax [174])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 153 152 154 6 (parallel [
            (set (reg:DI 0 ax [174])
                (plus:DI (reg:DI 0 ax [174])
                    (reg:DI 1 dx [orig:123 D.3678 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:123 D.3678 ] [123])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:123 D.3678 ] [123])
                (const_int 5 [0x5]))
            (nil))))
(insn 154 153 156 6 (parallel [
            (set (reg:DI 0 ax [175])
                (ashift:DI (reg:DI 0 ax [174])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [174])
        (nil)))
(insn 156 154 157 6 (set (reg:DI 1 dx [orig:124 D.3678 ] [124])
        (reg:DI 0 ax [174])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [174])
        (nil)))
(insn 157 156 158 6 (set (reg/f:DI 0 ax [176])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 6 (parallel [
            (set (reg/f:DI 0 ax [orig:125 D.3679 ] [125])
                (plus:DI (reg/f:DI 0 ax [176])
                    (reg:DI 1 dx [orig:124 D.3678 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [176])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:124 D.3678 ] [124])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:124 D.3678 ] [124]))
                (nil)))))
(insn 159 158 160 6 (set (reg/f:DI 0 ax [orig:126 D.3684 ] [126])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:125 D.3679 ] [125])
                (const_int 8 [0x8])) [0 _74->nvp+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:125 D.3679 ] [125])
        (nil)))
(insn 160 159 161 6 (set (reg:SI 1 dx [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 161 160 162 6 (set (reg:DI 1 dx [orig:127 D.3678 ] [127])
        (sign_extend:DI (reg:SI 1 dx [177]))) mQuery.c:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [177])
        (nil)))
(insn 162 161 163 6 (parallel [
            (set (reg:DI 1 dx [orig:128 D.3678 ] [128])
                (ashift:DI (reg:DI 1 dx [orig:127 D.3678 ] [127])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:127 D.3678 ] [127])
        (nil)))
(insn 163 162 164 6 (parallel [
            (set (reg/f:DI 0 ax [orig:129 D.3684 ] [129])
                (plus:DI (reg/f:DI 0 ax [orig:126 D.3684 ] [126])
                    (reg:DI 1 dx [orig:128 D.3678 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:128 D.3678 ] [128])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:126 D.3684 ] [126])
            (nil))))
(insn 164 163 165 6 (set (reg/f:DI 0 ax [orig:130 D.3681 ] [130])
        (mem/f:DI (reg/f:DI 0 ax [orig:129 D.3684 ] [129]) [0 *_78+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:129 D.3684 ] [129])
        (nil)))
(insn 165 164 166 6 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:122 D.3681 ] [122])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:122 D.3681 ] [122])
        (nil)))
(insn 166 165 167 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:130 D.3681 ] [130])) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:130 D.3681 ] [130])
        (nil)))
(call_insn 167 166 169 6 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 169 167 170 6 (set (mem:XF (reg/f:DI 3 bx [orig:113 D.3681 ] [113]) [0 *_62+0 S16 A128])
        (reg:XF 8 st [orig:131 D.3683 ] [131])) mQuery.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:131 D.3683 ] [131])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:113 D.3681 ] [113])
            (nil))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 170 169 171 7 14 "" [1 uses])
(note 171 170 172 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 173 172 174 8 11 "" [1 uses])
(note 174 173 175 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 8 (set (reg:SI 0 ax [178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:41 89 {*movsi_internal}
     (nil))
(insn 176 175 177 8 (set (reg:DI 1 dx [orig:59 D.3678 ] [59])
        (sign_extend:DI (reg:SI 0 ax [178]))) mQuery.c:41 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [178])
        (nil)))
(insn 177 176 178 8 (set (reg:DI 0 ax [179])
        (reg:DI 1 dx [orig:59 D.3678 ] [59])) mQuery.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 8 (parallel [
            (set (reg:DI 0 ax [179])
                (ashift:DI (reg:DI 0 ax [179])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 513 {*ashldi3_1}
     (nil))
(insn 179 178 180 8 (parallel [
            (set (reg:DI 0 ax [179])
                (plus:DI (reg:DI 0 ax [179])
                    (reg:DI 1 dx [orig:59 D.3678 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.3678 ] [59])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:59 D.3678 ] [59])
                (const_int 5 [0x5]))
            (nil))))
(insn 180 179 182 8 (parallel [
            (set (reg:DI 0 ax [180])
                (ashift:DI (reg:DI 0 ax [179])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [179])
        (nil)))
(insn 182 180 183 8 (set (reg:DI 1 dx [orig:60 D.3678 ] [60])
        (reg:DI 0 ax [179])) mQuery.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [179])
        (nil)))
(insn 183 182 184 8 (set (reg/f:DI 0 ax [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 flight+0 S8 A64])) mQuery.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 184 183 185 8 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.3679 ] [61])
                (plus:DI (reg/f:DI 0 ax [181])
                    (reg:DI 1 dx [orig:60 D.3678 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [181])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.3678 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.3678 ] [60]))
                (nil)))))
(insn 185 184 186 8 (set (reg:SI 0 ax [orig:62 D.3680 ] [62])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:61 D.3679 ] [61])
                (const_int 4 [0x4])) [0 _9->n_nvp+0 S4 A32])) mQuery.c:41 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.3679 ] [61])
        (nil)))
(insn 186 185 188 8 (parallel [
            (set (reg:SI 0 ax [orig:63 D.3680 ] [63])
                (plus:SI (reg:SI 0 ax [orig:62 D.3680 ] [62])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.3680 ] [62])
        (nil)))
(insn 188 186 189 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:63 D.3680 ] [63])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32]))) mQuery.c:41 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.3680 ] [63])
        (nil)))
(jump_insn 189 188 190 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) mQuery.c:41 612 {*jcc_1}
     (nil)
 -> 187)
;;  succ:       4
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 190 189 191 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:40 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 192 191 193 10 10 "" [1 uses])
(note 193 192 195 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 195 193 196 10 (set (reg:SI 0 ax [182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 i+0 S4 A32])) mQuery.c:40 89 {*movsi_internal}
     (nil))
(insn 196 195 197 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [182])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [0 Nflight+0 S4 A32]))) mQuery.c:40 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [182])
        (nil)))
(jump_insn 197 196 198 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) mQuery.c:40 612 {*jcc_1}
     (nil)
 -> 194)
;;  succ:       3
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
(note 198 197 199 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 209 11 (set (reg:SI 0 ax [orig:132 D.3680 ] [132])
        (const_int 1 [0x1])) mQuery.c:47 89 {*movsi_internal}
     (nil))
(insn 209 199 229 11 (use (reg/i:SI 0 ax)) mQuery.c:48 -1
     (nil))
(note 229 209 230 11 NOTE_INSN_EPILOGUE_BEG)
(insn 230 229 231 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:48 -1
     (nil))
(insn 231 230 232 11 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:48 -1
     (nil))
(insn/f 232 231 233 11 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:48 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 233 232 234 11 (simple_return) mQuery.c:48 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 234 233 0)

;; Function get_M1 (get_M1, funcdef_no=4, decl_uid=1760, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 52 n_edges 75 count 103 (    2)
scanning new insn with uid = 575.
scanning new insn with uid = 576.
scanning new insn with uid = 577.
scanning new insn with uid = 578.
scanning new insn with uid = 581.
scanning new insn with uid = 582.
scanning new insn with uid = 583.
scanning new insn with uid = 584.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 194.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 268.
verify found no changes in insn with uid = 306.
verify found no changes in insn with uid = 333.
verify found no changes in insn with uid = 371.
verify found no changes in insn with uid = 398.
verify found no changes in insn with uid = 430.
verify found no changes in insn with uid = 461.
verify found no changes in insn with uid = 486.
verify found no changes in insn with uid = 521.
verify found no changes in insn with uid = 534.
starting the processing of deferred insns
ending the processing of deferred insns


get_M1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={215d,200u} r1={59d,49u,14e} r2={37d,13u} r3={11d,11u} r4={30d,6u} r5={46d,23u} r6={3d,199u} r7={7d,83u} r8={26d,4u} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={132d,25u} r18={23d} r19={23d} r20={1d,1u} r21={24d,3u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={24d} r38={24d} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} 
;;    total ref usage 2059{1428d,617u,14e} in 406{383 regular + 23 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 6 1 575 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 575 6 576 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:50 -1
     (nil))
(insn/f 576 575 577 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:50 -1
     (nil))
(insn/f 577 576 578 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mQuery.c:50 -1
     (nil))
(insn/f 578 577 579 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -50088 [0xffffffffffff3c58])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:50 -1
     (nil))
(note 579 578 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 579 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50072 [0xffffffffffff3c68])) [0 m1_file+0 S8 A64])
        (reg:DI 5 di [ m1_file ])) mQuery.c:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ m1_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])
        (reg:DI 4 si [ flight ])) mQuery.c:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ flight ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.3695+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [310])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:50 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [310])
        (nil)))
(insn 8 5 9 2 (set (reg:DI 0 ax [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50072 [0xffffffffffff3c68])) [0 m1_file+0 S8 A64])) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [181])) mQuery.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [181])
        (nil)))
(call_insn 11 10 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:54 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 11 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [182])) mQuery.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [182])
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:55 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:55 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8734751e40 *.LC6>)) mQuery.c:55 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:55 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 19 18 20 4 21 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 573 4 (set (reg:DI 1 dx [183])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 573 21 24 4 (set (reg:DI 0 ax [184])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:58 267 {*leadi}
     (nil))
(insn 24 573 25 4 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:58 89 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [184])) mQuery.c:58 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [184])
        (nil)))
(call_insn 26 25 574 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:58 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 574 26 28 4 (set (reg:DI 0 ax [185])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:60 267 {*leadi}
     (nil))
(insn 28 574 29 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [185])) mQuery.c:60 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [185])
        (nil)))
(call_insn/i 29 28 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:60 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 31 29 32 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 Nflight+0 S4 A32])
        (reg:SI 0 ax [186])) mQuery.c:60 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [186])
        (nil)))
(insn 32 31 33 4 (set (reg:SI 0 ax [187])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 Nflight+0 S4 A32])) mQuery.c:64 89 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 1 dx [orig:59 D.3685 ] [59])
        (sign_extend:DI (reg:SI 0 ax [187]))) mQuery.c:64 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [187])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 0 ax [188])
        (reg:DI 1 dx [orig:59 D.3685 ] [59])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 0 ax [188])
                (ashift:DI (reg:DI 0 ax [188])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 0 ax [188])
                (plus:DI (reg:DI 0 ax [188])
                    (reg:DI 1 dx [orig:59 D.3685 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.3685 ] [59])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:59 D.3685 ] [59])
                (const_int 5 [0x5]))
            (nil))))
(insn 37 36 40 4 (parallel [
            (set (reg:DI 0 ax [189])
                (ashift:DI (reg:DI 0 ax [188])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [188])
        (nil)))
(insn 40 37 41 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:60 D.3685 ] [60])) mQuery.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.3685 ] [60])
        (nil)))
(call_insn 41 40 43 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f8734961b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mQuery.c:64 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 43 41 44 4 (set (reg/f:DI 1 dx [orig:61 D.3686 ] [61])
        (reg/f:DI 0 ax [190])) mQuery.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [190])
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 0 ax [191])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 4 (set (mem/f:DI (reg/f:DI 0 ax [191]) [0 *flight_16(D)+0 S8 A64])
        (reg/f:DI 1 dx [orig:61 D.3686 ] [61])) mQuery.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [191])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.3686 ] [61])
            (nil))))
(insn 46 45 542 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:66 89 {*movsi_internal}
     (nil))
(jump_insn 542 46 543 4 (set (pc)
        (label_ref 509)) mQuery.c:66 650 {jump}
     (nil)
 -> 509)
;;  succ:       48 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 543 542 511)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 511 543 49 5 49 "" [1 uses])
(note 49 511 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 572 5 (set (reg:DI 1 dx [192])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 572 50 53 5 (set (reg:DI 0 ax [193])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:67 267 {*leadi}
     (nil))
(insn 53 572 54 5 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:67 89 {*movsi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [193])) mQuery.c:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [193])
        (nil)))
(call_insn 55 54 57 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:67 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 57 55 58 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.3687 ] [62])
            (const_int 0 [0]))) mQuery.c:67 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.3687 ] [62])
        (nil)))
(jump_insn 58 57 59 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mQuery.c:67 612 {*jcc_1}
     (nil)
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8734751ed8 *.LC7>)) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(call_insn 61 60 62 6 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:67 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 62 61 63 7 23 "" [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg/f:DI 0 ax [194])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 7 (set (reg/f:DI 2 cx [orig:63 D.3688 ] [63])
        (mem/f:DI (reg/f:DI 0 ax [194]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:69 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [194])
        (nil)))
(insn 66 65 67 7 (set (reg:SI 0 ax [195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:69 89 {*movsi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 1 dx [orig:64 D.3685 ] [64])
        (sign_extend:DI (reg:SI 0 ax [195]))) mQuery.c:69 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [195])
        (nil)))
(insn 68 67 69 7 (set (reg:DI 0 ax [196])
        (reg:DI 1 dx [orig:64 D.3685 ] [64])) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:DI 0 ax [196])
                (ashift:DI (reg:DI 0 ax [196])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 513 {*ashldi3_1}
     (nil))
(insn 70 69 71 7 (parallel [
            (set (reg:DI 0 ax [196])
                (plus:DI (reg:DI 0 ax [196])
                    (reg:DI 1 dx [orig:64 D.3685 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.3685 ] [64])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:64 D.3685 ] [64])
                (const_int 5 [0x5]))
            (nil))))
(insn 71 70 570 7 (parallel [
            (set (reg:DI 0 ax [197])
                (ashift:DI (reg:DI 0 ax [196])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [196])
        (nil)))
(insn 570 71 571 7 (set (reg/f:DI 3 bx [orig:66 D.3688 ] [66])
        (plus:DI (reg/f:DI 2 cx [orig:63 D.3688 ] [63])
            (reg:DI 0 ax [orig:65 D.3685 ] [65]))) mQuery.c:69 267 {*leadi}
     (nil))
(insn 571 570 76 7 (set (reg:DI 0 ax [198])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:69 267 {*leadi}
     (nil))
(insn 76 571 77 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [198])) mQuery.c:69 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [198])
        (nil)))
(call_insn/i 77 76 79 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:69 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 79 77 80 7 (set (mem/j:SI (reg/f:DI 3 bx [orig:66 D.3688 ] [66]) [0 _22->ID+0 S4 A128])
        (reg:SI 0 ax [orig:67 D.3689 ] [67])) mQuery.c:69 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.3689 ] [67])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:66 D.3688 ] [66])
            (nil))))
(insn 80 79 544 7 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mQuery.c:70 89 {*movsi_internal}
     (nil))
(jump_insn 544 80 545 7 (set (pc)
        (label_ref 85)) mQuery.c:70 650 {jump}
     (nil)
 -> 85)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 545 544 90)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 90 545 83 8 25 "" [1 uses])
(note 83 90 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:70 273 {*addsi_1}
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 85 84 86 9 24 "" [1 uses])
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg:SI 0 ax [200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:70 89 {*movsi_internal}
     (nil))
(insn 88 87 89 9 (set (reg:DI 0 ax [199])
        (sign_extend:DI (reg:SI 0 ax [200]))) mQuery.c:70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [200])
        (nil)))
(insn 89 88 91 9 (set (reg:QI 0 ax [orig:68 D.3690 ] [68])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [199]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:70 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [199])
        (nil)))
(insn 91 89 92 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:68 D.3690 ] [68])
            (const_int 9 [0x9]))) mQuery.c:70 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.3690 ] [68])
        (nil)))
(jump_insn 92 91 93 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mQuery.c:70 612 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 93 92 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg/f:DI 0 ax [201])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 10 (set (reg/f:DI 2 cx [orig:69 D.3688 ] [69])
        (mem/f:DI (reg/f:DI 0 ax [201]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [201])
        (nil)))
(insn 96 95 97 10 (set (reg:SI 0 ax [202])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (set (reg:DI 1 dx [orig:70 D.3685 ] [70])
        (sign_extend:DI (reg:SI 0 ax [202]))) mQuery.c:72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [202])
        (nil)))
(insn 98 97 99 10 (set (reg:DI 0 ax [203])
        (reg:DI 1 dx [orig:70 D.3685 ] [70])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 10 (parallel [
            (set (reg:DI 0 ax [203])
                (ashift:DI (reg:DI 0 ax [203])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 513 {*ashldi3_1}
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 0 ax [203])
                (plus:DI (reg:DI 0 ax [203])
                    (reg:DI 1 dx [orig:70 D.3685 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.3685 ] [70])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:70 D.3685 ] [70])
                (const_int 5 [0x5]))
            (nil))))
(insn 101 100 565 10 (parallel [
            (set (reg:DI 0 ax [204])
                (ashift:DI (reg:DI 0 ax [203])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [203])
        (nil)))
(insn 565 101 105 10 (set (reg/f:DI 3 bx [orig:72 D.3688 ] [72])
        (plus:DI (reg/f:DI 2 cx [orig:69 D.3688 ] [69])
            (reg:DI 0 ax [orig:71 D.3685 ] [71]))) mQuery.c:72 267 {*leadi}
     (nil))
(insn 105 565 566 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 273 {*addsi_1}
     (nil))
(insn 566 105 107 10 (set (reg:DI 1 dx [205])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:72 267 {*leadi}
     (nil))
(insn 107 566 108 10 (set (reg:SI 0 ax [207])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 108 107 109 10 (set (reg:DI 0 ax [206])
        (sign_extend:DI (reg:SI 0 ax [207]))) mQuery.c:72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [207])
        (nil)))
(insn 109 108 110 10 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.3687 ] [73])
                (plus:DI (reg:DI 0 ax [206])
                    (reg:DI 1 dx [205])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [206])
        (expr_list:REG_DEAD (reg:DI 1 dx [205])
            (nil))))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:73 D.3687 ] [73])) mQuery.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.3687 ] [73])
        (nil)))
(call_insn/i 111 110 113 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:72 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 113 111 114 10 (set (mem/j:SI (plus:DI (reg/f:DI 3 bx [orig:72 D.3688 ] [72])
                (const_int 4 [0x4])) [0 _30->n_nvp+0 S4 A32])
        (reg:SI 0 ax [orig:74 D.3689 ] [74])) mQuery.c:72 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:74 D.3689 ] [74])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:72 D.3688 ] [72])
            (nil))))
(insn 114 113 115 10 (set (reg/f:DI 0 ax [208])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 115 114 116 10 (set (reg/f:DI 2 cx [orig:75 D.3688 ] [75])
        (mem/f:DI (reg/f:DI 0 ax [208]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [208])
        (nil)))
(insn 116 115 117 10 (set (reg:SI 0 ax [209])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 117 116 118 10 (set (reg:DI 1 dx [orig:76 D.3685 ] [76])
        (sign_extend:DI (reg:SI 0 ax [209]))) mQuery.c:74 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [209])
        (nil)))
(insn 118 117 119 10 (set (reg:DI 0 ax [210])
        (reg:DI 1 dx [orig:76 D.3685 ] [76])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 10 (parallel [
            (set (reg:DI 0 ax [210])
                (ashift:DI (reg:DI 0 ax [210])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 120 119 121 10 (parallel [
            (set (reg:DI 0 ax [210])
                (plus:DI (reg:DI 0 ax [210])
                    (reg:DI 1 dx [orig:76 D.3685 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:76 D.3685 ] [76])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:76 D.3685 ] [76])
                (const_int 5 [0x5]))
            (nil))))
(insn 121 120 567 10 (parallel [
            (set (reg:DI 0 ax [211])
                (ashift:DI (reg:DI 0 ax [210])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [210])
        (nil)))
(insn 567 121 125 10 (set (reg/f:DI 3 bx [orig:78 D.3688 ] [78])
        (plus:DI (reg/f:DI 2 cx [orig:75 D.3688 ] [75])
            (reg:DI 0 ax [orig:77 D.3685 ] [77]))) mQuery.c:74 267 {*leadi}
     (nil))
(insn 125 567 126 10 (set (reg/f:DI 0 ax [212])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 10 (set (reg/f:DI 2 cx [orig:79 D.3688 ] [79])
        (mem/f:DI (reg/f:DI 0 ax [212]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [212])
        (nil)))
(insn 127 126 128 10 (set (reg:SI 0 ax [213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 128 127 129 10 (set (reg:DI 1 dx [orig:80 D.3685 ] [80])
        (sign_extend:DI (reg:SI 0 ax [213]))) mQuery.c:74 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [213])
        (nil)))
(insn 129 128 130 10 (set (reg:DI 0 ax [214])
        (reg:DI 1 dx [orig:80 D.3685 ] [80])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 10 (parallel [
            (set (reg:DI 0 ax [214])
                (ashift:DI (reg:DI 0 ax [214])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 131 130 132 10 (parallel [
            (set (reg:DI 0 ax [214])
                (plus:DI (reg:DI 0 ax [214])
                    (reg:DI 1 dx [orig:80 D.3685 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:80 D.3685 ] [80])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:80 D.3685 ] [80])
                (const_int 5 [0x5]))
            (nil))))
(insn 132 131 135 10 (parallel [
            (set (reg:DI 0 ax [215])
                (ashift:DI (reg:DI 0 ax [214])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [214])
        (nil)))
(insn 135 132 136 10 (parallel [
            (set (reg/f:DI 0 ax [orig:82 D.3688 ] [82])
                (plus:DI (reg:DI 0 ax [orig:81 D.3685 ] [81])
                    (reg/f:DI 2 cx [orig:79 D.3688 ] [79])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:81 D.3685 ] [81])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:79 D.3688 ] [79])
            (nil))))
(insn 136 135 137 10 (set (reg:SI 0 ax [orig:83 D.3689 ] [83])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:82 D.3688 ] [82])
                (const_int 4 [0x4])) [0 _41->n_nvp+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.3688 ] [82])
        (nil)))
(insn 137 136 138 10 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 138 137 139 10 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:83 D.3689 ] [83])) mQuery.c:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:83 D.3689 ] [83])
        (nil)))
(call_insn 139 138 141 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 141 139 142 10 (set (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:78 D.3688 ] [78])
                (const_int 8 [0x8])) [0 _37->nvp+0 S8 A64])
        (reg/f:DI 0 ax [orig:84 D.3691 ] [84])) mQuery.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 D.3691 ] [84])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:78 D.3688 ] [78])
            (nil))))
(insn 142 141 143 10 (set (reg/f:DI 0 ax [216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 10 (set (reg/f:DI 2 cx [orig:85 D.3688 ] [85])
        (mem/f:DI (reg/f:DI 0 ax [216]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [216])
        (nil)))
(insn 144 143 145 10 (set (reg:SI 0 ax [217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(insn 145 144 146 10 (set (reg:DI 1 dx [orig:86 D.3685 ] [86])
        (sign_extend:DI (reg:SI 0 ax [217]))) mQuery.c:75 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [217])
        (nil)))
(insn 146 145 147 10 (set (reg:DI 0 ax [218])
        (reg:DI 1 dx [orig:86 D.3685 ] [86])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 10 (parallel [
            (set (reg:DI 0 ax [218])
                (ashift:DI (reg:DI 0 ax [218])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 148 147 149 10 (parallel [
            (set (reg:DI 0 ax [218])
                (plus:DI (reg:DI 0 ax [218])
                    (reg:DI 1 dx [orig:86 D.3685 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:86 D.3685 ] [86])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:86 D.3685 ] [86])
                (const_int 5 [0x5]))
            (nil))))
(insn 149 148 568 10 (parallel [
            (set (reg:DI 0 ax [219])
                (ashift:DI (reg:DI 0 ax [218])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [218])
        (nil)))
(insn 568 149 153 10 (set (reg/f:DI 3 bx [orig:88 D.3688 ] [88])
        (plus:DI (reg/f:DI 2 cx [orig:85 D.3688 ] [85])
            (reg:DI 0 ax [orig:87 D.3685 ] [87]))) mQuery.c:75 267 {*leadi}
     (nil))
(insn 153 568 154 10 (set (reg/f:DI 0 ax [220])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 154 153 155 10 (set (reg/f:DI 2 cx [orig:89 D.3688 ] [89])
        (mem/f:DI (reg/f:DI 0 ax [220]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [220])
        (nil)))
(insn 155 154 156 10 (set (reg:SI 0 ax [221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(insn 156 155 157 10 (set (reg:DI 1 dx [orig:90 D.3685 ] [90])
        (sign_extend:DI (reg:SI 0 ax [221]))) mQuery.c:75 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [221])
        (nil)))
(insn 157 156 158 10 (set (reg:DI 0 ax [222])
        (reg:DI 1 dx [orig:90 D.3685 ] [90])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 10 (parallel [
            (set (reg:DI 0 ax [222])
                (ashift:DI (reg:DI 0 ax [222])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 159 158 160 10 (parallel [
            (set (reg:DI 0 ax [222])
                (plus:DI (reg:DI 0 ax [222])
                    (reg:DI 1 dx [orig:90 D.3685 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:90 D.3685 ] [90])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:90 D.3685 ] [90])
                (const_int 5 [0x5]))
            (nil))))
(insn 160 159 163 10 (parallel [
            (set (reg:DI 0 ax [223])
                (ashift:DI (reg:DI 0 ax [222])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [222])
        (nil)))
(insn 163 160 164 10 (parallel [
            (set (reg/f:DI 0 ax [orig:92 D.3688 ] [92])
                (plus:DI (reg:DI 0 ax [orig:91 D.3685 ] [91])
                    (reg/f:DI 2 cx [orig:89 D.3688 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:91 D.3685 ] [91])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:89 D.3688 ] [89])
            (nil))))
(insn 164 163 165 10 (set (reg:SI 0 ax [orig:93 D.3689 ] [93])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:92 D.3688 ] [92])
                (const_int 4 [0x4])) [0 _51->n_nvp+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.3688 ] [92])
        (nil)))
(insn 165 164 166 10 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:93 D.3689 ] [93])) mQuery.c:75 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:93 D.3689 ] [93])
        (nil)))
(call_insn 166 165 168 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:75 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 168 166 169 10 (set (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:88 D.3688 ] [88])
                (const_int 16 [0x10])) [0 _47->time+0 S8 A128])
        (reg/f:DI 0 ax [orig:94 D.3692 ] [94])) mQuery.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:94 D.3692 ] [94])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:88 D.3688 ] [88])
            (nil))))
(insn 169 168 170 10 (set (reg/f:DI 0 ax [224])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 170 169 171 10 (set (reg/f:DI 2 cx [orig:95 D.3688 ] [95])
        (mem/f:DI (reg/f:DI 0 ax [224]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [224])
        (nil)))
(insn 171 170 172 10 (set (reg:SI 0 ax [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(insn 172 171 173 10 (set (reg:DI 1 dx [orig:96 D.3685 ] [96])
        (sign_extend:DI (reg:SI 0 ax [225]))) mQuery.c:76 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [225])
        (nil)))
(insn 173 172 174 10 (set (reg:DI 0 ax [226])
        (reg:DI 1 dx [orig:96 D.3685 ] [96])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 174 173 175 10 (parallel [
            (set (reg:DI 0 ax [226])
                (ashift:DI (reg:DI 0 ax [226])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 175 174 176 10 (parallel [
            (set (reg:DI 0 ax [226])
                (plus:DI (reg:DI 0 ax [226])
                    (reg:DI 1 dx [orig:96 D.3685 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:96 D.3685 ] [96])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:96 D.3685 ] [96])
                (const_int 5 [0x5]))
            (nil))))
(insn 176 175 569 10 (parallel [
            (set (reg:DI 0 ax [227])
                (ashift:DI (reg:DI 0 ax [226])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [226])
        (nil)))
(insn 569 176 180 10 (set (reg/f:DI 3 bx [orig:98 D.3688 ] [98])
        (plus:DI (reg/f:DI 2 cx [orig:95 D.3688 ] [95])
            (reg:DI 0 ax [orig:97 D.3685 ] [97]))) mQuery.c:76 267 {*leadi}
     (nil))
(insn 180 569 181 10 (set (reg/f:DI 0 ax [228])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 181 180 182 10 (set (reg/f:DI 2 cx [orig:99 D.3688 ] [99])
        (mem/f:DI (reg/f:DI 0 ax [228]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [228])
        (nil)))
(insn 182 181 183 10 (set (reg:SI 0 ax [229])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(insn 183 182 184 10 (set (reg:DI 1 dx [orig:100 D.3685 ] [100])
        (sign_extend:DI (reg:SI 0 ax [229]))) mQuery.c:76 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [229])
        (nil)))
(insn 184 183 185 10 (set (reg:DI 0 ax [230])
        (reg:DI 1 dx [orig:100 D.3685 ] [100])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 185 184 186 10 (parallel [
            (set (reg:DI 0 ax [230])
                (ashift:DI (reg:DI 0 ax [230])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 186 185 187 10 (parallel [
            (set (reg:DI 0 ax [230])
                (plus:DI (reg:DI 0 ax [230])
                    (reg:DI 1 dx [orig:100 D.3685 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:100 D.3685 ] [100])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:100 D.3685 ] [100])
                (const_int 5 [0x5]))
            (nil))))
(insn 187 186 190 10 (parallel [
            (set (reg:DI 0 ax [231])
                (ashift:DI (reg:DI 0 ax [230])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [230])
        (nil)))
(insn 190 187 191 10 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.3688 ] [102])
                (plus:DI (reg:DI 0 ax [orig:101 D.3685 ] [101])
                    (reg/f:DI 2 cx [orig:99 D.3688 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:101 D.3685 ] [101])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:99 D.3688 ] [99])
            (nil))))
(insn 191 190 192 10 (set (reg:SI 0 ax [orig:103 D.3689 ] [103])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:102 D.3688 ] [102])
                (const_int 4 [0x4])) [0 _61->n_nvp+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 D.3688 ] [102])
        (nil)))
(insn 192 191 193 10 (parallel [
            (set (reg:SI 0 ax [orig:104 D.3689 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 D.3689 ] [103])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:103 D.3689 ] [103])
        (nil)))
(insn 193 192 194 10 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:104 D.3689 ] [104])) mQuery.c:76 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:104 D.3689 ] [104])
        (nil)))
(call_insn 194 193 196 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:76 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 196 194 197 10 (set (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:98 D.3688 ] [98])
                (const_int 24 [0x18])) [0 _57->vel+0 S8 A64])
        (reg/f:DI 0 ax [orig:105 D.3692 ] [105])) mQuery.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:105 D.3692 ] [105])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:98 D.3688 ] [98])
            (nil))))
(insn 197 196 546 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])
        (const_int 0 [0])) mQuery.c:78 89 {*movsi_internal}
     (nil))
(jump_insn 546 197 547 10 (set (pc)
        (label_ref 490)) mQuery.c:78 650 {jump}
     (nil)
 -> 490)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 547 546 504)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 504 547 200 11 48 "" [1 uses])
(note 200 504 201 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 548 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 273 {*addsi_1}
     (nil))
(jump_insn 548 201 549 11 (set (pc)
        (label_ref 206)) mQuery.c:79 650 {jump}
     (nil)
 -> 206)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 549 548 223)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 223 549 204 12 29 "" [1 uses])
(note 204 223 205 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 206 205 207 13 27 "" [1 uses])
(note 207 206 208 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 13 (set (reg:SI 0 ax [233])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 209 208 210 13 (set (reg:DI 0 ax [232])
        (sign_extend:DI (reg:SI 0 ax [233]))) mQuery.c:79 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [233])
        (nil)))
(insn 210 209 211 13 (set (reg:QI 0 ax [orig:111 D.3690 ] [111])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [232]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [232])
        (nil)))
(insn 211 210 212 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:111 D.3690 ] [111])
            (const_int 9 [0x9]))) mQuery.c:79 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:111 D.3690 ] [111])
        (nil)))
(jump_insn 212 211 213 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       14 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 213 212 214 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 14 (set (reg:SI 0 ax [235])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 215 214 216 14 (set (reg:DI 0 ax [234])
        (sign_extend:DI (reg:SI 0 ax [235]))) mQuery.c:79 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [235])
        (nil)))
(insn 216 215 217 14 (set (reg:QI 0 ax [orig:112 D.3690 ] [112])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [234]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [234])
        (nil)))
(insn 217 216 218 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:112 D.3690 ] [112])
            (const_int 0 [0]))) mQuery.c:79 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:112 D.3690 ] [112])
        (nil)))
(jump_insn 218 217 219 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 219 218 220 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 15 (set (reg:SI 0 ax [237])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 221 220 222 15 (set (reg:DI 0 ax [236])
        (sign_extend:DI (reg:SI 0 ax [237]))) mQuery.c:79 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [237])
        (nil)))
(insn 222 221 224 15 (set (reg:QI 0 ax [orig:113 D.3690 ] [113])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [236]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [236])
        (nil)))
(insn 224 222 225 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:113 D.3690 ] [113])
            (const_int 10 [0xa]))) mQuery.c:79 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:113 D.3690 ] [113])
        (nil)))
(jump_insn 225 224 226 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 223)
;;  succ:       12
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 226 225 227 16 28 "" [2 uses])
(note 227 226 228 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 16 (set (reg:SI 0 ax [239])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:80 89 {*movsi_internal}
     (nil))
(insn 229 228 230 16 (set (reg:DI 0 ax [238])
        (sign_extend:DI (reg:SI 0 ax [239]))) mQuery.c:80 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [239])
        (nil)))
(insn 230 229 231 16 (set (reg:QI 0 ax [orig:114 D.3690 ] [114])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [238]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:80 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [238])
        (nil)))
(insn 231 230 232 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:114 D.3690 ] [114])
            (const_int 0 [0]))) mQuery.c:80 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:114 D.3690 ] [114])
        (nil)))
(jump_insn 232 231 233 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) mQuery.c:80 612 {*jcc_1}
     (nil)
 -> 239)
;;  succ:       18
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 233 232 234 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 17 (set (reg:SI 0 ax [241])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:80 89 {*movsi_internal}
     (nil))
(insn 235 234 236 17 (set (reg:DI 0 ax [240])
        (sign_extend:DI (reg:SI 0 ax [241]))) mQuery.c:80 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [241])
        (nil)))
(insn 236 235 237 17 (set (reg:QI 0 ax [orig:115 D.3690 ] [115])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [240]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:80 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [240])
        (nil)))
(insn 237 236 238 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:115 D.3690 ] [115])
            (const_int 10 [0xa]))) mQuery.c:80 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:115 D.3690 ] [115])
        (nil)))
(jump_insn 238 237 239 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) mQuery.c:80 612 {*jcc_1}
     (nil)
 -> 243)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 239 238 240 18 30 "" [1 uses])
(note 240 239 241 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f873475f000 *.LC8>)) mQuery.c:80 87 {*movdi_internal_rex64}
     (nil))
(call_insn 242 241 243 18 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:80 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 243 242 244 19 31 "" [1 uses])
(note 244 243 245 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 19 (set (reg/f:DI 0 ax [242])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 246 245 247 19 (set (reg/f:DI 2 cx [orig:116 D.3688 ] [116])
        (mem/f:DI (reg/f:DI 0 ax [242]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [242])
        (nil)))
(insn 247 246 248 19 (set (reg:SI 0 ax [243])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 248 247 249 19 (set (reg:DI 1 dx [orig:117 D.3685 ] [117])
        (sign_extend:DI (reg:SI 0 ax [243]))) mQuery.c:81 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [243])
        (nil)))
(insn 249 248 250 19 (set (reg:DI 0 ax [244])
        (reg:DI 1 dx [orig:117 D.3685 ] [117])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 19 (parallel [
            (set (reg:DI 0 ax [244])
                (ashift:DI (reg:DI 0 ax [244])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (nil))
(insn 251 250 252 19 (parallel [
            (set (reg:DI 0 ax [244])
                (plus:DI (reg:DI 0 ax [244])
                    (reg:DI 1 dx [orig:117 D.3685 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:117 D.3685 ] [117])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:117 D.3685 ] [117])
                (const_int 5 [0x5]))
            (nil))))
(insn 252 251 255 19 (parallel [
            (set (reg:DI 0 ax [245])
                (ashift:DI (reg:DI 0 ax [244])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [244])
        (nil)))
(insn 255 252 256 19 (parallel [
            (set (reg/f:DI 0 ax [orig:119 D.3688 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 D.3685 ] [118])
                    (reg/f:DI 2 cx [orig:116 D.3688 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:118 D.3685 ] [118])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:116 D.3688 ] [116])
            (nil))))
(insn 256 255 257 19 (set (reg/f:DI 0 ax [orig:120 D.3691 ] [120])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:119 D.3688 ] [119])
                (const_int 8 [0x8])) [0 _81->nvp+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:119 D.3688 ] [119])
        (nil)))
(insn 257 256 258 19 (set (reg:SI 1 dx [246])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 258 257 259 19 (set (reg:DI 1 dx [orig:121 D.3685 ] [121])
        (sign_extend:DI (reg:SI 1 dx [246]))) mQuery.c:81 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [246])
        (nil)))
(insn 259 258 260 19 (parallel [
            (set (reg:DI 1 dx [orig:122 D.3685 ] [122])
                (ashift:DI (reg:DI 1 dx [orig:121 D.3685 ] [121])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:121 D.3685 ] [121])
        (nil)))
(insn 260 259 261 19 (parallel [
            (set (reg/f:DI 0 ax [orig:123 D.3691 ] [123])
                (plus:DI (reg/f:DI 0 ax [orig:120 D.3691 ] [120])
                    (reg:DI 1 dx [orig:122 D.3685 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:122 D.3685 ] [122])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:120 D.3691 ] [120])
            (nil))))
(insn 261 260 262 19 (set (reg/f:DI 3 bx [orig:124 D.3692 ] [124])
        (mem/f:DI (reg/f:DI 0 ax [orig:123 D.3691 ] [123]) [0 *_85+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:123 D.3691 ] [123])
        (nil)))
(insn 262 261 564 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 273 {*addsi_1}
     (nil))
(insn 564 262 264 19 (set (reg:DI 1 dx [247])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:81 267 {*leadi}
     (nil))
(insn 264 564 265 19 (set (reg:SI 0 ax [249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 265 264 266 19 (set (reg:DI 0 ax [248])
        (sign_extend:DI (reg:SI 0 ax [249]))) mQuery.c:81 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [249])
        (nil)))
(insn 266 265 267 19 (parallel [
            (set (reg/f:DI 0 ax [orig:125 D.3687 ] [125])
                (plus:DI (reg:DI 0 ax [248])
                    (reg:DI 1 dx [247])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [248])
        (expr_list:REG_DEAD (reg:DI 1 dx [247])
            (nil))))
(insn 267 266 268 19 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:125 D.3687 ] [125])) mQuery.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:125 D.3687 ] [125])
        (nil)))
(call_insn/i 268 267 269 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:81 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 269 268 270 19 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:81 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 270 269 271 19 (set (reg:XF 8 st [orig:127 D.3694 ] [127])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64]))) mQuery.c:81 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 126 [ D.3693 ])
        (nil)))
(insn 271 270 272 19 (set (mem:XF (reg/f:DI 3 bx [orig:124 D.3692 ] [124]) [0 *_86+0 S16 A128])
        (reg:XF 8 st [orig:127 D.3694 ] [127])) mQuery.c:81 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:127 D.3694 ] [127])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:124 D.3692 ] [124])
            (nil))))
(insn 272 271 550 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 273 {*addsi_1}
     (nil))
(jump_insn 550 272 551 19 (set (pc)
        (label_ref 277)) mQuery.c:83 650 {jump}
     (nil)
 -> 277)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 551 550 294)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 294 551 275 20 34 "" [1 uses])
(note 275 294 276 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 273 {*addsi_1}
     (nil))
;;  succ:       21 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU,DFS_BACK)
;;              19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 277 276 278 21 32 "" [1 uses])
(note 278 277 279 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 21 (set (reg:SI 0 ax [251])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 280 279 281 21 (set (reg:DI 0 ax [250])
        (sign_extend:DI (reg:SI 0 ax [251]))) mQuery.c:83 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [251])
        (nil)))
(insn 281 280 282 21 (set (reg:QI 0 ax [orig:128 D.3690 ] [128])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [250]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [250])
        (nil)))
(insn 282 281 283 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:128 D.3690 ] [128])
            (const_int 44 [0x2c]))) mQuery.c:83 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:128 D.3690 ] [128])
        (nil)))
(jump_insn 283 282 284 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       22 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 284 283 285 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 22 (set (reg:SI 0 ax [253])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 286 285 287 22 (set (reg:DI 0 ax [252])
        (sign_extend:DI (reg:SI 0 ax [253]))) mQuery.c:83 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [253])
        (nil)))
(insn 287 286 288 22 (set (reg:QI 0 ax [orig:129 D.3690 ] [129])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [252]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [252])
        (nil)))
(insn 288 287 289 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:129 D.3690 ] [129])
            (const_int 0 [0]))) mQuery.c:83 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:129 D.3690 ] [129])
        (nil)))
(jump_insn 289 288 290 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 290 289 291 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 23 (set (reg:SI 0 ax [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 292 291 293 23 (set (reg:DI 0 ax [254])
        (sign_extend:DI (reg:SI 0 ax [255]))) mQuery.c:83 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [255])
        (nil)))
(insn 293 292 295 23 (set (reg:QI 0 ax [orig:130 D.3690 ] [130])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [254]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [254])
        (nil)))
(insn 295 293 296 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:130 D.3690 ] [130])
            (const_int 10 [0xa]))) mQuery.c:83 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:130 D.3690 ] [130])
        (nil)))
(jump_insn 296 295 297 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 294)
;;  succ:       20
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              22
;;              23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 297 296 298 24 33 "" [2 uses])
(note 298 297 299 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 24 (set (reg:SI 0 ax [257])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:84 89 {*movsi_internal}
     (nil))
(insn 300 299 301 24 (set (reg:DI 0 ax [256])
        (sign_extend:DI (reg:SI 0 ax [257]))) mQuery.c:84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [257])
        (nil)))
(insn 301 300 302 24 (set (reg:QI 0 ax [orig:131 D.3690 ] [131])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [256]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:84 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [256])
        (nil)))
(insn 302 301 303 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:131 D.3690 ] [131])
            (const_int 0 [0]))) mQuery.c:84 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:131 D.3690 ] [131])
        (nil)))
(jump_insn 303 302 304 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) mQuery.c:84 612 {*jcc_1}
     (nil)
 -> 307)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 304 303 305 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f873475f098 *.LC9>)) mQuery.c:84 87 {*movdi_internal_rex64}
     (nil))
(call_insn 306 305 307 25 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:84 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 307 306 308 26 35 "" [1 uses])
(note 308 307 309 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 26 (set (reg/f:DI 0 ax [258])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 310 309 311 26 (set (reg/f:DI 2 cx [orig:132 D.3688 ] [132])
        (mem/f:DI (reg/f:DI 0 ax [258]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [258])
        (nil)))
(insn 311 310 312 26 (set (reg:SI 0 ax [259])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 312 311 313 26 (set (reg:DI 1 dx [orig:133 D.3685 ] [133])
        (sign_extend:DI (reg:SI 0 ax [259]))) mQuery.c:85 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [259])
        (nil)))
(insn 313 312 314 26 (set (reg:DI 0 ax [260])
        (reg:DI 1 dx [orig:133 D.3685 ] [133])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 314 313 315 26 (parallel [
            (set (reg:DI 0 ax [260])
                (ashift:DI (reg:DI 0 ax [260])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (nil))
(insn 315 314 316 26 (parallel [
            (set (reg:DI 0 ax [260])
                (plus:DI (reg:DI 0 ax [260])
                    (reg:DI 1 dx [orig:133 D.3685 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:133 D.3685 ] [133])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:133 D.3685 ] [133])
                (const_int 5 [0x5]))
            (nil))))
(insn 316 315 319 26 (parallel [
            (set (reg:DI 0 ax [261])
                (ashift:DI (reg:DI 0 ax [260])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [260])
        (nil)))
(insn 319 316 320 26 (parallel [
            (set (reg/f:DI 0 ax [orig:135 D.3688 ] [135])
                (plus:DI (reg:DI 0 ax [orig:134 D.3685 ] [134])
                    (reg/f:DI 2 cx [orig:132 D.3688 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:134 D.3685 ] [134])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:132 D.3688 ] [132])
            (nil))))
(insn 320 319 321 26 (set (reg/f:DI 0 ax [orig:136 D.3691 ] [136])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:135 D.3688 ] [135])
                (const_int 8 [0x8])) [0 _100->nvp+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:135 D.3688 ] [135])
        (nil)))
(insn 321 320 322 26 (set (reg:SI 1 dx [262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 322 321 323 26 (set (reg:DI 1 dx [orig:137 D.3685 ] [137])
        (sign_extend:DI (reg:SI 1 dx [262]))) mQuery.c:85 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [262])
        (nil)))
(insn 323 322 324 26 (parallel [
            (set (reg:DI 1 dx [orig:138 D.3685 ] [138])
                (ashift:DI (reg:DI 1 dx [orig:137 D.3685 ] [137])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:137 D.3685 ] [137])
        (nil)))
(insn 324 323 325 26 (parallel [
            (set (reg/f:DI 0 ax [orig:139 D.3691 ] [139])
                (plus:DI (reg/f:DI 0 ax [orig:136 D.3691 ] [136])
                    (reg:DI 1 dx [orig:138 D.3685 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:138 D.3685 ] [138])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:136 D.3691 ] [136])
            (nil))))
(insn 325 324 562 26 (set (reg/f:DI 0 ax [orig:140 D.3692 ] [140])
        (mem/f:DI (reg/f:DI 0 ax [orig:139 D.3691 ] [139]) [0 *_104+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:139 D.3691 ] [139])
        (nil)))
(insn 562 325 327 26 (set (reg/f:DI 3 bx [orig:141 D.3692 ] [141])
        (plus:DI (reg/f:DI 0 ax [orig:140 D.3692 ] [140])
            (const_int 16 [0x10]))) mQuery.c:85 267 {*leadi}
     (nil))
(insn 327 562 563 26 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 273 {*addsi_1}
     (nil))
(insn 563 327 329 26 (set (reg:DI 1 dx [263])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:85 267 {*leadi}
     (nil))
(insn 329 563 330 26 (set (reg:SI 0 ax [265])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 330 329 331 26 (set (reg:DI 0 ax [264])
        (sign_extend:DI (reg:SI 0 ax [265]))) mQuery.c:85 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [265])
        (nil)))
(insn 331 330 332 26 (parallel [
            (set (reg/f:DI 0 ax [orig:142 D.3687 ] [142])
                (plus:DI (reg:DI 0 ax [264])
                    (reg:DI 1 dx [263])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [264])
        (expr_list:REG_DEAD (reg:DI 1 dx [263])
            (nil))))
(insn 332 331 333 26 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:142 D.3687 ] [142])) mQuery.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:142 D.3687 ] [142])
        (nil)))
(call_insn/i 333 332 334 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:85 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 334 333 335 26 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:85 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 335 334 336 26 (set (reg:XF 8 st [orig:144 D.3694 ] [144])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64]))) mQuery.c:85 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 143 [ D.3693 ])
        (nil)))
(insn 336 335 337 26 (set (mem:XF (reg/f:DI 3 bx [orig:141 D.3692 ] [141]) [0 *_106+0 S16 A128])
        (reg:XF 8 st [orig:144 D.3694 ] [144])) mQuery.c:85 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:144 D.3694 ] [144])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:141 D.3692 ] [141])
            (nil))))
(insn 337 336 552 26 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 273 {*addsi_1}
     (nil))
(jump_insn 552 337 553 26 (set (pc)
        (label_ref 342)) mQuery.c:87 650 {jump}
     (nil)
 -> 342)
;;  succ:       28 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 553 552 359)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 359 553 340 27 38 "" [1 uses])
(note 340 359 341 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 273 {*addsi_1}
     (nil))
;;  succ:       28 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU,DFS_BACK)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 342 341 343 28 36 "" [1 uses])
(note 343 342 344 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 28 (set (reg:SI 0 ax [267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 345 344 346 28 (set (reg:DI 0 ax [266])
        (sign_extend:DI (reg:SI 0 ax [267]))) mQuery.c:87 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [267])
        (nil)))
(insn 346 345 347 28 (set (reg:QI 0 ax [orig:145 D.3690 ] [145])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [266]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [266])
        (nil)))
(insn 347 346 348 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:145 D.3690 ] [145])
            (const_int 44 [0x2c]))) mQuery.c:87 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:145 D.3690 ] [145])
        (nil)))
(jump_insn 348 347 349 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 362)
;;  succ:       29 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 349 348 350 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 29 (set (reg:SI 0 ax [269])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 351 350 352 29 (set (reg:DI 0 ax [268])
        (sign_extend:DI (reg:SI 0 ax [269]))) mQuery.c:87 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [269])
        (nil)))
(insn 352 351 353 29 (set (reg:QI 0 ax [orig:146 D.3690 ] [146])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [268]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [268])
        (nil)))
(insn 353 352 354 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:146 D.3690 ] [146])
            (const_int 0 [0]))) mQuery.c:87 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:146 D.3690 ] [146])
        (nil)))
(jump_insn 354 353 355 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 362)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 355 354 356 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 30 (set (reg:SI 0 ax [271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 357 356 358 30 (set (reg:DI 0 ax [270])
        (sign_extend:DI (reg:SI 0 ax [271]))) mQuery.c:87 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [271])
        (nil)))
(insn 358 357 360 30 (set (reg:QI 0 ax [orig:147 D.3690 ] [147])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [270]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [270])
        (nil)))
(insn 360 358 361 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:147 D.3690 ] [147])
            (const_int 10 [0xa]))) mQuery.c:87 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:147 D.3690 ] [147])
        (nil)))
(jump_insn 361 360 362 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 359)
;;  succ:       27
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;;              29
;;              30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 362 361 363 31 37 "" [2 uses])
(note 363 362 364 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 31 (set (reg:SI 0 ax [273])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:88 89 {*movsi_internal}
     (nil))
(insn 365 364 366 31 (set (reg:DI 0 ax [272])
        (sign_extend:DI (reg:SI 0 ax [273]))) mQuery.c:88 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [273])
        (nil)))
(insn 366 365 367 31 (set (reg:QI 0 ax [orig:148 D.3690 ] [148])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [272]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:88 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [272])
        (nil)))
(insn 367 366 368 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:148 D.3690 ] [148])
            (const_int 0 [0]))) mQuery.c:88 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:148 D.3690 ] [148])
        (nil)))
(jump_insn 368 367 369 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) mQuery.c:88 612 {*jcc_1}
     (nil)
 -> 372)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 369 368 370 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f873475f130 *.LC10>)) mQuery.c:88 87 {*movdi_internal_rex64}
     (nil))
(call_insn 371 370 372 32 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:88 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;;              32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 372 371 373 33 39 "" [1 uses])
(note 373 372 374 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 33 (set (reg/f:DI 0 ax [274])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 375 374 376 33 (set (reg/f:DI 2 cx [orig:149 D.3688 ] [149])
        (mem/f:DI (reg/f:DI 0 ax [274]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [274])
        (nil)))
(insn 376 375 377 33 (set (reg:SI 0 ax [275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 377 376 378 33 (set (reg:DI 1 dx [orig:150 D.3685 ] [150])
        (sign_extend:DI (reg:SI 0 ax [275]))) mQuery.c:89 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [275])
        (nil)))
(insn 378 377 379 33 (set (reg:DI 0 ax [276])
        (reg:DI 1 dx [orig:150 D.3685 ] [150])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 379 378 380 33 (parallel [
            (set (reg:DI 0 ax [276])
                (ashift:DI (reg:DI 0 ax [276])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (nil))
(insn 380 379 381 33 (parallel [
            (set (reg:DI 0 ax [276])
                (plus:DI (reg:DI 0 ax [276])
                    (reg:DI 1 dx [orig:150 D.3685 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:150 D.3685 ] [150])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:150 D.3685 ] [150])
                (const_int 5 [0x5]))
            (nil))))
(insn 381 380 384 33 (parallel [
            (set (reg:DI 0 ax [277])
                (ashift:DI (reg:DI 0 ax [276])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [276])
        (nil)))
(insn 384 381 385 33 (parallel [
            (set (reg/f:DI 0 ax [orig:152 D.3688 ] [152])
                (plus:DI (reg:DI 0 ax [orig:151 D.3685 ] [151])
                    (reg/f:DI 2 cx [orig:149 D.3688 ] [149])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:151 D.3685 ] [151])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:149 D.3688 ] [149])
            (nil))))
(insn 385 384 386 33 (set (reg/f:DI 0 ax [orig:153 D.3691 ] [153])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:152 D.3688 ] [152])
                (const_int 8 [0x8])) [0 _120->nvp+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:152 D.3688 ] [152])
        (nil)))
(insn 386 385 387 33 (set (reg:SI 1 dx [278])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 387 386 388 33 (set (reg:DI 1 dx [orig:154 D.3685 ] [154])
        (sign_extend:DI (reg:SI 1 dx [278]))) mQuery.c:89 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [278])
        (nil)))
(insn 388 387 389 33 (parallel [
            (set (reg:DI 1 dx [orig:155 D.3685 ] [155])
                (ashift:DI (reg:DI 1 dx [orig:154 D.3685 ] [154])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:154 D.3685 ] [154])
        (nil)))
(insn 389 388 390 33 (parallel [
            (set (reg/f:DI 0 ax [orig:156 D.3691 ] [156])
                (plus:DI (reg/f:DI 0 ax [orig:153 D.3691 ] [153])
                    (reg:DI 1 dx [orig:155 D.3685 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:155 D.3685 ] [155])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:153 D.3691 ] [153])
            (nil))))
(insn 390 389 560 33 (set (reg/f:DI 0 ax [orig:157 D.3692 ] [157])
        (mem/f:DI (reg/f:DI 0 ax [orig:156 D.3691 ] [156]) [0 *_124+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:156 D.3691 ] [156])
        (nil)))
(insn 560 390 392 33 (set (reg/f:DI 3 bx [orig:158 D.3692 ] [158])
        (plus:DI (reg/f:DI 0 ax [orig:157 D.3692 ] [157])
            (const_int 32 [0x20]))) mQuery.c:89 267 {*leadi}
     (nil))
(insn 392 560 561 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 273 {*addsi_1}
     (nil))
(insn 561 392 394 33 (set (reg:DI 1 dx [279])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:89 267 {*leadi}
     (nil))
(insn 394 561 395 33 (set (reg:SI 0 ax [281])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 395 394 396 33 (set (reg:DI 0 ax [280])
        (sign_extend:DI (reg:SI 0 ax [281]))) mQuery.c:89 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [281])
        (nil)))
(insn 396 395 397 33 (parallel [
            (set (reg/f:DI 0 ax [orig:159 D.3687 ] [159])
                (plus:DI (reg:DI 0 ax [280])
                    (reg:DI 1 dx [279])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [280])
        (expr_list:REG_DEAD (reg:DI 1 dx [279])
            (nil))))
(insn 397 396 398 33 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:159 D.3687 ] [159])) mQuery.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.3687 ] [159])
        (nil)))
(call_insn/i 398 397 399 33 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:89 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 399 398 400 33 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:89 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 400 399 401 33 (set (reg:XF 8 st [orig:161 D.3694 ] [161])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64]))) mQuery.c:89 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 160 [ D.3693 ])
        (nil)))
(insn 401 400 402 33 (set (mem:XF (reg/f:DI 3 bx [orig:158 D.3692 ] [158]) [0 *_126+0 S16 A128])
        (reg:XF 8 st [orig:161 D.3694 ] [161])) mQuery.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:161 D.3694 ] [161])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:158 D.3692 ] [158])
            (nil))))
(insn 402 401 554 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 273 {*addsi_1}
     (nil))
(jump_insn 554 402 555 33 (set (pc)
        (label_ref 407)) mQuery.c:92 650 {jump}
     (nil)
 -> 407)
;;  succ:       35 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 555 554 418)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 418 555 405 34 42 "" [1 uses])
(note 405 418 406 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 273 {*addsi_1}
     (nil))
;;  succ:       35 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU,DFS_BACK)
;;              33 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 407 406 408 35 40 "" [1 uses])
(note 408 407 409 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 35 (set (reg:SI 0 ax [283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:92 89 {*movsi_internal}
     (nil))
(insn 410 409 411 35 (set (reg:DI 0 ax [282])
        (sign_extend:DI (reg:SI 0 ax [283]))) mQuery.c:92 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [283])
        (nil)))
(insn 411 410 412 35 (set (reg:QI 0 ax [orig:162 D.3690 ] [162])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [282]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:92 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [282])
        (nil)))
(insn 412 411 413 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:162 D.3690 ] [162])
            (const_int 44 [0x2c]))) mQuery.c:92 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:162 D.3690 ] [162])
        (nil)))
(jump_insn 413 412 414 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) mQuery.c:92 612 {*jcc_1}
     (nil)
 -> 421)
;;  succ:       36 (FALLTHRU)
;;              37
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 414 413 415 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 36 (set (reg:SI 0 ax [285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:92 89 {*movsi_internal}
     (nil))
(insn 416 415 417 36 (set (reg:DI 0 ax [284])
        (sign_extend:DI (reg:SI 0 ax [285]))) mQuery.c:92 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [285])
        (nil)))
(insn 417 416 419 36 (set (reg:QI 0 ax [orig:163 D.3690 ] [163])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [284]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:92 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [284])
        (nil)))
(insn 419 417 420 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:163 D.3690 ] [163])
            (const_int 0 [0]))) mQuery.c:92 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:163 D.3690 ] [163])
        (nil)))
(jump_insn 420 419 421 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 418)
            (pc))) mQuery.c:92 612 {*jcc_1}
     (nil)
 -> 418)
;;  succ:       34
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;;              36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 421 420 422 37 41 "" [1 uses])
(note 422 421 423 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 37 (set (reg:SI 0 ax [287])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:93 89 {*movsi_internal}
     (nil))
(insn 424 423 425 37 (set (reg:DI 0 ax [286])
        (sign_extend:DI (reg:SI 0 ax [287]))) mQuery.c:93 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [287])
        (nil)))
(insn 425 424 426 37 (set (reg:QI 0 ax [orig:164 D.3690 ] [164])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [286]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:93 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [286])
        (nil)))
(insn 426 425 427 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:164 D.3690 ] [164])
            (const_int 0 [0]))) mQuery.c:93 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:164 D.3690 ] [164])
        (nil)))
(jump_insn 427 426 428 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) mQuery.c:93 612 {*jcc_1}
     (nil)
 -> 431)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 428 427 429 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f873475f1c8 *.LC11>)) mQuery.c:93 87 {*movdi_internal_rex64}
     (nil))
(call_insn 430 429 431 38 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:93 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;;              38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 431 430 432 39 43 "" [1 uses])
(note 432 431 433 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 556 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 273 {*addsi_1}
     (nil))
(jump_insn 556 433 557 39 (set (pc)
        (label_ref 438)) mQuery.c:94 650 {jump}
     (nil)
 -> 438)
;;  succ:       41 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 557 556 449)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 449 557 436 40 46 "" [1 uses])
(note 436 449 437 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 273 {*addsi_1}
     (nil))
;;  succ:       41 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU,DFS_BACK)
;;              39 [100.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 438 437 439 41 44 "" [1 uses])
(note 439 438 440 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 41 (set (reg:SI 0 ax [289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:94 89 {*movsi_internal}
     (nil))
(insn 441 440 442 41 (set (reg:DI 0 ax [288])
        (sign_extend:DI (reg:SI 0 ax [289]))) mQuery.c:94 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [289])
        (nil)))
(insn 442 441 443 41 (set (reg:QI 0 ax [orig:165 D.3690 ] [165])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [288]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:94 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [288])
        (nil)))
(insn 443 442 444 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:165 D.3690 ] [165])
            (const_int 32 [0x20]))) mQuery.c:94 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:165 D.3690 ] [165])
        (nil)))
(jump_insn 444 443 445 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) mQuery.c:94 612 {*jcc_1}
     (nil)
 -> 452)
;;  succ:       42 (FALLTHRU)
;;              43
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 445 444 446 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 42 (set (reg:SI 0 ax [291])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:94 89 {*movsi_internal}
     (nil))
(insn 447 446 448 42 (set (reg:DI 0 ax [290])
        (sign_extend:DI (reg:SI 0 ax [291]))) mQuery.c:94 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [291])
        (nil)))
(insn 448 447 450 42 (set (reg:QI 0 ax [orig:166 D.3690 ] [166])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [290]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:94 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [290])
        (nil)))
(insn 450 448 451 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:166 D.3690 ] [166])
            (const_int 0 [0]))) mQuery.c:94 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:166 D.3690 ] [166])
        (nil)))
(jump_insn 451 450 452 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) mQuery.c:94 612 {*jcc_1}
     (nil)
 -> 449)
;;  succ:       40
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41
;;              42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 452 451 453 43 45 "" [1 uses])
(note 453 452 454 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 43 (set (reg:SI 0 ax [293])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:95 89 {*movsi_internal}
     (nil))
(insn 455 454 456 43 (set (reg:DI 0 ax [292])
        (sign_extend:DI (reg:SI 0 ax [293]))) mQuery.c:95 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [293])
        (nil)))
(insn 456 455 457 43 (set (reg:QI 0 ax [orig:167 D.3690 ] [167])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [292]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:95 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [292])
        (nil)))
(insn 457 456 458 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:167 D.3690 ] [167])
            (const_int 0 [0]))) mQuery.c:95 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:167 D.3690 ] [167])
        (nil)))
(jump_insn 458 457 459 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) mQuery.c:95 612 {*jcc_1}
     (nil)
 -> 462)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 459 458 460 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f873475f260 *.LC12>)) mQuery.c:95 87 {*movdi_internal_rex64}
     (nil))
(call_insn 461 460 462 44 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:95 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 462 461 463 45 47 "" [1 uses])
(note 463 462 464 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 45 (set (reg/f:DI 0 ax [294])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 465 464 466 45 (set (reg/f:DI 2 cx [orig:168 D.3688 ] [168])
        (mem/f:DI (reg/f:DI 0 ax [294]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [294])
        (nil)))
(insn 466 465 467 45 (set (reg:SI 0 ax [295])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 467 466 468 45 (set (reg:DI 1 dx [orig:169 D.3685 ] [169])
        (sign_extend:DI (reg:SI 0 ax [295]))) mQuery.c:96 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [295])
        (nil)))
(insn 468 467 469 45 (set (reg:DI 0 ax [296])
        (reg:DI 1 dx [orig:169 D.3685 ] [169])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 469 468 470 45 (parallel [
            (set (reg:DI 0 ax [296])
                (ashift:DI (reg:DI 0 ax [296])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (nil))
(insn 470 469 471 45 (parallel [
            (set (reg:DI 0 ax [296])
                (plus:DI (reg:DI 0 ax [296])
                    (reg:DI 1 dx [orig:169 D.3685 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:169 D.3685 ] [169])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:169 D.3685 ] [169])
                (const_int 5 [0x5]))
            (nil))))
(insn 471 470 474 45 (parallel [
            (set (reg:DI 0 ax [297])
                (ashift:DI (reg:DI 0 ax [296])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [296])
        (nil)))
(insn 474 471 475 45 (parallel [
            (set (reg/f:DI 0 ax [orig:171 D.3688 ] [171])
                (plus:DI (reg:DI 0 ax [orig:170 D.3685 ] [170])
                    (reg/f:DI 2 cx [orig:168 D.3688 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:170 D.3685 ] [170])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:168 D.3688 ] [168])
            (nil))))
(insn 475 474 476 45 (set (reg/f:DI 0 ax [orig:172 D.3692 ] [172])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:171 D.3688 ] [171])
                (const_int 16 [0x10])) [0 _144->time+0 S8 A128])) mQuery.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:171 D.3688 ] [171])
        (nil)))
(insn 476 475 477 45 (set (reg:SI 1 dx [298])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 477 476 478 45 (set (reg:DI 1 dx [orig:173 D.3685 ] [173])
        (sign_extend:DI (reg:SI 1 dx [298]))) mQuery.c:96 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [298])
        (nil)))
(insn 478 477 558 45 (parallel [
            (set (reg:DI 1 dx [orig:174 D.3685 ] [174])
                (ashift:DI (reg:DI 1 dx [orig:173 D.3685 ] [173])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:173 D.3685 ] [173])
        (nil)))
(insn 558 478 480 45 (set (reg/f:DI 3 bx [orig:175 D.3692 ] [175])
        (plus:DI (reg/f:DI 0 ax [orig:172 D.3692 ] [172])
            (reg:DI 1 dx [orig:174 D.3685 ] [174]))) mQuery.c:96 267 {*leadi}
     (nil))
(insn 480 558 559 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 273 {*addsi_1}
     (nil))
(insn 559 480 482 45 (set (reg:DI 1 dx [299])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:96 267 {*leadi}
     (nil))
(insn 482 559 483 45 (set (reg:SI 0 ax [301])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 j+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 483 482 484 45 (set (reg:DI 0 ax [300])
        (sign_extend:DI (reg:SI 0 ax [301]))) mQuery.c:96 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [301])
        (nil)))
(insn 484 483 485 45 (parallel [
            (set (reg/f:DI 0 ax [orig:176 D.3687 ] [176])
                (plus:DI (reg:DI 0 ax [300])
                    (reg:DI 1 dx [299])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [300])
        (expr_list:REG_DEAD (reg:DI 1 dx [299])
            (nil))))
(insn 485 484 486 45 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:176 D.3687 ] [176])) mQuery.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:176 D.3687 ] [176])
        (nil)))
(call_insn 486 485 488 45 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_convert_time") [flags 0x3]  <function_decl 0x7f87346baf00 _convert_time>) [0 _convert_time S1 A8])
            (const_int 0 [0]))) mQuery.c:96 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 488 486 489 45 (set (mem:XF (reg/f:DI 3 bx [orig:175 D.3692 ] [175]) [0 *_148+0 S16 A128])
        (reg:XF 8 st [orig:177 D.3694 ] [177])) mQuery.c:96 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:177 D.3694 ] [177])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:175 D.3692 ] [175])
            (nil))))
(insn 489 488 490 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 273 {*addsi_1}
     (nil))
;;  succ:       46 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU,DFS_BACK)
;;              10 [100.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
(code_label 490 489 491 46 26 "" [1 uses])
(note 491 490 492 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 46 (set (reg/f:DI 0 ax [302])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 493 492 494 46 (set (reg/f:DI 2 cx [orig:106 D.3688 ] [106])
        (mem/f:DI (reg/f:DI 0 ax [302]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [302])
        (nil)))
(insn 494 493 495 46 (set (reg:SI 0 ax [303])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:78 89 {*movsi_internal}
     (nil))
(insn 495 494 496 46 (set (reg:DI 1 dx [orig:107 D.3685 ] [107])
        (sign_extend:DI (reg:SI 0 ax [303]))) mQuery.c:78 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [303])
        (nil)))
(insn 496 495 497 46 (set (reg:DI 0 ax [304])
        (reg:DI 1 dx [orig:107 D.3685 ] [107])) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 497 496 498 46 (parallel [
            (set (reg:DI 0 ax [304])
                (ashift:DI (reg:DI 0 ax [304])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 513 {*ashldi3_1}
     (nil))
(insn 498 497 499 46 (parallel [
            (set (reg:DI 0 ax [304])
                (plus:DI (reg:DI 0 ax [304])
                    (reg:DI 1 dx [orig:107 D.3685 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:107 D.3685 ] [107])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:107 D.3685 ] [107])
                (const_int 5 [0x5]))
            (nil))))
(insn 499 498 502 46 (parallel [
            (set (reg:DI 0 ax [305])
                (ashift:DI (reg:DI 0 ax [304])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [304])
        (nil)))
(insn 502 499 503 46 (parallel [
            (set (reg/f:DI 0 ax [orig:109 D.3688 ] [109])
                (plus:DI (reg:DI 0 ax [orig:108 D.3685 ] [108])
                    (reg/f:DI 2 cx [orig:106 D.3688 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:108 D.3685 ] [108])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:106 D.3688 ] [106])
            (nil))))
(insn 503 502 505 46 (set (reg:SI 0 ax [orig:110 D.3689 ] [110])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:109 D.3688 ] [109])
                (const_int 4 [0x4])) [0 _69->n_nvp+0 S4 A32])) mQuery.c:78 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.3688 ] [109])
        (nil)))
(insn 505 503 506 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:110 D.3689 ] [110])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50048 [0xffffffffffff3c80])) [0 h+0 S4 A32]))) mQuery.c:78 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:110 D.3689 ] [110])
        (nil)))
(jump_insn 506 505 507 46 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) mQuery.c:78 612 {*jcc_1}
     (nil)
 -> 504)
;;  succ:       11
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 507 506 508 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:66 273 {*addsi_1}
     (nil))
;;  succ:       48 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 509 508 510 48 22 "" [1 uses])
(note 510 509 512 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 512 510 513 48 (set (reg:SI 0 ax [306])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 i+0 S4 A32])) mQuery.c:66 89 {*movsi_internal}
     (nil))
(insn 513 512 514 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [306])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50044 [0xffffffffffff3c84])) [0 Nflight+0 S4 A32]))) mQuery.c:66 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [306])
        (nil)))
(jump_insn 514 513 515 48 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) mQuery.c:66 612 {*jcc_1}
     (nil)
 -> 511)
;;  succ:       5
;;              49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 515 514 516 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 49 (set (reg/f:DI 0 ax [307])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 flight+0 S8 A64])) mQuery.c:100 87 {*movdi_internal_rex64}
     (nil))
(insn 517 516 518 49 (set (reg/f:DI 0 ax [orig:178 D.3688 ] [178])
        (mem/f:DI (reg/f:DI 0 ax [307]) [0 *flight_16(D)+0 S8 A64])) mQuery.c:100 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [307])
        (nil)))
(insn 518 517 519 49 (set (reg:SI 1 dx [308])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 Nflight+0 S4 A32])) mQuery.c:100 89 {*movsi_internal}
     (nil))
(insn 519 518 520 49 (set (reg:SI 4 si)
        (reg:SI 1 dx [308])) mQuery.c:100 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [308])
        (nil)))
(insn 520 519 521 49 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:178 D.3688 ] [178])) mQuery.c:100 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:178 D.3688 ] [178])
        (nil)))
(call_insn 521 520 522 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_calculate_velocity") [flags 0x3]  <function_decl 0x7f87346c5000 _calculate_velocity>) [0 _calculate_velocity S1 A8])
            (const_int 0 [0]))) mQuery.c:100 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 522 521 532 49 (set (reg:SI 0 ax [orig:179 D.3689 ] [179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 Nflight+0 S4 A32])) mQuery.c:107 89 {*movsi_internal}
     (nil))
(insn 532 522 533 49 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.3695+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 4 si [311]))
        ]) mQuery.c:108 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 4 si [311])
        (nil)))
(jump_insn 533 532 540 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) mQuery.c:108 612 {*jcc_1}
     (nil)
 -> 536)
;;  succ:       51
;;              50 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 540 533 534 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(call_insn 534 540 535 50 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:108 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 535 534 536)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
(code_label 536 535 541 51 51 "" [1 uses])
(note 541 536 537 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 537 541 580 51 (use (reg/i:SI 0 ax)) mQuery.c:108 -1
     (nil))
(note 580 537 581 51 NOTE_INSN_EPILOGUE_BEG)
(insn 581 580 582 51 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 50088 [0xc3a8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:108 -1
     (nil))
(insn 582 581 583 51 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:108 -1
     (nil))
(insn/f 583 582 584 51 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:108 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 584 583 585 51 (simple_return) mQuery.c:108 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 585 584 0)

;; Function _find_value_string (_find_value_string, funcdef_no=5, decl_uid=3177, cgraph_uid=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 34 (  1.4)
scanning new insn with uid = 172.
scanning new insn with uid = 173.
scanning new insn with uid = 174.
scanning new insn with uid = 177.
scanning new insn with uid = 178.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 149.
starting the processing of deferred insns
ending the processing of deferred insns


_find_value_string

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={41d,30u} r1={15d,3u,1e} r2={14d,2u} r4={16d,5u} r5={22d,11u} r6={3d,65u} r7={4d,40u} r8={12d,2u} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={29d,11u} r18={11d} r19={11d} r20={1d,1u,1e} r21={12d,1u} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={12d} r38={12d} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} 
;;    total ref usage 747{574d,171u,2e} in 101{90 regular + 11 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 6 1 172 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 172 6 173 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:112 -1
     (nil))
(insn/f 173 172 174 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:112 -1
     (nil))
(insn/f 174 173 175 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -50064 [0xffffffffffff3c70])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:112 -1
     (nil))
(note 175 174 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 175 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ config_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
        (reg:DI 4 si [ label ])) mQuery.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ label ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [97])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:112 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [97])
        (nil)))
(insn 8 5 9 2 (set (reg:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [75])) mQuery.c:114 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [75])
        (nil)))
(call_insn 11 10 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:114 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 11 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [76])) mQuery.c:114 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [76])
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:115 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:115 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8734780000 *.LC13>)) mQuery.c:115 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:115 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 19 18 20 4 53 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 157 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
        (const_int 0 [0])) mQuery.c:120 89 {*movsi_internal}
     (nil))
(jump_insn 157 21 158 4 (set (pc)
        (label_ref 26)) mQuery.c:120 650 {jump}
     (nil)
 -> 26)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 158 157 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 33 158 24 5 55 "" [1 uses])
(note 24 33 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 26 25 27 6 54 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:SI 0 ax [77])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:120 89 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (reg:DI 1 dx [orig:59 D.3706 ] [59])
        (sign_extend:DI (reg:SI 0 ax [77]))) mQuery.c:120 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [77])
        (nil)))
(insn 30 29 31 6 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 0 ax [orig:60 D.3707 ] [60])
                (plus:DI (reg/f:DI 0 ax [78])
                    (reg:DI 1 dx [orig:59 D.3706 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.3706 ] [59])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
                    (reg:DI 1 dx [orig:59 D.3706 ] [59]))
                (nil)))))
(insn 32 31 34 6 (set (reg:QI 0 ax [orig:61 D.3708 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 D.3707 ] [60]) [0 *_8+0 S1 A8])) mQuery.c:120 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.3707 ] [60])
        (nil)))
(insn 34 32 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.3708 ] [61])
            (const_int 0 [0]))) mQuery.c:120 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.3708 ] [61])
        (nil)))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:120 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 36 35 159 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 159 36 160 7 (set (pc)
        (label_ref 114)) mQuery.c:122 650 {jump}
     (nil)
 -> 114)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 160 159 123)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 123 160 39 8 64 "" [1 uses])
(note 39 123 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:QI 0 ax [orig:63 D.3708 ] [63])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:63 D.3708 ] [63])
            (const_int 35 [0x23]))) mQuery.c:123 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:63 D.3708 ] [63])
        (nil)))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 51)
;;  succ:       11
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg:QI 0 ax [orig:64 D.3708 ] [64])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 D.3708 ] [64])
            (const_int 10 [0xa]))) mQuery.c:123 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:64 D.3708 ] [64])
        (nil)))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 51)
;;  succ:       11
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:QI 0 ax [orig:65 D.3708 ] [65])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 49 48 50 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:65 D.3708 ] [65])
            (const_int 32 [0x20]))) mQuery.c:123 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:65 D.3708 ] [65])
        (nil)))
(jump_insn 50 49 51 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 55)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 51 50 52 11 57 "" [2 uses])
(note 52 51 161 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 161 52 162 11 (set (pc)
        (label_ref 114)) mQuery.c:123 650 {jump}
     (nil)
 -> 114)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 162 161 55)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 55 162 56 12 58 "" [1 uses])
(note 56 55 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 163 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(jump_insn 163 57 164 12 (set (pc)
        (label_ref 62)) mQuery.c:124 650 {jump}
     (nil)
 -> 62)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 164 163 73)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 73 164 60 13 61 "" [1 uses])
(note 60 73 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:124 273 {*addsi_1}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 62 61 63 14 59 "" [1 uses])
(note 63 62 64 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 14 (set (reg:SI 0 ax [80])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(insn 65 64 66 14 (set (reg:DI 0 ax [79])
        (sign_extend:DI (reg:SI 0 ax [80]))) mQuery.c:124 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [80])
        (nil)))
(insn 66 65 67 14 (set (reg:QI 0 ax [orig:66 D.3708 ] [66])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [79]))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [79])
        (nil)))
(insn 67 66 68 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:66 D.3708 ] [66])
            (const_int 35 [0x23]))) mQuery.c:124 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:66 D.3708 ] [66])
        (nil)))
(jump_insn 68 67 69 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) mQuery.c:124 612 {*jcc_1}
     (nil)
 -> 76)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 15 (set (reg:SI 0 ax [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(insn 71 70 72 15 (set (reg:DI 0 ax [81])
        (sign_extend:DI (reg:SI 0 ax [82]))) mQuery.c:124 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [82])
        (nil)))
(insn 72 71 74 15 (set (reg:QI 0 ax [orig:67 D.3708 ] [67])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [81]))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [81])
        (nil)))
(insn 74 72 75 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:67 D.3708 ] [67])
            (const_int 0 [0]))) mQuery.c:124 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:67 D.3708 ] [67])
        (nil)))
(jump_insn 75 74 76 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) mQuery.c:124 612 {*jcc_1}
     (nil)
 -> 73)
;;  succ:       13
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 76 75 77 16 60 "" [1 uses])
(note 77 76 78 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 16 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:125 89 {*movsi_internal}
     (nil))
(insn 79 78 80 16 (set (reg:DI 0 ax [83])
        (sign_extend:DI (reg:SI 0 ax [84]))) mQuery.c:125 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [84])
        (nil)))
(insn 80 79 81 16 (set (reg:QI 0 ax [orig:68 D.3708 ] [68])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [83]))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:125 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 81 80 82 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:68 D.3708 ] [68])
            (const_int 0 [0]))) mQuery.c:125 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.3708 ] [68])
        (nil)))
(jump_insn 82 81 83 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mQuery.c:125 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 83 82 84 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8734780098 *.LC14>)) mQuery.c:125 87 {*movdi_internal_rex64}
     (nil))
(call_insn 85 84 86 17 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:125 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 86 85 87 18 62 "" [1 uses])
(note 87 86 88 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 18 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:126 89 {*movsi_internal}
     (nil))
(insn 89 88 90 18 (set (reg:DI 1 dx [orig:69 D.3709 ] [69])
        (sign_extend:DI (reg:SI 0 ax [85]))) mQuery.c:126 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [85])
        (nil)))
(insn 90 89 171 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 273 {*addsi_1}
     (nil))
(insn 171 90 92 18 (set (reg:DI 2 cx [86])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50016 [0xffffffffffff3ca0]))) mQuery.c:126 267 {*leadi}
     (nil))
(insn 92 171 93 18 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:126 89 {*movsi_internal}
     (nil))
(insn 93 92 94 18 (set (reg:DI 0 ax [87])
        (sign_extend:DI (reg:SI 0 ax [88]))) mQuery.c:126 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [88])
        (nil)))
(insn 94 93 95 18 (parallel [
            (set (reg/f:DI 2 cx [orig:70 D.3707 ] [70])
                (plus:DI (reg:DI 2 cx [86])
                    (reg:DI 0 ax [87])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (expr_list:REG_DEAD (reg:DI 2 cx [86])
            (nil))))
(insn 95 94 97 18 (set (reg:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 97 95 98 18 (set (reg:DI 4 si)
        (reg:DI 0 ax [89])) mQuery.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [89])
        (nil)))
(insn 98 97 99 18 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:70 D.3707 ] [70])) mQuery.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:70 D.3707 ] [70])
        (nil)))
(call_insn/i 99 98 101 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f8734935700 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) mQuery.c:126 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 101 99 102 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:71 D.3710 ] [71])
            (const_int 0 [0]))) mQuery.c:126 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 D.3710 ] [71])
        (nil)))
(jump_insn 102 101 103 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:126 612 {*jcc_1}
     (nil)
 -> 114)
;;  succ:       19 (FALLTHRU)
;;              21 (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 103 102 104 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 19 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) mQuery.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [90])
        (nil)))
(call_insn 106 105 170 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:127 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 170 106 108 19 (set (reg:DI 0 ax [91])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50016 [0xffffffffffff3ca0]))) mQuery.c:128 267 {*leadi}
     (nil))
(insn 108 170 109 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [91])) mQuery.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [91])
        (nil)))
(call_insn/i 109 108 110 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:128 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 111 19 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50056 [0xffffffffffff3c78])) [0 %sfp+-50056 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:128 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 111 110 147 19 (set (reg:XF 8 st [orig:73 D.3712 ] [73])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50056 [0xffffffffffff3c78])) [0 %sfp+-50056 S8 A64]))) mQuery.c:128 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 72 [ D.3711 ])
        (nil)))
(insn 147 111 148 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 0 ax [98]))
        ]) mQuery.c:136 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [98])
        (nil)))
(jump_insn 148 147 165 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) mQuery.c:136 612 {*jcc_1}
     (nil)
 -> 151)
;;  succ:       24
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 165 148 167 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 167 165 168 20 (set (pc)
        (label_ref 166)) 650 {jump}
     (nil)
 -> 166)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]

(barrier 168 167 114)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (DFS_BACK)
;;              7 [100.0%] 
;;              11 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 114 168 115 21 56 "" [3 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 169 21 (set (reg:DI 1 dx [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 169 116 119 21 (set (reg:DI 0 ax [93])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50016 [0xffffffffffff3ca0]))) mQuery.c:122 267 {*leadi}
     (nil))
(insn 119 169 120 21 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:122 89 {*movsi_internal}
     (nil))
(insn 120 119 121 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) mQuery.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [93])
        (nil)))
(call_insn 121 120 124 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:122 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 124 121 125 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.3707 ] [62])
            (const_int 0 [0]))) mQuery.c:122 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.3707 ] [62])
        (nil)))
(jump_insn 125 124 126 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) mQuery.c:122 612 {*jcc_1}
     (nil)
 -> 123)
;;  succ:       8
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 22 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 22 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) mQuery.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [94])
        (nil)))
(call_insn 129 128 130 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:132 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 130 129 131 22 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 22 (set (reg:DI 4 si)
        (reg:DI 0 ax [95])) mQuery.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [95])
        (nil)))
(insn 132 131 133 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8734780130 *.LC15>)) mQuery.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:133 91 {*movqi_internal}
     (nil))
(call_insn 134 133 135 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8734941f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mQuery.c:133 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 135 134 136 22 (set (reg:SI 5 di)
        (const_int 0 [0])) mQuery.c:134 89 {*movsi_internal}
     (nil))
(call_insn 136 135 137 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8734955f00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mQuery.c:134 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 137 136 166)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 166 137 155 23 66 "" [1 uses])
(note 155 166 149 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 149 155 150 23 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:136 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 150 149 151)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 8 [st]
;; lr  def 	
(code_label 151 150 156 24 65 "" [1 uses])
(note 156 151 152 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 152 156 176 24 (use (reg/i:XF 8 st)) mQuery.c:136 -1
     (nil))
(note 176 152 177 24 NOTE_INSN_EPILOGUE_BEG)
(insn/f 177 176 178 24 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:136 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 178 177 179 24 (simple_return) mQuery.c:136 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 20 [frame]

(barrier 179 178 0)

;; Function get_configuration (get_configuration, funcdef_no=6, decl_uid=1766, cgraph_uid=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 210.
scanning new insn with uid = 211.
scanning new insn with uid = 212.
scanning new insn with uid = 215.
scanning new insn with uid = 216.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 130.
starting the processing of deferred insns
ending the processing of deferred insns


get_configuration

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 19[fpcr]
;;  ref usage 	r0={68d,58u} r1={24d,6u} r2={18d} r4={35d,18u} r5={35d,18u} r6={3d,92u} r7={4d,24u} r8={18d,18u} r9={17d} r10={17d} r11={17d} r12={17d} r13={17d} r14={17d} r15={17d} r17={25d} r18={17d} r19={17d,7u} r20={1d,1u} r21={18d} r22={18d} r23={18d} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={18d} r38={18d} r39={17d} r40={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} 
;;    total ref usage 1112{870d,242u,0e} in 155{138 regular + 17 call} insns.
(note 1 0 155 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 155 1 210 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 210 155 211 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:137 -1
     (nil))
(insn/f 211 210 212 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:137 -1
     (nil))
(insn/f 212 211 213 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:137 -1
     (nil))
(note 213 212 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 213 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ config_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ config ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f873478a5f0 *.LC16>)) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) mQuery.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [86])
        (nil)))
(call_insn 10 9 12 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:139 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 10 13 2 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [87])
                (const_int 16 [0x10])) [0 config_3(D)->max_ang+0 S16 A128])
        (reg:XF 8 st [orig:59 D.3717 ] [59])) mQuery.c:139 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [87])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:59 D.3717 ] [59])
            (nil))))
(insn 14 13 15 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f873478a688 *.LC17>)) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) mQuery.c:140 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(call_insn 17 16 159 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:140 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 159 17 160 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:140 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 160 159 187 2 (set (reg:HI 0 ax [121])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:140 90 {*movhi_internal}
     (nil))
(insn 187 160 162 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [121])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [121])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:140 446 {*iorqi_ext_0}
     (nil))
(insn 162 187 188 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [121])) mQuery.c:140 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [121])
        (nil)))
(insn 188 162 189 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:60 D.3717 ] [60])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:140 196 {fix_truncsi_i387}
     (nil))
(insn 189 188 20 2 (set (reg:SI 1 dx [orig:61 D.3718 ] [61])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:140 89 {*movsi_internal}
     (nil))
(insn 20 189 21 2 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 32 [0x20])) [0 config_3(D)->nsim+0 S4 A128])
        (reg:SI 1 dx [orig:61 D.3718 ] [61])) mQuery.c:140 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:61 D.3718 ] [61])
            (nil))))
(insn 22 21 23 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f873478a720 *.LC18>)) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) mQuery.c:141 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [90])
        (nil)))
(call_insn 25 24 27 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:141 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 27 25 28 2 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [91])
                (const_int 64 [0x40])) [0 config_3(D)->direct_thr+0 S16 A128])
        (reg:XF 8 st [orig:62 D.3717 ] [62])) mQuery.c:141 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [91])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:62 D.3717 ] [62])
            (nil))))
(insn 29 28 30 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f873478a7b8 *.LC19>)) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) mQuery.c:142 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(call_insn 32 31 34 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:142 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 34 32 35 2 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [93])
                (const_int 80 [0x50])) [0 config_3(D)->xdelay+0 S16 A128])
        (reg:XF 8 st [orig:63 D.3717 ] [63])) mQuery.c:142 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:63 D.3717 ] [63])
            (nil))))
(insn 36 35 37 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f873478a850 *.LC20>)) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) mQuery.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [94])
        (nil)))
(call_insn 39 38 41 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:143 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 41 39 42 2 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [95])
                (const_int 96 [0x60])) [0 config_3(D)->pdelay+0 S16 A128])
        (reg:XF 8 st [orig:64 D.3717 ] [64])) mQuery.c:143 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:64 D.3717 ] [64])
            (nil))))
(insn 43 42 44 2 (set (reg:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f873478a8e8 *.LC21>)) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [96])) mQuery.c:144 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(call_insn 46 45 163 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:144 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 163 46 164 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:144 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 164 163 190 2 (set (reg:HI 0 ax [122])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:144 90 {*movhi_internal}
     (nil))
(insn 190 164 166 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [122])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [122])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:144 446 {*iorqi_ext_0}
     (nil))
(insn 166 190 191 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [122])) mQuery.c:144 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [122])
        (nil)))
(insn 191 166 192 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:65 D.3717 ] [65])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:144 196 {fix_truncsi_i387}
     (nil))
(insn 192 191 49 2 (set (reg:SI 1 dx [orig:66 D.3718 ] [66])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:144 89 {*movsi_internal}
     (nil))
(insn 49 192 50 2 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [97])
                (const_int 112 [0x70])) [0 config_3(D)->laplacian_vel+0 S4 A128])
        (reg:SI 1 dx [orig:66 D.3718 ] [66])) mQuery.c:144 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:66 D.3718 ] [66])
            (nil))))
(insn 51 50 52 2 (set (reg:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f873478a980 *.LC22>)) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) mQuery.c:145 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [98])
        (nil)))
(call_insn 54 53 167 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:145 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 167 54 168 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:145 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 168 167 193 2 (set (reg:HI 0 ax [123])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:145 90 {*movhi_internal}
     (nil))
(insn 193 168 170 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [123])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [123])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:145 446 {*iorqi_ext_0}
     (nil))
(insn 170 193 194 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [123])) mQuery.c:145 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [123])
        (nil)))
(insn 194 170 195 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:67 D.3717 ] [67])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:145 196 {fix_truncsi_i387}
     (nil))
(insn 195 194 57 2 (set (reg:SI 1 dx [orig:68 D.3718 ] [68])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:145 89 {*movsi_internal}
     (nil))
(insn 57 195 58 2 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [99])
                (const_int 116 [0x74])) [0 config_3(D)->Nm_shock+0 S4 A32])
        (reg:SI 1 dx [orig:68 D.3718 ] [68])) mQuery.c:145 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:68 D.3718 ] [68])
            (nil))))
(insn 59 58 60 2 (set (reg:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f873478aa18 *.LC23>)) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [100])) mQuery.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [100])
        (nil)))
(call_insn 62 61 64 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:146 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 64 62 65 2 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [101])
                (const_int 144 [0x90])) [0 config_3(D)->radius+0 S16 A128])
        (reg:XF 8 st [orig:69 D.3717 ] [69])) mQuery.c:146 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [101])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:69 D.3717 ] [69])
            (nil))))
(insn 66 65 67 2 (set (reg:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f873478aab0 *.LC24>)) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [102])) mQuery.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [102])
        (nil)))
(call_insn 69 68 171 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:147 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 171 69 172 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:147 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 172 171 196 2 (set (reg:HI 0 ax [124])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:147 90 {*movhi_internal}
     (nil))
(insn 196 172 174 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [124])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [124])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:147 446 {*iorqi_ext_0}
     (nil))
(insn 174 196 197 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [124])) mQuery.c:147 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [124])
        (nil)))
(insn 197 174 198 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:70 D.3717 ] [70])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:147 196 {fix_truncsi_i387}
     (nil))
(insn 198 197 72 2 (set (reg:SI 1 dx [orig:71 D.3718 ] [71])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:147 89 {*movsi_internal}
     (nil))
(insn 72 198 73 2 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [103])
                (const_int 192 [0xc0])) [0 config_3(D)->t_w+0 S4 A128])
        (reg:SI 1 dx [orig:71 D.3718 ] [71])) mQuery.c:147 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [103])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:71 D.3718 ] [71])
            (nil))))
(insn 74 73 75 2 (set (reg:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f873478ab48 *.LC25>)) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [104])) mQuery.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [104])
        (nil)))
(call_insn 77 76 79 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:148 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 79 77 80 2 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [105])
                (const_int 208 [0xd0])) [0 config_3(D)->t_i+0 S16 A128])
        (reg:XF 8 st [orig:72 D.3717 ] [72])) mQuery.c:148 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [105])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:72 D.3717 ] [72])
            (nil))))
(insn 81 80 82 2 (set (reg:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f873478abe0 *.LC26>)) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [106])) mQuery.c:149 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [106])
        (nil)))
(call_insn 84 83 86 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:149 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 86 84 87 2 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [107])
                (const_int 224 [0xe0])) [0 config_3(D)->t_r+0 S16 A128])
        (reg:XF 8 st [orig:73 D.3717 ] [73])) mQuery.c:149 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [107])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:73 D.3717 ] [73])
            (nil))))
(insn 88 87 89 2 (set (reg:DI 0 ax [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f873478ac78 *.LC27>)) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) mQuery.c:150 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [108])
        (nil)))
(call_insn 91 90 175 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:150 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 175 91 176 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:150 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 176 175 199 2 (set (reg:HI 0 ax [125])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:150 90 {*movhi_internal}
     (nil))
(insn 199 176 178 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [125])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [125])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:150 446 {*iorqi_ext_0}
     (nil))
(insn 178 199 200 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [125])) mQuery.c:150 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [125])
        (nil)))
(insn 200 178 201 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:74 D.3717 ] [74])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:150 196 {fix_truncsi_i387}
     (nil))
(insn 201 200 94 2 (set (reg:SI 1 dx [orig:75 D.3718 ] [75])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:150 89 {*movsi_internal}
     (nil))
(insn 94 201 95 2 (set (reg/f:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [109])
                (const_int 240 [0xf0])) [0 config_3(D)->shortest_path+0 S4 A128])
        (reg:SI 1 dx [orig:75 D.3718 ] [75])) mQuery.c:150 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [109])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:75 D.3718 ] [75])
            (nil))))
(insn 96 95 97 2 (set (reg:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f873478ad10 *.LC28>)) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [110])) mQuery.c:151 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [110])
        (nil)))
(call_insn 99 98 179 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:151 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 179 99 180 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:151 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 180 179 202 2 (set (reg:HI 0 ax [126])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:151 90 {*movhi_internal}
     (nil))
(insn 202 180 182 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [126])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [126])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:151 446 {*iorqi_ext_0}
     (nil))
(insn 182 202 203 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [126])) mQuery.c:151 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [126])
        (nil)))
(insn 203 182 204 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:76 D.3717 ] [76])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:151 196 {fix_truncsi_i387}
     (nil))
(insn 204 203 205 2 (set (reg:SI 0 ax [orig:77 D.3718 ] [77])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:151 89 {*movsi_internal}
     (nil))
(insn 205 204 206 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
        (reg:SI 0 ax [orig:77 D.3718 ] [77])) mQuery.c:151 89 {*movsi_internal}
     (nil))
(insn 206 205 103 2 (set (reg:XF 8 st [orig:78 D.3717 ] [78])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [0  S4 A32]))) mQuery.c:151 256 {*floatsixf2_i387}
     (nil))
(insn 103 206 104 2 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [111])
                (const_int 256 [0x100])) [0 config_3(D)->d_thr+0 S16 A128])
        (reg:XF 8 st [orig:78 D.3717 ] [78])) mQuery.c:151 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:78 D.3717 ] [78])
            (nil))))
(insn 105 104 106 2 (set (reg:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 106 105 107 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f873478ada8 *.LC29>)) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [112])) mQuery.c:152 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [112])
        (nil)))
(call_insn 108 107 110 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:152 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 110 108 111 2 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [113])
                (const_int 160 [0xa0])) [0 config_3(D)->f_lvl+0 S16 A128])
        (reg:XF 8 st [orig:79 D.3717 ] [79])) mQuery.c:152 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [113])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:79 D.3717 ] [79])
            (nil))))
(insn 112 111 113 2 (set (reg:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 113 112 114 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f873478ae40 *.LC30>)) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 114 113 115 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [114])) mQuery.c:153 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [114])
        (nil)))
(call_insn 115 114 117 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:153 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 117 115 118 2 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 118 117 119 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [115])
                (const_int 176 [0xb0])) [0 config_3(D)->f_lvl+16 S16 A128])
        (reg:XF 8 st [orig:80 D.3717 ] [80])) mQuery.c:153 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [115])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:80 D.3717 ] [80])
            (nil))))
(insn 119 118 120 2 (set (reg:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f873478aed8 *.LC31>)) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 121 120 122 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [116])) mQuery.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [116])
        (nil)))
(call_insn 122 121 183 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:154 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 183 122 184 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mQuery.c:154 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 184 183 207 2 (set (reg:HI 0 ax [127])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -18 [0xffffffffffffffee])) [0  S2 A16])) mQuery.c:154 90 {*movhi_internal}
     (nil))
(insn 207 184 186 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [127])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [127])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:154 446 {*iorqi_ext_0}
     (nil))
(insn 186 207 208 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0  S2 A16])
        (reg:HI 0 ax [127])) mQuery.c:154 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [127])
        (nil)))
(insn 208 186 209 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:81 D.3717 ] [81])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -18 [0xffffffffffffffee])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0  S2 A16]))
        ]) mQuery.c:154 196 {fix_truncsi_i387}
     (nil))
(insn 209 208 125 2 (set (reg:SI 1 dx [orig:82 D.3718 ] [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0  S4 A32])) mQuery.c:154 89 {*movsi_internal}
     (nil))
(insn 125 209 126 2 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 272 [0x110])) [0 config_3(D)->geom+0 S4 A128])
        (reg:SI 1 dx [orig:82 D.3718 ] [82])) mQuery.c:154 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [117])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:82 D.3718 ] [82])
            (nil))))
(insn 127 126 128 2 (set (reg:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8734794000 *.LC32>)) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) mQuery.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [118])
        (nil)))
(call_insn 130 129 132 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:155 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 132 130 133 2 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 2 (set (mem/j:XF (plus:DI (reg/f:DI 0 ax [119])
                (const_int 288 [0x120])) [0 config_3(D)->sig_V+0 S16 A128])
        (reg:XF 8 st [orig:83 D.3717 ] [83])) mQuery.c:155 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [119])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:83 D.3717 ] [83])
            (nil))))
(insn 134 133 156 2 (set (reg:SI 0 ax [orig:84 D.3718 ] [84])
        (const_int 1 [0x1])) mQuery.c:156 89 {*movsi_internal}
     (nil))
(note 156 134 144 2 NOTE_INSN_DELETED)
(insn 144 156 214 2 (use (reg/i:SI 0 ax)) mQuery.c:157 -1
     (nil))
(note 214 144 215 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 215 214 216 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:157 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 216 215 217 2 (simple_return) mQuery.c:157 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 217 216 0)

;; Function get_boundary (get_boundary, funcdef_no=7, decl_uid=1763, cgraph_uid=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 32 (  1.4)
scanning new insn with uid = 219.
scanning new insn with uid = 220.
scanning new insn with uid = 221.
scanning new insn with uid = 222.
scanning new insn with uid = 225.
scanning new insn with uid = 226.
scanning new insn with uid = 227.
scanning new insn with uid = 228.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 196.
starting the processing of deferred insns
ending the processing of deferred insns


get_boundary

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 17[flags] 21[xmm0]
;;  ref usage 	r0={65d,57u} r1={26d,13u} r2={14d} r3={4d,4u} r4={18d,6u} r5={24d,12u} r6={3d,76u} r7={7d,43u} r8={16d,6u} r9={14d,4u} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r17={43d,11u} r18={12d} r19={12d} r20={1d,1u} r21={13d,2u} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} 
;;    total ref usage 912{677d,235u,0e} in 152{140 regular + 12 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 6 1 219 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 219 6 220 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:159 -1
     (nil))
(insn/f 220 219 221 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:159 -1
     (nil))
(insn/f 221 220 222 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mQuery.c:159 -1
     (nil))
(insn/f 222 221 223 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -50088 [0xffffffffffff3c58])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:159 -1
     (nil))
(note 223 222 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 223 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50072 [0xffffffffffff3c68])) [0 bound_file+0 S8 A64])
        (reg:DI 5 di [ bound_file ])) mQuery.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ bound_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ config ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.3745+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [140])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:159 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [140])
        (nil)))
(insn 8 5 9 2 (set (reg:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50072 [0xffffffffffff3c68])) [0 bound_file+0 S8 A64])) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [106])) mQuery.c:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [106])
        (nil)))
(call_insn 11 10 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 11 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [107])) mQuery.c:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [107])
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:162 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:162 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8734794980 *.LC33>)) mQuery.c:162 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:162 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 19 18 20 4 70 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 208 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32])
        (const_int 0 [0])) mQuery.c:165 89 {*movsi_internal}
     (nil))
(jump_insn 208 21 209 4 (set (pc)
        (label_ref 26)) mQuery.c:165 650 {jump}
     (nil)
 -> 26)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 209 208 35)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 35 209 24 5 72 "" [1 uses])
(note 24 35 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 26 25 27 6 71 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 218 6 (set (reg:DI 1 dx [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:165 87 {*movdi_internal_rex64}
     (nil))
(insn 218 28 31 6 (set (reg:DI 0 ax [109])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:165 267 {*leadi}
     (nil))
(insn 31 218 32 6 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:165 89 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [109])) mQuery.c:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [109])
        (nil)))
(call_insn 33 32 36 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:165 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 36 33 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.3736 ] [59])
            (const_int 0 [0]))) mQuery.c:165 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.3736 ] [59])
        (nil)))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mQuery.c:165 612 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 7 (set (reg:SI 1 dx [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32])) mQuery.c:167 89 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (mem/j:SI (reg/f:DI 0 ax [110]) [0 config_9(D)->Nbound+0 S4 A128])
        (reg:SI 1 dx [111])) mQuery.c:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [111])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [110])
            (nil))))
(insn 42 41 43 7 (set (reg:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [112])) mQuery.c:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [112])
        (nil)))
(call_insn 44 43 45 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:168 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 7 (set (reg:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50072 [0xffffffffffff3c68])) [0 bound_file+0 S8 A64])) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [113])) mQuery.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [113])
        (nil)))
(call_insn 48 47 50 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:170 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 50 48 51 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [114])) mQuery.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [114])
        (nil)))
(insn 51 50 52 7 (set (reg:SI 0 ax [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32])) mQuery.c:172 89 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:172 89 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (set (reg:SI 5 di)
        (reg:SI 0 ax [115])) mQuery.c:172 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [115])
        (nil)))
(call_insn 54 53 56 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:172 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 56 54 57 7 (set (reg/f:DI 1 dx [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 7 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [116])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])
        (reg/f:DI 0 ax [orig:60 D.3737 ] [60])) mQuery.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [116])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.3737 ] [60])
            (nil))))
(insn 58 57 210 7 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(jump_insn 210 58 211 7 (set (pc)
        (label_ref 115)) mQuery.c:173 650 {jump}
     (nil)
 -> 115)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 211 210 127)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 127 211 61 8 78 "" [1 uses])
(note 61 127 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 0 ax [orig:62 D.3737 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [117])
        (nil)))
(insn 64 63 65 8 (set (reg:SI 1 dx [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])) mQuery.c:174 89 {*movsi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 1 dx [orig:63 D.3738 ] [63])
        (sign_extend:DI (reg:SI 1 dx [118]))) mQuery.c:174 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [118])
        (nil)))
(insn 66 65 67 8 (parallel [
            (set (reg:DI 1 dx [orig:64 D.3738 ] [64])
                (ashift:DI (reg:DI 1 dx [orig:63 D.3738 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.3738 ] [63])
        (nil)))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.3737 ] [65])
                (plus:DI (reg/f:DI 0 ax [orig:62 D.3737 ] [62])
                    (reg:DI 1 dx [orig:64 D.3738 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.3738 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.3737 ] [62])
            (nil))))
(insn 68 67 217 8 (set (reg/f:DI 3 bx [orig:66 D.3739 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [orig:65 D.3737 ] [65]) [0 *_17+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.3737 ] [65])
        (nil)))
(insn 217 68 70 8 (set (reg:DI 0 ax [119])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:174 267 {*leadi}
     (nil))
(insn 70 217 71 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [119])) mQuery.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [119])
        (nil)))
(call_insn/i 71 70 72 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 8 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:174 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 73 72 74 8 (set (reg:XF 8 st [orig:68 D.3741 ] [68])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64]))) mQuery.c:174 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 67 [ D.3740 ])
        (nil)))
(insn 74 73 75 8 (set (mem:XF (reg/f:DI 3 bx [orig:66 D.3739 ] [66]) [0 *_18+0 S16 A128])
        (reg:XF 8 st [orig:68 D.3741 ] [68])) mQuery.c:174 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:68 D.3741 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:66 D.3739 ] [66])
            (nil))))
(insn 75 74 212 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(jump_insn 212 75 213 8 (set (pc)
        (label_ref 80)) mQuery.c:175 650 {jump}
     (nil)
 -> 80)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 213 212 91)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 91 213 78 9 76 "" [1 uses])
(note 78 91 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:175 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 80 79 81 10 74 "" [1 uses])
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg:SI 0 ax [121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:DI 0 ax [120])
        (sign_extend:DI (reg:SI 0 ax [121]))) mQuery.c:175 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [121])
        (nil)))
(insn 84 83 85 10 (set (reg:QI 0 ax [orig:69 D.3742 ] [69])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [120]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:175 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [120])
        (nil)))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:69 D.3742 ] [69])
            (const_int 9 [0x9]))) mQuery.c:175 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.3742 ] [69])
        (nil)))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:175 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg:SI 0 ax [123])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(insn 89 88 90 11 (set (reg:DI 0 ax [122])
        (sign_extend:DI (reg:SI 0 ax [123]))) mQuery.c:175 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [123])
        (nil)))
(insn 90 89 92 11 (set (reg:QI 0 ax [orig:70 D.3742 ] [70])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [122]))
                (const_int -50032 [0xffffffffffff3c90])) [0 c S1 A8])) mQuery.c:175 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [122])
        (nil)))
(insn 92 90 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:70 D.3742 ] [70])
            (const_int 32 [0x20]))) mQuery.c:175 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:70 D.3742 ] [70])
        (nil)))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) mQuery.c:175 612 {*jcc_1}
     (nil)
 -> 91)
;;  succ:       9
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 94 93 95 12 75 "" [1 uses])
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 12 (set (reg/f:DI 0 ax [orig:71 D.3737 ] [71])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [124])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [124])
        (nil)))
(insn 98 97 99 12 (set (reg:SI 1 dx [125])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])) mQuery.c:176 89 {*movsi_internal}
     (nil))
(insn 99 98 100 12 (set (reg:DI 1 dx [orig:72 D.3738 ] [72])
        (sign_extend:DI (reg:SI 1 dx [125]))) mQuery.c:176 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [125])
        (nil)))
(insn 100 99 101 12 (parallel [
            (set (reg:DI 1 dx [orig:73 D.3738 ] [73])
                (ashift:DI (reg:DI 1 dx [orig:72 D.3738 ] [72])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.3738 ] [72])
        (nil)))
(insn 101 100 102 12 (parallel [
            (set (reg/f:DI 0 ax [orig:74 D.3737 ] [74])
                (plus:DI (reg/f:DI 0 ax [orig:71 D.3737 ] [71])
                    (reg:DI 1 dx [orig:73 D.3738 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:73 D.3738 ] [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.3737 ] [71])
            (nil))))
(insn 102 101 215 12 (set (reg/f:DI 0 ax [orig:75 D.3739 ] [75])
        (mem/f:DI (reg/f:DI 0 ax [orig:74 D.3737 ] [74]) [0 *_28+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.3737 ] [74])
        (nil)))
(insn 215 102 104 12 (set (reg/f:DI 3 bx [orig:76 D.3739 ] [76])
        (plus:DI (reg/f:DI 0 ax [orig:75 D.3739 ] [75])
            (const_int 16 [0x10]))) mQuery.c:176 267 {*leadi}
     (nil))
(insn 104 215 216 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 273 {*addsi_1}
     (nil))
(insn 216 104 106 12 (set (reg:DI 1 dx [126])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:176 267 {*leadi}
     (nil))
(insn 106 216 107 12 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50044 [0xffffffffffff3c84])) [0 j+0 S4 A32])) mQuery.c:176 89 {*movsi_internal}
     (nil))
(insn 107 106 108 12 (set (reg:DI 0 ax [127])
        (sign_extend:DI (reg:SI 0 ax [128]))) mQuery.c:176 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [128])
        (nil)))
(insn 108 107 109 12 (parallel [
            (set (reg/f:DI 0 ax [orig:77 D.3736 ] [77])
                (plus:DI (reg:DI 0 ax [127])
                    (reg:DI 1 dx [126])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [127])
        (expr_list:REG_DEAD (reg:DI 1 dx [126])
            (nil))))
(insn 109 108 110 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:77 D.3736 ] [77])) mQuery.c:176 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 D.3736 ] [77])
        (nil)))
(call_insn/i 110 109 111 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:176 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 111 110 112 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:176 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 112 111 113 12 (set (reg:XF 8 st [orig:79 D.3741 ] [79])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -50088 [0xffffffffffff3c58])) [0 %sfp+-50088 S8 A64]))) mQuery.c:176 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 78 [ D.3740 ])
        (nil)))
(insn 113 112 114 12 (set (mem:XF (reg/f:DI 3 bx [orig:76 D.3739 ] [76]) [0 *_30+0 S16 A128])
        (reg:XF 8 st [orig:79 D.3741 ] [79])) mQuery.c:176 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:79 D.3741 ] [79])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:76 D.3739 ] [76])
            (nil))))
(insn 114 113 115 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 115 114 116 13 73 "" [1 uses])
(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 214 13 (set (reg:DI 1 dx [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:173 87 {*movdi_internal_rex64}
     (nil))
(insn 214 117 120 13 (set (reg:DI 0 ax [130])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -50032 [0xffffffffffff3c90]))) mQuery.c:173 267 {*leadi}
     (nil))
(insn 120 214 121 13 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(insn 121 120 122 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [130])) mQuery.c:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [130])
        (nil)))
(call_insn 122 121 124 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:173 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 124 122 125 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:61 D.3736 ] [61])
            (const_int 0 [0]))) mQuery.c:173 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.3736 ] [61])
        (nil)))
(jump_insn 125 124 126 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) mQuery.c:173 612 {*jcc_1}
     (nil)
 -> 131)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 126 125 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 128 126 129 14 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -50048 [0xffffffffffff3c80])) [0 i+0 S4 A32])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [131])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -50052 [0xffffffffffff3c7c])) [0 Nbound+0 S4 A32]))) mQuery.c:173 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [131])
        (nil)))
(jump_insn 130 129 131 14 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) mQuery.c:173 612 {*jcc_1}
     (nil)
 -> 127)
;;  succ:       8
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 131 130 132 15 77 "" [1 uses])
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 15 (set (reg:DI 0 ax [132])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50040 [0xffffffffffff3c88])) [0 rstream+0 S8 A64])) mQuery.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 134 133 135 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [132])) mQuery.c:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [132])
        (nil)))
(call_insn 135 134 136 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:179 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 15 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 137 136 138 15 (set (reg/f:DI 0 ax [orig:80 D.3737 ] [80])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [133])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [133])
        (nil)))
(insn 138 137 139 15 (set (reg/f:DI 0 ax [orig:81 D.3739 ] [81])
        (mem/f:DI (reg/f:DI 0 ax [orig:80 D.3737 ] [80]) [0 *_36+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.3737 ] [80])
        (nil)))
(insn 139 138 140 15 (set (reg:XF 9 st(1) [orig:82 D.3741 ] [82])
        (mem:XF (reg/f:DI 0 ax [orig:81 D.3739 ] [81]) [0 *_37+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 D.3739 ] [81])
        (nil)))
(insn 140 139 141 15 (set (reg/f:DI 0 ax [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 15 (set (reg/f:DI 1 dx [orig:83 D.3737 ] [83])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [134])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [134])
        (nil)))
(insn 142 141 143 15 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 15 (set (reg:SI 0 ax [orig:84 D.3743 ] [84])
        (mem/j:SI (reg/f:DI 0 ax [135]) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [135])
        (nil)))
(insn 144 143 145 15 (set (reg:DI 0 ax [orig:85 D.3738 ] [85])
        (sign_extend:DI (reg:SI 0 ax [orig:84 D.3743 ] [84]))) mQuery.c:181 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 D.3743 ] [84])
        (nil)))
(insn 145 144 146 15 (parallel [
            (set (reg:DI 0 ax [orig:86 D.3738 ] [86])
                (ashift:DI (reg:DI 0 ax [orig:85 D.3738 ] [85])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:85 D.3738 ] [85])
        (nil)))
(insn 146 145 147 15 (parallel [
            (set (reg:DI 0 ax [orig:87 D.3744 ] [87])
                (plus:DI (reg:DI 0 ax [orig:86 D.3738 ] [86])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:86 D.3738 ] [86])
        (nil)))
(insn 147 146 148 15 (parallel [
            (set (reg/f:DI 0 ax [orig:88 D.3737 ] [88])
                (plus:DI (reg:DI 0 ax [orig:87 D.3744 ] [87])
                    (reg/f:DI 1 dx [orig:83 D.3737 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:87 D.3744 ] [87])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:83 D.3737 ] [83])
            (nil))))
(insn 148 147 149 15 (set (reg/f:DI 0 ax [orig:89 D.3739 ] [89])
        (mem/f:DI (reg/f:DI 0 ax [orig:88 D.3737 ] [88]) [0 *_44+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 D.3737 ] [88])
        (nil)))
(insn 149 148 150 15 (set (reg:XF 8 st [orig:90 D.3741 ] [90])
        (mem:XF (reg/f:DI 0 ax [orig:89 D.3739 ] [89]) [0 *_45+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.3739 ] [89])
        (nil)))
(insn 150 149 151 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:82 D.3741 ] [82])
            (reg:XF 8 st [orig:90 D.3741 ] [90]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 151 150 201 15 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       19
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 8 [st] 9 [st(1)]
;; lr  def 	 17 [flags]
(note 201 151 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 152 201 153 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:82 D.3741 ] [82])
            (reg:XF 8 st [orig:90 D.3741 ] [90]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:90 D.3741 ] [90])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:82 D.3741 ] [82])
            (nil))))
(jump_insn 153 152 154 16 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       19
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 8 [st] 9 [st(1)] 17 [flags]
(note 154 153 155 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 17 (set (reg/f:DI 0 ax [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 156 155 157 17 (set (reg/f:DI 0 ax [orig:91 D.3737 ] [91])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [136])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [136])
        (nil)))
(insn 157 156 158 17 (set (reg/f:DI 0 ax [orig:92 D.3739 ] [92])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.3737 ] [91]) [0 *_47+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.3737 ] [91])
        (nil)))
(insn 158 157 159 17 (parallel [
            (set (reg/f:DI 0 ax [orig:93 D.3739 ] [93])
                (plus:DI (reg/f:DI 0 ax [orig:92 D.3739 ] [92])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.3739 ] [92])
        (nil)))
(insn 159 158 160 17 (set (reg:XF 9 st(1) [orig:94 D.3741 ] [94])
        (mem:XF (reg/f:DI 0 ax [orig:93 D.3739 ] [93]) [0 *_49+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.3739 ] [93])
        (nil)))
(insn 160 159 161 17 (set (reg/f:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 161 160 162 17 (set (reg/f:DI 1 dx [orig:95 D.3737 ] [95])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [137])
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [137])
        (nil)))
(insn 162 161 163 17 (set (reg/f:DI 0 ax [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -50080 [0xffffffffffff3c60])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 163 162 164 17 (set (reg:SI 0 ax [orig:96 D.3743 ] [96])
        (mem/j:SI (reg/f:DI 0 ax [138]) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [138])
        (nil)))
(insn 164 163 165 17 (set (reg:DI 0 ax [orig:97 D.3738 ] [97])
        (sign_extend:DI (reg:SI 0 ax [orig:96 D.3743 ] [96]))) mQuery.c:181 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:96 D.3743 ] [96])
        (nil)))
(insn 165 164 166 17 (parallel [
            (set (reg:DI 0 ax [orig:98 D.3738 ] [98])
                (ashift:DI (reg:DI 0 ax [orig:97 D.3738 ] [97])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:97 D.3738 ] [97])
        (nil)))
(insn 166 165 167 17 (parallel [
            (set (reg:DI 0 ax [orig:99 D.3744 ] [99])
                (plus:DI (reg:DI 0 ax [orig:98 D.3738 ] [98])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:98 D.3738 ] [98])
        (nil)))
(insn 167 166 168 17 (parallel [
            (set (reg/f:DI 0 ax [orig:100 D.3737 ] [100])
                (plus:DI (reg:DI 0 ax [orig:99 D.3744 ] [99])
                    (reg/f:DI 1 dx [orig:95 D.3737 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:99 D.3744 ] [99])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:95 D.3737 ] [95])
            (nil))))
(insn 168 167 169 17 (set (reg/f:DI 0 ax [orig:101 D.3739 ] [101])
        (mem/f:DI (reg/f:DI 0 ax [orig:100 D.3737 ] [100]) [0 *_56+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:100 D.3737 ] [100])
        (nil)))
(insn 169 168 170 17 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.3739 ] [102])
                (plus:DI (reg/f:DI 0 ax [orig:101 D.3739 ] [101])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:101 D.3739 ] [101])
        (nil)))
(insn 170 169 171 17 (set (reg:XF 8 st [orig:103 D.3741 ] [103])
        (mem:XF (reg/f:DI 0 ax [orig:102 D.3739 ] [102]) [0 *_58+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 D.3739 ] [102])
        (nil)))
(insn 171 170 172 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:94 D.3741 ] [94])
            (reg:XF 8 st [orig:103 D.3741 ] [103]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 172 171 202 17 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       19
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 8 [st] 9 [st(1)]
;; lr  def 	 17 [flags]
(note 202 172 173 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 173 202 174 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:94 D.3741 ] [94])
            (reg:XF 8 st [orig:103 D.3741 ] [103]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:103 D.3741 ] [103])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:94 D.3741 ] [94])
            (nil))))
(jump_insn 174 173 178 18 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 182)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 182)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              18 (FALLTHRU)
;;              15
;;              17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 178 174 179 19 79 "" [3 uses])
(note 179 178 180 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8734794a18 *.LC34>)) mQuery.c:182 87 {*movdi_internal_rex64}
     (nil))
(call_insn 181 180 182 19 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:182 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
(code_label 182 181 183 20 80 "" [1 uses])
(note 183 182 184 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 194 20 (set (reg:SI 0 ax [orig:104 D.3743 ] [104])
        (const_int 1 [0x1])) mQuery.c:184 89 {*movsi_internal}
     (nil))
(insn 194 184 195 20 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.3745+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [141]))
        ]) mQuery.c:185 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 2 cx [141])
        (nil)))
(jump_insn 195 194 206 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) mQuery.c:185 612 {*jcc_1}
     (nil)
 -> 198)
;;  succ:       22
;;              21 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 206 195 196 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 196 206 197 21 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:185 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 197 196 198)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
(code_label 198 197 207 22 83 "" [1 uses])
(note 207 198 199 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 199 207 224 22 (use (reg/i:SI 0 ax)) mQuery.c:185 -1
     (nil))
(note 224 199 225 22 NOTE_INSN_EPILOGUE_BEG)
(insn 225 224 226 22 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 50088 [0xc3a8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:185 -1
     (nil))
(insn 226 225 227 22 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:185 -1
     (nil))
(insn/f 227 226 228 22 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:185 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 228 227 229 22 (simple_return) mQuery.c:185 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 229 228 0)

;; Function get_temp_shock (get_temp_shock, funcdef_no=8, decl_uid=1768, cgraph_uid=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 33 (  1.6)
scanning new insn with uid = 180.
scanning new insn with uid = 181.
scanning new insn with uid = 182.
scanning new insn with uid = 183.
scanning new insn with uid = 186.
scanning new insn with uid = 187.
scanning new insn with uid = 188.
scanning new insn with uid = 189.
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 148.
verify found no changes in insn with uid = 161.
starting the processing of deferred insns
ending the processing of deferred insns


get_temp_shock

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={45d,37u} r1={24d,11u} r2={14d} r3={4d,4u} r4={18d,5u} r5={24d,12u} r6={3d,69u} r7={7d,41u} r8={14d,2u} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r17={33d,9u} r18={12d} r19={12d} r20={1d,1u} r21={13d,2u} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} 
;;    total ref usage 834{641d,193u,0e} in 121{109 regular + 12 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 5 1 180 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 180 5 181 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:187 -1
     (nil))
(insn/f 181 180 182 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:187 -1
     (nil))
(insn/f 182 181 183 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mQuery.c:187 -1
     (nil))
(insn/f 183 182 184 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -568 [0xfffffffffffffdc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:187 -1
     (nil))
(note 184 183 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 184 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 conf+0 S8 A64])
        (reg:DI 5 di [ conf ])) mQuery.c:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ conf ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.3756+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [114])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:187 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [114])
        (nil)))
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:189 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 11 9 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [84])) mQuery.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [84])
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:190 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) mQuery.c:190 612 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f87347b0558 *.LC36>)) mQuery.c:190 87 {*movdi_internal_rex64}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:190 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 17 16 18 4 87 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 169 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32])
        (const_int 0 [0])) mQuery.c:194 89 {*movsi_internal}
     (nil))
(jump_insn 169 19 170 4 (set (pc)
        (label_ref 24)) mQuery.c:194 650 {jump}
     (nil)
 -> 24)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 170 169 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 33 170 22 5 89 "" [1 uses])
(note 22 33 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 24 23 25 6 88 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 179 6 (set (reg:DI 1 dx [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mQuery.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 179 26 29 6 (set (reg:DI 0 ax [86])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mQuery.c:194 267 {*leadi}
     (nil))
(insn 29 179 30 6 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:194 89 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) mQuery.c:194 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [86])
        (nil)))
(call_insn 31 30 34 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:194 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 34 31 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.3748 ] [59])
            (const_int 0 [0]))) mQuery.c:194 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.3748 ] [59])
        (nil)))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:194 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mQuery.c:195 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) mQuery.c:195 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(call_insn 39 38 40 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:195 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 7 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 conf+0 S8 A64])) mQuery.c:197 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 7 (set (reg:SI 1 dx [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32])) mQuery.c:197 89 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [88])
                (const_int 128 [0x80])) [0 conf_8(D)->n_point_shock+0 S4 A128])
        (reg:SI 1 dx [89])) mQuery.c:197 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [89])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
            (nil))))
(insn 43 42 44 7 (set (reg:SI 0 ax [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32])) mQuery.c:198 89 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:198 89 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:SI 5 di)
        (reg:SI 0 ax [90])) mQuery.c:198 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [90])
        (nil)))
(call_insn 46 45 48 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:198 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 48 46 49 7 (set (reg/f:DI 1 dx [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 conf+0 S8 A64])) mQuery.c:198 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 7 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [91])
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])
        (reg/f:DI 0 ax [orig:60 D.3749 ] [60])) mQuery.c:198 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [91])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.3749 ] [60])
            (nil))))
(insn 50 49 51 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(call_insn 52 51 54 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:200 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 54 52 55 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [92])) mQuery.c:200 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(insn 55 54 171 7 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(jump_insn 171 55 172 7 (set (pc)
        (label_ref 128)) mQuery.c:201 650 {jump}
     (nil)
 -> 128)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 172 171 140)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 140 172 58 8 96 "" [1 uses])
(note 58 140 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 conf+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 8 (set (reg/f:DI 0 ax [orig:62 D.3749 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (nil)))
(insn 61 60 62 8 (set (reg:SI 1 dx [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])) mQuery.c:202 89 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg:DI 1 dx [orig:63 D.3750 ] [63])
        (sign_extend:DI (reg:SI 1 dx [94]))) mQuery.c:202 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [94])
        (nil)))
(insn 63 62 64 8 (parallel [
            (set (reg:DI 1 dx [orig:64 D.3750 ] [64])
                (ashift:DI (reg:DI 1 dx [orig:63 D.3750 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.3750 ] [63])
        (nil)))
(insn 64 63 65 8 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.3749 ] [65])
                (plus:DI (reg/f:DI 0 ax [orig:62 D.3749 ] [62])
                    (reg:DI 1 dx [orig:64 D.3750 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.3750 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.3749 ] [62])
            (nil))))
(insn 65 64 178 8 (set (reg/f:DI 3 bx [orig:66 D.3751 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [orig:65 D.3749 ] [65]) [0 *_16+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.3749 ] [65])
        (nil)))
(insn 178 65 67 8 (set (reg:DI 0 ax [95])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mQuery.c:202 267 {*leadi}
     (nil))
(insn 67 178 68 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) mQuery.c:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [95])
        (nil)))
(call_insn/i 68 67 69 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:202 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 8 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -576 [0xfffffffffffffdc0])) [0 %sfp+-576 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:202 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 70 69 71 8 (set (reg:XF 8 st [orig:68 D.3753 ] [68])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -576 [0xfffffffffffffdc0])) [0 %sfp+-576 S8 A64]))) mQuery.c:202 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 67 [ D.3752 ])
        (nil)))
(insn 71 70 72 8 (set (mem:XF (reg/f:DI 3 bx [orig:66 D.3751 ] [66]) [0 *_17+0 S16 A128])
        (reg:XF 8 st [orig:68 D.3753 ] [68])) mQuery.c:202 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:68 D.3753 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:66 D.3751 ] [66])
            (nil))))
(insn 72 71 173 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(jump_insn 173 72 174 8 (set (pc)
        (label_ref 77)) mQuery.c:203 650 {jump}
     (nil)
 -> 77)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 174 173 94)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 94 174 75 9 93 "" [1 uses])
(note 75 94 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:203 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 77 76 78 10 91 "" [1 uses])
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg:SI 0 ax [97])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 80 79 81 10 (set (reg:DI 0 ax [96])
        (sign_extend:DI (reg:SI 0 ax [97]))) mQuery.c:203 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [97])
        (nil)))
(insn 81 80 82 10 (set (reg:QI 0 ax [orig:69 D.3754 ] [69])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [96]))
                (const_int -528 [0xfffffffffffffdf0])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(insn 82 81 83 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:69 D.3754 ] [69])
            (const_int 9 [0x9]))) mQuery.c:203 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.3754 ] [69])
        (nil)))
(jump_insn 83 82 84 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 97)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (reg:SI 0 ax [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 86 85 87 11 (set (reg:DI 0 ax [98])
        (sign_extend:DI (reg:SI 0 ax [99]))) mQuery.c:203 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [99])
        (nil)))
(insn 87 86 88 11 (set (reg:QI 0 ax [orig:70 D.3754 ] [70])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [98]))
                (const_int -528 [0xfffffffffffffdf0])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [98])
        (nil)))
(insn 88 87 89 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:70 D.3754 ] [70])
            (const_int 32 [0x20]))) mQuery.c:203 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:70 D.3754 ] [70])
        (nil)))
(jump_insn 89 88 90 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 97)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 12 (set (reg:SI 0 ax [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 92 91 93 12 (set (reg:DI 0 ax [100])
        (sign_extend:DI (reg:SI 0 ax [101]))) mQuery.c:203 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [101])
        (nil)))
(insn 93 92 95 12 (set (reg:QI 0 ax [orig:71 D.3754 ] [71])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [100]))
                (const_int -528 [0xfffffffffffffdf0])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [100])
        (nil)))
(insn 95 93 96 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:71 D.3754 ] [71])
            (const_int 0 [0]))) mQuery.c:203 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:71 D.3754 ] [71])
        (nil)))
(jump_insn 96 95 97 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       9
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 97 96 98 13 92 "" [2 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])) mQuery.c:204 89 {*movsi_internal}
     (nil))
(insn 100 99 101 13 (set (reg:DI 0 ax [102])
        (sign_extend:DI (reg:SI 0 ax [103]))) mQuery.c:204 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [103])
        (nil)))
(insn 101 100 102 13 (set (reg:QI 0 ax [orig:72 D.3754 ] [72])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [102]))
                (const_int -528 [0xfffffffffffffdf0])) [0 c S1 A8])) mQuery.c:204 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [102])
        (nil)))
(insn 102 101 103 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:72 D.3754 ] [72])
            (const_int 0 [0]))) mQuery.c:204 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:72 D.3754 ] [72])
        (nil)))
(jump_insn 103 102 104 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mQuery.c:204 612 {*jcc_1}
     (nil)
 -> 107)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f87347b05f0 *.LC37>)) mQuery.c:204 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 14 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:204 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 107 106 108 15 94 "" [1 uses])
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 15 (set (reg/f:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 conf+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (nil))
(insn 110 109 111 15 (set (reg/f:DI 0 ax [orig:73 D.3749 ] [73])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [104])
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [104])
        (nil)))
(insn 111 110 112 15 (set (reg:SI 1 dx [105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])) mQuery.c:205 89 {*movsi_internal}
     (nil))
(insn 112 111 113 15 (set (reg:DI 1 dx [orig:74 D.3750 ] [74])
        (sign_extend:DI (reg:SI 1 dx [105]))) mQuery.c:205 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [105])
        (nil)))
(insn 113 112 114 15 (parallel [
            (set (reg:DI 1 dx [orig:75 D.3750 ] [75])
                (ashift:DI (reg:DI 1 dx [orig:74 D.3750 ] [74])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.3750 ] [74])
        (nil)))
(insn 114 113 115 15 (parallel [
            (set (reg/f:DI 0 ax [orig:76 D.3749 ] [76])
                (plus:DI (reg/f:DI 0 ax [orig:73 D.3749 ] [73])
                    (reg:DI 1 dx [orig:75 D.3750 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:75 D.3750 ] [75])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.3749 ] [73])
            (nil))))
(insn 115 114 176 15 (set (reg/f:DI 0 ax [orig:77 D.3751 ] [77])
        (mem/f:DI (reg/f:DI 0 ax [orig:76 D.3749 ] [76]) [0 *_29+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:76 D.3749 ] [76])
        (nil)))
(insn 176 115 117 15 (set (reg/f:DI 3 bx [orig:78 D.3751 ] [78])
        (plus:DI (reg/f:DI 0 ax [orig:77 D.3751 ] [77])
            (const_int 16 [0x10]))) mQuery.c:205 267 {*leadi}
     (nil))
(insn 117 176 177 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 273 {*addsi_1}
     (nil))
(insn 177 117 119 15 (set (reg:DI 1 dx [106])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mQuery.c:205 267 {*leadi}
     (nil))
(insn 119 177 120 15 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 j+0 S4 A32])) mQuery.c:205 89 {*movsi_internal}
     (nil))
(insn 120 119 121 15 (set (reg:DI 0 ax [107])
        (sign_extend:DI (reg:SI 0 ax [108]))) mQuery.c:205 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [108])
        (nil)))
(insn 121 120 122 15 (parallel [
            (set (reg/f:DI 0 ax [orig:79 D.3748 ] [79])
                (plus:DI (reg:DI 0 ax [107])
                    (reg:DI 1 dx [106])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [107])
        (expr_list:REG_DEAD (reg:DI 1 dx [106])
            (nil))))
(insn 122 121 123 15 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:79 D.3748 ] [79])) mQuery.c:205 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.3748 ] [79])
        (nil)))
(call_insn/i 123 122 124 15 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:205 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 15 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -576 [0xfffffffffffffdc0])) [0 %sfp+-576 S8 A64])
        (reg:DF 21 xmm0)) mQuery.c:205 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 125 124 126 15 (set (reg:XF 8 st [orig:81 D.3753 ] [81])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -576 [0xfffffffffffffdc0])) [0 %sfp+-576 S8 A64]))) mQuery.c:205 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 80 [ D.3752 ])
        (nil)))
(insn 126 125 127 15 (set (mem:XF (reg/f:DI 3 bx [orig:78 D.3751 ] [78]) [0 *_31+0 S16 A128])
        (reg:XF 8 st [orig:81 D.3753 ] [81])) mQuery.c:205 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:81 D.3753 ] [81])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:78 D.3751 ] [78])
            (nil))))
(insn 127 126 128 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 273 {*addsi_1}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 128 127 129 16 90 "" [1 uses])
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 175 16 (set (reg:DI 1 dx [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mQuery.c:201 87 {*movdi_internal_rex64}
     (nil))
(insn 175 130 133 16 (set (reg:DI 0 ax [110])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mQuery.c:201 267 {*leadi}
     (nil))
(insn 133 175 134 16 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [110])) mQuery.c:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [110])
        (nil)))
(call_insn 135 134 137 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:201 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 137 135 138 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:61 D.3748 ] [61])
            (const_int 0 [0]))) mQuery.c:201 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.3748 ] [61])
        (nil)))
(jump_insn 138 137 139 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mQuery.c:201 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 139 138 141 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 17 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -548 [0xfffffffffffffddc])) [0 i+0 S4 A32])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(insn 142 141 143 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [111])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -540 [0xfffffffffffffde4])) [0 N+0 S4 A32]))) mQuery.c:201 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [111])
        (nil)))
(jump_insn 143 142 144 17 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) mQuery.c:201 612 {*jcc_1}
     (nil)
 -> 140)
;;  succ:       8
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 144 143 145 18 95 "" [1 uses])
(note 145 144 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 18 (set (reg:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mQuery.c:207 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [112])) mQuery.c:207 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [112])
        (nil)))
(call_insn 148 147 149 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:207 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 149 148 159 18 (set (reg:SI 0 ax [orig:82 D.3755 ] [82])
        (const_int 1 [0x1])) mQuery.c:208 89 {*movsi_internal}
     (nil))
(insn 159 149 160 18 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.3756+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [115]))
        ]) mQuery.c:210 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 2 cx [115])
        (nil)))
(jump_insn 160 159 167 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) mQuery.c:210 612 {*jcc_1}
     (nil)
 -> 163)
;;  succ:       20
;;              19 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 167 160 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn 161 167 162 19 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:210 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 162 161 163)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
(code_label 163 162 168 20 98 "" [1 uses])
(note 168 163 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 164 168 185 20 (use (reg/i:SI 0 ax)) mQuery.c:210 -1
     (nil))
(note 185 164 186 20 NOTE_INSN_EPILOGUE_BEG)
(insn 186 185 187 20 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 568 [0x238])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:210 -1
     (nil))
(insn 187 186 188 20 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:210 -1
     (nil))
(insn/f 188 187 189 20 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:210 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 189 188 190 20 (simple_return) mQuery.c:210 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 190 189 0)

;; Function add_nsim_output (add_nsim_output, funcdef_no=9, decl_uid=1772, cgraph_uid=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 16 count 20 (  1.4)
scanning new insn with uid = 136.
scanning new insn with uid = 137.
scanning new insn with uid = 138.
scanning new insn with uid = 139.
scanning new insn with uid = 142.
scanning new insn with uid = 143.
scanning new insn with uid = 144.
scanning new insn with uid = 145.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 112.
starting the processing of deferred insns
ending the processing of deferred insns


add_nsim_output

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={39d,36u} r1={15d,12u,6e} r2={9d,5u,1e} r3={3d,2u} r4={6d,3u} r5={10d,5u} r6={3d,47u} r7={7d,25u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={22d,4u} r18={3d} r19={3d} r20={1d,1u,7e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 393{239d,140u,14e} in 93{90 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 7 1 136 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 136 7 137 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mQuery.c:212 -1
     (nil))
(insn/f 137 136 138 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mQuery.c:212 -1
     (nil))
(insn/f 138 137 139 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mQuery.c:212 -1
     (nil))
(insn/f 139 138 140 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:212 -1
     (nil))
(note 140 139 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 140 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])
        (reg:DI 5 di [ file_out ])) mQuery.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ file_out ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 file_in+0 S8 A64])
        (reg:DI 4 si [ file_in ])) mQuery.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ file_in ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 n+0 S4 A32])
        (reg:SI 1 dx [ n ])) mQuery.c:212 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.3765+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [108])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:212 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [108])
        (nil)))
(insn 9 6 120 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:214 89 {*movsi_internal}
     (nil))
(jump_insn 120 9 121 2 (set (pc)
        (label_ref 14)) mQuery.c:214 650 {jump}
     (nil)
 -> 14)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 121 120 21)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 21 121 12 3 101 "" [1 uses])
(note 12 21 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 14 13 15 4 100 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 0 ax [78])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])) mQuery.c:214 89 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 1 dx [orig:59 D.3760 ] [59])
        (sign_extend:DI (reg:SI 0 ax [78]))) mQuery.c:214 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [78])
        (nil)))
(insn 18 17 19 4 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 file_in+0 S8 A64])) mQuery.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 0 ax [orig:60 D.3761 ] [60])
                (plus:DI (reg/f:DI 0 ax [79])
                    (reg:DI 1 dx [orig:59 D.3760 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.3760 ] [59])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
                    (reg:DI 1 dx [orig:59 D.3760 ] [59]))
                (nil)))))
(insn 20 19 22 4 (set (reg:QI 0 ax [orig:61 D.3762 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 D.3761 ] [60]) [0 *_7+0 S1 A8])) mQuery.c:214 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.3761 ] [60])
        (nil)))
(insn 22 20 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.3762 ] [61])
            (const_int 0 [0]))) mQuery.c:214 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.3762 ] [61])
        (nil)))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mQuery.c:214 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 24 23 122 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 122 24 123 5 (set (pc)
        (label_ref 29)) mQuery.c:215 650 {jump}
     (nil)
 -> 29)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 123 122 36)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 36 123 27 6 103 "" [1 uses])
(note 27 36 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 29 28 30 7 102 "" [1 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:SI 0 ax [80])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32])) mQuery.c:215 89 {*movsi_internal}
     (nil))
(insn 32 31 33 7 (set (reg:DI 1 dx [orig:62 D.3760 ] [62])
        (sign_extend:DI (reg:SI 0 ax [80]))) mQuery.c:215 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [80])
        (nil)))
(insn 33 32 34 7 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 file_in+0 S8 A64])) mQuery.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 7 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.3761 ] [63])
                (plus:DI (reg/f:DI 0 ax [81])
                    (reg:DI 1 dx [orig:62 D.3760 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.3760 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.3760 ] [62]))
                (nil)))))
(insn 35 34 37 7 (set (reg:QI 0 ax [orig:64 D.3762 ] [64])
        (mem:QI (reg/f:DI 0 ax [orig:63 D.3761 ] [63]) [0 *_11+0 S1 A8])) mQuery.c:215 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.3761 ] [63])
        (nil)))
(insn 37 35 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 D.3762 ] [64])
            (const_int 46 [0x2e]))) mQuery.c:215 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:64 D.3762 ] [64])
        (nil)))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) mQuery.c:215 612 {*jcc_1}
     (nil)
 -> 36)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 135 8 (set (reg:SI 1 dx [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 n+0 S4 A32])) mQuery.c:218 89 {*movsi_internal}
     (nil))
(insn 135 40 43 8 (set (reg:DI 0 ax [83])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -80 [0xffffffffffffffb0]))) mQuery.c:218 267 {*leadi}
     (nil))
(insn 43 135 44 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f87347bcab0 *.LC38>)) mQuery.c:218 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [83])) mQuery.c:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 45 44 46 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:218 91 {*movqi_internal}
     (nil))
(call_insn 46 45 47 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f8734943f00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) mQuery.c:218 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 47 46 124 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(jump_insn 124 47 125 8 (set (pc)
        (label_ref 62)) mQuery.c:220 650 {jump}
     (nil)
 -> 62)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 125 124 64)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
(code_label 64 125 50 9 105 "" [1 uses])
(note 50 64 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 52 51 53 9 (set (reg:DI 1 dx [orig:65 D.3760 ] [65])
        (sign_extend:DI (reg:SI 0 ax [84]))) mQuery.c:220 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [84])
        (nil)))
(insn 53 52 54 9 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:220 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg/f:DI 1 dx [orig:66 D.3761 ] [66])
                (plus:DI (reg:DI 1 dx [orig:65 D.3760 ] [65])
                    (reg/f:DI 0 ax [85])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.3760 ] [65])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
                    (reg:DI 1 dx [orig:65 D.3760 ] [65]))
                (nil)))))
(insn 55 54 56 9 (set (reg:SI 0 ax [86])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:DI 2 cx [orig:67 D.3760 ] [67])
        (sign_extend:DI (reg:SI 0 ax [86]))) mQuery.c:220 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [86])
        (nil)))
(insn 57 56 58 9 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 file_in+0 S8 A64])) mQuery.c:220 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg/f:DI 0 ax [orig:68 D.3761 ] [68])
                (plus:DI (reg/f:DI 0 ax [87])
                    (reg:DI 2 cx [orig:67 D.3760 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [87])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:67 D.3760 ] [67])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
                    (reg:DI 2 cx [orig:67 D.3760 ] [67]))
                (nil)))))
(insn 59 58 60 9 (set (reg:QI 0 ax [orig:69 D.3762 ] [69])
        (mem:QI (reg/f:DI 0 ax [orig:68 D.3761 ] [68]) [0 *_20+0 S1 A8])) mQuery.c:220 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.3761 ] [68])
        (nil)))
(insn 60 59 61 9 (set (mem:QI (reg/f:DI 1 dx [orig:66 D.3761 ] [66]) [0 *_18+0 S1 A8])
        (reg:QI 0 ax [orig:69 D.3762 ] [69])) mQuery.c:220 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.3762 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:66 D.3761 ] [66])
            (nil))))
(insn 61 60 62 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 62 61 63 10 104 "" [1 uses])
(note 63 62 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 10 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 66 65 67 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [88])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [0 i+0 S4 A32]))) mQuery.c:220 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [88])
        (nil)))
(jump_insn 67 66 68 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) mQuery.c:220 612 {*jcc_1}
     (nil)
 -> 64)
;;  succ:       9
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 j+0 S4 A32])) mQuery.c:221 89 {*movsi_internal}
     (nil))
(insn 70 69 71 11 (set (reg:DI 1 dx [orig:70 D.3760 ] [70])
        (sign_extend:DI (reg:SI 0 ax [89]))) mQuery.c:221 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [89])
        (nil)))
(insn 71 70 72 11 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:221 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 11 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.3761 ] [71])
                (plus:DI (reg/f:DI 0 ax [90])
                    (reg:DI 1 dx [orig:70 D.3760 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:221 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [90])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.3760 ] [70])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
                    (reg:DI 1 dx [orig:70 D.3760 ] [70]))
                (nil)))))
(insn 73 72 80 11 (set (mem:QI (reg/f:DI 0 ax [orig:71 D.3761 ] [71]) [0 *_24+0 S1 A8])
        (const_int 0 [0])) mQuery.c:221 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.3761 ] [71])
        (nil)))
(insn 80 73 74 11 (set (reg:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 74 80 75 11 (set (reg:DI 2 cx [95])
        (const_int -1 [0xffffffffffffffff])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 11 (set (reg:DI 1 dx [94])
        (reg:DI 0 ax [91])) mQuery.c:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [91])
        (nil)))
(insn 76 75 128 11 (set (reg:QI 0 ax [96])
        (const_int 0 [0])) mQuery.c:223 91 {*movqi_internal}
     (nil))
(insn 128 76 77 11 (set (reg:DI 5 di [94])
        (reg:DI 1 dx [94])) mQuery.c:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [94])
        (nil)))
(insn 77 128 127 11 (parallel [
            (set (reg:DI 2 cx [92])
                (unspec:DI [
                        (mem:BLK (reg:DI 5 di [94]) [0  A8])
                        (reg:QI 0 ax [96])
                        (const_int 1 [0x1])
                        (reg:DI 2 cx [92])
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 5 di [94]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 925 {*strlenqi_1}
     (expr_list:REG_UNUSED (reg:DI 5 di [94])
        (expr_list:REG_DEAD (reg:QI 0 ax [96])
            (nil))))
(insn 127 77 78 11 (set (reg:DI 0 ax [92])
        (reg:DI 2 cx [92])) mQuery.c:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [92])
        (nil)))
(insn 78 127 132 11 (set (reg:DI 0 ax [93])
        (not:DI (reg:DI 0 ax [92]))) mQuery.c:223 496 {*one_cmpldi2_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(insn 132 78 81 11 (set (reg:DI 1 dx [orig:72 D.3763 ] [72])
        (plus:DI (reg:DI 0 ax [93])
            (const_int -1 [0xffffffffffffffff]))) mQuery.c:223 267 {*leadi}
     (nil))
(insn 81 132 82 11 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 11 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.3761 ] [73])
                (plus:DI (reg/f:DI 0 ax [97])
                    (reg:DI 1 dx [orig:72 D.3763 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.3763 ] [72])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
                    (reg:DI 1 dx [orig:72 D.3763 ] [72]))
                (nil)))))
(insn 83 82 133 11 (set (mem:HI (reg/f:DI 0 ax [orig:73 D.3761 ] [73]) [0 MEM[(void *)_26]+0 S2 A8])
        (const_int 95 [0x5f])) mQuery.c:223 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.3761 ] [73])
        (nil)))
(insn 133 83 85 11 (set (reg:DI 1 dx [98])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -80 [0xffffffffffffffb0]))) mQuery.c:224 267 {*leadi}
     (nil))
(insn 85 133 86 11 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:224 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 11 (set (reg:DI 4 si)
        (reg:DI 1 dx [98])) mQuery.c:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [98])
        (nil)))
(insn 87 86 88 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) mQuery.c:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [99])
        (nil)))
(call_insn 88 87 95 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f8734939900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) mQuery.c:224 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 95 88 89 11 (set (reg:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 89 95 90 11 (set (reg:DI 2 cx [104])
        (const_int -1 [0xffffffffffffffff])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:DI 1 dx [103])
        (reg:DI 0 ax [100])) mQuery.c:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [100])
        (nil)))
(insn 91 90 131 11 (set (reg:QI 0 ax [105])
        (const_int 0 [0])) mQuery.c:225 91 {*movqi_internal}
     (nil))
(insn 131 91 92 11 (set (reg:DI 5 di [103])
        (reg:DI 1 dx [103])) mQuery.c:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [103])
        (nil)))
(insn 92 131 130 11 (parallel [
            (set (reg:DI 2 cx [101])
                (unspec:DI [
                        (mem:BLK (reg:DI 5 di [103]) [0  A8])
                        (reg:QI 0 ax [105])
                        (const_int 1 [0x1])
                        (reg:DI 2 cx [101])
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 5 di [103]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 925 {*strlenqi_1}
     (expr_list:REG_UNUSED (reg:DI 5 di [103])
        (expr_list:REG_DEAD (reg:QI 0 ax [105])
            (nil))))
(insn 130 92 93 11 (set (reg:DI 0 ax [101])
        (reg:DI 2 cx [101])) mQuery.c:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [101])
        (nil)))
(insn 93 130 134 11 (set (reg:DI 0 ax [102])
        (not:DI (reg:DI 0 ax [101]))) mQuery.c:225 496 {*one_cmpldi2_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [101])
        (nil)))
(insn 134 93 96 11 (set (reg:DI 1 dx [orig:74 D.3763 ] [74])
        (plus:DI (reg:DI 0 ax [102])
            (const_int -1 [0xffffffffffffffff]))) mQuery.c:225 267 {*leadi}
     (nil))
(insn 96 134 97 11 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 file_out+0 S8 A64])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 11 (parallel [
            (set (reg/f:DI 0 ax [orig:75 D.3761 ] [75])
                (plus:DI (reg/f:DI 0 ax [106])
                    (reg:DI 1 dx [orig:74 D.3763 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [106])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.3763 ] [74])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
                    (reg:DI 1 dx [orig:74 D.3763 ] [74]))
                (nil)))))
(insn 98 97 99 11 (set (mem:SI (reg/f:DI 0 ax [orig:75 D.3761 ] [75]) [0 MEM[(void *)_28]+0 S4 A8])
        (const_int 1952539694 [0x7461642e])) mQuery.c:225 89 {*movsi_internal}
     (nil))
(insn 99 98 100 11 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:75 D.3761 ] [75])
                (const_int 4 [0x4])) [0 MEM[(void *)_28]+4 S1 A8])
        (const_int 0 [0])) mQuery.c:225 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.3761 ] [75])
        (nil)))
(insn 100 99 110 11 (set (reg:SI 0 ax [orig:76 D.3764 ] [76])
        (const_int 1 [0x1])) mQuery.c:227 89 {*movsi_internal}
     (nil))
(insn 110 100 111 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.3765+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [109]))
        ]) mQuery.c:229 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 3 bx [109])
        (nil)))
(jump_insn 111 110 118 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:229 612 {*jcc_1}
     (nil)
 -> 114)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 118 111 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 112 118 113 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:229 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 113 112 114)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
(code_label 114 113 119 13 107 "" [1 uses])
(note 119 114 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 119 141 13 (use (reg/i:SI 0 ax)) mQuery.c:229 -1
     (nil))
(note 141 115 142 13 NOTE_INSN_EPILOGUE_BEG)
(insn 142 141 143 13 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mQuery.c:229 -1
     (nil))
(insn 143 142 144 13 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:229 -1
     (nil))
(insn/f 144 143 145 13 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mQuery.c:229 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 145 144 146 13 (simple_return) mQuery.c:229 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 146 145 0)
