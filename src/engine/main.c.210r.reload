
;; Function main (main, funcdef_no=2, decl_uid=9697, cgraph_uid=2)

      Creating newreg=96
Removing SCRATCH in insn #5 (nop 2)
rescanning insn with uid = 5.
deleting insn with uid = 5.
      Creating newreg=97
Removing SCRATCH in insn #102 (nop 3)
rescanning insn with uid = 102.
deleting insn with uid = 102.

********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=8,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r96
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 21:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 37:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 43:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=38,losers=4,rld_nregs=4
	 Choosing alt 0 in insn 55:  (0) =D  (1) =S  (2) =c  (3) 0  (4) 1  (5) 2 {*rep_movdi_rex64}
      Creating newreg=98 from oldreg=87, assigning class DIREG to r98
      Creating newreg=99 from oldreg=89, assigning class CREG to r99
   55: {r99:DI=0;r98:DI=r99:DI<<0x3+r98:DI;r88:DI=r99:DI<<0x3+r88:DI;[r98:DI]=[r88:DI];use r99:DI;}
      REG_UNUSED r89:DI
      REG_UNUSED r88:DI
      REG_UNUSED r87:DI
    Inserting insn reload before:
  114: r98:DI=r87:DI
  115: r99:DI=r89:DI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 63:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 71:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 79:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 84:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r97
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 6
   Insn 104: point = 0
  BB 7
   Insn 107: point = 0
  BB 5
   Insn 103: point = 0
   Insn 102: point = 0
   Insn 99: point = 1
   Insn 95: point = 2
   Insn 92: point = 4
  BB 4
   Insn 90: point = 5
   Insn 89: point = 5
   Insn 87: point = 6
  BB 2
   Insn 112: point = 7
   Insn 31: point = 7
   Insn 30: point = 7
   Insn 29: point = 7
   Insn 28: point = 8
   Insn 27: point = 9
   Insn 26: point = 10
   Insn 25: point = 11
   Insn 24: point = 12
   Insn 23: point = 13
   Insn 22: point = 14
   Insn 21: point = 15
   Insn 20: point = 16
   Insn 19: point = 17
   Insn 18: point = 18
   Insn 17: point = 20
   Insn 16: point = 21
   Insn 15: point = 22
   Insn 14: point = 24
   Insn 13: point = 25
   Insn 12: point = 25
   Insn 11: point = 26
   Insn 10: point = 28
   Insn 9: point = 29
   Insn 8: point = 29
   Insn 5: point = 29
   Insn 3: point = 31
   Insn 2: point = 31
  BB 3
   Insn 84: point = 31
   Insn 83: point = 31
   Insn 82: point = 31
   Insn 81: point = 32
   Insn 80: point = 33
   Insn 79: point = 34
   Insn 78: point = 35
   Insn 77: point = 36
   Insn 76: point = 37
   Insn 75: point = 37
   Insn 74: point = 38
   Insn 73: point = 39
   Insn 72: point = 40
   Insn 71: point = 41
   Insn 70: point = 42
   Insn 69: point = 43
   Insn 68: point = 44
   Insn 67: point = 45
   Insn 66: point = 45
   Insn 65: point = 46
   Insn 64: point = 47
   Insn 63: point = 48
   Insn 62: point = 49
   Insn 61: point = 50
   Insn 60: point = 51
   Insn 59: point = 51
   Insn 58: point = 52
   Insn 57: point = 53
   Insn 56: point = 54
   Insn 55: point = 55
   Insn 115: point = 56
	Hard reg 0 is preferable by r99 with profit 1
   Insn 114: point = 58
	Hard reg 1 is preferable by r98 with profit 1
   Insn 54: point = 60
   Insn 53: point = 61
   Insn 52: point = 62
   Insn 51: point = 63
   Insn 50: point = 64
   Insn 49: point = 65
   Insn 48: point = 66
   Insn 47: point = 67
   Insn 46: point = 67
   Insn 45: point = 67
   Insn 44: point = 67
   Insn 43: point = 68
   Insn 42: point = 70
   Insn 41: point = 71
   Insn 40: point = 71
   Insn 39: point = 72
   Insn 38: point = 73
   Insn 37: point = 74
   Insn 36: point = 75
   Insn 35: point = 76
 r59: [27..28]
 r60: [25..26]
 r61: [5..6]
 r62: [72..76]
 r63: [71..75]
 r64: [67..68]
 r65: [52..66]
 r66: [39..44]
 r67: [38..43]
 r68: [37..42]
 r69: [33..36]
 r70: [32..35]
 r71: [3..4]
 r72: [1..2]
 r73: [23..24]
 r74: [21..22]
 r75: [19..20]
 r76: [17..18]
 r77: [11..16]
 r78: [10..15]
 r79: [9..14]
 r80: [8..13]
 r81: [7..12]
 r82: [73..74]
 r83: [69..70]
 r84: [54..65]
 r85: [53..64]
 r86: [51..63]
 r87: [59..62]
 r88: [55..61]
 r89: [57..60]
 r90: [47..50]
 r91: [46..49]
 r92: [45..48]
 r93: [40..41]
 r94: [31..34]
 r96: [29..30]
 r97: [0..0]
 r98: [55..58]
 r99: [55..56]
Compressing live ranges: from 77 to 41 - 53%
Ranges after the compression:
 r59: [19..20]
 r60: [17..18]
 r61: [5..6]
 r62: [39..40]
 r63: [39..40]
 r64: [35..36]
 r65: [29..34]
 r66: [25..26]
 r67: [25..26]
 r68: [25..26]
 r69: [23..24]
 r70: [23..24]
 r71: [3..4]
 r72: [1..2]
 r73: [15..16]
 r74: [13..14]
 r75: [11..12]
 r76: [9..10]
 r77: [7..8]
 r78: [7..8]
 r79: [7..8]
 r80: [7..8]
 r81: [7..8]
 r82: [39..40]
 r83: [37..38]
 r84: [29..34]
 r85: [29..34]
 r86: [29..34]
 r87: [33..34]
 r88: [29..34]
 r89: [31..34]
 r90: [27..28]
 r91: [27..28]
 r92: [27..28]
 r93: [25..26]
 r94: [23..24]
 r96: [21..22]
 r97: [0..0]
 r98: [29..32]
 r99: [29..30]
	 Assigning to 98 (cl=DIREG, orig=87, freq=2, tfirst=98, tfreq=2)...
	   Assign 5 to reload r98 (freq=2)
	 Assigning to 99 (cl=CREG, orig=89, freq=2, tfirst=99, tfreq=2)...
	   Assign 2 to reload r99 (freq=2)
	 Assigning to 96 (cl=INDEX_REGS, orig=96, freq=1, tfirst=96, tfreq=1)...
	   Assign 0 to reload r96 (freq=1)
	 Assigning to 97 (cl=INDEX_REGS, orig=97, freq=1, tfirst=97, tfreq=1)...
	   Assign 3 to reload r97 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=832, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=800, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
          alt=0,overall=6,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 84:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 79:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 71:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 63:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 37:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 21:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=832, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=800, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 87
changing reg in insn 89
changing reg in insn 35
changing reg in insn 39
changing reg in insn 36
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 48
changing reg in insn 58
changing reg in insn 68
changing reg in insn 73
changing reg in insn 69
changing reg in insn 74
changing reg in insn 70
changing reg in insn 75
changing reg in insn 77
changing reg in insn 80
changing reg in insn 78
changing reg in insn 81
changing reg in insn 92
changing reg in insn 95
changing reg in insn 95
changing reg in insn 99
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 21
changing reg in insn 26
changing reg in insn 22
changing reg in insn 27
changing reg in insn 23
changing reg in insn 28
changing reg in insn 24
changing reg in insn 29
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 43
changing reg in insn 49
changing reg in insn 56
changing reg in insn 50
changing reg in insn 57
changing reg in insn 51
changing reg in insn 59
changing reg in insn 52
changing reg in insn 55
changing reg in insn 53
changing reg in insn 55
changing reg in insn 55
changing reg in insn 54
changing reg in insn 61
changing reg in insn 64
changing reg in insn 62
changing reg in insn 65
changing reg in insn 63
changing reg in insn 66
changing reg in insn 71
changing reg in insn 72
changing reg in insn 79
changing reg in insn 82
changing reg in insn 5
changing reg in insn 102
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 104.


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 39[r10] 40[r11]
;;  ref usage 	r0={31d,21u} r1={23d,12u} r2={21d,11u} r3={1d} r4={22d,12u} r5={23d,13u} r6={1d,44u} r7={1d,19u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={25d,2u} r18={10d} r19={10d} r20={1d,1u,1e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={13d,2u} r38={12d,1u} r39={11d,1u} r40={11d,1u} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} 
;;    total ref usage 685{544d,140u,1e} in 90{80 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 73 74 75 76 77 78 79 80 81
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -500 [0xfffffffffffffe0c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) main.c:12 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) main.c:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.9753+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [96])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) main.c:12 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [96])
        (nil)))
(insn 8 5 9 2 (set (reg:DI 5 di)
        (const_int 0 [0])) main.c:13 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7fe0c1fdc500 time>) [0 time S1 A8])
            (const_int 0 [0]))) main.c:13 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 0 ax [orig:59 D.9750 ] [59])
        (reg:DI 0 ax)) main.c:13 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:60 D.9751 ] [60])
        (reg:SI 0 ax [orig:59 D.9750 ] [59])) main.c:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.9750 ] [59])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:60 D.9751 ] [60])) main.c:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.9751 ] [60])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7fe0c1e6f700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) main.c:13 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 argv+0 S8 A64])) main.c:20 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [74])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [73])
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_4(D) + 8B]+0 S8 A64])) main.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [0 input_ABM+0 S8 A64])
        (reg/f:DI 0 ax [74])) main.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 argv+0 S8 A64])) main.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [76])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [75])
                (const_int 16 [0x10])) [0 MEM[(char * *)argv_4(D) + 16B]+0 S8 A64])) main.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -456 [0xfffffffffffffe38])) [0 output_ABM+0 S8 A64])
        (reg/f:DI 0 ax [76])) main.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [0 input_ABM+0 S8 A64])) main.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 2 cx [78])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -448 [0xfffffffffffffe40])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 1 dx [79])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 4 si [80])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 0 ax [81])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (nil))
(insn 25 24 26 2 (set (reg:DI 37 r8)
        (reg:DI 5 di [77])) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [77])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (reg:DI 2 cx [78])) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [78])
        (nil)))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [79])) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [79])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg:DI 4 si [80])) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [80])
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [81])) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [81])
        (nil)))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_Sector") [flags 0x41]  <function_decl 0x7fe0c2194c00 init_Sector>) [0 init_Sector S1 A8])
            (const_int 0 [0]))) main.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 31 30 112 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32])
        (const_int 0 [0])) main.c:29 89 {*movsi_internal}
     (nil))
(jump_insn 112 31 113 2 (set (pc)
        (label_ref 85)) main.c:29 650 {jump}
     (nil)
 -> 85)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 113 112 88)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 65 66 67 68 69 70 82 83 84 85 86 87 88 89 90 91 92 93 94
(code_label 88 113 34 3 3 "" [1 uses])
(note 34 88 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg:SI 2 cx [orig:62 Nflight.0 ] [62])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [0 Nflight+0 S4 A64])) main.c:31 89 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg/f:DI 0 ax [orig:63 Flight.1 ] [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [0 Flight+0 S8 A128])) main.c:31 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 3 (parallel [
            (set (reg:DI 1 dx [82])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -472 [0xfffffffffffffe28])))
            (clobber (reg:CC 17 flags))
        ]) main.c:31 274 {*adddi_1}
     (nil))
(insn 38 37 39 3 (set (reg:DI 1 dx)
        (reg:DI 1 dx [82])) main.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [82])
        (nil)))
(insn 39 38 40 3 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:62 Nflight.0 ] [62])) main.c:31 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:62 Nflight.0 ] [62])
        (nil)))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:63 Flight.1 ] [63])) main.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 Flight.1 ] [63])
        (nil)))
(call_insn 41 40 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("copy_flight") [flags 0x41]  <function_decl 0x7fe0c219f900 copy_flight>) [0 copy_flight S1 A8])
            (const_int 0 [0]))) main.c:31 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 42 41 43 3 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32])) main.c:32 89 {*movsi_internal}
     (nil))
(insn 43 42 44 3 (parallel [
            (set (reg:SI 0 ax [orig:64 D.9752 ] [64])
                (plus:SI (reg:SI 0 ax [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) main.c:32 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [83])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])
                (const_int 1 [0x1]))
            (nil))))
(insn 44 43 45 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:64 D.9752 ] [64])) main.c:32 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.9752 ] [64])
        (nil)))
(insn 45 44 46 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe0c1e08428 *.LC0>)) main.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) main.c:32 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe0c20edf00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) main.c:32 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 48 47 49 3 (set (reg:SI 38 r9 [orig:65 Nflight.2 ] [65])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [0 Nflight+0 S4 A64])) main.c:33 89 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:SI 40 r11 [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [0 shock+0 S4 A128])) main.c:33 89 {*movsi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:DI 39 r10 [85])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [0 shock+8 S8 A64])) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 37 r8 [86])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -472 [0xfffffffffffffe28])))
            (clobber (reg:CC 17 flags))
        ]) main.c:33 274 {*adddi_1}
     (nil))
(insn 52 51 53 3 (set (reg:DI 1 dx [87])
        (reg/f:DI 7 sp)) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 3 (parallel [
            (set (reg:DI 4 si [88])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) main.c:33 274 {*adddi_1}
     (nil))
(insn 54 53 114 3 (set (reg:DI 0 ax [89])
        (const_int 38 [0x26])) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 114 54 115 3 (set (reg:DI 5 di [87])
        (reg:DI 1 dx [87])) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [87])
        (nil)))
(insn 115 114 55 3 (set (reg:DI 2 cx [89])
        (reg:DI 0 ax [89])) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [89])
        (nil)))
(insn 55 115 56 3 (parallel [
            (set (reg:DI 2 cx [89])
                (const_int 0 [0]))
            (set (reg:DI 5 di [87])
                (plus:DI (ashift:DI (reg:DI 2 cx [89])
                        (const_int 3 [0x3]))
                    (reg:DI 5 di [87])))
            (set (reg:DI 4 si [88])
                (plus:DI (ashift:DI (reg:DI 2 cx [89])
                        (const_int 3 [0x3]))
                    (reg:DI 4 si [88])))
            (set (mem:BLK (reg:DI 5 di [87]) [0  S304 A128])
                (mem/c:BLK (reg:DI 4 si [88]) [0 config+0 S304 A128]))
            (use (reg:DI 2 cx [89]))
        ]) main.c:33 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 2 cx [89])
        (expr_list:REG_UNUSED (reg:DI 5 di [87])
            (expr_list:REG_UNUSED (reg:DI 4 si [88])
                (nil)))))
(insn 56 55 57 3 (set (reg:SI 1 dx)
        (reg:SI 40 r11 [84])) main.c:33 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [84])
        (nil)))
(insn 57 56 58 3 (set (reg:DI 2 cx)
        (reg:DI 39 r10 [85])) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 39 r10 [85])
        (nil)))
(insn 58 57 59 3 (set (reg:SI 4 si)
        (reg:SI 38 r9 [orig:65 Nflight.2 ] [65])) main.c:33 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:65 Nflight.2 ] [65])
        (nil)))
(insn 59 58 60 3 (set (reg:DI 5 di)
        (reg:DI 37 r8 [86])) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [86])
        (nil)))
(call_insn 60 59 61 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ABM") [flags 0x41]  <function_decl 0x7fe0c219fb00 ABM>) [0 ABM S1 A8])
            (const_int 304 [0x130]))) main.c:33 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
                        (nil)))))))
(insn 61 60 62 3 (set (reg:SI 1 dx [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32])) main.c:35 89 {*movsi_internal}
     (nil))
(insn 62 61 63 3 (set (reg:DI 2 cx [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -456 [0xfffffffffffffe38])) [0 output_ABM+0 S8 A64])) main.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (parallel [
            (set (reg:DI 0 ax [92])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) main.c:35 274 {*adddi_1}
     (nil))
(insn 64 63 65 3 (set (reg:SI 1 dx)
        (reg:SI 1 dx [90])) main.c:35 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [90])
        (nil)))
(insn 65 64 66 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [91])) main.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [91])
        (nil)))
(insn 66 65 67 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) main.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(call_insn 67 66 68 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nsim_output") [flags 0x41]  <function_decl 0x7fe0c2194500 add_nsim_output>) [0 add_nsim_output S1 A8])
            (const_int 0 [0]))) main.c:35 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 68 67 69 3 (set (reg/f:DI 1 dx [orig:66 Flight.3 ] [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [0 Flight+0 S8 A128])) main.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 3 (set (reg:SI 4 si [orig:67 Nflight.4 ] [67])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [0 Nflight+0 S4 A64])) main.c:36 89 {*movsi_internal}
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 0 ax [orig:68 flight.5 ] [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -472 [0xfffffffffffffe28])) [0 flight+0 S8 A64])) main.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (parallel [
            (set (reg:DI 2 cx [93])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) main.c:36 274 {*adddi_1}
     (nil))
(insn 72 71 73 3 (set (reg:DI 2 cx)
        (reg:DI 2 cx [93])) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [93])
        (nil)))
(insn 73 72 74 3 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:66 Flight.3 ] [66])) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:66 Flight.3 ] [66])
        (nil)))
(insn 74 73 75 3 (set (reg:SI 4 si)
        (reg:SI 4 si [orig:67 Nflight.4 ] [67])) main.c:36 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:67 Nflight.4 ] [67])
        (nil)))
(insn 75 74 76 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:68 flight.5 ] [68])) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 flight.5 ] [68])
        (nil)))
(call_insn 76 75 77 3 (call (mem:QI (symbol_ref:DI ("save_m3") [flags 0x41]  <function_decl 0x7fe0c219fc00 save_m3>) [0 save_m3 S1 A8])
        (const_int 0 [0])) main.c:36 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 77 76 78 3 (set (reg/f:DI 1 dx [orig:69 Flight.6 ] [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [0 Flight+0 S8 A128])) main.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 3 (set (reg:SI 2 cx [orig:70 Nflight.7 ] [70])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [0 Nflight+0 S4 A64])) main.c:38 89 {*movsi_internal}
     (nil))
(insn 79 78 80 3 (parallel [
            (set (reg:DI 0 ax [94])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -472 [0xfffffffffffffe28])))
            (clobber (reg:CC 17 flags))
        ]) main.c:38 274 {*adddi_1}
     (nil))
(insn 80 79 81 3 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:69 Flight.6 ] [69])) main.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:69 Flight.6 ] [69])
        (nil)))
(insn 81 80 82 3 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:70 Nflight.7 ] [70])) main.c:38 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:70 Nflight.7 ] [70])
        (nil)))
(insn 82 81 83 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) main.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [94])
        (nil)))
(call_insn 83 82 84 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("del_flight") [flags 0x41]  <function_decl 0x7fe0c219fa00 del_flight>) [0 del_flight S1 A8])
            (const_int 0 [0]))) main.c:38 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 84 83 85 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) main.c:29 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61
(code_label 85 84 86 4 2 "" [1 uses])
(note 86 85 87 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 89 4 (set (reg:SI 0 ax [orig:61 D.9752 ] [61])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -400 [0xfffffffffffffe70])) [0 config.nsim+0 S4 A128])) main.c:29 89 {*movsi_internal}
     (nil))
(insn 89 87 90 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:61 D.9752 ] [61])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -484 [0xfffffffffffffe1c])) [0 i+0 S4 A32]))) main.c:29 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.9752 ] [61])
        (nil)))
(jump_insn 90 89 91 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) main.c:29 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 71 72
(note 91 90 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 95 5 (set (reg:SI 0 ax [orig:71 D.9752 ] [71])
        (const_int 0 [0])) main.c:44 89 {*movsi_internal}
     (nil))
(insn 95 92 99 5 (set (reg:SI 0 ax [orig:72 <retval> ] [72])
        (reg:SI 0 ax [orig:71 D.9752 ] [71])) main.c:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 D.9752 ] [71])
        (nil)))
(insn 99 95 102 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:72 <retval> ] [72])) main.c:46 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 <retval> ] [72])
        (nil)))
(insn 102 99 103 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.9753+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [97]))
        ]) main.c:46 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 3 bx [97])
        (nil)))
(jump_insn 103 102 110 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) main.c:46 612 {*jcc_1}
     (nil)
 -> 106)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 110 103 104 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 104 110 105 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe0c1dfbd00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) main.c:46 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 105 104 106)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 106 105 111 7 5 "" [1 uses])
(note 111 106 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 107 111 0 7 (use (reg/i:SI 0 ax)) main.c:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function py_iter_sim (py_iter_sim, funcdef_no=3, decl_uid=9713, cgraph_uid=3)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 7:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) qm {extendqidi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) qm {extendqidi2}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rzw {*call_value}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 31:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 22
changing reg in insn 26
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 38
changing reg in insn 38
changing reg in insn 42
changing reg in insn 7
changing reg in insn 10
changing reg in insn 8
changing reg in insn 11
changing reg in insn 9
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 28
starting the processing of deferred insns
ending the processing of deferred insns


py_iter_sim

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={18d,16u} r1={8d,4u} r2={6d,2u} r4={6d,3u} r5={7d,4u} r6={1d,12u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d} r18={3d} r19={3d} r20={1d,1u,1e} r21={5d,1u} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 228{179d,48u,1e} in 34{31 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 self+0 S8 A64])
        (reg:DI 5 di [ self ])) main.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 args+0 S8 A64])
        (reg:DI 4 si [ args ])) main.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 2 cx [68])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) main.c:52 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 1 dx [69])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) main.c:52 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 args+0 S8 A64])) main.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 2 cx)
        (reg:DI 2 cx [68])) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [68])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [69])) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [69])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe0c1e08e40 *.LC1>)) main.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [70])) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) main.c:52 91 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x7fe0c1d5e300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) main.c:52 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(insn 16 15 17 2 (set (reg:QI 0 ax [orig:59 x.8 ] [59])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 x+0 S1 A16])) main.c:53 91 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 0 ax [orig:60 D.9758 ] [60])
        (sign_extend:DI (reg:QI 0 ax [orig:59 x.8 ] [59]))) main.c:53 151 {extendqidi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:59 x.8 ] [59])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 1 dx [orig:61 D.9759 ] [61])
        (reg:DI 0 ax [orig:60 D.9758 ] [60])) main.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.9758 ] [60])
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (reg/f:DI 0 ax [71]) [0 *argv_5(D)+0 S8 A64])
        (reg/f:DI 1 dx [orig:61 D.9759 ] [61])) main.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.9759 ] [61])
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 1 dx [orig:62 D.9760 ] [62])
                (plus:DI (reg/f:DI 0 ax [72])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) main.c:54 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 23 22 24 2 (set (reg:QI 0 ax [orig:63 y.9 ] [63])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -9 [0xfffffffffffffff7])) [0 y+0 S1 A8])) main.c:54 91 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 0 ax [orig:64 D.9758 ] [64])
        (sign_extend:DI (reg:QI 0 ax [orig:63 y.9 ] [63]))) main.c:54 151 {extendqidi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:63 y.9 ] [63])
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 0 ax [orig:65 D.9759 ] [65])
        (reg:DI 0 ax [orig:64 D.9758 ] [64])) main.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:64 D.9758 ] [64])
        (nil)))
(insn 26 25 27 2 (set (mem/f:DI (reg/f:DI 1 dx [orig:62 D.9760 ] [62]) [0 *_6+0 S8 A64])
        (reg/f:DI 0 ax [orig:65 D.9759 ] [65])) main.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.9759 ] [65])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:62 D.9760 ] [62])
            (nil))))
(insn 27 26 28 2 (set (reg:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [73])) main.c:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [73])
        (nil)))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) main.c:55 89 {*movsi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("main") [flags 0x3]  <function_decl 0x7fe0c1dfb100 main>) [0 main S1 A8])
            (const_int 0 [0]))) main.c:55 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S8 A64])) main.c:56 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fe0c1e08ed8 *.LC2>)) main.c:56 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) main.c:56 91 {*movqi_internal}
     (nil))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x7fe0c1d5e600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) main.c:56 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 35 34 38 2 (set (reg/f:DI 0 ax [orig:66 D.9761 ] [66])
        (reg:DI 0 ax)) main.c:56 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 35 42 2 (set (reg:DI 0 ax [orig:67 <retval> ] [67])
        (reg/f:DI 0 ax [orig:66 D.9761 ] [66])) main.c:56 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.9761 ] [66])
        (nil)))
(insn 42 38 45 2 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:67 <retval> ] [67])) main.c:57 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:67 <retval> ] [67])
        (nil)))
(insn 45 42 0 2 (use (reg/i:DI 0 ax)) main.c:57 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function initElsaABM (initElsaABM, funcdef_no=4, decl_uid=9719, cgraph_uid=4)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


initElsaABM

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 37[r8]
;;  ref usage 	r0={2d} r1={3d,1u} r2={3d,1u} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 78{67d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) main.c:73 89 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("ElsaABM_methods") [flags 0x2]  <var_decl 0x7fe0c1df4da8 ElsaABM_methods>)) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fe0c1e1d390 *.LC5>)) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x7fe0c1d63100 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) main.c:73 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

