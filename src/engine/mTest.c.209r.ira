
;; Function _print_bound (_print_bound, funcdef_no=2, decl_uid=3970, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r76,l0) best DIREG, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a4 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a15(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 51(l0): point = 0
   Insn 46(l0): point = 2
   Insn 45(l0): point = 4
   Insn 44(l0): point = 6
   Insn 36(l0): point = 9
   Insn 35(l0): point = 11
   Insn 34(l0): point = 13
   Insn 33(l0): point = 15
   Insn 32(l0): point = 17
   Insn 31(l0): point = 19
   Insn 30(l0): point = 21
   Insn 29(l0): point = 23
   Insn 28(l0): point = 25
   Insn 27(l0): point = 27
   Insn 26(l0): point = 29
   Insn 25(l0): point = 31
   Insn 24(l0): point = 33
   Insn 23(l0): point = 35
   Insn 22(l0): point = 37
   Insn 21(l0): point = 39
   Insn 20(l0): point = 41
   Insn 19(l0): point = 43
   Insn 18(l0): point = 45
   Insn 17(l0): point = 47
   Insn 16(l0): point = 49
   Insn 15(l0): point = 51
   Insn 14(l0): point = 53
   Insn 42(l0): point = 56
   Insn 41(l0): point = 58
   Insn 39(l0): point = 60
   Insn 52(l0): point = 63
   Insn 10(l0): point = 65
   Insn 9(l0): point = 67
   Insn 8(l0): point = 69
   Insn 7(l0): point = 71
   Insn 6(l0): point = 73
   Insn 5(l0): point = 75
 a0(r77): [5..6]
 a1(r59): [59..60]
 a2(r76): [16..23]
 a3(r72 [0]): [20..25]
 a3(r72 [1]): [20..25]
 a4(r66 [0]): [22..39]
 a4(r66 [1]): [22..39]
 a5(r71): [26..27]
 a6(r70): [28..29]
 a7(r69): [30..31]
 a8(r67): [30..37]
 a9(r68): [32..33]
 a10(r75): [34..35]
 a11(r65): [40..41]
 a12(r64): [42..43]
 a13(r63): [44..45]
 a14(r62): [46..47]
 a15(r60): [46..53]
 a16(r61): [48..49]
 a17(r74): [50..51]
 a18(r73): [68..69]
Compressing live ranges: from 78 to 30 - 38%
Ranges after the compression:
 a0(r77): [0..1]
 a1(r59): [26..27]
 a2(r76): [2..3]
 a3(r72 [0]): [2..3]
 a3(r72 [1]): [2..3]
 a4(r66 [0]): [2..13]
 a4(r66 [1]): [2..13]
 a5(r71): [4..5]
 a6(r70): [6..7]
 a7(r69): [8..9]
 a8(r67): [8..13]
 a9(r68): [10..11]
 a10(r75): [12..13]
 a11(r65): [14..15]
 a12(r64): [16..17]
 a13(r63): [18..19]
 a14(r62): [20..21]
 a15(r60): [20..25]
 a16(r61): [22..23]
 a17(r74): [24..25]
 a18(r73): [28..29]
  regions=1, blocks=6, points=30
    allocnos=19 (big 2), copies=0, conflicts=0, ranges=21
Disposition:
    1:r59  l0     0   15:r60  l0     0   16:r61  l0     1   14:r62  l0     1
   13:r63  l0     0   12:r64  l0     0   11:r65  l0     0    4:r66  l0     2
    8:r67  l0     0    9:r68  l0     1    7:r69  l0     1    6:r70  l0     0
    5:r71  l0     0    3:r72  l0     0   18:r73  l0     0   17:r74  l0     1
   10:r75  l0     1    2:r76  l0     5    0:r77  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_print_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={10d,1u} r18={3d} r19={3d} r20={1d,14u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} 
;;    total ref usage 248{183d,65u,0e} in 37{34 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f14bd7fb720 *.LC1>)) mTest.c:21 87 {*movdi_internal_rex64}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:21 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:DI 73)
        (reg:DI 0 ax)) mTest.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])
        (reg:DI 73)) mTest.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 10 9 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:23 89 {*movsi_internal}
     (nil))
(jump_insn 52 10 53 2 (set (pc)
        (label_ref 37)) mTest.c:23 650 {jump}
     (nil)
 -> 37)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 53 52 40)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76
(code_label 40 53 13 3 3 "" [1 uses])
(note 13 40 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:DI 60 [ D.4298 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mTest.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:23 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 61 [ D.4299 ])
        (sign_extend:DI (reg:SI 74))) mTest.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 62 [ D.4299 ])
                (ashift:DI (reg:DI 61 [ D.4299 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4299 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 63 [ D.4298 ])
                (plus:DI (reg/f:DI 60 [ D.4298 ])
                    (reg:DI 62 [ D.4299 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4299 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4298 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 19 18 20 3 (set (reg/f:DI 64 [ D.4300 ])
        (mem/f:DI (reg/f:DI 63 [ D.4298 ]) [0 *_8+0 S8 A64])) mTest.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4298 ])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:DI 65 [ D.4300 ])
                (plus:DI (reg/f:DI 64 [ D.4300 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4300 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (set (reg:XF 66 [ D.4301 ])
        (mem:XF (reg/f:DI 65 [ D.4300 ]) [0 *_10+0 S16 A128])) mTest.c:23 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4300 ])
        (nil)))
(insn 22 21 23 3 (set (reg/f:DI 67 [ D.4298 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mTest.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:23 89 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 68 [ D.4299 ])
        (sign_extend:DI (reg:SI 75))) mTest.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 69 [ D.4299 ])
                (ashift:DI (reg:DI 68 [ D.4299 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.4299 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (parallel [
            (set (reg/f:DI 70 [ D.4298 ])
                (plus:DI (reg/f:DI 67 [ D.4298 ])
                    (reg:DI 69 [ D.4299 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.4299 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.4298 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 3 (set (reg/f:DI 71 [ D.4300 ])
        (mem/f:DI (reg/f:DI 70 [ D.4298 ]) [0 *_15+0 S8 A64])) mTest.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.4298 ])
        (nil)))
(insn 28 27 29 3 (set (reg:XF 72 [ D.4301 ])
        (mem:XF (reg/f:DI 71 [ D.4300 ]) [0 *_16+0 S16 A128])) mTest.c:23 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4300 ])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 66 [ D.4301 ])) mTest.c:23 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4301 ])
        (nil)))
(insn 31 30 32 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.4301 ])) mTest.c:23 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.4301 ])
        (nil)))
(insn 32 31 33 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (reg:DI 76)) mTest.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(insn 34 33 35 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:23 91 {*movqi_internal}
     (nil))
(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:23 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 36 35 37 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:23 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 37 36 38 4 2 "" [1 uses])
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 41 4 (set (reg:SI 59 [ D.4297 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mTest.c:23 89 {*movsi_internal}
     (nil))
(insn 41 39 42 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4297 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mTest.c:23 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4297 ])
        (nil)))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) mTest.c:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 77
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 77)) mTest.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(call_insn 46 45 51 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 46 0 5 (const_int 0 [0]) mTest.c:25 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot (plot, funcdef_no=3, decl_uid=1938, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r81: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r81,l0) best CREG, allocno GENERAL_REGS
    r80: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r80,l0) best SIREG, allocno GENERAL_REGS
    r79: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r79,l0) best DIREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a7 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r81,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a1(r79,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a2(r80,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a3(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a18(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 58(l0): point = 0
   Insn 53(l0): point = 2
   Insn 52(l0): point = 4
   Insn 51(l0): point = 6
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 26(l0): point = 43
   Insn 25(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 18(l0): point = 59
   Insn 17(l0): point = 61
   Insn 16(l0): point = 63
   Insn 44(l0): point = 66
   Insn 43(l0): point = 68
   Insn 41(l0): point = 70
   Insn 59(l0): point = 73
   Insn 12(l0): point = 75
   Insn 11(l0): point = 77
   Insn 10(l0): point = 79
   Insn 9(l0): point = 81
   Insn 8(l0): point = 83
   Insn 7(l0): point = 85
   Insn 6(l0): point = 87
   Insn 2(l0): point = 89
 a0(r81): [4..6]
 a1(r79): [4..10]
 a2(r80): [4..8]
 a3(r78): [15..16]
 a4(r59): [69..70]
 a5(r77): [26..33]
 a6(r72 [0]): [30..35]
 a6(r72 [1]): [30..35]
 a7(r66 [0]): [32..49]
 a7(r66 [1]): [32..49]
 a8(r71): [36..37]
 a9(r70): [38..39]
 a10(r69): [40..41]
 a11(r67): [40..47]
 a12(r68): [42..43]
 a13(r76): [44..45]
 a14(r65): [50..51]
 a15(r64): [52..53]
 a16(r63): [54..55]
 a17(r62): [56..57]
 a18(r60): [56..63]
 a19(r61): [58..59]
 a20(r75): [60..61]
 a21(r74): [78..79]
 a22(r73): [84..87]
Compressing live ranges: from 92 to 34 - 36%
Ranges after the compression:
 a0(r81): [0..1]
 a1(r79): [0..1]
 a2(r80): [0..1]
 a3(r78): [2..3]
 a4(r59): [28..29]
 a5(r77): [4..5]
 a6(r72 [0]): [4..5]
 a6(r72 [1]): [4..5]
 a7(r66 [0]): [4..15]
 a7(r66 [1]): [4..15]
 a8(r71): [6..7]
 a9(r70): [8..9]
 a10(r69): [10..11]
 a11(r67): [10..15]
 a12(r68): [12..13]
 a13(r76): [14..15]
 a14(r65): [16..17]
 a15(r64): [18..19]
 a16(r63): [20..21]
 a17(r62): [22..23]
 a18(r60): [22..27]
 a19(r61): [24..25]
 a20(r75): [26..27]
 a21(r74): [30..31]
 a22(r73): [32..33]
  regions=1, blocks=6, points=34
    allocnos=23 (big 2), copies=0, conflicts=0, ranges=25
Disposition:
    4:r59  l0     0   18:r60  l0     0   19:r61  l0     1   17:r62  l0     1
   16:r63  l0     0   15:r64  l0     0   14:r65  l0     0    7:r66  l0     2
   11:r67  l0     0   12:r68  l0     1   10:r69  l0     1    9:r70  l0     0
    8:r71  l0     0    6:r72  l0     0   22:r73  l0     0   21:r74  l0     0
   20:r75  l0     1   13:r76  l0     1    5:r77  l0     5    3:r78  l0     0
    1:r79  l0     1    2:r80  l0     4    0:r81  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={7d,2u} r5={8d,4u} r6={1d,5u} r7={1d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,8u} r17={12d,1u} r18={4d} r19={4d} r20={1d,16u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={2d,2u} r80={2d,2u} r81={2d,3u} 
;;    total ref usage 315{235d,80u,0e} in 44{40 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73 74
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S8 A64])
        (reg:DI 5 di [ fr ])) mTest.c:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ fr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fr+0 S8 A64])) mTest.c:30 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:30 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 73)) mTest.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:30 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 74)
        (reg:DI 0 ax)) mTest.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])
        (reg:DI 74)) mTest.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74)
        (nil)))
(insn 12 11 59 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:32 89 {*movsi_internal}
     (nil))
(jump_insn 59 12 60 2 (set (pc)
        (label_ref 39)) mTest.c:32 650 {jump}
     (nil)
 -> 39)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 60 59 42)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 75 76 77
(code_label 42 60 15 3 7 "" [1 uses])
(note 15 42 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 60 [ D.4306 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mTest.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:32 89 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 61 [ D.4307 ])
        (sign_extend:DI (reg:SI 75))) mTest.c:32 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 62 [ D.4307 ])
                (ashift:DI (reg:DI 61 [ D.4307 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4307 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 3 (parallel [
            (set (reg/f:DI 63 [ D.4306 ])
                (plus:DI (reg/f:DI 60 [ D.4306 ])
                    (reg:DI 62 [ D.4307 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4307 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4306 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 21 20 22 3 (set (reg/f:DI 64 [ D.4308 ])
        (mem/f:DI (reg/f:DI 63 [ D.4306 ]) [0 *_9+0 S8 A64])) mTest.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4306 ])
        (nil)))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 65 [ D.4308 ])
                (plus:DI (reg/f:DI 64 [ D.4308 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4308 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 3 (set (reg:XF 66 [ D.4309 ])
        (mem:XF (reg/f:DI 65 [ D.4308 ]) [0 *_11+0 S16 A128])) mTest.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4308 ])
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 67 [ D.4306 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mTest.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:32 89 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 68 [ D.4307 ])
        (sign_extend:DI (reg:SI 76))) mTest.c:32 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg:DI 69 [ D.4307 ])
                (ashift:DI (reg:DI 68 [ D.4307 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.4307 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 70 [ D.4306 ])
                (plus:DI (reg/f:DI 67 [ D.4306 ])
                    (reg:DI 69 [ D.4307 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.4307 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.4306 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 28 30 3 (set (reg/f:DI 71 [ D.4308 ])
        (mem/f:DI (reg/f:DI 70 [ D.4306 ]) [0 *_16+0 S8 A64])) mTest.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.4306 ])
        (nil)))
(insn 30 29 31 3 (set (reg:XF 72 [ D.4309 ])
        (mem:XF (reg/f:DI 71 [ D.4308 ]) [0 *_17+0 S16 A128])) mTest.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4308 ])
        (nil)))
(insn 31 30 32 3 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 66 [ D.4309 ])) mTest.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4309 ])
        (nil)))
(insn 33 32 34 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.4309 ])) mTest.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.4309 ])
        (nil)))
(insn 34 33 35 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 77)) mTest.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(insn 36 35 37 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:32 91 {*movqi_internal}
     (nil))
(call_insn 37 36 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:32 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 38 37 39 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:32 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 39 38 40 4 6 "" [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 4 (set (reg:SI 59 [ D.4305 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 4 [0x4])) [0 f.n_nvp+0 S4 A32])) mTest.c:32 89 {*movsi_internal}
     (nil))
(insn 43 41 44 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4305 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mTest.c:32 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4305 ])
        (nil)))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) mTest.c:32 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 80 81
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 5 (set (reg:DI 5 di)
        (reg:DI 78)) mTest.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(call_insn 48 47 49 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:33 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 5 (set (reg:DI 79)
        (reg/f:DI 7 sp)) mTest.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 80)
                (plus:DI (reg/f:DI 16 argp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:35 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 81)
        (const_int 38 [0x26])) mTest.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 81)
                (const_int 0 [0]))
            (set (reg:DI 79)
                (plus:DI (ashift:DI (reg:DI 81)
                        (const_int 3 [0x3]))
                    (reg:DI 79)))
            (set (reg:DI 80)
                (plus:DI (ashift:DI (reg:DI 81)
                        (const_int 3 [0x3]))
                    (reg:DI 80)))
            (set (mem:BLK (reg:DI 79) [0  S304 A128])
                (mem/c:BLK (reg:DI 80) [0 c+0 S304 A128]))
            (use (reg:DI 81))
        ]) mTest.c:35 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 81)
        (expr_list:REG_UNUSED (reg:DI 80)
            (expr_list:REG_UNUSED (reg:DI 79)
                (nil)))))
(call_insn 53 52 58 5 (call (mem:QI (symbol_ref:DI ("_print_bound") [flags 0x3]  <function_decl 0x7f14bd7bbf00 _print_bound>) [0 _print_bound S1 A8])
        (const_int 304 [0x130])) mTest.c:35 656 {*call}
     (nil)
    (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
        (nil)))
(insn 58 53 0 5 (const_int 0 [0]) mTest.c:38 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot_where (plot_where, funcdef_no=4, decl_uid=1964, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r81: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r81,l0) best CREG, allocno GENERAL_REGS
    r80: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r80,l0) best SIREG, allocno GENERAL_REGS
    r79: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r79,l0) best DIREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a7 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r81,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a1(r79,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a2(r80,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a3(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a18(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 58(l0): point = 0
   Insn 53(l0): point = 2
   Insn 52(l0): point = 4
   Insn 51(l0): point = 6
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 26(l0): point = 43
   Insn 25(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 18(l0): point = 59
   Insn 17(l0): point = 61
   Insn 16(l0): point = 63
   Insn 44(l0): point = 66
   Insn 43(l0): point = 68
   Insn 41(l0): point = 70
   Insn 59(l0): point = 73
   Insn 12(l0): point = 75
   Insn 11(l0): point = 77
   Insn 10(l0): point = 79
   Insn 9(l0): point = 81
   Insn 8(l0): point = 83
   Insn 7(l0): point = 85
   Insn 6(l0): point = 87
   Insn 2(l0): point = 89
 a0(r81): [4..6]
 a1(r79): [4..10]
 a2(r80): [4..8]
 a3(r78): [15..16]
 a4(r59): [69..70]
 a5(r77): [26..33]
 a6(r72 [0]): [30..35]
 a6(r72 [1]): [30..35]
 a7(r66 [0]): [32..49]
 a7(r66 [1]): [32..49]
 a8(r71): [36..37]
 a9(r70): [38..39]
 a10(r69): [40..41]
 a11(r67): [40..47]
 a12(r68): [42..43]
 a13(r76): [44..45]
 a14(r65): [50..51]
 a15(r64): [52..53]
 a16(r63): [54..55]
 a17(r62): [56..57]
 a18(r60): [56..63]
 a19(r61): [58..59]
 a20(r75): [60..61]
 a21(r74): [78..79]
 a22(r73): [84..87]
Compressing live ranges: from 92 to 34 - 36%
Ranges after the compression:
 a0(r81): [0..1]
 a1(r79): [0..1]
 a2(r80): [0..1]
 a3(r78): [2..3]
 a4(r59): [28..29]
 a5(r77): [4..5]
 a6(r72 [0]): [4..5]
 a6(r72 [1]): [4..5]
 a7(r66 [0]): [4..15]
 a7(r66 [1]): [4..15]
 a8(r71): [6..7]
 a9(r70): [8..9]
 a10(r69): [10..11]
 a11(r67): [10..15]
 a12(r68): [12..13]
 a13(r76): [14..15]
 a14(r65): [16..17]
 a15(r64): [18..19]
 a16(r63): [20..21]
 a17(r62): [22..23]
 a18(r60): [22..27]
 a19(r61): [24..25]
 a20(r75): [26..27]
 a21(r74): [30..31]
 a22(r73): [32..33]
  regions=1, blocks=6, points=34
    allocnos=23 (big 2), copies=0, conflicts=0, ranges=25
Disposition:
    4:r59  l0     0   18:r60  l0     0   19:r61  l0     1   17:r62  l0     1
   16:r63  l0     0   15:r64  l0     0   14:r65  l0     0    7:r66  l0     2
   11:r67  l0     0   12:r68  l0     1   10:r69  l0     1    9:r70  l0     0
    8:r71  l0     0    6:r72  l0     0   22:r73  l0     0   21:r74  l0     0
   20:r75  l0     1   13:r76  l0     1    5:r77  l0     5    3:r78  l0     0
    1:r79  l0     1    2:r80  l0     4    0:r81  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot_where

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={7d,2u} r5={8d,4u} r6={1d,5u} r7={1d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,8u} r17={12d,1u} r18={4d} r19={4d} r20={1d,16u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={2d,2u} r80={2d,2u} r81={2d,3u} 
;;    total ref usage 315{235d,80u,0e} in 44{40 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73 74
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 file_w+0 S8 A64])
        (reg:DI 5 di [ file_w ])) mTest.c:40 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ file_w ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 file_w+0 S8 A64])) mTest.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 73)) mTest.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:41 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 74)
        (reg:DI 0 ax)) mTest.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])
        (reg:DI 74)) mTest.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74)
        (nil)))
(insn 12 11 59 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:43 89 {*movsi_internal}
     (nil))
(jump_insn 59 12 60 2 (set (pc)
        (label_ref 39)) mTest.c:43 650 {jump}
     (nil)
 -> 39)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 60 59 42)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 75 76 77
(code_label 42 60 15 3 11 "" [1 uses])
(note 15 42 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 60 [ D.4312 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mTest.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:43 89 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 61 [ D.4313 ])
        (sign_extend:DI (reg:SI 75))) mTest.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 62 [ D.4313 ])
                (ashift:DI (reg:DI 61 [ D.4313 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4313 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 3 (parallel [
            (set (reg/f:DI 63 [ D.4312 ])
                (plus:DI (reg/f:DI 60 [ D.4312 ])
                    (reg:DI 62 [ D.4313 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4313 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4312 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 21 20 22 3 (set (reg/f:DI 64 [ D.4314 ])
        (mem/f:DI (reg/f:DI 63 [ D.4312 ]) [0 *_9+0 S8 A64])) mTest.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4312 ])
        (nil)))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 65 [ D.4314 ])
                (plus:DI (reg/f:DI 64 [ D.4314 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4314 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 3 (set (reg:XF 66 [ D.4315 ])
        (mem:XF (reg/f:DI 65 [ D.4314 ]) [0 *_11+0 S16 A128])) mTest.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4314 ])
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 67 [ D.4312 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mTest.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:43 89 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 68 [ D.4313 ])
        (sign_extend:DI (reg:SI 76))) mTest.c:43 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg:DI 69 [ D.4313 ])
                (ashift:DI (reg:DI 68 [ D.4313 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.4313 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 70 [ D.4312 ])
                (plus:DI (reg/f:DI 67 [ D.4312 ])
                    (reg:DI 69 [ D.4313 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.4313 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.4312 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 28 30 3 (set (reg/f:DI 71 [ D.4314 ])
        (mem/f:DI (reg/f:DI 70 [ D.4312 ]) [0 *_16+0 S8 A64])) mTest.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.4312 ])
        (nil)))
(insn 30 29 31 3 (set (reg:XF 72 [ D.4315 ])
        (mem:XF (reg/f:DI 71 [ D.4314 ]) [0 *_17+0 S16 A128])) mTest.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4314 ])
        (nil)))
(insn 31 30 32 3 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 66 [ D.4315 ])) mTest.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4315 ])
        (nil)))
(insn 33 32 34 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.4315 ])) mTest.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.4315 ])
        (nil)))
(insn 34 33 35 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 77)) mTest.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(insn 36 35 37 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:43 91 {*movqi_internal}
     (nil))
(call_insn 37 36 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:43 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 38 37 39 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:43 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 39 38 40 4 10 "" [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 4 (set (reg:SI 59 [ D.4311 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 4 [0x4])) [0 f.n_nvp+0 S4 A32])) mTest.c:43 89 {*movsi_internal}
     (nil))
(insn 43 41 44 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4311 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mTest.c:43 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4311 ])
        (nil)))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) mTest.c:43 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 80 81
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 5 (set (reg:DI 5 di)
        (reg:DI 78)) mTest.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(call_insn 48 47 49 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 5 (set (reg:DI 79)
        (reg/f:DI 7 sp)) mTest.c:46 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 80)
                (plus:DI (reg/f:DI 16 argp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:46 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 81)
        (const_int 38 [0x26])) mTest.c:46 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 81)
                (const_int 0 [0]))
            (set (reg:DI 79)
                (plus:DI (ashift:DI (reg:DI 81)
                        (const_int 3 [0x3]))
                    (reg:DI 79)))
            (set (reg:DI 80)
                (plus:DI (ashift:DI (reg:DI 81)
                        (const_int 3 [0x3]))
                    (reg:DI 80)))
            (set (mem:BLK (reg:DI 79) [0  S304 A128])
                (mem/c:BLK (reg:DI 80) [0 c+0 S304 A128]))
            (use (reg:DI 81))
        ]) mTest.c:46 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 81)
        (expr_list:REG_UNUSED (reg:DI 80)
            (expr_list:REG_UNUSED (reg:DI 79)
                (nil)))))
(call_insn 53 52 58 5 (call (mem:QI (symbol_ref:DI ("_print_bound") [flags 0x3]  <function_decl 0x7f14bd7bbf00 _print_bound>) [0 _print_bound S1 A8])
        (const_int 304 [0x130])) mTest.c:46 656 {*call}
     (nil)
    (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
        (nil)))
(insn 58 53 0 5 (const_int 0 [0]) mTest.c:49 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function print_tmp_point (print_tmp_point, funcdef_no=5, decl_uid=1940, cgraph_uid=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r80: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r80,l0) best CREG, allocno GENERAL_REGS
    r79: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r79,l0) best SIREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r76,l0) best DIREG, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a7 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r80,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a1(r78,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a2(r79,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a3(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a18(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 56(l0): point = 0
   Insn 51(l0): point = 2
   Insn 50(l0): point = 4
   Insn 49(l0): point = 6
   Insn 48(l0): point = 8
   Insn 47(l0): point = 10
   Insn 46(l0): point = 12
   Insn 45(l0): point = 14
   Insn 44(l0): point = 16
   Insn 36(l0): point = 19
   Insn 35(l0): point = 21
   Insn 34(l0): point = 23
   Insn 33(l0): point = 25
   Insn 32(l0): point = 27
   Insn 31(l0): point = 29
   Insn 30(l0): point = 31
   Insn 29(l0): point = 33
   Insn 28(l0): point = 35
   Insn 27(l0): point = 37
   Insn 26(l0): point = 39
   Insn 25(l0): point = 41
   Insn 24(l0): point = 43
   Insn 23(l0): point = 45
   Insn 22(l0): point = 47
   Insn 21(l0): point = 49
   Insn 20(l0): point = 51
   Insn 19(l0): point = 53
   Insn 18(l0): point = 55
   Insn 17(l0): point = 57
   Insn 16(l0): point = 59
   Insn 15(l0): point = 61
   Insn 14(l0): point = 63
   Insn 42(l0): point = 66
   Insn 41(l0): point = 68
   Insn 39(l0): point = 70
   Insn 57(l0): point = 73
   Insn 10(l0): point = 75
   Insn 9(l0): point = 77
   Insn 8(l0): point = 79
   Insn 7(l0): point = 81
   Insn 6(l0): point = 83
   Insn 5(l0): point = 85
 a0(r80): [4..6]
 a1(r78): [4..10]
 a2(r79): [4..8]
 a3(r77): [15..16]
 a4(r59): [69..70]
 a5(r76): [26..33]
 a6(r72 [0]): [30..35]
 a6(r72 [1]): [30..35]
 a7(r66 [0]): [32..49]
 a7(r66 [1]): [32..49]
 a8(r71): [36..37]
 a9(r70): [38..39]
 a10(r69): [40..41]
 a11(r67): [40..47]
 a12(r68): [42..43]
 a13(r75): [44..45]
 a14(r65): [50..51]
 a15(r64): [52..53]
 a16(r63): [54..55]
 a17(r62): [56..57]
 a18(r60): [56..63]
 a19(r61): [58..59]
 a20(r74): [60..61]
 a21(r73): [78..79]
Compressing live ranges: from 88 to 32 - 36%
Ranges after the compression:
 a0(r80): [0..1]
 a1(r78): [0..1]
 a2(r79): [0..1]
 a3(r77): [2..3]
 a4(r59): [28..29]
 a5(r76): [4..5]
 a6(r72 [0]): [4..5]
 a6(r72 [1]): [4..5]
 a7(r66 [0]): [4..15]
 a7(r66 [1]): [4..15]
 a8(r71): [6..7]
 a9(r70): [8..9]
 a10(r69): [10..11]
 a11(r67): [10..15]
 a12(r68): [12..13]
 a13(r75): [14..15]
 a14(r65): [16..17]
 a15(r64): [18..19]
 a16(r63): [20..21]
 a17(r62): [22..23]
 a18(r60): [22..27]
 a19(r61): [24..25]
 a20(r74): [26..27]
 a21(r73): [30..31]
  regions=1, blocks=6, points=32
    allocnos=22 (big 2), copies=0, conflicts=0, ranges=24
Disposition:
    4:r59  l0     0   18:r60  l0     0   19:r61  l0     1   17:r62  l0     1
   16:r63  l0     0   15:r64  l0     0   14:r65  l0     0    7:r66  l0     2
   11:r67  l0     0   12:r68  l0     1   10:r69  l0     1    9:r70  l0     0
    8:r71  l0     0    6:r72  l0     0   21:r73  l0     0   20:r74  l0     1
   13:r75  l0     1    5:r76  l0     5    3:r77  l0     0    1:r78  l0     1
    2:r79  l0     4    0:r80  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


print_tmp_point

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={7d,2u} r5={8d,3u} r6={1d,5u} r7={1d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,8u} r17={11d,1u} r18={4d} r19={4d} r20={1d,14u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={2d,2u} r79={2d,2u} r80={2d,3u} 
;;    total ref usage 309{233d,76u,0e} in 42{38 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f14bd8182f8 *.LC3>)) mTest.c:53 87 {*movdi_internal_rex64}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:53 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:DI 73)
        (reg:DI 0 ax)) mTest.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])
        (reg:DI 73)) mTest.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 10 9 57 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:55 89 {*movsi_internal}
     (nil))
(jump_insn 57 10 58 2 (set (pc)
        (label_ref 37)) mTest.c:55 650 {jump}
     (nil)
 -> 37)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 58 57 40)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76
(code_label 40 58 13 3 15 "" [1 uses])
(note 13 40 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:DI 60 [ D.4317 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [0 c.tmp_nvp+0 S8 A64])) mTest.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:55 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 61 [ D.4318 ])
        (sign_extend:DI (reg:SI 74))) mTest.c:55 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 62 [ D.4318 ])
                (ashift:DI (reg:DI 61 [ D.4318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4318 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 63 [ D.4317 ])
                (plus:DI (reg/f:DI 60 [ D.4317 ])
                    (reg:DI 62 [ D.4318 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4318 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4317 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 19 18 20 3 (set (reg/f:DI 64 [ D.4319 ])
        (mem/f:DI (reg/f:DI 63 [ D.4317 ]) [0 *_8+0 S8 A64])) mTest.c:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4317 ])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:DI 65 [ D.4319 ])
                (plus:DI (reg/f:DI 64 [ D.4319 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4319 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (set (reg:XF 66 [ D.4320 ])
        (mem:XF (reg/f:DI 65 [ D.4319 ]) [0 *_10+0 S16 A128])) mTest.c:55 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4319 ])
        (nil)))
(insn 22 21 23 3 (set (reg/f:DI 67 [ D.4317 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [0 c.tmp_nvp+0 S8 A64])) mTest.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:55 89 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 68 [ D.4318 ])
        (sign_extend:DI (reg:SI 75))) mTest.c:55 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 69 [ D.4318 ])
                (ashift:DI (reg:DI 68 [ D.4318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.4318 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (parallel [
            (set (reg/f:DI 70 [ D.4317 ])
                (plus:DI (reg/f:DI 67 [ D.4317 ])
                    (reg:DI 69 [ D.4318 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.4318 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.4317 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 3 (set (reg/f:DI 71 [ D.4319 ])
        (mem/f:DI (reg/f:DI 70 [ D.4317 ]) [0 *_15+0 S8 A64])) mTest.c:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.4317 ])
        (nil)))
(insn 28 27 29 3 (set (reg:XF 72 [ D.4320 ])
        (mem:XF (reg/f:DI 71 [ D.4319 ]) [0 *_16+0 S16 A128])) mTest.c:55 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4319 ])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 66 [ D.4320 ])) mTest.c:55 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4320 ])
        (nil)))
(insn 31 30 32 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.4320 ])) mTest.c:55 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.4320 ])
        (nil)))
(insn 32 31 33 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (reg:DI 76)) mTest.c:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(insn 34 33 35 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:55 91 {*movqi_internal}
     (nil))
(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:55 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 36 35 37 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:55 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 37 36 38 4 14 "" [1 uses])
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 41 4 (set (reg:SI 59 [ D.4316 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 c.n_tmp_nvp+0 S4 A128])) mTest.c:55 89 {*movsi_internal}
     (nil))
(insn 41 39 42 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4316 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mTest.c:55 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4316 ])
        (nil)))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) mTest.c:55 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 77 78 79 80
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:56 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 77)) mTest.c:56 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(call_insn 46 45 47 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:56 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 5 (set (reg:DI 78)
        (reg/f:DI 7 sp)) mTest.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 5 (set (reg:DI 79)
        (reg/f:DI 16 argp)) mTest.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 5 (set (reg:DI 80)
        (const_int 38 [0x26])) mTest.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 80)
                (const_int 0 [0]))
            (set (reg:DI 78)
                (plus:DI (ashift:DI (reg:DI 80)
                        (const_int 3 [0x3]))
                    (reg:DI 78)))
            (set (reg:DI 79)
                (plus:DI (ashift:DI (reg:DI 80)
                        (const_int 3 [0x3]))
                    (reg:DI 79)))
            (set (mem:BLK (reg:DI 78) [0  S304 A128])
                (mem/c:BLK (reg:DI 79) [0 c+0 S304 A128]))
            (use (reg:DI 80))
        ]) mTest.c:58 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 80)
        (expr_list:REG_UNUSED (reg:DI 79)
            (expr_list:REG_UNUSED (reg:DI 78)
                (nil)))))
(call_insn 51 50 56 5 (call (mem:QI (symbol_ref:DI ("_print_bound") [flags 0x3]  <function_decl 0x7f14bd7bbf00 _print_bound>) [0 _print_bound S1 A8])
        (const_int 304 [0x130])) mTest.c:58 656 {*call}
     (nil)
    (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
        (nil)))
(insn 56 51 0 5 (const_int 0 [0]) mTest.c:59 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot_ID (plot_ID, funcdef_no=6, decl_uid=1945, cgraph_uid=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r80: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r80,l0) best CREG, allocno GENERAL_REGS
    r79: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r79,l0) best SIREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r77,l0) best CREG, allocno GENERAL_REGS
    r76: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r76,l0) best SIREG, allocno GENERAL_REGS
    r75: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r75,l0) best DIREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r80,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a1(r78,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a2(r79,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a3(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r77,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a5(r75,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a6(r76,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a7(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a10(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a12(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a19(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a20(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a21(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 63(l0): point = 0
   Insn 58(l0): point = 2
   Insn 57(l0): point = 4
   Insn 56(l0): point = 6
   Insn 55(l0): point = 8
   Insn 54(l0): point = 10
   Insn 53(l0): point = 12
   Insn 52(l0): point = 14
   Insn 51(l0): point = 16
   Insn 50(l0): point = 18
   Insn 49(l0): point = 20
   Insn 48(l0): point = 22
   Insn 47(l0): point = 24
   Insn 46(l0): point = 26
   Insn 45(l0): point = 28
   Insn 44(l0): point = 30
   Insn 43(l0): point = 32
   Insn 42(l0): point = 34
   Insn 41(l0): point = 36
   Insn 40(l0): point = 38
   Insn 39(l0): point = 40
   Insn 66(l0): point = 43
   Insn 24(l0): point = 46
   Insn 23(l0): point = 48
   Insn 22(l0): point = 50
   Insn 21(l0): point = 52
   Insn 20(l0): point = 54
   Insn 19(l0): point = 56
   Insn 18(l0): point = 58
   Insn 17(l0): point = 60
   Insn 16(l0): point = 62
   Insn 15(l0): point = 64
   Insn 14(l0): point = 66
   Insn 13(l0): point = 68
   Insn 12(l0): point = 70
   Insn 36(l0): point = 73
   Insn 35(l0): point = 75
   Insn 34(l0): point = 77
   Insn 30(l0): point = 80
   Insn 64(l0): point = 83
   Insn 8(l0): point = 85
   Insn 4(l0): point = 87
   Insn 3(l0): point = 89
   Insn 2(l0): point = 91
 a0(r80): [6..8]
 a1(r78): [6..12]
 a2(r79): [6..10]
 a3(r65): [11..22]
 a4(r77): [14..16]
 a5(r75): [14..20]
 a6(r76): [14..18]
 a7(r74): [23..24]
 a8(r64): [23..26]
 a9(r72): [31..36] [27..28]
 a10(r73): [29..30]
 a11(r63): [33..38]
 a12(r71): [39..40]
 a13(r70): [76..77]
 a14(r62): [49..50]
 a15(r61): [51..52]
 a16(r69): [53..54]
 a17(r60): [53..56]
 a18(r67): [61..66] [57..58]
 a19(r68): [59..60]
 a20(r59): [63..68]
 a21(r66): [69..70]
Compressing live ranges: from 94 to 32 - 34%
Ranges after the compression:
 a0(r80): [0..1]
 a1(r78): [0..3]
 a2(r79): [0..1]
 a3(r65): [2..5]
 a4(r77): [4..5]
 a5(r75): [4..5]
 a6(r76): [4..5]
 a7(r74): [6..7]
 a8(r64): [6..7]
 a9(r72): [12..13] [8..9]
 a10(r73): [10..11]
 a11(r63): [12..13]
 a12(r71): [14..15]
 a13(r70): [30..31]
 a14(r62): [16..17]
 a15(r61): [18..19]
 a16(r69): [20..21]
 a17(r60): [20..21]
 a18(r67): [26..27] [22..23]
 a19(r68): [24..25]
 a20(r59): [26..27]
 a21(r66): [28..29]
  regions=1, blocks=8, points=32
    allocnos=22 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
   20:r59  l0     1   17:r60  l0     1   15:r61  l0     0   14:r62  l0     0
   11:r63  l0     1    8:r64  l0     1    3:r65  l0    37   21:r66  l0     0
   18:r67  l0     0   19:r68  l0     0   16:r69  l0     0   13:r70  l0     0
   12:r71  l0     0    9:r72  l0     0   10:r73  l0     0    7:r74  l0     0
    5:r75  l0     1    6:r76  l0     4    4:r77  l0     0    1:r78  l0     1
    2:r79  l0     4    0:r80  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot_ID

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,7u} r7={1d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={13d,2u} r18={1d} r19={1d} r20={1d,20u,2e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,2u,1e} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,2u,1e} r64={1d,1u,1e} r65={1d,1u} r66={1d,1u} r67={4d,4u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={4d,4u} r73={1d,1u} r74={1d,1u} r75={2d,2u} r76={2d,2u} r77={2d,3u} r78={2d,2u} r79={2d,2u} r80={2d,3u} 
;;    total ref usage 206{110d,90u,6e} in 44{43 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mTest.c:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mTest.c:63 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ Nflight ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 ID+0 S4 A32])
        (reg:SI 1 dx [ ID ])) mTest.c:63 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ ID ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 64 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:65 89 {*movsi_internal}
     (nil))
(jump_insn 64 8 65 2 (set (pc)
        (label_ref 31)) mTest.c:65 650 {jump}
     (nil)
 -> 31)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 65 64 33)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 66 67 68 69
(code_label 33 65 11 3 21 "" [1 uses])
(note 11 33 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 66)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mTest.c:65 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 59 [ D.4322 ])
        (sign_extend:DI (reg:SI 66))) mTest.c:65 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 66)
        (nil)))
(insn 14 13 15 3 (set (reg:DI 67)
        (reg:DI 59 [ D.4322 ])) mTest.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:DI 67)
                (ashift:DI (reg:DI 67)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:65 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg:DI 67)
                    (reg:DI 59 [ D.4322 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:65 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.4322 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4322 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 68)
                (ashift:DI (reg:DI 67)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:65 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 67)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (set (reg:DI 67)
        (reg:DI 68)) mTest.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 60 [ D.4322 ])
        (reg:DI 67)) mTest.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(insn 20 19 21 3 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mTest.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 61 [ D.4323 ])
                (plus:DI (reg:DI 60 [ D.4322 ])
                    (reg/f:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:65 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (expr_list:REG_DEAD (reg:DI 60 [ D.4322 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
                        (reg:DI 60 [ D.4322 ]))
                    (nil))))))
(insn 22 21 23 3 (set (reg:SI 62 [ D.4324 ])
        (mem/j:SI (reg/f:DI 61 [ D.4323 ]) [0 _7->ID+0 S4 A128])) mTest.c:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.4323 ])
        (nil)))
(insn 23 22 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.4324 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 ID+0 S4 A32]))) mTest.c:65 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 62 [ D.4324 ])
        (nil)))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) mTest.c:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 25 24 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 66 25 67 4 (set (pc)
        (label_ref 37)) mTest.c:65 650 {jump}
     (nil)
 -> 37)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 28)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 28 67 29 5 19 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:65 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70
(code_label 31 30 32 6 18 "" [1 uses])
(note 32 31 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 35 6 (set (reg:SI 70)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mTest.c:65 89 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 70)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32]))) mTest.c:65 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 70)
        (nil)))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mTest.c:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 33)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 71 72 73 74 75 76 77 78 79 80
(code_label 37 36 38 7 20 "" [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mTest.c:66 89 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 63 [ D.4322 ])
        (sign_extend:DI (reg:SI 71))) mTest.c:66 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(insn 41 40 42 7 (set (reg:DI 72)
        (reg:DI 63 [ D.4322 ])) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:DI 72)
                (ashift:DI (reg:DI 72)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:66 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 72)
                (plus:DI (reg:DI 72)
                    (reg:DI 63 [ D.4322 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:66 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.4322 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 63 [ D.4322 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 73)
                (ashift:DI (reg:DI 72)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:66 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 72)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 7 (set (reg:DI 72)
        (reg:DI 73)) mTest.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 46 45 47 7 (set (reg:DI 64 [ D.4322 ])
        (reg:DI 72)) mTest.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(insn 47 46 48 7 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 7 (parallel [
            (set (reg/f:DI 65 [ D.4323 ])
                (plus:DI (reg:DI 64 [ D.4322 ])
                    (reg/f:DI 74)))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:66 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_DEAD (reg:DI 64 [ D.4322 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
                        (reg:DI 64 [ D.4322 ]))
                    (nil))))))
(insn 49 48 50 7 (parallel [
            (set (reg:DI 75)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:66 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 7 (set (reg:DI 76)
        (reg/f:DI 16 argp)) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 7 (set (reg:DI 77)
        (const_int 38 [0x26])) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 77)
                (const_int 0 [0]))
            (set (reg:DI 75)
                (plus:DI (ashift:DI (reg:DI 77)
                        (const_int 3 [0x3]))
                    (reg:DI 75)))
            (set (reg:DI 76)
                (plus:DI (ashift:DI (reg:DI 77)
                        (const_int 3 [0x3]))
                    (reg:DI 76)))
            (set (mem:BLK (reg:DI 75) [0  S304 A128])
                (mem/c:BLK (reg:DI 76) [0 config+0 S304 A128]))
            (use (reg:DI 77))
        ]) mTest.c:66 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 77)
        (expr_list:REG_UNUSED (reg:DI 76)
            (expr_list:REG_UNUSED (reg:DI 75)
                (nil)))))
(insn 53 52 54 7 (set (reg:DI 78)
        (reg/f:DI 7 sp)) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 7 (set (reg:DI 79)
        (reg/f:DI 65 [ D.4323 ])) mTest.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4323 ])
        (nil)))
(insn 55 54 56 7 (set (reg:DI 80)
        (const_int 20 [0x14])) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 80)
                (const_int 0 [0]))
            (set (reg:DI 78)
                (plus:DI (ashift:DI (reg:DI 80)
                        (const_int 3 [0x3]))
                    (reg:DI 78)))
            (set (reg:DI 79)
                (plus:DI (ashift:DI (reg:DI 80)
                        (const_int 3 [0x3]))
                    (reg:DI 79)))
            (set (mem:BLK (reg:DI 78) [0  S160 A128])
                (mem:BLK (reg:DI 79) [0 *_13+0 S160 A128]))
            (use (reg:DI 80))
        ]) mTest.c:66 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 80)
        (expr_list:REG_UNUSED (reg:DI 79)
            (expr_list:REG_UNUSED (reg:DI 78)
                (nil)))))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f14bd818ab0 *.LC4>)) mTest.c:66 87 {*movdi_internal_rex64}
     (nil))
(call_insn 58 57 63 7 (call (mem:QI (symbol_ref:DI ("plot") [flags 0x3]  <function_decl 0x7f14bda46d00 plot>) [0 plot S1 A8])
        (const_int 464 [0x1d0])) mTest.c:66 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S160 A128]))
            (expr_list:REG_DEAD (use (mem:BLK (plus:DI (reg/f:DI 7 sp)
                            (const_int 160 [0xa0])) [0  S304 A128]))
                (nil)))))
(insn 63 58 0 7 (const_int 0 [0]) mTest.c:67 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot_pos (plot_pos, funcdef_no=7, decl_uid=1948, cgraph_uid=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best DIREG, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r79,l0) best AREG, allocno GENERAL_REGS
    r78: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r78,l0) best CREG, allocno GENERAL_REGS
    r77: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r77,l0) best SIREG, allocno GENERAL_REGS
    r76: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r76,l0) best DIREG, allocno GENERAL_REGS
    r75: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r75,l0) best CREG, allocno GENERAL_REGS
    r74: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r74,l0) best SIREG, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a4 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a15(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r79,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a19(r78,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a20(r76,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a21(r77,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a22(r75,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a23(r73,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a24(r74,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12

   Insn 56(l0): point = 0
   Insn 55(l0): point = 2
   Insn 54(l0): point = 4
   Insn 46(l0): point = 7
   Insn 45(l0): point = 9
   Insn 44(l0): point = 11
   Insn 43(l0): point = 13
   Insn 42(l0): point = 15
   Insn 41(l0): point = 17
   Insn 40(l0): point = 19
   Insn 39(l0): point = 21
   Insn 38(l0): point = 23
   Insn 37(l0): point = 25
   Insn 36(l0): point = 27
   Insn 35(l0): point = 29
   Insn 34(l0): point = 31
   Insn 33(l0): point = 33
   Insn 32(l0): point = 35
   Insn 31(l0): point = 37
   Insn 30(l0): point = 39
   Insn 29(l0): point = 41
   Insn 28(l0): point = 43
   Insn 27(l0): point = 45
   Insn 26(l0): point = 47
   Insn 25(l0): point = 49
   Insn 24(l0): point = 51
   Insn 52(l0): point = 54
   Insn 51(l0): point = 56
   Insn 49(l0): point = 58
   Insn 59(l0): point = 61
   Insn 20(l0): point = 63
   Insn 19(l0): point = 65
   Insn 18(l0): point = 67
   Insn 17(l0): point = 69
   Insn 16(l0): point = 71
   Insn 15(l0): point = 73
   Insn 14(l0): point = 75
   Insn 13(l0): point = 77
   Insn 12(l0): point = 79
   Insn 11(l0): point = 81
   Insn 10(l0): point = 83
   Insn 9(l0): point = 85
   Insn 8(l0): point = 87
   Insn 7(l0): point = 89
   Insn 6(l0): point = 91
   Insn 5(l0): point = 93
 a0(r83): [3..4]
 a1(r59): [57..58]
 a2(r82): [14..21]
 a3(r72 [0]): [18..23]
 a3(r72 [1]): [18..23]
 a4(r66 [0]): [20..37]
 a4(r66 [1]): [20..37]
 a5(r71): [24..25]
 a6(r70): [26..27]
 a7(r69): [28..29]
 a8(r67): [28..35]
 a9(r68): [30..31]
 a10(r81): [32..33]
 a11(r65): [38..39]
 a12(r64): [40..41]
 a13(r63): [42..43]
 a14(r62): [44..45]
 a15(r60): [44..51]
 a16(r61): [46..47]
 a17(r80): [48..49]
 a18(r79): [66..67]
 a19(r78): [79..81]
 a20(r76): [79..85]
 a21(r77): [79..83]
 a22(r75): [87..89]
 a23(r73): [87..93]
 a24(r74): [87..91]
Compressing live ranges: from 96 to 34 - 35%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r59): [26..27]
 a2(r82): [2..3]
 a3(r72 [0]): [2..3]
 a3(r72 [1]): [2..3]
 a4(r66 [0]): [2..13]
 a4(r66 [1]): [2..13]
 a5(r71): [4..5]
 a6(r70): [6..7]
 a7(r69): [8..9]
 a8(r67): [8..13]
 a9(r68): [10..11]
 a10(r81): [12..13]
 a11(r65): [14..15]
 a12(r64): [16..17]
 a13(r63): [18..19]
 a14(r62): [20..21]
 a15(r60): [20..25]
 a16(r61): [22..23]
 a17(r80): [24..25]
 a18(r79): [28..29]
 a19(r78): [30..31]
 a20(r76): [30..31]
 a21(r77): [30..31]
 a22(r75): [32..33]
 a23(r73): [32..33]
 a24(r74): [32..33]
  regions=1, blocks=6, points=34
    allocnos=25 (big 2), copies=0, conflicts=0, ranges=27
Disposition:
    1:r59  l0     0   15:r60  l0     0   16:r61  l0     1   14:r62  l0     1
   13:r63  l0     0   12:r64  l0     0   11:r65  l0     0    4:r66  l0     2
    8:r67  l0     0    9:r68  l0     1    7:r69  l0     1    6:r70  l0     0
    5:r71  l0     0    3:r72  l0     0   23:r73  l0     1   24:r74  l0     4
   22:r75  l0     0   20:r76  l0     1   21:r77  l0     4   19:r78  l0     0
   18:r79  l0     0   17:r80  l0     1   10:r81  l0     1    2:r82  l0     5
    0:r83  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot_pos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={7d,2u} r5={9d,4u} r6={1d,5u} r7={1d,17u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,9u} r17={13d,1u} r18={4d} r19={4d} r20={1d,14u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={2d,2u} r74={2d,2u} r75={2d,3u} r76={2d,2u} r77={2d,2u} r78={2d,3u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 329{242d,87u,0e} in 46{42 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73 74 75 76 77 78 79
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg:DI 73)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:71 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg/f:DI 16 argp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:71 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 75)
        (const_int 38 [0x26])) mTest.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 75)
                (const_int 0 [0]))
            (set (reg:DI 73)
                (plus:DI (ashift:DI (reg:DI 75)
                        (const_int 3 [0x3]))
                    (reg:DI 73)))
            (set (reg:DI 74)
                (plus:DI (ashift:DI (reg:DI 75)
                        (const_int 3 [0x3]))
                    (reg:DI 74)))
            (set (mem:BLK (reg:DI 73) [0  S304 A128])
                (mem/c:BLK (reg:DI 74) [0 c+0 S304 A128]))
            (use (reg:DI 75))
        ]) mTest.c:71 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 75)
        (expr_list:REG_UNUSED (reg:DI 74)
            (expr_list:REG_UNUSED (reg:DI 73)
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 76)
        (reg/f:DI 7 sp)) mTest.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 77)
        (reg/f:DI 16 argp)) mTest.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 78)
        (const_int 20 [0x14])) mTest.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 78)
                (const_int 0 [0]))
            (set (reg:DI 76)
                (plus:DI (ashift:DI (reg:DI 78)
                        (const_int 3 [0x3]))
                    (reg:DI 76)))
            (set (reg:DI 77)
                (plus:DI (ashift:DI (reg:DI 78)
                        (const_int 3 [0x3]))
                    (reg:DI 77)))
            (set (mem:BLK (reg:DI 76) [0  S160 A128])
                (mem/c:BLK (reg:DI 77) [0 f+0 S160 A128]))
            (use (reg:DI 78))
        ]) mTest.c:71 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 78)
        (expr_list:REG_UNUSED (reg:DI 77)
            (expr_list:REG_UNUSED (reg:DI 76)
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f14bd8182f8 *.LC3>)) mTest.c:71 87 {*movdi_internal_rex64}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("plot") [flags 0x3]  <function_decl 0x7f14bda46d00 plot>) [0 plot S1 A8])
        (const_int 464 [0x1d0])) mTest.c:71 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S160 A128]))
            (expr_list:REG_DEAD (use (mem:BLK (plus:DI (reg/f:DI 7 sp)
                            (const_int 160 [0xa0])) [0  S304 A128]))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f14bd8182f8 *.LC3>)) mTest.c:72 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:72 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 79)
        (reg:DI 0 ax)) mTest.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])
        (reg:DI 79)) mTest.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 79)
        (nil)))
(insn 20 19 59 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:74 89 {*movsi_internal}
     (nil))
(jump_insn 59 20 60 2 (set (pc)
        (label_ref 47)) mTest.c:74 650 {jump}
     (nil)
 -> 47)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 60 59 50)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 80 81 82
(code_label 50 60 23 3 25 "" [1 uses])
(note 23 50 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 60 [ D.4327 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 f.pos+0 S8 A128])) mTest.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:74 89 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 61 [ D.4328 ])
        (sign_extend:DI (reg:SI 80))) mTest.c:74 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 80)
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg:DI 62 [ D.4328 ])
                (ashift:DI (reg:DI 61 [ D.4328 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4328 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 63 [ D.4327 ])
                (plus:DI (reg/f:DI 60 [ D.4327 ])
                    (reg:DI 62 [ D.4328 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4328 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4327 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 28 30 3 (set (reg/f:DI 64 [ D.4329 ])
        (mem/f:DI (reg/f:DI 63 [ D.4327 ]) [0 *_8+0 S8 A64])) mTest.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4327 ])
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg/f:DI 65 [ D.4329 ])
                (plus:DI (reg/f:DI 64 [ D.4329 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4329 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 3 (set (reg:XF 66 [ D.4330 ])
        (mem:XF (reg/f:DI 65 [ D.4329 ]) [0 *_10+0 S16 A128])) mTest.c:74 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.4329 ])
        (nil)))
(insn 32 31 33 3 (set (reg/f:DI 67 [ D.4327 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 f.pos+0 S8 A128])) mTest.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mTest.c:74 89 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 68 [ D.4328 ])
        (sign_extend:DI (reg:SI 81))) mTest.c:74 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg:DI 69 [ D.4328 ])
                (ashift:DI (reg:DI 68 [ D.4328 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.4328 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 3 (parallel [
            (set (reg/f:DI 70 [ D.4327 ])
                (plus:DI (reg/f:DI 67 [ D.4327 ])
                    (reg:DI 69 [ D.4328 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.4328 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.4327 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 3 (set (reg/f:DI 71 [ D.4329 ])
        (mem/f:DI (reg/f:DI 70 [ D.4327 ]) [0 *_15+0 S8 A64])) mTest.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.4327 ])
        (nil)))
(insn 38 37 39 3 (set (reg:XF 72 [ D.4330 ])
        (mem:XF (reg/f:DI 71 [ D.4329 ]) [0 *_16+0 S16 A128])) mTest.c:74 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4329 ])
        (nil)))
(insn 39 38 40 3 (set (reg:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 66 [ D.4330 ])) mTest.c:74 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4330 ])
        (nil)))
(insn 41 40 42 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.4330 ])) mTest.c:74 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.4330 ])
        (nil)))
(insn 42 41 43 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 3 (set (reg:DI 5 di)
        (reg:DI 82)) mTest.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 44 43 45 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:74 91 {*movqi_internal}
     (nil))
(call_insn 45 44 46 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 46 45 47 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:74 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 47 46 48 4 24 "" [1 uses])
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 51 4 (set (reg:SI 59 [ D.4326 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 352 [0x160])) [0 c.t_w+0 S4 A128])) mTest.c:74 89 {*movsi_internal}
     (nil))
(insn 51 49 52 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4326 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mTest.c:74 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4326 ])
        (nil)))
(jump_insn 52 51 53 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) mTest.c:74 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 50)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 83
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 wstream+0 S8 A64])) mTest.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (reg:DI 83)) mTest.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 56 55 0 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:75 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _gall_peter (_gall_peter, funcdef_no=8, decl_uid=4026, cgraph_uid=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r76: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r76,l0) best SSE_REGS, allocno SSE_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a2 (r68,l0) best NO_REGS, allocno NO_REGS
    r67: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a4 (r67,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r66: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a5 (r66,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r65: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a6 (r65,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a7 (r64,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r69,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a2(r68,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a3(r76,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a4(r67,l0) costs: AREG:19 DREG:19 CREG:19 BREG:19 SIREG:19 DIREG:19 AD_REGS:19 Q_REGS:19 NON_Q_REGS:19 INDEX_REGS:19 GENERAL_REGS:19 LEGACY_REGS:19 CLOBBERED_REGS:19 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:-1 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a5(r66,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:23 FP_SECOND_REG:23 FLOAT_REGS:23 SSE_FIRST_REG:1 SSE_REGS:2 FP_TOP_SSE_REGS:44 FP_SECOND_SSE_REGS:44 FLOAT_SSE_REGS:44 FLOAT_INT_REGS:40 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:44 ALL_REGS:131072 MEM:16
  a6(r65,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:1 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a7(r64,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r62,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a12(r72,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 35(l0): point = 0
   Insn 30(l0): point = 2
   Insn 29(l0): point = 4
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 25(l0): point = 12
   Insn 24(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 11(l0): point = 40
   Insn 10(l0): point = 42
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 3(l0): point = 50
   Insn 2(l0): point = 52
 a0(r63): [3..28]
 a1(r69): [3..4]
 a2(r68): [5..6]
 a3(r76): [7..8]
 a4(r67): [7..10]
 a5(r66): [15..16]
 a6(r65): [17..18]
 a7(r64 [0]): [23..24]
 a7(r64 [1]): [23..24]
 a8(r75): [25..26]
 a9(r74): [29..30]
 a10(r73): [33..34]
 a11(r62): [33..36]
 a12(r72): [37..38]
 a13(r61): [37..40]
 a14(r71): [41..42]
 a15(r60): [41..44]
 a16(r59): [45..46]
 a17(r70): [47..48]
Compressing live ranges: from 55 to 26 - 47%
Ranges after the compression:
 a0(r63): [0..13]
 a1(r69): [0..1]
 a2(r68): [2..3]
 a3(r76): [4..5]
 a4(r67): [4..5]
 a5(r66): [6..7]
 a6(r65): [8..9]
 a7(r64 [0]): [10..11]
 a7(r64 [1]): [10..11]
 a8(r75): [12..13]
 a9(r74): [14..15]
 a10(r73): [16..17]
 a11(r62): [16..17]
 a12(r72): [18..19]
 a13(r61): [18..19]
 a14(r71): [20..21]
 a15(r60): [20..21]
 a16(r59): [22..23]
 a17(r70): [24..25]
  regions=1, blocks=3, points=26
    allocnos=18 (big 1), copies=0, conflicts=0, ranges=19
Disposition:
   16:r59  l0     0   15:r60  l0     9   13:r61  l0     9   11:r62  l0     8
    0:r63  l0     3    7:r64  l0     0    6:r65  l0     8    5:r66  l0    21
    4:r67  l0    21    2:r68  l0   mem    1:r69  l0     8   17:r70  l0     0
   14:r71  l0     8   12:r72  l0     8   10:r73  l0     0    9:r74  l0     0
    8:r75  l0     0    3:r76  l0    22
+++Costs: overall 20, reg 1, mem 19, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_gall_peter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,6u} r8={2d,1u} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={4d} r18={2d} r19={2d} r20={1d,9u,2e} r21={4d,2u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 171{128d,41u,2e} in 27{25 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mTest.c:77 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])
        (reg:DI 4 si [ A ])) mTest.c:77 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ A ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mTest.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 59 [ D.4331 ])
                (plus:DI (reg/f:DI 70)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:78 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 9 8 10 2 (set (reg:XF 60 [ D.4332 ])
        (mem:XF (reg/f:DI 59 [ D.4331 ]) [0 *_2+0 S16 A128])) mTest.c:78 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.4331 ])
        (nil)))
(insn 10 9 11 2 (set (reg:XF 71)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mTest.c:78 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.00150867960205711424350738525390625e+7 [0x0.98b3f765e40088p+25])
        (nil)))
(insn 11 10 12 2 (set (reg:XF 61 [ D.4332 ])
        (mult:XF (reg:XF 60 [ D.4332 ])
            (reg:XF 71))) mTest.c:78 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71)
        (expr_list:REG_DEAD (reg:XF 60 [ D.4332 ])
            (nil))))
(insn 12 11 13 2 (set (reg:XF 72)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mTest.c:78 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.54558441227157118191826157271862030029296875e+2 [0x0.fe8ef6011760cp+8])
        (nil)))
(insn 13 12 14 2 (set (reg:XF 62 [ D.4332 ])
        (div:XF (reg:XF 61 [ D.4332 ])
            (reg:XF 72))) mTest.c:78 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 72)
        (expr_list:REG_DEAD (reg:XF 61 [ D.4332 ])
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])) mTest.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (mem:XF (reg/f:DI 73) [0 *A_6(D)+0 S16 A128])
        (reg:XF 62 [ D.4332 ])) mTest.c:78 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_DEAD (reg:XF 62 [ D.4332 ])
            (nil))))
(insn 16 15 17 2 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])) mTest.c:79 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 63 [ D.4331 ])
                (plus:DI (reg/f:DI 74)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:79 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mTest.c:79 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:XF 64 [ D.4332 ])
        (mem:XF (reg/f:DI 75) [0 *a_1(D)+0 S16 A128])) mTest.c:79 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 20 19 21 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 64 [ D.4332 ])) mTest.c:79 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.4332 ])
        (nil)))
(call_insn 21 20 22 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x41]  <function_decl 0x7f14bda42400 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mTest.c:79 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 22 21 23 2 (set (reg:XF 65 [ D.4332 ])
        (reg:XF 8 st)) mTest.c:79 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DF 66 [ D.4333 ])
                (float_truncate:DF (reg:XF 65 [ D.4332 ])))
            (clobber (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0  S8 A64]))
        ]) mTest.c:79 170 {*truncxfdf2_mixed}
     (expr_list:REG_DEAD (reg:XF 65 [ D.4332 ])
        (nil)))
(insn 24 23 25 2 (set (reg:DF 21 xmm0)
        (reg:DF 66 [ D.4333 ])) mTest.c:79 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 66 [ D.4333 ])
        (nil)))
(call_insn/u 25 24 26 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f14bd96ee00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) mTest.c:79 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 26 25 27 2 (set (reg:DF 67 [ D.4333 ])
        (reg:DF 21 xmm0)) mTest.c:79 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 27 26 28 2 (set (reg:DF 76)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S8 A64])) mTest.c:79 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 9.00995460587898828089237213134765625e+6 [0x0.897b229b1ae2a8p+24])
        (nil)))
(insn 28 27 29 2 (set (reg:DF 68 [ D.4333 ])
        (mult:DF (reg:DF 67 [ D.4333 ])
            (reg:DF 76))) mTest.c:79 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 76)
        (expr_list:REG_DEAD (reg:DF 67 [ D.4333 ])
            (nil))))
(insn 29 28 30 2 (set (reg:XF 69 [ D.4332 ])
        (float_extend:XF (reg:DF 68 [ D.4333 ]))) mTest.c:79 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 68 [ D.4333 ])
        (nil)))
(insn 30 29 35 2 (set (mem:XF (reg/f:DI 63 [ D.4331 ]) [0 *_7+0 S16 A128])
        (reg:XF 69 [ D.4332 ])) mTest.c:79 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 69 [ D.4332 ])
        (expr_list:REG_DEAD (reg/f:DI 63 [ D.4331 ])
            (nil))))
(insn 35 30 0 2 (const_int 0 [0]) mTest.c:80 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot_bound (plot_bound, funcdef_no=9, decl_uid=1954, cgraph_uid=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r71: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r71,l0) best DIREG, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r69,l0) best SIREG, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r67,l0) best AREG, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a4 (r65,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r64,l0) best DIREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r65,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a9(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r67,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 49(l0): point = 0
   Insn 43(l0): point = 2
   Insn 42(l0): point = 4
   Insn 41(l0): point = 6
   Insn 33(l0): point = 9
   Insn 32(l0): point = 11
   Insn 31(l0): point = 13
   Insn 30(l0): point = 15
   Insn 29(l0): point = 17
   Insn 28(l0): point = 19
   Insn 27(l0): point = 21
   Insn 26(l0): point = 23
   Insn 25(l0): point = 25
   Insn 24(l0): point = 27
   Insn 23(l0): point = 29
   Insn 22(l0): point = 31
   Insn 21(l0): point = 33
   Insn 20(l0): point = 35
   Insn 19(l0): point = 37
   Insn 18(l0): point = 39
   Insn 17(l0): point = 41
   Insn 16(l0): point = 43
   Insn 15(l0): point = 45
   Insn 14(l0): point = 47
   Insn 39(l0): point = 50
   Insn 38(l0): point = 52
   Insn 36(l0): point = 54
   Insn 50(l0): point = 57
   Insn 10(l0): point = 59
   Insn 9(l0): point = 61
   Insn 8(l0): point = 63
   Insn 7(l0): point = 65
   Insn 6(l0): point = 67
   Insn 5(l0): point = 69
 a0(r71): [5..6]
 a1(r59): [53..54]
 a2(r70): [16..23]
 a3(r66 [0]): [20..25]
 a3(r66 [1]): [20..25]
 a4(r65 [0]): [22..27]
 a4(r65 [1]): [22..27]
 a5(r64): [32..37]
 a6(r69): [34..35]
 a7(r63): [38..39]
 a8(r62): [40..41]
 a9(r60): [40..47]
 a10(r61): [42..43]
 a11(r68): [44..45]
 a12(r67): [62..63]
Compressing live ranges: from 72 to 18 - 25%
Ranges after the compression:
 a0(r71): [0..1]
 a1(r59): [14..15]
 a2(r70): [2..3]
 a3(r66 [0]): [2..3]
 a3(r66 [1]): [2..3]
 a4(r65 [0]): [2..3]
 a4(r65 [1]): [2..3]
 a5(r64): [4..5]
 a6(r69): [4..5]
 a7(r63): [6..7]
 a8(r62): [8..9]
 a9(r60): [8..13]
 a10(r61): [10..11]
 a11(r68): [12..13]
 a12(r67): [16..17]
  regions=1, blocks=6, points=18
    allocnos=13 (big 2), copies=0, conflicts=0, ranges=15
Disposition:
    1:r59  l0     0    9:r60  l0     0   10:r61  l0     1    8:r62  l0     1
    7:r63  l0     0    5:r64  l0     0    4:r65  l0     2    3:r66  l0     0
   12:r67  l0     0   11:r68  l0     1    6:r69  l0     1    2:r70  l0     5
    0:r71  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={8d,3u} r5={9d,4u} r6={1d,5u} r7={1d,13u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={9d,1u} r18={4d} r19={4d} r20={1d,16u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} 
;;    total ref usage 284{221d,63u,0e} in 34{30 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f14bd7fb688 *.LC0>)) mTest.c:86 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f14bd8314c0 *.LC9>)) mTest.c:86 87 {*movdi_internal_rex64}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:86 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:DI 67)
        (reg:DI 0 ax)) mTest.c:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 wstream+0 S8 A64])
        (reg:DI 67)) mTest.c:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(insn 10 9 50 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:87 89 {*movsi_internal}
     (nil))
(jump_insn 50 10 51 2 (set (pc)
        (label_ref 34)) mTest.c:87 650 {jump}
     (nil)
 -> 34)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 37)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 68 69 70
(code_label 37 51 13 3 30 "" [1 uses])
(note 13 37 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:DI 60 [ D.4336 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mTest.c:88 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:SI 68)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) mTest.c:88 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 61 [ D.4337 ])
        (sign_extend:DI (reg:SI 68))) mTest.c:88 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 68)
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 62 [ D.4337 ])
                (ashift:DI (reg:DI 61 [ D.4337 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:88 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4337 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 63 [ D.4336 ])
                (plus:DI (reg/f:DI 60 [ D.4336 ])
                    (reg:DI 62 [ D.4337 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:88 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4337 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4336 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 19 18 20 3 (set (reg/f:DI 64 [ D.4338 ])
        (mem/f:DI (reg/f:DI 63 [ D.4336 ]) [0 *_8+0 S8 A64])) mTest.c:88 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4336 ])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:88 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 69)) mTest.c:88 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg/f:DI 64 [ D.4338 ])) mTest.c:88 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.4338 ])
        (nil)))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("_gall_peter") [flags 0x3]  <function_decl 0x7f14bd7c5500 _gall_peter>) [0 _gall_peter S1 A8])
        (const_int 0 [0])) mTest.c:88 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 3 (set (reg:XF 65 [ D.4339 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 P+16 S16 A128])) mTest.c:89 131 {*movxf_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:XF 66 [ D.4339 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 P+0 S16 A128])) mTest.c:89 131 {*movxf_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 wstream+0 S8 A64])) mTest.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 65 [ D.4339 ])) mTest.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65 [ D.4339 ])
        (nil)))
(insn 28 27 29 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 66 [ D.4339 ])) mTest.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.4339 ])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f14bd7fb7b8 *.LC2>)) mTest.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (reg:DI 70)) mTest.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(insn 31 30 32 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:89 91 {*movqi_internal}
     (nil))
(call_insn 32 31 33 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 32 [0x20]))) mTest.c:89 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (nil)))))))
(insn 33 32 34 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:87 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 34 33 35 4 29 "" [1 uses])
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 38 4 (set (reg:SI 59 [ D.4335 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 conf.Nbound+0 S4 A128])) mTest.c:87 89 {*movsi_internal}
     (nil))
(insn 38 36 39 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4335 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32]))) mTest.c:87 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4335 ])
        (nil)))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) mTest.c:87 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 37)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 71
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 wstream+0 S8 A64])) mTest.c:91 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg:DI 71)) mTest.c:91 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(call_insn 43 42 49 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:91 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 49 43 0 5 (const_int 0 [0]) mTest.c:92 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function plot_movie (plot_movie, funcdef_no=10, decl_uid=1952, cgraph_uid=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 14 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 175.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r147,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r146: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r146,l0) best SIREG, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r133,l0) best SIREG, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r127,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a71 (r120,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a73 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r112,l0) best DREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a21 (r107,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r106: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a22 (r106,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r105: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a23 (r105,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a72 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a2(r64,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r147,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r62,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a6(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r61,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a8(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r112,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a16(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a17(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a18(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r107,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a22(r106,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a23(r105,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a24(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a28(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a35(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a36(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a37(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a39(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a41(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a42(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a43(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a44(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a46(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a47(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a48(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a49(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a50(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a51(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a52(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a53(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a54(r127,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r85,l0) costs: AD_REGS:84 Q_REGS:84 NON_Q_REGS:84 INDEX_REGS:84 GENERAL_REGS:84 LEGACY_REGS:84 CLOBBERED_REGS:84 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a56(r126,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a58(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a59(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a60(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a61(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a64(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a65(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a66(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a67(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a68(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a69(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a70(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a71(r120,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a72(r75,l0) costs: AD_REGS:84 Q_REGS:84 NON_Q_REGS:84 INDEX_REGS:84 GENERAL_REGS:84 LEGACY_REGS:84 CLOBBERED_REGS:84 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a73(r119,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a74(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a75(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a76(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a77(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a78(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a79(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a80(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a81(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a82(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a83(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a84(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a85(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a86(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a87(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a88(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a89(r113,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 189(l0): point = 0
   Insn 175(l0): point = 2
   Insn 174(l0): point = 4
   Insn 173(l0): point = 6
   Insn 192(l0): point = 9
   Insn 16(l0): point = 11
   Insn 171(l0): point = 14
   Insn 170(l0): point = 16
   Insn 168(l0): point = 18
   Insn 167(l0): point = 20
   Insn 166(l0): point = 22
   Insn 194(l0): point = 24
   Insn 164(l0): point = 26
   Insn 163(l0): point = 28
   Insn 162(l0): point = 30
   Insn 159(l0): point = 33
   Insn 158(l0): point = 35
   Insn 157(l0): point = 37
   Insn 156(l0): point = 39
   Insn 155(l0): point = 41
   Insn 153(l0): point = 44
   Insn 152(l0): point = 46
   Insn 151(l0): point = 48
   Insn 147(l0): point = 51
   Insn 144(l0): point = 54
   Insn 143(l0): point = 56
   Insn 142(l0): point = 58
   Insn 141(l0): point = 60
   Insn 140(l0): point = 62
   Insn 139(l0): point = 64
   Insn 138(l0): point = 66
   Insn 137(l0): point = 68
   Insn 136(l0): point = 70
   Insn 135(l0): point = 72
   Insn 134(l0): point = 74
   Insn 133(l0): point = 76
   Insn 132(l0): point = 78
   Insn 131(l0): point = 80
   Insn 130(l0): point = 82
   Insn 129(l0): point = 84
   Insn 128(l0): point = 86
   Insn 127(l0): point = 88
   Insn 126(l0): point = 90
   Insn 125(l0): point = 92
   Insn 124(l0): point = 94
   Insn 123(l0): point = 96
   Insn 122(l0): point = 98
   Insn 121(l0): point = 100
   Insn 120(l0): point = 102
   Insn 119(l0): point = 104
   Insn 118(l0): point = 106
   Insn 117(l0): point = 108
   Insn 116(l0): point = 110
   Insn 115(l0): point = 112
   Insn 114(l0): point = 114
   Insn 113(l0): point = 116
   Insn 112(l0): point = 118
   Insn 111(l0): point = 120
   Insn 110(l0): point = 122
   Insn 109(l0): point = 124
   Insn 108(l0): point = 126
   Insn 107(l0): point = 128
   Insn 106(l0): point = 130
   Insn 105(l0): point = 132
   Insn 104(l0): point = 134
   Insn 103(l0): point = 136
   Insn 102(l0): point = 138
   Insn 101(l0): point = 140
   Insn 100(l0): point = 142
   Insn 99(l0): point = 144
   Insn 98(l0): point = 146
   Insn 97(l0): point = 148
   Insn 96(l0): point = 150
   Insn 95(l0): point = 152
   Insn 94(l0): point = 154
   Insn 93(l0): point = 156
   Insn 92(l0): point = 158
   Insn 91(l0): point = 160
   Insn 90(l0): point = 162
   Insn 89(l0): point = 164
   Insn 88(l0): point = 166
   Insn 87(l0): point = 168
   Insn 86(l0): point = 170
   Insn 85(l0): point = 172
   Insn 84(l0): point = 174
   Insn 83(l0): point = 176
   Insn 82(l0): point = 178
   Insn 81(l0): point = 180
   Insn 80(l0): point = 182
   Insn 79(l0): point = 184
   Insn 78(l0): point = 186
   Insn 77(l0): point = 188
   Insn 41(l0): point = 191
   Insn 40(l0): point = 193
   Insn 39(l0): point = 195
   Insn 38(l0): point = 197
   Insn 37(l0): point = 199
   Insn 36(l0): point = 201
   Insn 35(l0): point = 203
   Insn 34(l0): point = 205
   Insn 33(l0): point = 207
   Insn 32(l0): point = 209
   Insn 31(l0): point = 211
   Insn 30(l0): point = 213
   Insn 29(l0): point = 215
   Insn 28(l0): point = 217
   Insn 27(l0): point = 219
   Insn 26(l0): point = 221
   Insn 25(l0): point = 223
   Insn 24(l0): point = 225
   Insn 23(l0): point = 227
   Insn 22(l0): point = 229
   Insn 21(l0): point = 231
   Insn 20(l0): point = 233
   Insn 44(l0): point = 236
   Insn 43(l0): point = 238
   Insn 42(l0): point = 240
   Insn 72(l0): point = 243
   Insn 71(l0): point = 245
   Insn 70(l0): point = 247
   Insn 69(l0): point = 250
   Insn 68(l0): point = 252
   Insn 67(l0): point = 254
   Insn 66(l0): point = 256
   Insn 65(l0): point = 258
   Insn 64(l0): point = 260
   Insn 63(l0): point = 262
   Insn 62(l0): point = 264
   Insn 61(l0): point = 266
   Insn 60(l0): point = 268
   Insn 59(l0): point = 270
   Insn 58(l0): point = 272
   Insn 57(l0): point = 274
   Insn 56(l0): point = 276
   Insn 55(l0): point = 278
   Insn 54(l0): point = 280
   Insn 53(l0): point = 282
   Insn 52(l0): point = 284
   Insn 51(l0): point = 286
   Insn 50(l0): point = 288
   Insn 49(l0): point = 290
   Insn 190(l0): point = 293
   Insn 12(l0): point = 295
   Insn 11(l0): point = 297
   Insn 10(l0): point = 299
   Insn 9(l0): point = 301
   Insn 8(l0): point = 303
   Insn 7(l0): point = 305
   Insn 3(l0): point = 307
   Insn 2(l0): point = 309
 a0(r148): [5..6]
 a1(r59): [17..30]
 a2(r64): [17..18]
 a3(r147): [19..20]
 a4(r63): [19..22]
 a5(r62): [23..24]
 a6(r60): [23..28]
 a7(r61): [25..26]
 a8(r146): [40..41]
 a9(r145): [47..48]
 a10(r144): [59..64]
 a11(r112): [63..66]
 a12(r111): [67..68]
 a13(r110): [69..70]
 a14(r108): [69..86]
 a15(r142): [75..80] [71..72]
 a16(r143): [73..74]
 a17(r109): [77..82]
 a18(r141): [83..84]
 a19(r140): [87..88]
 a20(r139): [95..104]
 a21(r107 [0]): [99..106]
 a21(r107 [1]): [99..106]
 a22(r106 [0]): [101..108]
 a22(r106 [1]): [101..108]
 a23(r105 [0]): [103..110]
 a23(r105 [1]): [103..110]
 a24(r104): [111..112]
 a25(r103): [113..114]
 a26(r102): [115..116]
 a27(r101): [117..118]
 a28(r99): [117..124]
 a29(r100): [119..120]
 a30(r138): [121..122]
 a31(r98): [125..126]
 a32(r97): [127..128]
 a33(r95): [127..144]
 a34(r136): [133..138] [129..130]
 a35(r137): [131..132]
 a36(r96): [135..140]
 a37(r135): [141..142]
 a38(r134): [145..146]
 a39(r94): [151..156]
 a40(r133): [153..154]
 a41(r93): [157..158]
 a42(r92): [159..160]
 a43(r90): [159..166]
 a44(r91): [161..162]
 a45(r132): [163..164]
 a46(r89): [167..168]
 a47(r88): [169..170]
 a48(r86): [169..186]
 a49(r130): [175..180] [171..172]
 a50(r131): [173..174]
 a51(r87): [177..182]
 a52(r129): [183..184]
 a53(r128): [187..188]
 a54(r127): [246..247]
 a55(r85): [246..256]
 a56(r126): [253..254]
 a57(r84): [257..258]
 a58(r83): [259..260]
 a59(r82): [261..262]
 a60(r80): [261..268]
 a61(r81): [263..264]
 a62(r125): [265..266]
 a63(r79): [269..270]
 a64(r78): [271..272]
 a65(r76): [271..288]
 a66(r123): [277..282] [273..274]
 a67(r124): [275..276]
 a68(r77): [279..284]
 a69(r122): [285..286]
 a70(r121): [289..290]
 a71(r120): [239..240]
 a72(r75): [239..242] [191..197]
 a73(r119): [194..195]
 a74(r74): [198..199]
 a75(r73): [200..201]
 a76(r72): [202..203]
 a77(r71): [204..205]
 a78(r69): [204..211]
 a79(r70): [206..207]
 a80(r118): [208..209]
 a81(r68): [212..213]
 a82(r67): [214..215]
 a83(r65): [214..231]
 a84(r116): [220..225] [216..217]
 a85(r117): [218..219]
 a86(r66): [222..227]
 a87(r115): [228..229]
 a88(r114): [232..233]
 a89(r113): [298..299]
Compressing live ranges: from 312 to 142 - 45%
Ranges after the compression:
 a0(r148): [0..1]
 a1(r59): [2..9]
 a2(r64): [2..3]
 a3(r147): [4..5]
 a4(r63): [4..5]
 a5(r62): [6..7]
 a6(r60): [6..9]
 a7(r61): [8..9]
 a8(r146): [10..11]
 a9(r145): [12..13]
 a10(r144): [14..15]
 a11(r112): [14..15]
 a12(r111): [16..17]
 a13(r110): [18..19]
 a14(r108): [18..27]
 a15(r142): [24..25] [20..21]
 a16(r143): [22..23]
 a17(r109): [24..25]
 a18(r141): [26..27]
 a19(r140): [28..29]
 a20(r139): [30..31]
 a21(r107 [0]): [30..31]
 a21(r107 [1]): [30..31]
 a22(r106 [0]): [30..31]
 a22(r106 [1]): [30..31]
 a23(r105 [0]): [30..31]
 a23(r105 [1]): [30..31]
 a24(r104): [32..33]
 a25(r103): [34..35]
 a26(r102): [36..37]
 a27(r101): [38..39]
 a28(r99): [38..43]
 a29(r100): [40..41]
 a30(r138): [42..43]
 a31(r98): [44..45]
 a32(r97): [46..47]
 a33(r95): [46..55]
 a34(r136): [52..53] [48..49]
 a35(r137): [50..51]
 a36(r96): [52..53]
 a37(r135): [54..55]
 a38(r134): [56..57]
 a39(r94): [58..59]
 a40(r133): [58..59]
 a41(r93): [60..61]
 a42(r92): [62..63]
 a43(r90): [62..67]
 a44(r91): [64..65]
 a45(r132): [66..67]
 a46(r89): [68..69]
 a47(r88): [70..71]
 a48(r86): [70..79]
 a49(r130): [76..77] [72..73]
 a50(r131): [74..75]
 a51(r87): [76..77]
 a52(r129): [78..79]
 a53(r128): [80..81]
 a54(r127): [112..113]
 a55(r85): [112..115]
 a56(r126): [114..115]
 a57(r84): [116..117]
 a58(r83): [118..119]
 a59(r82): [120..121]
 a60(r80): [120..125]
 a61(r81): [122..123]
 a62(r125): [124..125]
 a63(r79): [126..127]
 a64(r78): [128..129]
 a65(r76): [128..137]
 a66(r123): [134..135] [130..131]
 a67(r124): [132..133]
 a68(r77): [134..135]
 a69(r122): [136..137]
 a70(r121): [138..139]
 a71(r120): [110..111]
 a72(r75): [110..111] [82..83]
 a73(r119): [82..83]
 a74(r74): [84..85]
 a75(r73): [86..87]
 a76(r72): [88..89]
 a77(r71): [90..91]
 a78(r69): [90..95]
 a79(r70): [92..93]
 a80(r118): [94..95]
 a81(r68): [96..97]
 a82(r67): [98..99]
 a83(r65): [98..107]
 a84(r116): [104..105] [100..101]
 a85(r117): [102..103]
 a86(r66): [104..105]
 a87(r115): [106..107]
 a88(r114): [108..109]
 a89(r113): [140..141]
  regions=1, blocks=14, points=142
    allocnos=90 (big 3), copies=0, conflicts=0, ranges=99
Disposition:
    1:r59  l0     8    6:r60  l0    10    7:r61  l0     0    5:r62  l0     9
    4:r63  l0    10    2:r64  l0     9   83:r65  l0     2   86:r66  l0     1
   82:r67  l0     0   81:r68  l0     0   78:r69  l0     0   79:r70  l0     1
   77:r71  l0     1   76:r72  l0     0   75:r73  l0     0   74:r74  l0     0
   72:r75  l0     8   65:r76  l0     2   68:r77  l0     1   64:r78  l0     0
   63:r79  l0     0   60:r80  l0     0   61:r81  l0     1   59:r82  l0     1
   58:r83  l0     0   57:r84  l0     0   55:r85  l0     8   48:r86  l0     2
   51:r87  l0     1   47:r88  l0     0   46:r89  l0     0   43:r90  l0     0
   44:r91  l0     1   42:r92  l0     1   41:r93  l0     0   39:r94  l0     0
   33:r95  l0     2   36:r96  l0     1   32:r97  l0     0   31:r98  l0     0
   28:r99  l0     0   29:r100 l0     1   27:r101 l0     1   26:r102 l0     0
   25:r103 l0     0   24:r104 l0     0   23:r105 l0     4   22:r106 l0     2
   21:r107 l0     0   14:r108 l0     2   17:r109 l0     1   13:r110 l0     0
   12:r111 l0     0   11:r112 l0     1   89:r113 l0     0   88:r114 l0     0
   87:r115 l0     0   84:r116 l0     0   85:r117 l0     0   80:r118 l0     1
   73:r119 l0     9   71:r120 l0     9   70:r121 l0     0   69:r122 l0     0
   66:r123 l0     0   67:r124 l0     0   62:r125 l0     1   56:r126 l0     9
   54:r127 l0     9   53:r128 l0     0   52:r129 l0     0   49:r130 l0     0
   50:r131 l0     0   45:r132 l0     1   40:r133 l0     1   38:r134 l0     0
   37:r135 l0     0   34:r136 l0     0   35:r137 l0     0   30:r138 l0     1
   20:r139 l0    37   19:r140 l0     0   18:r141 l0     0   15:r142 l0     0
   16:r143 l0     0   10:r144 l0     0    9:r145 l0     0    8:r146 l0     0
    3:r147 l0     9    0:r148 l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


plot_movie

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,3u} r1={8d,1u} r2={7d} r4={12d,6u} r5={13d,7u} r6={1d,13u} r7={1d,25u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,14u} r17={45d,6u} r18={6d} r19={6d} r20={1d,47u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,2u,1e} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,2u} r76={1d,1u} r77={1d,2u,1e} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,2u} r86={1d,1u} r87={1d,2u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,2u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,2u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={4d,4u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={4d,4u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={4d,4u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={4d,4u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={4d,4u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 680{441d,234u,5e} in 150{144 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 113
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mTest.c:95 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 N_f+0 S4 A32])
        (reg:SI 4 si [ N_f ])) mTest.c:95 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N_f ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f14bd831e40 *.LC10>)) mTest.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f14bd831ed8 *.LC11>)) mTest.c:96 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f14bd752000 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mTest.c:96 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 113)
        (reg:DI 0 ax)) mTest.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 postream+0 S8 A64])
        (reg:DI 113)) mTest.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 12 11 190 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mTest.c:100 89 {*movsi_internal}
     (nil))
(jump_insn 190 12 191 2 (set (pc)
        (label_ref 160)) mTest.c:100 650 {jump}
     (nil)
 -> 160)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 191 190 169)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 169 191 15 3 39 "" [1 uses])
(note 15 169 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 192 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:101 89 {*movsi_internal}
     (nil))
(jump_insn 192 16 193 3 (set (pc)
        (label_ref 148)) mTest.c:101 650 {jump}
     (nil)
 -> 148)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 193 192 150)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 66 67 68 69 70 71 72 73 74 75 114 115 116 117 118 119
(code_label 150 193 19 4 38 "" [1 uses])
(note 19 150 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 65 [ D.4343 ])
        (mem/f:DI (reg/f:DI 114) [0 *f_13(D)+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 22 21 23 4 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:101 89 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 66 [ D.4344 ])
        (sign_extend:DI (reg:SI 115))) mTest.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 24 23 25 4 (set (reg:DI 116)
        (reg:DI 66 [ D.4344 ])) mTest.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 116)
                (ashift:DI (reg:DI 116)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg:DI 116)
                    (reg:DI 66 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 66 [ D.4344 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 117)
                (ashift:DI (reg:DI 116)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg:DI 116)
        (reg:DI 117)) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 29 28 30 4 (set (reg:DI 67 [ D.4344 ])
        (reg:DI 116)) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg/f:DI 68 [ D.4343 ])
                (plus:DI (reg/f:DI 65 [ D.4343 ])
                    (reg:DI 67 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 67 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.4343 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 4 (set (reg/f:DI 69 [ D.4345 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ D.4343 ])
                (const_int 32 [0x20])) [0 _17->pos+0 S8 A128])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.4343 ])
        (nil)))
(insn 32 31 33 4 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])) mTest.c:101 89 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 70 [ D.4344 ])
        (sign_extend:DI (reg:SI 118))) mTest.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 71 [ D.4344 ])
                (ashift:DI (reg:DI 70 [ D.4344 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 70 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 4 (parallel [
            (set (reg/f:DI 72 [ D.4345 ])
                (plus:DI (reg/f:DI 69 [ D.4345 ])
                    (reg:DI 71 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 71 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 69 [ D.4345 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 4 (set (reg/f:DI 73 [ D.4346 ])
        (mem/f:DI (reg/f:DI 72 [ D.4345 ]) [0 *_21+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.4345 ])
        (nil)))
(insn 37 36 38 4 (parallel [
            (set (reg/f:DI 74 [ D.4346 ])
                (plus:DI (reg/f:DI 73 [ D.4346 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.4346 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 4 (set (reg:XF 75 [ D.4341 ])
        (mem:XF (reg/f:DI 74 [ D.4346 ]) [0 *_23+0 S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.4346 ])
        (nil)))
(insn 39 38 40 4 (set (reg:XF 119)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 40 39 41 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 75 [ D.4341 ])
            (reg:XF 119))) mTest.c:101 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 119)
        (nil)))
(jump_insn 41 40 181 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) mTest.c:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 145)
;;  succ:       9
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75
;; lr  def 	 17 [flags] 120
(note 181 41 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 181 43 5 (set (reg:XF 120)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 43 42 44 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 75 [ D.4341 ])
            (reg:XF 120))) mTest.c:101 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 120)
        (expr_list:REG_DEAD (reg:XF 75 [ D.4341 ])
            (nil))))
(jump_insn 44 43 48 5 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 145)
            (pc))) mTest.c:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 145)
;;  succ:       6 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 76 77 78 79 80 81 82 83 84 85 121 122 123 124 125 126
(note 48 44 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 76 [ D.4343 ])
        (mem/f:DI (reg/f:DI 121) [0 *f_13(D)+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
(insn 51 50 52 6 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:101 89 {*movsi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:DI 77 [ D.4344 ])
        (sign_extend:DI (reg:SI 122))) mTest.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 53 52 54 6 (set (reg:DI 123)
        (reg:DI 77 [ D.4344 ])) mTest.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg:DI 123)
                (ashift:DI (reg:DI 123)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 123)
                    (reg:DI 77 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 77 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.4344 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 124)
                (ashift:DI (reg:DI 123)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 6 (set (reg:DI 123)
        (reg:DI 124)) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(insn 58 57 59 6 (set (reg:DI 78 [ D.4344 ])
        (reg:DI 123)) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 59 58 60 6 (parallel [
            (set (reg/f:DI 79 [ D.4343 ])
                (plus:DI (reg/f:DI 76 [ D.4343 ])
                    (reg:DI 78 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 78 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 76 [ D.4343 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 6 (set (reg/f:DI 80 [ D.4345 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79 [ D.4343 ])
                (const_int 32 [0x20])) [0 _28->pos+0 S8 A128])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79 [ D.4343 ])
        (nil)))
(insn 61 60 62 6 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])) mTest.c:101 89 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:DI 81 [ D.4344 ])
        (sign_extend:DI (reg:SI 125))) mTest.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 82 [ D.4344 ])
                (ashift:DI (reg:DI 81 [ D.4344 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 81 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 83 [ D.4345 ])
                (plus:DI (reg/f:DI 80 [ D.4345 ])
                    (reg:DI 82 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 82 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 80 [ D.4345 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 65 64 66 6 (set (reg/f:DI 84 [ D.4346 ])
        (mem/f:DI (reg/f:DI 83 [ D.4345 ]) [0 *_32+0 S8 A64])) mTest.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.4345 ])
        (nil)))
(insn 66 65 67 6 (set (reg:XF 85 [ D.4341 ])
        (mem:XF (reg/f:DI 84 [ D.4346 ]) [0 *_33+0 S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.4346 ])
        (nil)))
(insn 67 66 68 6 (set (reg:XF 126)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 68 67 69 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 85 [ D.4341 ])
            (reg:XF 126))) mTest.c:101 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 126)
        (nil)))
(jump_insn 69 68 184 6 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 188)
            (pc))) mTest.c:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 188)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  def 	 17 [flags] 127
(note 184 69 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 184 71 7 (set (reg:XF 127)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S16 A128])) mTest.c:101 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 71 70 72 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 85 [ D.4341 ])
            (reg:XF 127))) mTest.c:101 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 127)
        (expr_list:REG_DEAD (reg:XF 85 [ D.4341 ])
            (nil))))
(jump_insn 72 71 188 7 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 145)
            (pc))) mTest.c:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 145)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
(code_label 188 72 76 8 42 "" [1 uses])
(note 76 188 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])) mTest.c:103 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 8 (set (reg/f:DI 86 [ D.4343 ])
        (mem/f:DI (reg/f:DI 128) [0 *f_13(D)+0 S8 A64])) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(insn 79 78 80 8 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:103 89 {*movsi_internal}
     (nil))
(insn 80 79 81 8 (set (reg:DI 87 [ D.4344 ])
        (sign_extend:DI (reg:SI 129))) mTest.c:103 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 81 80 82 8 (set (reg:DI 130)
        (reg:DI 87 [ D.4344 ])) mTest.c:103 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 8 (parallel [
            (set (reg:DI 130)
                (ashift:DI (reg:DI 130)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 82 84 8 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg:DI 130)
                    (reg:DI 87 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 87 [ D.4344 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 84 83 85 8 (parallel [
            (set (reg:DI 131)
                (ashift:DI (reg:DI 130)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 8 (set (reg:DI 130)
        (reg:DI 131)) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(insn 86 85 87 8 (set (reg:DI 88 [ D.4344 ])
        (reg:DI 130)) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(insn 87 86 88 8 (parallel [
            (set (reg/f:DI 89 [ D.4343 ])
                (plus:DI (reg/f:DI 86 [ D.4343 ])
                    (reg:DI 88 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 86 [ D.4343 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 88 87 89 8 (set (reg/f:DI 90 [ D.4345 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 89 [ D.4343 ])
                (const_int 32 [0x20])) [0 _38->pos+0 S8 A128])) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.4343 ])
        (nil)))
(insn 89 88 90 8 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])) mTest.c:103 89 {*movsi_internal}
     (nil))
(insn 90 89 91 8 (set (reg:DI 91 [ D.4344 ])
        (sign_extend:DI (reg:SI 132))) mTest.c:103 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 91 90 92 8 (parallel [
            (set (reg:DI 92 [ D.4344 ])
                (ashift:DI (reg:DI 91 [ D.4344 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 92 91 93 8 (parallel [
            (set (reg/f:DI 93 [ D.4345 ])
                (plus:DI (reg/f:DI 90 [ D.4345 ])
                    (reg:DI 92 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 90 [ D.4345 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 93 92 94 8 (set (reg/f:DI 94 [ D.4346 ])
        (mem/f:DI (reg/f:DI 93 [ D.4345 ]) [0 *_42+0 S8 A64])) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.4345 ])
        (nil)))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:103 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 94 96 8 (set (reg:DI 4 si)
        (reg:DI 133)) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(insn 96 95 97 8 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.4346 ])) mTest.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.4346 ])
        (nil)))
(call_insn 97 96 98 8 (call (mem:QI (symbol_ref:DI ("_gall_peter") [flags 0x3]  <function_decl 0x7f14bd7c5500 _gall_peter>) [0 _gall_peter S1 A8])
        (const_int 0 [0])) mTest.c:103 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 98 97 99 8 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])) mTest.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 8 (set (reg/f:DI 95 [ D.4343 ])
        (mem/f:DI (reg/f:DI 134) [0 *f_13(D)+0 S8 A64])) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 100 99 101 8 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:104 89 {*movsi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:DI 96 [ D.4344 ])
        (sign_extend:DI (reg:SI 135))) mTest.c:104 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 102 101 103 8 (set (reg:DI 136)
        (reg:DI 96 [ D.4344 ])) mTest.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 8 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 136)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 8 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg:DI 136)
                    (reg:DI 96 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.4344 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 105 104 106 8 (parallel [
            (set (reg:DI 137)
                (ashift:DI (reg:DI 136)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 8 (set (reg:DI 136)
        (reg:DI 137)) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(insn 107 106 108 8 (set (reg:DI 97 [ D.4344 ])
        (reg:DI 136)) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(insn 108 107 109 8 (parallel [
            (set (reg/f:DI 98 [ D.4343 ])
                (plus:DI (reg/f:DI 95 [ D.4343 ])
                    (reg:DI 97 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 95 [ D.4343 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 109 108 110 8 (set (reg/f:DI 99 [ D.4345 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 98 [ D.4343 ])
                (const_int 32 [0x20])) [0 _47->pos+0 S8 A128])) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.4343 ])
        (nil)))
(insn 110 109 111 8 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])) mTest.c:104 89 {*movsi_internal}
     (nil))
(insn 111 110 112 8 (set (reg:DI 100 [ D.4344 ])
        (sign_extend:DI (reg:SI 138))) mTest.c:104 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(insn 112 111 113 8 (parallel [
            (set (reg:DI 101 [ D.4344 ])
                (ashift:DI (reg:DI 100 [ D.4344 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 8 (parallel [
            (set (reg/f:DI 102 [ D.4345 ])
                (plus:DI (reg/f:DI 99 [ D.4345 ])
                    (reg:DI 101 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 99 [ D.4345 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 114 113 115 8 (set (reg/f:DI 103 [ D.4346 ])
        (mem/f:DI (reg/f:DI 102 [ D.4345 ]) [0 *_51+0 S8 A64])) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.4345 ])
        (nil)))
(insn 115 114 116 8 (parallel [
            (set (reg/f:DI 104 [ D.4346 ])
                (plus:DI (reg/f:DI 103 [ D.4346 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:104 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.4346 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 8 (set (reg:XF 105 [ D.4341 ])
        (mem:XF (reg/f:DI 104 [ D.4346 ]) [0 *_53+0 S16 A128])) mTest.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.4346 ])
        (nil)))
(insn 117 116 118 8 (set (reg:XF 106 [ D.4341 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 P+16 S16 A128])) mTest.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 118 117 119 8 (set (reg:XF 107 [ D.4341 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 P+0 S16 A128])) mTest.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 119 118 120 8 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 postream+0 S8 A64])) mTest.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 8 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S16 A128])
        (reg:XF 105 [ D.4341 ])) mTest.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 105 [ D.4341 ])
        (nil)))
(insn 121 120 122 8 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 106 [ D.4341 ])) mTest.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 106 [ D.4341 ])
        (nil)))
(insn 122 121 123 8 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 107 [ D.4341 ])) mTest.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 107 [ D.4341 ])
        (nil)))
(insn 123 122 124 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f14bd83e000 *.LC14>)) mTest.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 8 (set (reg:DI 5 di)
        (reg:DI 139)) mTest.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(insn 125 124 126 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:104 91 {*movqi_internal}
     (nil))
(call_insn 126 125 127 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 48 [0x30]))) mTest.c:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 16 [0x10])) [0  S16 A128]))
                        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                        (const_int 32 [0x20])) [0  S16 A128]))
                            (nil))))))))
(insn 127 126 128 8 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 f+0 S8 A64])) mTest.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 8 (set (reg/f:DI 108 [ D.4343 ])
        (mem/f:DI (reg/f:DI 140) [0 *f_13(D)+0 S8 A64])) mTest.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (nil)))
(insn 129 128 130 8 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:105 89 {*movsi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:DI 109 [ D.4344 ])
        (sign_extend:DI (reg:SI 141))) mTest.c:105 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 131 130 132 8 (set (reg:DI 142)
        (reg:DI 109 [ D.4344 ])) mTest.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 8 (parallel [
            (set (reg:DI 142)
                (ashift:DI (reg:DI 142)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:105 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 133 132 134 8 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 142)
                    (reg:DI 109 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:105 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ D.4344 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 109 [ D.4344 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 134 133 135 8 (parallel [
            (set (reg:DI 143)
                (ashift:DI (reg:DI 142)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:105 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 8 (set (reg:DI 142)
        (reg:DI 143)) mTest.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(insn 136 135 137 8 (set (reg:DI 110 [ D.4344 ])
        (reg:DI 142)) mTest.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(insn 137 136 138 8 (parallel [
            (set (reg/f:DI 111 [ D.4343 ])
                (plus:DI (reg/f:DI 108 [ D.4343 ])
                    (reg:DI 110 [ D.4344 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:105 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.4344 ])
        (expr_list:REG_DEAD (reg/f:DI 108 [ D.4343 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 138 137 139 8 (set (reg:SI 112 [ D.4342 ])
        (mem/j:SI (reg/f:DI 111 [ D.4343 ]) [0 _60->ID+0 S4 A128])) mTest.c:105 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.4343 ])
        (nil)))
(insn 139 138 140 8 (set (reg:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 postream+0 S8 A64])) mTest.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 140 139 141 8 (set (reg:SI 1 dx)
        (reg:SI 112 [ D.4342 ])) mTest.c:105 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112 [ D.4342 ])
        (nil)))
(insn 141 140 142 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f14bd83e098 *.LC15>)) mTest.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 142 141 143 8 (set (reg:DI 5 di)
        (reg:DI 144)) mTest.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 143 142 144 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:105 91 {*movqi_internal}
     (nil))
(call_insn 144 143 145 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f14bd990900 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) mTest.c:105 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              4
;;              5
;;              7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 145 144 146 9 35 "" [3 uses])
(note 146 145 147 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:101 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145
(code_label 148 147 149 10 34 "" [1 uses])
(note 149 148 151 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 151 149 152 10 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) mTest.c:101 89 {*movsi_internal}
     (nil))
(insn 152 151 153 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 145)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 N_f+0 S4 A32]))) mTest.c:101 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))
(jump_insn 153 152 154 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) mTest.c:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 150)
;;  succ:       4
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 146
(note 154 153 155 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 11 (set (reg:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 postream+0 S8 A64])) mTest.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 156 155 157 11 (set (reg:DI 4 si)
        (reg:DI 146)) mTest.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 157 156 158 11 (set (reg:SI 5 di)
        (const_int 10 [0xa])) mTest.c:107 89 {*movsi_internal}
     (nil))
(call_insn 158 157 159 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fputc") [flags 0x41]  <function_decl 0x7f14bd994000 __builtin_fputc>) [0 __builtin_fputc S1 A8])
            (const_int 0 [0]))) mTest.c:107 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 159 158 160 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:100 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 63 64 147
(code_label 160 159 161 12 33 "" [1 uses])
(note 161 160 162 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 12 (set (reg:XF 59 [ D.4341 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 j+0 S4 A32]))) mTest.c:100 256 {*floatsixf2_i387}
     (nil))
(insn 163 162 164 12 (set (reg:XF 60 [ D.4341 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 224 [0xe0])) [0 conf.t_r+0 S16 A128])) mTest.c:100 131 {*movxf_internal_rex64}
     (nil))
(insn 164 163 194 12 (set (reg:SI 61 [ D.4342 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 192 [0xc0])) [0 conf.t_w+0 S4 A128])) mTest.c:100 89 {*movsi_internal}
     (nil))
(insn 194 164 166 12 (parallel [
            (set (reg:XF 62 [ D.4341 ])
                (float:XF (reg:SI 61 [ D.4342 ])))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0  S4 A32]))
        ]) mTest.c:100 250 {*floatsixf2_i387_with_temp}
     (expr_list:REG_DEAD (reg:SI 61 [ D.4342 ])
        (nil)))
(insn 166 194 167 12 (set (reg:XF 63 [ D.4341 ])
        (mult:XF (reg:XF 60 [ D.4341 ])
            (reg:XF 62 [ D.4341 ]))) mTest.c:100 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 62 [ D.4341 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.4341 ])
            (nil))))
(insn 167 166 168 12 (set (reg:XF 147)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) mTest.c:100 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 168 167 170 12 (set (reg:XF 64 [ D.4341 ])
        (minus:XF (reg:XF 63 [ D.4341 ])
            (reg:XF 147))) mTest.c:100 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 147)
        (expr_list:REG_DEAD (reg:XF 63 [ D.4341 ])
            (nil))))
(insn 170 168 171 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 64 [ D.4341 ])
            (reg:XF 59 [ D.4341 ]))) mTest.c:100 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 64 [ D.4341 ])
        (expr_list:REG_DEAD (reg:XF 59 [ D.4341 ])
            (nil))))
(jump_insn 171 170 172 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) mTest.c:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 169)
;;  succ:       3
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148
(note 172 171 173 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 13 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 postream+0 S8 A64])) mTest.c:109 87 {*movdi_internal_rex64}
     (nil))
(insn 174 173 175 13 (set (reg:DI 5 di)
        (reg:DI 148)) mTest.c:109 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn 175 174 189 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f14bd74ad00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mTest.c:109 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 189 175 0 13 (const_int 0 [0]) mTest.c:110 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function print_nvp (print_nvp, funcdef_no=11, decl_uid=1956, cgraph_uid=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r71,l0) best SIREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r68,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r68,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a6(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 67(l0): point = 0
   Insn 70(l0): point = 3
   Insn 14(l0): point = 5
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 10(l0): point = 13
   Insn 9(l0): point = 15
   Insn 61(l0): point = 18
   Insn 60(l0): point = 20
   Insn 58(l0): point = 22
   Insn 55(l0): point = 25
   Insn 54(l0): point = 27
   Insn 53(l0): point = 29
   Insn 46(l0): point = 32
   Insn 45(l0): point = 34
   Insn 44(l0): point = 36
   Insn 50(l0): point = 39
   Insn 49(l0): point = 41
   Insn 42(l0): point = 44
   Insn 41(l0): point = 46
   Insn 40(l0): point = 48
   Insn 38(l0): point = 51
   Insn 37(l0): point = 53
   Insn 33(l0): point = 56
   Insn 32(l0): point = 58
   Insn 31(l0): point = 60
   Insn 30(l0): point = 62
   Insn 29(l0): point = 64
   Insn 28(l0): point = 66
   Insn 27(l0): point = 68
   Insn 26(l0): point = 70
   Insn 25(l0): point = 72
   Insn 24(l0): point = 74
   Insn 23(l0): point = 76
   Insn 22(l0): point = 78
   Insn 21(l0): point = 80
   Insn 20(l0): point = 82
   Insn 19(l0): point = 84
   Insn 18(l0): point = 86
   Insn 68(l0): point = 89
   Insn 5(l0): point = 91
 a0(r59): [21..22]
 a1(r70): [35..36]
 a2(r69): [47..48]
 a3(r68 [0]): [65..66]
 a3(r68 [1]): [65..66]
 a4(r67): [67..68]
 a5(r66): [69..70]
 a6(r64): [69..76]
 a7(r65): [71..72]
 a8(r73): [73..74]
 a9(r63): [77..78]
 a10(r62): [79..80]
 a11(r60): [79..86]
 a12(r61): [81..82]
 a13(r72): [83..84]
 a14(r71): [14..15]
Compressing live ranges: from 94 to 26 - 27%
Ranges after the compression:
 a0(r59): [2..3]
 a1(r70): [4..5]
 a2(r69): [6..7]
 a3(r68 [0]): [8..9]
 a3(r68 [1]): [8..9]
 a4(r67): [10..11]
 a5(r66): [12..13]
 a6(r64): [12..17]
 a7(r65): [14..15]
 a8(r73): [16..17]
 a9(r63): [18..19]
 a10(r62): [20..21]
 a11(r60): [20..25]
 a12(r61): [22..23]
 a13(r72): [24..25]
 a14(r71): [0..1]
  regions=1, blocks=12, points=26
    allocnos=15 (big 1), copies=0, conflicts=0, ranges=16
Disposition:
    0:r59  l0     0   11:r60  l0     0   12:r61  l0     1   10:r62  l0     1
    9:r63  l0     0    6:r64  l0     0    7:r65  l0     1    5:r66  l0     1
    4:r67  l0     0    3:r68  l0     0    2:r69  l0     0    1:r70  l0     0
   14:r71  l0     0   13:r72  l0     1    8:r73  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


print_nvp

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,2u} r1={5d} r2={5d} r4={6d,1u} r5={9d,4u} r6={1d,11u} r7={1d,17u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,14u} r17={14d,4u} r18={4d} r19={4d} r20={1d,24u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} 
;;    total ref usage 319{227d,92u,0e} in 42{38 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 68 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:114 89 {*movsi_internal}
     (nil))
(jump_insn 68 5 69 2 (set (pc)
        (label_ref 56)) mTest.c:114 650 {jump}
     (nil)
 -> 56)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 59)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 71
(code_label 59 69 8 3 51 "" [1 uses])
(note 8 59 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mTest.c:115 89 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 4 si)
        (reg:SI 71)) mTest.c:115 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f14bd84a130 *.LC17>)) mTest.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:115 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f14bd994f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mTest.c:115 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 14 13 70 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 h+0 S4 A32])
        (const_int 0 [0])) mTest.c:116 89 {*movsi_internal}
     (nil))
(jump_insn 70 14 71 3 (set (pc)
        (label_ref 34)) mTest.c:116 650 {jump}
     (nil)
 -> 34)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 36)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 72 73
(code_label 36 71 17 4 48 "" [1 uses])
(note 17 36 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 60 [ D.4352 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mTest.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 4 (set (reg:SI 72)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mTest.c:116 89 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 61 [ D.4353 ])
        (sign_extend:DI (reg:SI 72))) mTest.c:116 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 72)
        (nil)))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 62 [ D.4353 ])
                (ashift:DI (reg:DI 61 [ D.4353 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:116 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.4353 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 63 [ D.4352 ])
                (plus:DI (reg/f:DI 60 [ D.4352 ])
                    (reg:DI 62 [ D.4353 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:116 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.4353 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.4352 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 23 22 24 4 (set (reg/f:DI 64 [ D.4354 ])
        (mem/f:DI (reg/f:DI 63 [ D.4352 ]) [0 *_9+0 S8 A64])) mTest.c:116 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.4352 ])
        (nil)))
(insn 24 23 25 4 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 h+0 S4 A32])) mTest.c:116 89 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 65 [ D.4353 ])
        (sign_extend:DI (reg:SI 73))) mTest.c:116 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 66 [ D.4353 ])
                (ashift:DI (reg:DI 65 [ D.4353 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:116 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.4353 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 67 [ D.4354 ])
                (plus:DI (reg/f:DI 64 [ D.4354 ])
                    (reg:DI 66 [ D.4353 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:116 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.4353 ])
        (expr_list:REG_DEAD (reg/f:DI 64 [ D.4354 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 28 27 29 4 (set (reg:XF 68 [ D.4355 ])
        (mem:XF (reg/f:DI 67 [ D.4354 ]) [0 *_13+0 S16 A128])) mTest.c:116 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.4354 ])
        (nil)))
(insn 29 28 30 4 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 68 [ D.4355 ])) mTest.c:116 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 68 [ D.4355 ])
        (nil)))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f14bd84a1c8 *.LC18>)) mTest.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) mTest.c:116 91 {*movqi_internal}
     (nil))
(call_insn 32 31 33 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f14bd994f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) mTest.c:116 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
                (nil)))))
(insn 33 32 34 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 h+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 h+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:116 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 34 33 35 5 47 "" [1 uses])
(note 35 34 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 35 38 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 h+0 S4 A32])
            (const_int 3 [0x3]))) mTest.c:116 7 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) mTest.c:116 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 36)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:SI 69 [ D.4351 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 112 [0x70])) [0 f.bound+0 S4 A128])) mTest.c:117 89 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ D.4351 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mTest.c:117 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 69 [ D.4351 ])
        (nil)))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) mTest.c:117 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:SI 70 [ D.4351 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 116 [0x74])) [0 f.bound+4 S4 A32])) mTest.c:117 89 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.4351 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mTest.c:117 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 70 [ D.4351 ])
        (nil)))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mTest.c:117 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 47 46 48 8 49 "" [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 5 di)
        (const_int 49 [0x31])) mTest.c:117 89 {*movsi_internal}
     (nil))
(call_insn 50 49 51 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f14bd996200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) mTest.c:117 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 51 50 52 9 50 "" [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:SI 5 di)
        (const_int 10 [0xa])) mTest.c:118 89 {*movsi_internal}
     (nil))
(call_insn 54 53 55 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f14bd996200 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) mTest.c:118 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 55 54 56 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:114 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 56 55 57 10 46 "" [1 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 60 10 (set (reg:SI 59 [ D.4351 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 4 [0x4])) [0 f.n_nvp+0 S4 A32])) mTest.c:114 89 {*movsi_internal}
     (nil))
(insn 60 58 61 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4351 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mTest.c:114 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4351 ])
        (nil)))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) mTest.c:114 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 59)
;;  succ:       3
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 62 61 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 62 0 11 (const_int 0 [0]) mTest.c:120 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function cheak_inside_pos (cheak_inside_pos, funcdef_no=12, decl_uid=1960, cgraph_uid=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 13 (    1)
Building IRA IR
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 70.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r80,l0) best AREG, allocno GENERAL_REGS
    r79: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r79,l0) best DIREG, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r71,l0) best SIREG, allocno GENERAL_REGS
    r70: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r70,l0) best DREG, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r80,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r70,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a16(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a17(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r69,l0) costs: AD_REGS:84 Q_REGS:84 NON_Q_REGS:84 INDEX_REGS:84 GENERAL_REGS:84 LEGACY_REGS:84 CLOBBERED_REGS:84 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a20(r86,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a25(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a33(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a34(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 97(l0): point = 0
   Insn 100(l0): point = 3
   Insn 11(l0): point = 5
   Insn 87(l0): point = 8
   Insn 86(l0): point = 10
   Insn 85(l0): point = 12
   Insn 81(l0): point = 15
   Insn 79(l0): point = 18
   Insn 78(l0): point = 20
   Insn 76(l0): point = 22
   Insn 73(l0): point = 25
   Insn 70(l0): point = 28
   Insn 69(l0): point = 30
   Insn 67(l0): point = 33
   Insn 66(l0): point = 35
   Insn 65(l0): point = 37
   Insn 64(l0): point = 39
   Insn 63(l0): point = 41
   Insn 62(l0): point = 43
   Insn 61(l0): point = 45
   Insn 60(l0): point = 47
   Insn 59(l0): point = 49
   Insn 58(l0): point = 51
   Insn 57(l0): point = 53
   Insn 56(l0): point = 55
   Insn 55(l0): point = 57
   Insn 54(l0): point = 59
   Insn 53(l0): point = 61
   Insn 52(l0): point = 63
   Insn 51(l0): point = 65
   Insn 50(l0): point = 67
   Insn 49(l0): point = 69
   Insn 48(l0): point = 71
   Insn 47(l0): point = 73
   Insn 46(l0): point = 75
   Insn 45(l0): point = 77
   Insn 44(l0): point = 79
   Insn 43(l0): point = 81
   Insn 35(l0): point = 84
   Insn 34(l0): point = 86
   Insn 33(l0): point = 88
   Insn 32(l0): point = 90
   Insn 31(l0): point = 92
   Insn 30(l0): point = 94
   Insn 29(l0): point = 96
   Insn 28(l0): point = 98
   Insn 27(l0): point = 100
   Insn 26(l0): point = 102
   Insn 25(l0): point = 104
   Insn 24(l0): point = 106
   Insn 23(l0): point = 108
   Insn 22(l0): point = 110
   Insn 21(l0): point = 112
   Insn 20(l0): point = 114
   Insn 19(l0): point = 116
   Insn 18(l0): point = 118
   Insn 17(l0): point = 120
   Insn 16(l0): point = 122
   Insn 15(l0): point = 124
   Insn 38(l0): point = 127
   Insn 37(l0): point = 129
   Insn 36(l0): point = 131
   Insn 98(l0): point = 134
   Insn 7(l0): point = 136
   Insn 3(l0): point = 138
   Insn 2(l0): point = 140
 a0(r93): [11..12]
 a1(r59): [21..22]
 a2(r80): [36..37]
 a3(r79): [42..47]
 a4(r71): [44..79]
 a5(r70): [46..81]
 a6(r78): [48..49]
 a7(r77): [50..51]
 a8(r75): [50..57]
 a9(r76): [52..53]
 a10(r92): [54..55]
 a11(r74): [58..59]
 a12(r91): [60..61]
 a13(r73): [60..63]
 a14(r89): [68..73] [64..65]
 a15(r90): [66..67]
 a16(r72): [70..75]
 a17(r88): [76..77]
 a18(r87): [130..131]
 a19(r69): [130..133] [84..90]
 a20(r86): [87..88]
 a21(r68): [91..92]
 a22(r67): [93..94]
 a23(r66): [95..96]
 a24(r65): [97..98]
 a25(r63): [97..104]
 a26(r64): [99..100]
 a27(r85): [101..102]
 a28(r62): [105..106]
 a29(r84): [107..108]
 a30(r61): [107..110]
 a31(r82): [115..120] [111..112]
 a32(r83): [113..114]
 a33(r60): [117..122]
 a34(r81): [123..124]
Compressing live ranges: from 143 to 56 - 39%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r59): [2..3]
 a2(r80): [4..5]
 a3(r79): [6..7]
 a4(r71): [6..27]
 a5(r70): [6..27]
 a6(r78): [8..9]
 a7(r77): [10..11]
 a8(r75): [10..15]
 a9(r76): [12..13]
 a10(r92): [14..15]
 a11(r74): [16..17]
 a12(r91): [18..19]
 a13(r73): [18..19]
 a14(r89): [24..25] [20..21]
 a15(r90): [22..23]
 a16(r72): [24..25]
 a17(r88): [26..27]
 a18(r87): [54..55]
 a19(r69): [54..55] [28..29]
 a20(r86): [28..29]
 a21(r68): [30..31]
 a22(r67): [32..33]
 a23(r66): [34..35]
 a24(r65): [36..37]
 a25(r63): [36..41]
 a26(r64): [38..39]
 a27(r85): [40..41]
 a28(r62): [42..43]
 a29(r84): [44..45]
 a30(r61): [44..45]
 a31(r82): [50..51] [46..47]
 a32(r83): [48..49]
 a33(r60): [50..51]
 a34(r81): [52..53]
  regions=1, blocks=13, points=56
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=38
Disposition:
    1:r59  l0     0   33:r60  l0     1   30:r61  l0     1   28:r62  l0     0
   25:r63  l0     0   26:r64  l0     1   24:r65  l0     1   23:r66  l0     0
   22:r67  l0     0   21:r68  l0     0   19:r69  l0     8    5:r70  l0     4
    4:r71  l0     2   16:r72  l0     1   13:r73  l0     1   11:r74  l0     0
    8:r75  l0     0    9:r76  l0     1    7:r77  l0     1    6:r78  l0     0
    3:r79  l0     0    2:r80  l0     0   34:r81  l0     0   31:r82  l0     0
   32:r83  l0     0   29:r84  l0     0   27:r85  l0     1   20:r86  l0     9
   18:r87  l0     9   17:r88  l0     0   14:r89  l0     0   15:r90  l0     0
   12:r91  l0     0   10:r92  l0     1    0:r93  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


cheak_inside_pos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,12u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,14u} r17={22d,5u} r18={2d} r19={2d} r20={1d,29u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,2u,1e} r61={1d,1u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,2u} r70={1d,1u} r71={1d,1u} r72={1d,2u,1e} r73={1d,1u,1e} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={4d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={4d,4u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 303{172d,125u,6e} in 66{64 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mTest.c:123 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 n_f+0 S4 A32])
        (reg:SI 4 si [ n_f ])) mTest.c:123 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n_f ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 98 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mTest.c:125 89 {*movsi_internal}
     (nil))
(jump_insn 98 7 99 2 (set (pc)
        (label_ref 82)) mTest.c:125 650 {jump}
     (nil)
 -> 82)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 84)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 84 99 10 3 59 "" [1 uses])
(note 10 84 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 100 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mTest.c:125 89 {*movsi_internal}
     (nil))
(jump_insn 100 11 101 3 (set (pc)
        (label_ref 74)) mTest.c:125 650 {jump}
     (nil)
 -> 74)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 101 100 77)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 65 66 67 68 69 81 82 83 84 85 86
(code_label 77 101 14 4 58 "" [1 uses])
(note 14 77 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 60 [ D.4359 ])
        (sign_extend:DI (reg:SI 81))) mTest.c:125 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(insn 17 16 18 4 (set (reg:DI 82)
        (reg:DI 60 [ D.4359 ])) mTest.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 82)
                (ashift:DI (reg:DI 82)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg:DI 82)
                    (reg:DI 60 [ D.4359 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.4359 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4359 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 83)
                (ashift:DI (reg:DI 82)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg:DI 82)
        (reg:DI 83)) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 22 21 23 4 (set (reg:DI 61 [ D.4359 ])
        (reg:DI 82)) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mTest.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 62 [ D.4360 ])
                (plus:DI (reg:DI 61 [ D.4359 ])
                    (reg/f:DI 84)))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (expr_list:REG_DEAD (reg:DI 61 [ D.4359 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
                        (reg:DI 61 [ D.4359 ]))
                    (nil))))))
(insn 25 24 26 4 (set (reg/f:DI 63 [ D.4361 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 62 [ D.4360 ])
                (const_int 32 [0x20])) [0 _10->pos+0 S8 A128])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.4360 ])
        (nil)))
(insn 26 25 27 4 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 64 [ D.4359 ])
        (sign_extend:DI (reg:SI 85))) mTest.c:125 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 65 [ D.4359 ])
                (ashift:DI (reg:DI 64 [ D.4359 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.4359 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 66 [ D.4361 ])
                (plus:DI (reg/f:DI 63 [ D.4361 ])
                    (reg:DI 65 [ D.4359 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.4359 ])
        (expr_list:REG_DEAD (reg/f:DI 63 [ D.4361 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 4 (set (reg/f:DI 67 [ D.4362 ])
        (mem/f:DI (reg/f:DI 66 [ D.4361 ]) [0 *_14+0 S8 A64])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.4361 ])
        (nil)))
(insn 31 30 32 4 (parallel [
            (set (reg/f:DI 68 [ D.4362 ])
                (plus:DI (reg/f:DI 67 [ D.4362 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.4362 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg:XF 69 [ D.4363 ])
        (mem:XF (reg/f:DI 68 [ D.4362 ]) [0 *_16+0 S16 A128])) mTest.c:125 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.4362 ])
        (nil)))
(insn 33 32 34 4 (set (reg:XF 86)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S16 A128])) mTest.c:125 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 34 33 35 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 69 [ D.4363 ])
            (reg:XF 86))) mTest.c:125 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 86)
        (nil)))
(jump_insn 35 34 93 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mTest.c:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 71)
;;  succ:       8
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 17 [flags] 87
(note 93 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 93 37 5 (set (reg:XF 87)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S16 A128])) mTest.c:125 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 37 36 38 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 69 [ D.4363 ])
            (reg:XF 87))) mTest.c:125 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 87)
        (expr_list:REG_DEAD (reg:XF 69 [ D.4363 ])
            (nil))))
(jump_insn 38 37 42 5 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) mTest.c:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 71)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 71 72 73 74 75 76 77 78 79 80 88 89 90 91 92
(note 42 38 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:SI 70 [ D.4358 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 conf.Nbound+0 S4 A128])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 71 [ D.4361 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mTest.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:DI 72 [ D.4359 ])
        (sign_extend:DI (reg:SI 88))) mTest.c:125 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 47 46 48 6 (set (reg:DI 89)
        (reg:DI 72 [ D.4359 ])) mTest.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 89)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 6 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg:DI 89)
                    (reg:DI 72 [ D.4359 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 72 [ D.4359 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 72 [ D.4359 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 90)
                (ashift:DI (reg:DI 89)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 6 (set (reg:DI 89)
        (reg:DI 90)) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 52 51 53 6 (set (reg:DI 73 [ D.4359 ])
        (reg:DI 89)) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 53 52 54 6 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mTest.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:DI 74 [ D.4360 ])
                (plus:DI (reg:DI 73 [ D.4359 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg:DI 73 [ D.4359 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
                        (reg:DI 73 [ D.4359 ]))
                    (nil))))))
(insn 55 54 56 6 (set (reg/f:DI 75 [ D.4361 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 74 [ D.4360 ])
                (const_int 32 [0x20])) [0 _22->pos+0 S8 A128])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.4360 ])
        (nil)))
(insn 56 55 57 6 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:DI 76 [ D.4359 ])
        (sign_extend:DI (reg:SI 92))) mTest.c:125 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 77 [ D.4359 ])
                (ashift:DI (reg:DI 76 [ D.4359 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 76 [ D.4359 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 6 (parallel [
            (set (reg/f:DI 78 [ D.4361 ])
                (plus:DI (reg/f:DI 75 [ D.4361 ])
                    (reg:DI 77 [ D.4359 ])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 77 [ D.4359 ])
        (expr_list:REG_DEAD (reg/f:DI 75 [ D.4361 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 6 (set (reg/f:DI 79 [ D.4362 ])
        (mem/f:DI (reg/f:DI 78 [ D.4361 ]) [0 *_26+0 S8 A64])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ D.4361 ])
        (nil)))
(insn 61 60 62 6 (set (reg:SI 1 dx)
        (reg:SI 70 [ D.4358 ])) mTest.c:125 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 70 [ D.4358 ])
        (nil)))
(insn 62 61 63 6 (set (reg:DI 4 si)
        (reg/f:DI 71 [ D.4361 ])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.4361 ])
        (nil)))
(insn 63 62 64 6 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.4362 ])) mTest.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79 [ D.4362 ])
        (nil)))
(call_insn 64 63 65 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f14bda42700 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mTest.c:125 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 65 64 66 6 (set (reg:SI 80 [ D.4358 ])
        (reg:SI 0 ax)) mTest.c:125 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 66 65 67 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.4358 ])
            (const_int 1 [0x1]))) mTest.c:125 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 80 [ D.4358 ])
        (nil)))
(jump_insn 67 66 68 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mTest.c:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f14bd851098 *.LC20>)) mTest.c:126 87 {*movdi_internal_rex64}
     (nil))
(call_insn 70 69 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f14bd996600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mTest.c:126 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;;              4
;;              5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 70 72 8 56 "" [3 uses])
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59
(code_label 74 73 75 9 55 "" [1 uses])
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 78 9 (set (reg:SI 59 [ D.4358 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 192 [0xc0])) [0 conf.t_w+0 S4 A128])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 78 76 79 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.4358 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) mTest.c:125 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.4358 ])
        (nil)))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) mTest.c:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 77)
;;  succ:       4
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mTest.c:125 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(code_label 82 81 83 11 54 "" [1 uses])
(note 83 82 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 11 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mTest.c:125 89 {*movsi_internal}
     (nil))
(insn 86 85 87 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 n_f+0 S4 A32]))) mTest.c:125 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(jump_insn 87 86 88 11 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) mTest.c:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 84)
;;  succ:       3
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 88 87 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 97 88 0 12 (const_int 0 [0]) mTest.c:128 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

