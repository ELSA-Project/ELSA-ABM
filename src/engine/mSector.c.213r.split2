
;; Function _find_extrem (_find_extrem, funcdef_no=2, decl_uid=3943, cgraph_uid=2)

scanning new insn with uid = 147.
scanning new insn with uid = 148.
deleting insn with uid = 124.
deleting insn with uid = 124.
deleting insn with uid = 128.
scanning new insn with uid = 149.
scanning new insn with uid = 150.
deleting insn with uid = 121.
deleting insn with uid = 121.
scanning new insn with uid = 151.
deleting insn with uid = 101.
deleting insn with uid = 101.
scanning new insn with uid = 152.
scanning new insn with uid = 153.
deleting insn with uid = 109.
deleting insn with uid = 109.
scanning new insn with uid = 154.
scanning new insn with uid = 155.
deleting insn with uid = 110.
deleting insn with uid = 110.
scanning new insn with uid = 156.
deleting insn with uid = 83.
deleting insn with uid = 83.
scanning new insn with uid = 157.
scanning new insn with uid = 158.
deleting insn with uid = 76.
deleting insn with uid = 76.
scanning new insn with uid = 159.
scanning new insn with uid = 160.
deleting insn with uid = 77.
deleting insn with uid = 77.
scanning new insn with uid = 161.
scanning new insn with uid = 162.
deleting insn with uid = 64.
deleting insn with uid = 64.
scanning new insn with uid = 163.
deleting insn with uid = 44.
deleting insn with uid = 44.
scanning new insn with uid = 164.
scanning new insn with uid = 165.
deleting insn with uid = 52.
deleting insn with uid = 52.
scanning new insn with uid = 166.
scanning new insn with uid = 167.
deleting insn with uid = 53.
deleting insn with uid = 53.
scanning new insn with uid = 168.
deleting insn with uid = 26.
deleting insn with uid = 26.
scanning new insn with uid = 169.
scanning new insn with uid = 170.
deleting insn with uid = 19.
deleting insn with uid = 19.
scanning new insn with uid = 171.
scanning new insn with uid = 172.
deleting insn with uid = 20.
deleting insn with uid = 20.


_find_extrem

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={39d,41u} r1={29d,28u,4e} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,63u} r7={1d,15u} r8={3d,4u} r9={2d,2u} r17={23d,5u} r20={1d,1u,4e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 282{112d,162u,8e} in 103{103 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32])
        (reg:SI 4 si [ np ])) mSector.c:19 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ np ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])
        (reg:SI 1 dx [ c ])) mSector.c:19 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ c ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
        (reg:SI 2 cx [ Max ])) mSector.c:19 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ Max ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:22 7 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:22 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       3 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 99 100 101
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:60 D.4955 ] [60])
        (mem/f:DI (reg/f:DI 0 ax [99]) [0 *p_10(D)+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (nil)))
(insn 15 14 16 3 (set (reg:SI 1 dx [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 1 dx [orig:61 D.4956 ] [61])
        (sign_extend:DI (reg:SI 1 dx [100]))) mSector.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [100])
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 1 dx [orig:62 D.4956 ] [62])
                (ashift:DI (reg:DI 1 dx [orig:61 D.4956 ] [61])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.4956 ] [61])
        (nil)))
(insn 18 17 169 3 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.4955 ] [63])
                (plus:DI (reg/f:DI 0 ax [orig:60 D.4955 ] [60])
                    (reg:DI 1 dx [orig:62 D.4956 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.4956 ] [62])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.4955 ] [60])
            (nil))))
(insn 169 18 170 3 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:63 D.4955 ] [63])
                (const_int 8 [0x8])) [0 *_15+8 S4 A64])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 170 169 171 3 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:63 D.4955 ] [63]) [0 *_15+0 S8 A128])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 171 170 172 3 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 172 171 140 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:23 89 {*movsi_internal}
     (nil))
(jump_insn 140 172 141 3 (set (pc)
        (label_ref 57)) mSector.c:23 650 {jump}
     (nil)
 -> 57)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 141 140 59)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66 67 68 69 70 71 102 103 104 105
(code_label 59 141 23 4 6 "" [1 uses])
(note 23 59 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 0 ax [102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 25 24 168 4 (set (reg:DI 0 ax [orig:64 D.4956 ] [64])
        (sign_extend:DI (reg:SI 0 ax [102]))) mSector.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [102])
        (nil)))
(insn 168 25 27 4 (set (reg:DI 1 dx [orig:65 D.4956 ] [65])
        (mult:DI (reg:DI 0 ax [orig:64 D.4956 ] [64])
            (const_int 8 [0x8]))) mSector.c:23 267 {*leadi}
     (nil))
(insn 27 168 28 4 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.4957 ] [66])
                (plus:DI (reg/f:DI 0 ax [103])
                    (reg:DI 1 dx [orig:65 D.4956 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [103])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.4956 ] [65])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                    (reg:DI 1 dx [orig:65 D.4956 ] [65]))
                (nil)))))
(insn 29 28 30 4 (set (reg/f:DI 0 ax [orig:67 D.4955 ] [67])
        (mem/f:DI (reg/f:DI 0 ax [orig:66 D.4957 ] [66]) [0 *_20+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.4957 ] [66])
        (nil)))
(insn 30 29 31 4 (set (reg:SI 1 dx [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 1 dx [orig:68 D.4956 ] [68])
        (sign_extend:DI (reg:SI 1 dx [104]))) mSector.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [104])
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 1 dx [orig:69 D.4956 ] [69])
                (ashift:DI (reg:DI 1 dx [orig:68 D.4956 ] [68])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.4956 ] [68])
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.4955 ] [70])
                (plus:DI (reg/f:DI 0 ax [orig:67 D.4955 ] [67])
                    (reg:DI 1 dx [orig:69 D.4956 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.4956 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.4955 ] [67])
            (nil))))
(insn 34 33 35 4 (set (reg:XF 9 st(1) [orig:71 D.4954 ] [71])
        (mem:XF (reg/f:DI 0 ax [orig:70 D.4955 ] [70]) [0 *_24+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.4955 ] [70])
        (nil)))
(insn 35 34 36 4 (set (reg:XF 8 st [105])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(insn 36 35 37 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:71 D.4954 ] [71])
            (reg:XF 8 st [105]))) mSector.c:23 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [105])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:71 D.4954 ] [71])
            (nil))))
(jump_insn 37 36 41 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) mSector.c:23 612 {*jcc_1}
     (nil)
 -> 54)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 72 73 74 75 76 77 78 106 107 108 109
(note 41 37 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (reg:SI 0 ax [106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 43 42 163 5 (set (reg:DI 0 ax [orig:72 D.4956 ] [72])
        (sign_extend:DI (reg:SI 0 ax [106]))) mSector.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [106])
        (nil)))
(insn 163 43 45 5 (set (reg:DI 1 dx [orig:73 D.4956 ] [73])
        (mult:DI (reg:DI 0 ax [orig:72 D.4956 ] [72])
            (const_int 8 [0x8]))) mSector.c:23 267 {*leadi}
     (nil))
(insn 45 163 46 5 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 0 ax [orig:74 D.4957 ] [74])
                (plus:DI (reg/f:DI 0 ax [107])
                    (reg:DI 1 dx [orig:73 D.4956 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [107])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:73 D.4956 ] [73])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                    (reg:DI 1 dx [orig:73 D.4956 ] [73]))
                (nil)))))
(insn 47 46 48 5 (set (reg/f:DI 0 ax [orig:75 D.4955 ] [75])
        (mem/f:DI (reg/f:DI 0 ax [orig:74 D.4957 ] [74]) [0 *_28+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.4957 ] [74])
        (nil)))
(insn 48 47 49 5 (set (reg:SI 1 dx [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:DI 1 dx [orig:76 D.4956 ] [76])
        (sign_extend:DI (reg:SI 1 dx [108]))) mSector.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [108])
        (nil)))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 1 dx [orig:77 D.4956 ] [77])
                (ashift:DI (reg:DI 1 dx [orig:76 D.4956 ] [76])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:76 D.4956 ] [76])
        (nil)))
(insn 51 50 164 5 (parallel [
            (set (reg/f:DI 0 ax [orig:78 D.4955 ] [78])
                (plus:DI (reg/f:DI 0 ax [orig:75 D.4955 ] [75])
                    (reg:DI 1 dx [orig:77 D.4956 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:77 D.4956 ] [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.4955 ] [75])
            (nil))))
(insn 164 51 165 5 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:78 D.4955 ] [78])
                (const_int 8 [0x8])) [0 *_32+8 S4 A64])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 165 164 166 5 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:78 D.4955 ] [78]) [0 *_32+0 S8 A128])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 166 165 167 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 167 166 54 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:23 89 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 54 167 55 6 4 "" [1 uses])
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110
(code_label 57 56 58 7 3 "" [1 uses])
(note 58 57 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 7 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 61 60 62 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [110])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:23 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [110])
        (nil)))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) mSector.c:23 612 {*jcc_1}
     (nil)
 -> 59)
;;  succ:       4
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 63 62 161 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 161 63 162 8 (set (reg:DI 0 ax)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])) mSector.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 162 161 142 8 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])) mSector.c:24 89 {*movsi_internal}
     (nil))
(jump_insn 142 162 143 8 (set (pc)
        (label_ref 122)) mSector.c:24 650 {jump}
     (nil)
 -> 122)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 143 142 67)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 79 80 81 82 111 112 113
(code_label 67 143 68 9 2 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 70 69 71 9 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 9 (set (reg/f:DI 0 ax [orig:79 D.4955 ] [79])
        (mem/f:DI (reg/f:DI 0 ax [111]) [0 *p_10(D)+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (nil)))
(insn 72 71 73 9 (set (reg:SI 1 dx [112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 1 dx [orig:80 D.4956 ] [80])
        (sign_extend:DI (reg:SI 1 dx [112]))) mSector.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [112])
        (nil)))
(insn 74 73 75 9 (parallel [
            (set (reg:DI 1 dx [orig:81 D.4956 ] [81])
                (ashift:DI (reg:DI 1 dx [orig:80 D.4956 ] [80])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:80 D.4956 ] [80])
        (nil)))
(insn 75 74 157 9 (parallel [
            (set (reg/f:DI 0 ax [orig:82 D.4955 ] [82])
                (plus:DI (reg/f:DI 0 ax [orig:79 D.4955 ] [79])
                    (reg:DI 1 dx [orig:81 D.4956 ] [81])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:81 D.4956 ] [81])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.4955 ] [79])
            (nil))))
(insn 157 75 158 9 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:82 D.4955 ] [82])
                (const_int 8 [0x8])) [0 *_40+8 S4 A64])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 158 157 159 9 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:82 D.4955 ] [82]) [0 *_40+0 S8 A128])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 159 158 160 9 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 144 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:27 89 {*movsi_internal}
     (nil))
(jump_insn 144 160 145 9 (set (pc)
        (label_ref 114)) mSector.c:27 650 {jump}
     (nil)
 -> 114)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 145 144 116)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 86 87 88 89 90 114 115 116 117
(code_label 116 145 80 10 11 "" [1 uses])
(note 80 116 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 82 81 156 10 (set (reg:DI 0 ax [orig:83 D.4956 ] [83])
        (sign_extend:DI (reg:SI 0 ax [114]))) mSector.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [114])
        (nil)))
(insn 156 82 84 10 (set (reg:DI 1 dx [orig:84 D.4956 ] [84])
        (mult:DI (reg:DI 0 ax [orig:83 D.4956 ] [83])
            (const_int 8 [0x8]))) mSector.c:27 267 {*leadi}
     (nil))
(insn 84 156 85 10 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg/f:DI 0 ax [orig:85 D.4957 ] [85])
                (plus:DI (reg/f:DI 0 ax [115])
                    (reg:DI 1 dx [orig:84 D.4956 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [115])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.4956 ] [84])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                    (reg:DI 1 dx [orig:84 D.4956 ] [84]))
                (nil)))))
(insn 86 85 87 10 (set (reg/f:DI 0 ax [orig:86 D.4955 ] [86])
        (mem/f:DI (reg/f:DI 0 ax [orig:85 D.4957 ] [85]) [0 *_44+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 D.4957 ] [85])
        (nil)))
(insn 87 86 88 10 (set (reg:SI 1 dx [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:DI 1 dx [orig:87 D.4956 ] [87])
        (sign_extend:DI (reg:SI 1 dx [116]))) mSector.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [116])
        (nil)))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 1 dx [orig:88 D.4956 ] [88])
                (ashift:DI (reg:DI 1 dx [orig:87 D.4956 ] [87])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:87 D.4956 ] [87])
        (nil)))
(insn 90 89 91 10 (parallel [
            (set (reg/f:DI 0 ax [orig:89 D.4955 ] [89])
                (plus:DI (reg/f:DI 0 ax [orig:86 D.4955 ] [86])
                    (reg:DI 1 dx [orig:88 D.4956 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:88 D.4956 ] [88])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.4955 ] [86])
            (nil))))
(insn 91 90 92 10 (set (reg:XF 8 st [orig:90 D.4954 ] [90])
        (mem:XF (reg/f:DI 0 ax [orig:89 D.4955 ] [89]) [0 *_48+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.4955 ] [89])
        (nil)))
(insn 92 91 93 10 (set (reg:XF 9 st(1) [117])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(insn 93 92 94 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [117])
            (reg:XF 8 st [orig:90 D.4954 ] [90]))) mSector.c:27 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 9 st(1) [117])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:90 D.4954 ] [90])
            (nil))))
(jump_insn 94 93 98 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) mSector.c:27 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 93 94 95 96 97 118 119 120 121
(note 98 94 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 11 (set (reg:SI 0 ax [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 100 99 151 11 (set (reg:DI 0 ax [orig:91 D.4956 ] [91])
        (sign_extend:DI (reg:SI 0 ax [118]))) mSector.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [118])
        (nil)))
(insn 151 100 102 11 (set (reg:DI 1 dx [orig:92 D.4956 ] [92])
        (mult:DI (reg:DI 0 ax [orig:91 D.4956 ] [91])
            (const_int 8 [0x8]))) mSector.c:27 267 {*leadi}
     (nil))
(insn 102 151 103 11 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg/f:DI 0 ax [orig:93 D.4957 ] [93])
                (plus:DI (reg/f:DI 0 ax [119])
                    (reg:DI 1 dx [orig:92 D.4956 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [119])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:92 D.4956 ] [92])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                    (reg:DI 1 dx [orig:92 D.4956 ] [92]))
                (nil)))))
(insn 104 103 105 11 (set (reg/f:DI 0 ax [orig:94 D.4955 ] [94])
        (mem/f:DI (reg/f:DI 0 ax [orig:93 D.4957 ] [93]) [0 *_52+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.4957 ] [93])
        (nil)))
(insn 105 104 106 11 (set (reg:SI 1 dx [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 106 105 107 11 (set (reg:DI 1 dx [orig:95 D.4956 ] [95])
        (sign_extend:DI (reg:SI 1 dx [120]))) mSector.c:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [120])
        (nil)))
(insn 107 106 108 11 (parallel [
            (set (reg:DI 1 dx [orig:96 D.4956 ] [96])
                (ashift:DI (reg:DI 1 dx [orig:95 D.4956 ] [95])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:95 D.4956 ] [95])
        (nil)))
(insn 108 107 152 11 (parallel [
            (set (reg/f:DI 0 ax [orig:97 D.4955 ] [97])
                (plus:DI (reg/f:DI 0 ax [orig:94 D.4955 ] [94])
                    (reg:DI 1 dx [orig:96 D.4956 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:96 D.4956 ] [96])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:94 D.4955 ] [94])
            (nil))))
(insn 152 108 153 11 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:97 D.4955 ] [97])
                (const_int 8 [0x8])) [0 *_56+8 S4 A64])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 153 152 154 11 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:97 D.4955 ] [97]) [0 *_56+0 S8 A128])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 154 153 155 11 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 111 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:27 89 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 111 155 112 12 9 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122
(code_label 114 113 115 13 8 "" [1 uses])
(note 115 114 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 13 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [122])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:27 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [122])
        (nil)))
(jump_insn 119 118 120 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:27 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       10
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 120 119 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 149 120 150 14 (set (reg:DI 0 ax)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S8 A128])) mSector.c:28 87 {*movdi_internal_rex64}
     (nil))
(insn 150 149 122 14 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+8 S4 A64])) mSector.c:28 89 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              8 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 8 [st] 98
(code_label 122 150 123 15 7 "" [1 uses])
(note 123 122 147 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 147 123 148 15 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A128])
        (reg:DI 0 ax)) 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 146 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S4 A64])
        (reg:SI 1 dx)) 89 {*movsi_internal}
     (nil))
(insn 146 148 131 15 (set (reg:XF 8 st [orig:98 <retval> ] [98])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S16 A128])) 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 124)
        (nil)))
(insn 131 146 0 15 (use (reg/i:XF 8 st)) mSector.c:30 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _point_proj (_point_proj, funcdef_no=3, decl_uid=3957, cgraph_uid=3)

deleting insn with uid = 102.
deleting insn with uid = 106.
scanning new insn with uid = 118.
deleting insn with uid = 68.
deleting insn with uid = 68.
scanning new insn with uid = 119.
deleting insn with uid = 77.
deleting insn with uid = 77.
scanning new insn with uid = 120.
deleting insn with uid = 88.
deleting insn with uid = 88.
scanning new insn with uid = 121.
scanning new insn with uid = 122.
deleting insn with uid = 22.
deleting insn with uid = 22.
scanning new insn with uid = 123.
scanning new insn with uid = 124.
deleting insn with uid = 24.
deleting insn with uid = 24.
scanning new insn with uid = 125.
deleting insn with uid = 26.
deleting insn with uid = 26.
scanning new insn with uid = 126.
scanning new insn with uid = 127.
deleting insn with uid = 28.
deleting insn with uid = 28.
scanning new insn with uid = 128.
scanning new insn with uid = 129.
deleting insn with uid = 29.
deleting insn with uid = 29.


_point_proj

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 8[st] 9[st(1)] 10[st(2)] 17[flags]
;;  ref usage 	r0={27d,28u} r1={4d,4u} r2={3d,5u} r4={1d,1u} r5={1d,1u} r6={1d,41u} r7={1d,6u} r8={24d,25u} r9={14d,15u} r10={6d,6u} r17={7d,2u} r20={1d,1u,5e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 240{100d,135u,5e} in 93{93 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 99 100
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
        (reg:DI 5 di [ P ])) mSector.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ P ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
        (reg:DI 4 si [ A ])) mSector.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ A ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
        (reg:DI 1 dx [ B ])) mSector.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ B ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
        (reg:DI 2 cx [ H ])) mSector.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ H ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 9 st(1) [orig:60 D.4960 ] [60])
        (mem:XF (reg/f:DI 0 ax [99]) [0 *B_2(D)+0 S16 A128])) mSector.c:34 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:XF 8 st [orig:61 D.4960 ] [61])
        (mem:XF (reg/f:DI 0 ax [100]) [0 *A_4(D)+0 S16 A128])) mSector.c:34 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [100])
        (nil)))
(insn 13 12 14 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:60 D.4960 ] [60])
            (reg:XF 8 st [orig:61 D.4960 ] [61]))) mSector.c:34 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 14 13 111 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mSector.c:34 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61
;; lr  def 	 17 [flags]
(note 111 14 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 111 16 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:60 D.4960 ] [60])
            (reg:XF 8 st [orig:61 D.4960 ] [61]))) mSector.c:34 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:61 D.4960 ] [61])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:60 D.4960 ] [60])
            (nil))))
(jump_insn 16 15 20 3 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) mSector.c:34 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 62 63 64 101 102 103 104
(note 20 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 121 4 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 121 21 122 4 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [101])
                (const_int 8 [0x8])) [0 *B_2(D)+8 S4 A64])) mSector.c:35 89 {*movsi_internal}
     (nil))
(insn 122 121 23 4 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [101]) [0 *B_2(D)+0 S8 A128])) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 23 122 123 4 (set (reg/f:DI 2 cx [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 123 23 124 4 (set (mem:DI (reg/f:DI 2 cx [102]) [0 *H_7(D)+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 25 4 (set (mem:SI (plus:DI (reg/f:DI 2 cx [102])
                (const_int 8 [0x8])) [0 *H_7(D)+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:35 89 {*movsi_internal}
     (nil))
(insn 25 124 125 4 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 125 25 27 4 (set (reg/f:DI 2 cx [orig:63 D.4961 ] [63])
        (plus:DI (reg/f:DI 0 ax [103])
            (const_int 16 [0x10]))) mSector.c:36 267 {*leadi}
     (nil))
(insn 27 125 126 4 (set (reg/f:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 126 27 127 4 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [104])
                (const_int 24 [0x18])) [0 MEM[(long double *)P_9(D) + 16B]+8 S4 A64])) mSector.c:36 89 {*movsi_internal}
     (nil))
(insn 127 126 128 4 (set (reg:DI 0 ax)
        (mem:DI (plus:DI (reg/f:DI 0 ax [104])
                (const_int 16 [0x10])) [0 MEM[(long double *)P_9(D) + 16B]+0 S8 A128])) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 4 (set (mem:DI (reg/f:DI 2 cx [orig:63 D.4961 ] [63]) [0 *_8+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 30 4 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:63 D.4961 ] [63])
                (const_int 8 [0x8])) [0 *_8+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:36 89 {*movsi_internal}
     (nil))
(insn 30 129 116 4 (set (reg:SI 0 ax [orig:59 D.4959 ] [59])
        (const_int 1 [0x1])) mSector.c:37 89 {*movsi_internal}
     (nil))
(jump_insn 116 30 117 4 (set (pc)
        (label_ref 100)) mSector.c:37 650 {jump}
     (nil)
 -> 100)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 117 116 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
(code_label 33 117 34 5 15 "" [2 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.4961 ] [65])
                (plus:DI (reg/f:DI 0 ax [105])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [105])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 37 36 38 5 (set (reg:XF 9 st(1) [orig:66 D.4960 ] [66])
        (mem:XF (reg/f:DI 0 ax [orig:65 D.4961 ] [65]) [0 *_12+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.4961 ] [65])
        (nil)))
(insn 38 37 39 5 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.4961 ] [67])
                (plus:DI (reg/f:DI 0 ax [106])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [106])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 40 39 41 5 (set (reg:XF 8 st [orig:68 D.4960 ] [68])
        (mem:XF (reg/f:DI 0 ax [orig:67 D.4961 ] [67]) [0 *_14+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.4961 ] [67])
        (nil)))
(insn 41 40 42 5 (set (reg:XF 9 st(1) [orig:69 D.4960 ] [69])
        (minus:XF (reg:XF 9 st(1) [orig:66 D.4960 ] [66])
            (reg:XF 8 st [orig:68 D.4960 ] [68]))) mSector.c:40 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:68 D.4960 ] [68])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:66 D.4960 ] [66])
            (nil))))
(insn 42 41 43 5 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg:XF 10 st(2) [orig:70 D.4960 ] [70])
        (mem:XF (reg/f:DI 0 ax [107]) [0 *B_2(D)+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [107])
        (nil)))
(insn 44 43 45 5 (set (reg/f:DI 0 ax [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:XF 8 st [orig:71 D.4960 ] [71])
        (mem:XF (reg/f:DI 0 ax [108]) [0 *A_4(D)+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [108])
        (nil)))
(insn 46 45 47 5 (set (reg:XF 8 st [orig:72 D.4960 ] [72])
        (minus:XF (reg:XF 10 st(2) [orig:70 D.4960 ] [70])
            (reg:XF 8 st [orig:71 D.4960 ] [71]))) mSector.c:40 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:71 D.4960 ] [71])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:70 D.4960 ] [70])
            (nil))))
(insn 47 46 48 5 (set (reg:XF 8 st [109])
        (div:XF (reg:XF 9 st(1) [orig:69 D.4960 ] [69])
            (reg:XF 8 st [orig:72 D.4960 ] [72]))) mSector.c:40 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:72 D.4960 ] [72])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:69 D.4960 ] [69])
            (nil))))
(insn 48 47 49 5 (set (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])
        (reg:XF 8 st [109])) mSector.c:40 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [109])
        (nil)))
(insn 49 48 50 5 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.4961 ] [73])
                (plus:DI (reg/f:DI 0 ax [110])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:41 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [110])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 51 50 52 5 (set (reg:XF 9 st(1) [orig:74 D.4960 ] [74])
        (mem:XF (reg/f:DI 0 ax [orig:73 D.4961 ] [73]) [0 *_21+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.4961 ] [73])
        (nil)))
(insn 52 51 53 5 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 5 (set (reg:XF 10 st(2) [orig:75 D.4960 ] [75])
        (mem:XF (reg/f:DI 0 ax [111]) [0 *A_4(D)+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (nil)))
(insn 54 53 55 5 (set (reg:XF 8 st [112])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 5 (set (reg:XF 8 st [orig:76 D.4960 ] [76])
        (mult:XF (reg:XF 8 st [112])
            (reg:XF 10 st(2) [orig:75 D.4960 ] [75]))) mSector.c:41 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [112])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:75 D.4960 ] [75])
            (nil))))
(insn 56 55 57 5 (set (reg:XF 8 st [113])
        (minus:XF (reg:XF 9 st(1) [orig:74 D.4960 ] [74])
            (reg:XF 8 st [orig:76 D.4960 ] [76]))) mSector.c:41 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:76 D.4960 ] [76])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:74 D.4960 ] [74])
            (nil))))
(insn 57 56 58 5 (set (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])
        (reg:XF 8 st [113])) mSector.c:41 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [113])
        (nil)))
(insn 58 57 59 5 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 5 (set (reg:XF 9 st(1) [orig:77 D.4960 ] [77])
        (mem:XF (reg/f:DI 0 ax [114]) [0 *P_9(D)+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [114])
        (nil)))
(insn 60 59 61 5 (set (reg:XF 8 st [115])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 61 60 62 5 (set (reg:XF 9 st(1) [orig:78 D.4960 ] [78])
        (div:XF (reg:XF 9 st(1) [orig:77 D.4960 ] [77])
            (reg:XF 8 st [115]))) mSector.c:43 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [115])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:77 D.4960 ] [77])
            (nil))))
(insn 62 61 63 5 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg/f:DI 0 ax [orig:79 D.4961 ] [79])
                (plus:DI (reg/f:DI 0 ax [116])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:43 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [116])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 64 63 65 5 (set (reg:XF 8 st [orig:80 D.4960 ] [80])
        (mem:XF (reg/f:DI 0 ax [orig:79 D.4961 ] [79]) [0 *_28+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.4961 ] [79])
        (nil)))
(insn 65 64 66 5 (set (reg:XF 9 st(1) [orig:81 D.4960 ] [81])
        (plus:XF (reg:XF 9 st(1) [orig:78 D.4960 ] [78])
            (reg:XF 8 st [orig:80 D.4960 ] [80]))) mSector.c:43 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:80 D.4960 ] [80])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:78 D.4960 ] [78])
            (nil))))
(insn 66 65 67 5 (set (reg:XF 8 st [117])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 118 5 (set (reg:XF 9 st(1) [orig:82 D.4960 ] [82])
        (minus:XF (reg:XF 9 st(1) [orig:81 D.4960 ] [81])
            (reg:XF 8 st [117]))) mSector.c:43 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [117])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:81 D.4960 ] [81])
            (nil))))
(insn 118 67 69 5 (set (reg:XF 10 st(2) [118])
        (const_double:XF 1.0e+0 [0x0.8p+1])) mSector.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 69 118 70 5 (set (reg:XF 8 st [119])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 70 69 71 5 (set (reg:XF 10 st(2) [orig:83 D.4960 ] [83])
        (div:XF (reg:XF 10 st(2) [118])
            (reg:XF 8 st [119]))) mSector.c:43 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [119])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [118])
            (nil))))
(insn 71 70 72 5 (set (reg:XF 8 st [120])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 72 71 73 5 (set (reg:XF 8 st [orig:84 D.4960 ] [84])
        (plus:XF (reg:XF 8 st [120])
            (reg:XF 10 st(2) [orig:83 D.4960 ] [83]))) mSector.c:43 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [120])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:83 D.4960 ] [83])
            (nil))))
(insn 73 72 74 5 (set (reg:XF 8 st [orig:85 D.4960 ] [85])
        (div:XF (reg:XF 9 st(1) [orig:82 D.4960 ] [82])
            (reg:XF 8 st [orig:84 D.4960 ] [84]))) mSector.c:43 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:84 D.4960 ] [84])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:82 D.4960 ] [82])
            (nil))))
(insn 74 73 75 5 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 5 (set (mem:XF (reg/f:DI 0 ax [121]) [0 *H_7(D)+0 S16 A128])
        (reg:XF 8 st [orig:85 D.4960 ] [85])) mSector.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [121])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:85 D.4960 ] [85])
            (nil))))
(insn 76 75 119 5 (set (reg/f:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 119 76 78 5 (set (reg/f:DI 1 dx [orig:86 D.4961 ] [86])
        (plus:DI (reg/f:DI 0 ax [122])
            (const_int 16 [0x10]))) mSector.c:44 267 {*leadi}
     (nil))
(insn 78 119 79 5 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 5 (set (reg:XF 9 st(1) [orig:87 D.4960 ] [87])
        (mem:XF (reg/f:DI 0 ax [123]) [0 *P_9(D)+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [123])
        (nil)))
(insn 80 79 81 5 (set (reg:XF 8 st [124])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 81 80 82 5 (set (reg:XF 9 st(1) [orig:88 D.4960 ] [88])
        (div:XF (reg:XF 9 st(1) [orig:87 D.4960 ] [87])
            (reg:XF 8 st [124]))) mSector.c:44 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [124])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:87 D.4960 ] [87])
            (nil))))
(insn 82 81 83 5 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 5 (parallel [
            (set (reg/f:DI 0 ax [orig:89 D.4961 ] [89])
                (plus:DI (reg/f:DI 0 ax [125])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [125])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 84 83 85 5 (set (reg:XF 8 st [orig:90 D.4960 ] [90])
        (mem:XF (reg/f:DI 0 ax [orig:89 D.4961 ] [89]) [0 *_38+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.4961 ] [89])
        (nil)))
(insn 85 84 86 5 (set (reg:XF 9 st(1) [orig:91 D.4960 ] [91])
        (plus:XF (reg:XF 9 st(1) [orig:88 D.4960 ] [88])
            (reg:XF 8 st [orig:90 D.4960 ] [90]))) mSector.c:44 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:90 D.4960 ] [90])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:88 D.4960 ] [88])
            (nil))))
(insn 86 85 87 5 (set (reg:XF 8 st [126])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 87 86 120 5 (set (reg:XF 9 st(1) [orig:92 D.4960 ] [92])
        (minus:XF (reg:XF 9 st(1) [orig:91 D.4960 ] [91])
            (reg:XF 8 st [126]))) mSector.c:44 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [126])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:91 D.4960 ] [91])
            (nil))))
(insn 120 87 89 5 (set (reg:XF 10 st(2) [127])
        (const_double:XF 1.0e+0 [0x0.8p+1])) mSector.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 89 120 90 5 (set (reg:XF 8 st [128])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 90 89 91 5 (set (reg:XF 10 st(2) [orig:93 D.4960 ] [93])
        (div:XF (reg:XF 10 st(2) [127])
            (reg:XF 8 st [128]))) mSector.c:44 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [128])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [127])
            (nil))))
(insn 91 90 92 5 (set (reg:XF 8 st [129])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 92 91 93 5 (set (reg:XF 8 st [orig:94 D.4960 ] [94])
        (plus:XF (reg:XF 8 st [129])
            (reg:XF 10 st(2) [orig:93 D.4960 ] [93]))) mSector.c:44 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [129])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:93 D.4960 ] [93])
            (nil))))
(insn 93 92 94 5 (set (reg:XF 9 st(1) [orig:95 D.4960 ] [95])
        (div:XF (reg:XF 9 st(1) [orig:92 D.4960 ] [92])
            (reg:XF 8 st [orig:94 D.4960 ] [94]))) mSector.c:44 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:94 D.4960 ] [94])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:92 D.4960 ] [92])
            (nil))))
(insn 94 93 95 5 (set (reg:XF 8 st [130])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 95 94 96 5 (set (reg:XF 9 st(1) [orig:96 D.4960 ] [96])
        (mult:XF (reg:XF 9 st(1) [orig:95 D.4960 ] [95])
            (reg:XF 8 st [130]))) mSector.c:44 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [130])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:95 D.4960 ] [95])
            (nil))))
(insn 96 95 97 5 (set (reg:XF 8 st [131])
        (mem/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 97 96 98 5 (set (reg:XF 8 st [orig:97 D.4960 ] [97])
        (plus:XF (reg:XF 8 st [131])
            (reg:XF 9 st(1) [orig:96 D.4960 ] [96]))) mSector.c:44 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [131])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:96 D.4960 ] [96])
            (nil))))
(insn 98 97 99 5 (set (mem:XF (reg/f:DI 1 dx [orig:86 D.4961 ] [86]) [0 *_35+0 S16 A128])
        (reg:XF 8 st [orig:97 D.4960 ] [97])) mSector.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:97 D.4960 ] [97])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:86 D.4961 ] [86])
            (nil))))
(insn 99 98 100 5 (set (reg:SI 0 ax [orig:59 D.4959 ] [59])
        (const_int 1 [0x1])) mSector.c:46 89 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 98
(code_label 100 99 101 6 17 "" [1 uses])
(note 101 100 109 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 109 101 0 6 (use (reg/i:SI 0 ax)) mSector.c:47 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _check_tmp_point (_check_tmp_point, funcdef_no=4, decl_uid=3963, cgraph_uid=4)

deleting insn with uid = 69.
deleting insn with uid = 73.
deleting insn with uid = 40.
deleting insn with uid = 44.
deleting insn with uid = 9.
deleting insn with uid = 13.


_check_tmp_point

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={14d,11u} r1={12d,9u} r2={5d,2u} r4={5d,2u} r5={5d,3u} r6={1d,24u} r7={1d,12u} r8={2d,1u} r9={3d,1u} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={12d,3u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 212{143d,69u,0e} in 42{40 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 78
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 1 dx [orig:60 D.4962 ] [60])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 conf.Nbound+0 S4 A128])) mSector.c:51 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 2 cx [orig:61 D.4963 ] [61])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 conf.bound+0 S8 A64])) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 10 2 (set (reg:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 10 8 11 2 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:61 D.4963 ] [61])) mSector.c:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:61 D.4963 ] [61])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [78])) mSector.c:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [78])
        (nil)))
(call_insn 12 11 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:51 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 14 12 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:62 D.4962 ] [62])
            (const_int 0 [0]))) mSector.c:51 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.4962 ] [62])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) mSector.c:51 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 82 3 (set (reg:SI 0 ax [orig:59 D.4962 ] [59])
        (const_int 1 [0x1])) mSector.c:51 89 {*movsi_internal}
     (nil))
(jump_insn 82 17 83 3 (set (pc)
        (label_ref 67)) mSector.c:51 650 {jump}
     (nil)
 -> 67)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 83 82 20)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 20 83 21 4 21 "" [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 84 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:52 89 {*movsi_internal}
     (nil))
(jump_insn 84 22 85 4 (set (pc)
        (label_ref 58)) mSector.c:52 650 {jump}
     (nil)
 -> 58)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 85 84 62)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 72 73 74 75 76 79 80 81 82
(code_label 62 85 25 5 26 "" [1 uses])
(note 25 62 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 0 ax [orig:65 D.4963 ] [65])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 conf.bound+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 1 dx [79])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 1 dx [orig:66 D.4964 ] [66])
        (sign_extend:DI (reg:SI 1 dx [79]))) mSector.c:52 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [79])
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 1 dx [orig:67 D.4964 ] [67])
                (plus:DI (reg:DI 1 dx [orig:66 D.4964 ] [66])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.4964 ] [66])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 1 dx [orig:68 D.4964 ] [68])
                (ashift:DI (reg:DI 1 dx [orig:67 D.4964 ] [67])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:67 D.4964 ] [67])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 5 (parallel [
            (set (reg/f:DI 0 ax [orig:69 D.4963 ] [69])
                (plus:DI (reg/f:DI 0 ax [orig:65 D.4963 ] [65])
                    (reg:DI 1 dx [orig:68 D.4964 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.4964 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.4963 ] [65])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 5 (set (reg/f:DI 2 cx [orig:70 D.4965 ] [70])
        (mem/f:DI (reg/f:DI 0 ax [orig:69 D.4963 ] [69]) [0 *_15+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.4963 ] [69])
        (nil)))
(insn 33 32 34 5 (set (reg/f:DI 0 ax [orig:71 D.4963 ] [71])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 conf.bound+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:SI 1 dx [80])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 1 dx [orig:72 D.4966 ] [72])
        (sign_extend:DI (reg:SI 1 dx [80]))) mSector.c:52 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [80])
        (nil)))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 1 dx [orig:73 D.4966 ] [73])
                (ashift:DI (reg:DI 1 dx [orig:72 D.4966 ] [72])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.4966 ] [72])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 0 ax [orig:74 D.4963 ] [74])
                (plus:DI (reg/f:DI 0 ax [orig:71 D.4963 ] [71])
                    (reg:DI 1 dx [orig:73 D.4966 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:73 D.4966 ] [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.4963 ] [71])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 5 (set (reg/f:DI 0 ax [orig:75 D.4965 ] [75])
        (mem/f:DI (reg/f:DI 0 ax [orig:74 D.4963 ] [74]) [0 *_20+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.4963 ] [74])
        (nil)))
(insn 39 38 41 5 (set (reg:DI 1 dx [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 41 39 42 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:70 D.4965 ] [70])) mSector.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:70 D.4965 ] [70])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:75 D.4965 ] [75])) mSector.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.4965 ] [75])
        (nil)))
(call_insn 43 42 45 5 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("distance_point_segment") [flags 0x41]  <function_decl 0x7f44d29fca00 distance_point_segment>) [0 distance_point_segment S1 A8])
            (const_int 0 [0]))) mSector.c:52 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 45 43 46 5 (set (reg:XF 9 st(1) [82])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mSector.c:52 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 46 45 47 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [82])
            (reg:XF 8 st [orig:76 D.4967 ] [76]))) mSector.c:52 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 9 st(1) [82])
        (expr_list:REG_DEAD (reg:XF 8 st [orig:76 D.4967 ] [76])
            (nil))))
(jump_insn 47 46 51 5 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mSector.c:52 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 86)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 51 47 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 87 6 (set (reg:SI 0 ax [orig:59 D.4962 ] [59])
        (const_int 1 [0x1])) mSector.c:52 89 {*movsi_internal}
     (nil))
(jump_insn 87 52 88 6 (set (pc)
        (label_ref 67)) mSector.c:52 650 {jump}
     (nil)
 -> 67)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 88 87 86)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 86 88 56 7 28 "" [1 uses])
(note 56 86 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64
(code_label 58 57 59 8 23 "" [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 0 ax [orig:63 D.4962 ] [63])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 conf.Nbound+0 S4 A128])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 61 60 63 8 (parallel [
            (set (reg:SI 0 ax [orig:64 D.4962 ] [64])
                (plus:SI (reg:SI 0 ax [orig:63 D.4962 ] [63])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.4962 ] [63])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 61 64 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:64 D.4962 ] [64])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:52 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.4962 ] [64])
        (nil)))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mSector.c:52 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 62)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg:SI 0 ax [orig:59 D.4962 ] [59])
        (const_int 0 [0])) mSector.c:54 89 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              3 [100.0%] 
;;              6 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 77
(code_label 67 66 68 10 22 "" [2 uses])
(note 68 67 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 68 0 10 (use (reg/i:SI 0 ax)) mSector.c:55 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function generate_temporary_point (generate_temporary_point, funcdef_no=5, decl_uid=1870, cgraph_uid=5)

deleting insn with uid = 100.
deleting insn with uid = 104.
scanning new insn with uid = 121.
deleting insn with uid = 84.
deleting insn with uid = 84.
deleting insn with uid = 85.
deleting insn with uid = 89.
scanning new insn with uid = 122.
deleting insn with uid = 69.
deleting insn with uid = 69.
scanning new insn with uid = 123.
deleting insn with uid = 71.
deleting insn with uid = 71.
scanning new insn with uid = 124.
deleting insn with uid = 42.
deleting insn with uid = 42.
deleting insn with uid = 14.
deleting insn with uid = 22.


generate_temporary_point

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={31d,24u} r1={19d,9u} r2={11d} r3={2d,2u} r4={13d,3u} r5={18d,9u} r6={1d,44u} r7={1d,21u} r8={11d,2u} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={22d,4u} r18={9d} r19={9d} r20={1d,1u} r21={10d,2u} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} 
;;    total ref usage 594{473d,121u,0e} in 78{69 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 81 82 83 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])
        (reg:DI 5 di [ config ])) mSector.c:57 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ config ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.4976+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [99])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:57 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [99])
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])) mSector.c:59 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [81])
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])
        (const_int 50000 [0xc350])) mSector.c:59 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:59 D.4968 ] [59])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [82])
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])) mSector.c:61 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mSector.c:61 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:59 D.4968 ] [59])) mSector.c:61 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.4968 ] [59])
        (nil)))
(call_insn 13 12 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:61 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 15 13 16 2 (set (reg/f:DI 1 dx [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [83])
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])
        (reg/f:DI 0 ax [orig:60 D.4969 ] [60])) mSector.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [83])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.4969 ] [60])
            (nil))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44d2849980 *.LC3>)) mSector.c:64 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:64 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f44d2849a18 *.LC4>)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f44d2849ab0 *.LC5>)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(call_insn 21 20 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f44d2a89200 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mSector.c:67 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 23 21 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])
        (reg:DI 0 ax [84])) mSector.c:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [84])
        (nil)))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mSector.c:68 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) mSector.c:68 612 {*jcc_1}
     (nil)
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f44d2849b48 *.LC6>)) mSector.c:68 87 {*movdi_internal_rex64}
     (nil))
(call_insn 28 27 29 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:68 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 29 28 30 4 30 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 117 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 n+0 S4 A32])
        (const_int 0 [0])) mSector.c:69 89 {*movsi_internal}
     (nil))
(jump_insn 117 31 118 4 (set (pc)
        (label_ref 81)) mSector.c:69 650 {jump}
     (nil)
 -> 81)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 118 117 90)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 65 66 67 68 85 86 87
(code_label 90 118 34 5 34 "" [1 uses])
(note 34 90 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 0 ax [orig:62 D.4969 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (nil)))
(insn 37 36 38 5 (set (reg:SI 1 dx [86])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 n+0 S4 A32])) mSector.c:70 89 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 1 dx [orig:63 D.4971 ] [63])
        (sign_extend:DI (reg:SI 1 dx [86]))) mSector.c:70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [86])
        (nil)))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 1 dx [orig:64 D.4971 ] [64])
                (ashift:DI (reg:DI 1 dx [orig:63 D.4971 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.4971 ] [63])
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.4969 ] [65])
                (plus:DI (reg/f:DI 0 ax [orig:62 D.4969 ] [62])
                    (reg:DI 1 dx [orig:64 D.4971 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.4971 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.4969 ] [62])
            (nil))))
(insn 41 40 124 5 (set (reg/f:DI 3 bx [orig:66 D.4972 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [orig:65 D.4969 ] [65]) [0 *_12+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.4969 ] [65])
        (nil)))
(insn 124 41 43 5 (set (reg:DI 0 ax [87])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mSector.c:70 267 {*leadi}
     (nil))
(insn 43 124 44 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) mSector.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(call_insn/i 44 43 45 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:70 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 5 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 %sfp+-560 S8 A64])
        (reg:DF 21 xmm0)) mSector.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 46 45 47 5 (set (reg:XF 8 st [orig:68 D.4974 ] [68])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -560 [0xfffffffffffffdd0])) [0 %sfp+-560 S8 A64]))) mSector.c:70 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 67 [ D.4973 ])
        (nil)))
(insn 47 46 48 5 (set (mem:XF (reg/f:DI 3 bx [orig:66 D.4972 ] [66]) [0 *_13+0 S16 A128])
        (reg:XF 8 st [orig:68 D.4974 ] [68])) mSector.c:70 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:68 D.4974 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:66 D.4972 ] [66])
            (nil))))
(insn 48 47 119 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:71 89 {*movsi_internal}
     (nil))
(jump_insn 119 48 120 5 (set (pc)
        (label_ref 53)) mSector.c:71 650 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 120 119 58)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 58 120 51 6 33 "" [1 uses])
(note 51 58 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:71 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 88 89
(code_label 53 52 54 7 32 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])) mSector.c:71 89 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:DI 0 ax [88])
        (sign_extend:DI (reg:SI 0 ax [89]))) mSector.c:71 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [89])
        (nil)))
(insn 57 56 59 7 (set (reg:QI 0 ax [orig:69 D.4975 ] [69])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [88]))
                (const_int -528 [0xfffffffffffffdf0])) [0 c S1 A8])) mSector.c:71 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(insn 59 57 60 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:69 D.4975 ] [69])
            (const_int 9 [0x9]))) mSector.c:71 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.4975 ] [69])
        (nil)))
(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) mSector.c:71 612 {*jcc_1}
     (nil)
 -> 58)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 71 72 73 74 75 76 77 78 90 91 92 93 94
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 config+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 0 ax [orig:70 D.4969 ] [70])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [90])
        (nil)))
(insn 64 63 65 8 (set (reg:SI 1 dx [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 n+0 S4 A32])) mSector.c:72 89 {*movsi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 1 dx [orig:71 D.4971 ] [71])
        (sign_extend:DI (reg:SI 1 dx [91]))) mSector.c:72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [91])
        (nil)))
(insn 66 65 67 8 (parallel [
            (set (reg:DI 1 dx [orig:72 D.4971 ] [72])
                (ashift:DI (reg:DI 1 dx [orig:71 D.4971 ] [71])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:71 D.4971 ] [71])
        (nil)))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.4969 ] [73])
                (plus:DI (reg/f:DI 0 ax [orig:70 D.4969 ] [70])
                    (reg:DI 1 dx [orig:72 D.4971 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.4971 ] [72])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.4969 ] [70])
            (nil))))
(insn 68 67 122 8 (set (reg/f:DI 0 ax [orig:74 D.4972 ] [74])
        (mem/f:DI (reg/f:DI 0 ax [orig:73 D.4969 ] [73]) [0 *_22+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.4969 ] [73])
        (nil)))
(insn 122 68 70 8 (set (reg/f:DI 3 bx [orig:75 D.4972 ] [75])
        (plus:DI (reg/f:DI 0 ax [orig:74 D.4972 ] [74])
            (const_int 16 [0x10]))) mSector.c:72 267 {*leadi}
     (nil))
(insn 70 122 123 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 273 {*addsi_1}
     (nil))
(insn 123 70 72 8 (set (reg:DI 1 dx [92])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mSector.c:72 267 {*leadi}
     (nil))
(insn 72 123 73 8 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [0 i+0 S4 A32])) mSector.c:72 89 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:DI 0 ax [93])
        (sign_extend:DI (reg:SI 0 ax [94]))) mSector.c:72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [94])
        (nil)))
(insn 74 73 75 8 (parallel [
            (set (reg/f:DI 0 ax [orig:76 D.4970 ] [76])
                (plus:DI (reg:DI 0 ax [93])
                    (reg:DI 1 dx [92])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [93])
        (expr_list:REG_DEAD (reg:DI 1 dx [92])
            (nil))))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:76 D.4970 ] [76])) mSector.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:76 D.4970 ] [76])
        (nil)))
(call_insn/i 76 75 77 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:72 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 8 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 %sfp+-560 S8 A64])
        (reg:DF 21 xmm0)) mSector.c:72 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 78 77 79 8 (set (reg:XF 8 st [orig:78 D.4974 ] [78])
        (float_extend:XF (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -560 [0xfffffffffffffdd0])) [0 %sfp+-560 S8 A64]))) mSector.c:72 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 77 [ D.4973 ])
        (nil)))
(insn 79 78 80 8 (set (mem:XF (reg/f:DI 3 bx [orig:75 D.4972 ] [75]) [0 *_24+0 S16 A128])
        (reg:XF 8 st [orig:78 D.4974 ] [78])) mSector.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:78 D.4974 ] [78])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:75 D.4972 ] [75])
            (nil))))
(insn 80 79 81 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -544 [0xfffffffffffffde0])) [0 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -544 [0xfffffffffffffde0])) [0 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 273 {*addsi_1}
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 95 96
(code_label 81 80 82 9 31 "" [1 uses])
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 121 9 (set (reg:DI 1 dx [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mSector.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 121 83 86 9 (set (reg:DI 0 ax [96])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -528 [0xfffffffffffffdf0]))) mSector.c:69 267 {*leadi}
     (nil))
(insn 86 121 87 9 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mSector.c:69 89 {*movsi_internal}
     (nil))
(insn 87 86 88 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [96])) mSector.c:69 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(call_insn 88 87 91 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f44d2aa0300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mSector.c:69 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 91 88 92 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:61 D.4970 ] [61])
            (const_int 0 [0]))) mSector.c:69 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.4970 ] [61])
        (nil)))
(jump_insn 92 91 93 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mSector.c:69 612 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       5
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79 80 97
(note 93 92 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 rstream+0 S8 A64])) mSector.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) mSector.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [97])
        (nil)))
(call_insn 96 95 97 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f44d2a83f00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mSector.c:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 97 96 107 10 (set (reg:SI 0 ax [orig:79 D.4968 ] [79])
        (const_int 1 [0x1])) mSector.c:75 89 {*movsi_internal}
     (nil))
(insn 107 97 108 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.4976+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [100]))
        ]) mSector.c:94 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 2 cx [100])
        (nil)))
(jump_insn 108 107 115 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:94 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       12
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 115 108 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 109 115 110 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f44d2852000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mSector.c:94 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 110 109 111)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 111 110 116 12 36 "" [1 uses])
(note 116 111 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 116 0 12 (use (reg/i:SI 0 ax)) mSector.c:94 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function cheak_traj_intersect_bound (cheak_traj_intersect_bound, funcdef_no=6, decl_uid=1874, cgraph_uid=6)

deleting insn with uid = 115.
deleting insn with uid = 119.
deleting insn with uid = 81.
deleting insn with uid = 26.
deleting insn with uid = 49.
deleting insn with uid = 53.


cheak_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={30d,28u} r1={12d,10u,4e} r2={9d,5u} r4={8d,5u} r5={7d,4u} r6={1d,47u} r7={1d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={29d,6u} r18={3d} r19={3d} r20={1d,1u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 354{222d,126u,6e} in 76{73 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mSector.c:96 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ Nflight ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 125 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:98 89 {*movsi_internal}
     (nil))
(jump_insn 125 7 126 2 (set (pc)
        (label_ref 105)) mSector.c:98 650 {jump}
     (nil)
 -> 105)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 126 125 107)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 107 126 10 3 47 "" [1 uses])
(note 10 107 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 89 {*movsi_internal}
     (nil))
(insn 12 11 127 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 89 {*movsi_internal}
     (nil))
(jump_insn 127 12 128 3 (set (pc)
        (label_ref 73)) mSector.c:99 650 {jump}
     (nil)
 -> 73)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 128 127 86)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 86 128 15 4 44 "" [1 uses])
(note 15 86 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 129 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:100 89 {*movsi_internal}
     (nil))
(jump_insn 129 16 130 4 (set (pc)
        (label_ref 63)) mSector.c:100 650 {jump}
     (nil)
 -> 63)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 130 129 67)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 87 88 89 90 91 92 93
(code_label 67 130 19 5 43 "" [1 uses])
(note 19 67 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 0 ax [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:DI 1 dx [orig:65 D.4983 ] [65])
        (sign_extend:DI (reg:SI 0 ax [87]))) mSector.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [87])
        (nil)))
(insn 22 21 23 5 (set (reg:DI 0 ax [88])
        (reg:DI 1 dx [orig:65 D.4983 ] [65])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:DI 0 ax [88])
                (ashift:DI (reg:DI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:DI 0 ax [88])
                (plus:DI (reg:DI 0 ax [88])
                    (reg:DI 1 dx [orig:65 D.4983 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.4983 ] [65])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:65 D.4983 ] [65])
                (const_int 5 [0x5]))
            (nil))))
(insn 25 24 27 5 (parallel [
            (set (reg:DI 0 ax [89])
                (ashift:DI (reg:DI 0 ax [88])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(insn 27 25 28 5 (set (reg:DI 1 dx [orig:66 D.4983 ] [66])
        (reg:DI 0 ax [88])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(insn 28 27 29 5 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.4984 ] [67])
                (plus:DI (reg/f:DI 0 ax [90])
                    (reg:DI 1 dx [orig:66 D.4983 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [90])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.4983 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.4983 ] [66]))
                (nil)))))
(insn 30 29 31 5 (set (reg/f:DI 0 ax [orig:68 D.4986 ] [68])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:67 D.4984 ] [67])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.4984 ] [67])
        (nil)))
(insn 31 30 32 5 (set (reg:SI 1 dx [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:DI 1 dx [orig:69 D.4983 ] [69])
        (sign_extend:DI (reg:SI 1 dx [91]))) mSector.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [91])
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 1 dx [orig:70 D.4983 ] [70])
                (ashift:DI (reg:DI 1 dx [orig:69 D.4983 ] [69])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.4983 ] [69])
        (nil)))
(insn 34 33 35 5 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.4986 ] [71])
                (plus:DI (reg/f:DI 0 ax [orig:68 D.4986 ] [68])
                    (reg:DI 1 dx [orig:70 D.4983 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.4983 ] [70])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.4986 ] [68])
            (nil))))
(insn 35 34 36 5 (set (reg/f:DI 1 dx [orig:72 D.4987 ] [72])
        (mem/f:DI (reg/f:DI 0 ax [orig:71 D.4986 ] [71]) [0 *_24+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.4986 ] [71])
        (nil)))
(insn 36 35 37 5 (set (reg/f:DI 0 ax [orig:73 D.4986 ] [73])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 config.bound+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 5 (set (reg:SI 2 cx [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 2 cx [orig:74 D.4988 ] [74])
        (sign_extend:DI (reg:SI 2 cx [92]))) mSector.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [92])
        (nil)))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 2 cx [orig:75 D.4988 ] [75])
                (plus:DI (reg:DI 2 cx [orig:74 D.4988 ] [74])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:74 D.4988 ] [74])
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 2 cx [orig:76 D.4988 ] [76])
                (ashift:DI (reg:DI 2 cx [orig:75 D.4988 ] [75])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:75 D.4988 ] [75])
        (nil)))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 0 ax [orig:77 D.4986 ] [77])
                (plus:DI (reg/f:DI 0 ax [orig:73 D.4986 ] [73])
                    (reg:DI 2 cx [orig:76 D.4988 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:76 D.4988 ] [76])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.4986 ] [73])
            (nil))))
(insn 42 41 43 5 (set (reg/f:DI 2 cx [orig:78 D.4987 ] [78])
        (mem/f:DI (reg/f:DI 0 ax [orig:77 D.4986 ] [77]) [0 *_30+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 D.4986 ] [77])
        (nil)))
(insn 43 42 44 5 (set (reg/f:DI 0 ax [orig:79 D.4986 ] [79])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 config.bound+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg:SI 4 si [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 4 si [orig:80 D.4983 ] [80])
        (sign_extend:DI (reg:SI 4 si [93]))) mSector.c:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 4 si [93])
        (nil)))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 4 si [orig:81 D.4983 ] [81])
                (ashift:DI (reg:DI 4 si [orig:80 D.4983 ] [80])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:80 D.4983 ] [80])
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (reg/f:DI 0 ax [orig:82 D.4986 ] [82])
                (plus:DI (reg/f:DI 0 ax [orig:79 D.4986 ] [79])
                    (reg:DI 4 si [orig:81 D.4983 ] [81])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:81 D.4983 ] [81])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.4986 ] [79])
            (nil))))
(insn 48 47 50 5 (set (reg/f:DI 0 ax [orig:83 D.4987 ] [83])
        (mem/f:DI (reg/f:DI 0 ax [orig:82 D.4986 ] [82]) [0 *_35+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.4986 ] [82])
        (nil)))
(insn 50 48 51 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:78 D.4987 ] [78])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:78 D.4987 ] [78])
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 D.4987 ] [83])) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 D.4987 ] [83])
        (nil)))
(call_insn 52 51 54 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:101 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 54 52 55 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 D.4985 ] [84])
            (const_int 0 [0]))) mSector.c:101 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 D.4985 ] [84])
        (nil)))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) mSector.c:101 612 {*jcc_1}
     (nil)
 -> 60)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 131 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:102 273 {*addsi_1}
     (nil))
(jump_insn 131 57 132 6 (set (pc)
        (label_ref 70)) mSector.c:103 650 {jump}
     (nil)
 -> 70)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 132 131 60)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 60 132 61 7 41 "" [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64
(code_label 63 62 64 8 40 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:SI 0 ax [orig:63 D.4985 ] [63])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 config.Nbound+0 S4 A128])) mSector.c:100 89 {*movsi_internal}
     (nil))
(insn 66 65 68 8 (parallel [
            (set (reg:SI 0 ax [orig:64 D.4985 ] [64])
                (plus:SI (reg:SI 0 ax [orig:63 D.4985 ] [63])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.4985 ] [63])
        (nil)))
(insn 68 66 69 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:64 D.4985 ] [64])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:100 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.4985 ] [64])
        (nil)))
(jump_insn 69 68 70 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:100 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 70 69 71 9 42 "" [1 uses])
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 94 95 96 97
(code_label 73 72 74 10 39 "" [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:99 89 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (reg:DI 1 dx [orig:59 D.4983 ] [59])
        (sign_extend:DI (reg:SI 0 ax [94]))) mSector.c:99 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [94])
        (nil)))
(insn 77 76 78 10 (set (reg:DI 0 ax [95])
        (reg:DI 1 dx [orig:59 D.4983 ] [59])) mSector.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 10 (parallel [
            (set (reg:DI 0 ax [95])
                (ashift:DI (reg:DI 0 ax [95])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 513 {*ashldi3_1}
     (nil))
(insn 79 78 80 10 (parallel [
            (set (reg:DI 0 ax [95])
                (plus:DI (reg:DI 0 ax [95])
                    (reg:DI 1 dx [orig:59 D.4983 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.4983 ] [59])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:59 D.4983 ] [59])
                (const_int 5 [0x5]))
            (nil))))
(insn 80 79 82 10 (parallel [
            (set (reg:DI 0 ax [96])
                (ashift:DI (reg:DI 0 ax [95])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [95])
        (nil)))
(insn 82 80 83 10 (set (reg:DI 1 dx [orig:60 D.4983 ] [60])
        (reg:DI 0 ax [95])) mSector.c:99 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [95])
        (nil)))
(insn 83 82 84 10 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 10 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.4984 ] [61])
                (plus:DI (reg/f:DI 0 ax [97])
                    (reg:DI 1 dx [orig:60 D.4983 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.4983 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.4983 ] [60]))
                (nil)))))
(insn 85 84 87 10 (set (reg:SI 0 ax [orig:62 D.4985 ] [62])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:61 D.4984 ] [61])
                (const_int 4 [0x4])) [0 _13->n_nvp+0 S4 A32])) mSector.c:99 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.4984 ] [61])
        (nil)))
(insn 87 85 88 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:62 D.4985 ] [62])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:99 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.4985 ] [62])
        (nil)))
(jump_insn 88 87 89 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mSector.c:99 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       4
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:105 7 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) mSector.c:105 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f44d2858ab0 *.LC7>)) mSector.c:105 87 {*movdi_internal_rex64}
     (nil))
(call_insn 94 93 95 12 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:105 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 95 94 96 13 45 "" [1 uses])
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 2 [0x2]))) mSector.c:107 7 {*cmpsi_1}
     (nil))
(jump_insn 98 97 99 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) mSector.c:107 612 {*jcc_1}
     (nil)
 -> 102)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f44d2858b48 *.LC8>)) mSector.c:107 87 {*movdi_internal_rex64}
     (nil))
(call_insn 101 100 102 14 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:107 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 102 101 103 15 46 "" [1 uses])
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:98 273 {*addsi_1}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98
(code_label 105 104 106 16 38 "" [1 uses])
(note 106 105 108 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 109 16 (set (reg:SI 0 ax [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:98 89 {*movsi_internal}
     (nil))
(insn 109 108 110 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [98])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32]))) mSector.c:98 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [98])
        (nil)))
(jump_insn 110 109 111 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mSector.c:98 612 {*jcc_1}
     (nil)
 -> 107)
;;  succ:       3
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 85 86
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 122 17 (set (reg:SI 0 ax [orig:85 D.4985 ] [85])
        (const_int 1 [0x1])) mSector.c:109 89 {*movsi_internal}
     (nil))
(insn 122 112 0 17 (use (reg/i:SI 0 ax)) mSector.c:110 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function init_traj_intersect_bound (init_traj_intersect_bound, funcdef_no=7, decl_uid=1878, cgraph_uid=7)

deleting insn with uid = 124.
deleting insn with uid = 128.
deleting insn with uid = 101.
deleting insn with uid = 102.
deleting insn with uid = 66.
deleting insn with uid = 67.
scanning new insn with uid = 142.
deleting insn with uid = 70.
deleting insn with uid = 70.
scanning new insn with uid = 143.
deleting insn with uid = 73.
deleting insn with uid = 73.
deleting insn with uid = 28.
deleting insn with uid = 29.
deleting insn with uid = 50.
deleting insn with uid = 54.


init_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={37d,38u,1e} r1={11d,12u,3e} r2={11d,9u} r4={6d,5u} r5={3d,2u} r6={1d,46u} r7={1d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={29d,5u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 285{148d,133u,4e} in 85{84 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32])
        (reg:SI 4 si [ Nfligth ])) mSector.c:112 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ Nfligth ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 134 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:115 89 {*movsi_internal}
     (nil))
(jump_insn 134 7 135 2 (set (pc)
        (label_ref 114)) mSector.c:115 650 {jump}
     (nil)
 -> 114)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 135 134 116)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 116 135 10 3 58 "" [1 uses])
(note 10 116 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 89 {*movsi_internal}
     (nil))
(insn 12 11 136 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 89 {*movsi_internal}
     (nil))
(jump_insn 136 12 137 3 (set (pc)
        (label_ref 91)) mSector.c:116 650 {jump}
     (nil)
 -> 91)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 137 136 108)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 108 137 15 4 57 "" [1 uses])
(note 15 108 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 138 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:117 89 {*movsi_internal}
     (nil))
(jump_insn 138 16 139 4 (set (pc)
        (label_ref 81)) mSector.c:117 650 {jump}
     (nil)
 -> 81)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 139 138 85)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 94 95 96 97 98 99 100
(code_label 85 139 19 5 55 "" [1 uses])
(note 19 85 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 2 cx [orig:66 D.4991 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [94]) [0 *flight_10(D)+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (nil)))
(insn 22 21 23 5 (set (reg:SI 0 ax [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 1 dx [orig:67 D.4992 ] [67])
        (sign_extend:DI (reg:SI 0 ax [95]))) mSector.c:118 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [95])
        (nil)))
(insn 24 23 25 5 (set (reg:DI 0 ax [96])
        (reg:DI 1 dx [orig:67 D.4992 ] [67])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 0 ax [96])
                (ashift:DI (reg:DI 0 ax [96])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 0 ax [96])
                (plus:DI (reg:DI 0 ax [96])
                    (reg:DI 1 dx [orig:67 D.4992 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:67 D.4992 ] [67])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:67 D.4992 ] [67])
                (const_int 5 [0x5]))
            (nil))))
(insn 27 26 30 5 (parallel [
            (set (reg:DI 0 ax [97])
                (ashift:DI (reg:DI 0 ax [96])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(insn 30 27 31 5 (parallel [
            (set (reg/f:DI 0 ax [orig:69 D.4991 ] [69])
                (plus:DI (reg:DI 0 ax [orig:68 D.4992 ] [68])
                    (reg/f:DI 2 cx [orig:66 D.4991 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:68 D.4992 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:66 D.4991 ] [66])
            (nil))))
(insn 31 30 32 5 (set (reg/f:DI 0 ax [orig:70 D.4994 ] [70])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:69 D.4991 ] [69])
                (const_int 8 [0x8])) [0 _22->nvp+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.4991 ] [69])
        (nil)))
(insn 32 31 33 5 (set (reg:SI 1 dx [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 1 dx [orig:71 D.4992 ] [71])
        (sign_extend:DI (reg:SI 1 dx [98]))) mSector.c:118 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [98])
        (nil)))
(insn 34 33 35 5 (parallel [
            (set (reg:DI 1 dx [orig:72 D.4992 ] [72])
                (ashift:DI (reg:DI 1 dx [orig:71 D.4992 ] [71])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:71 D.4992 ] [71])
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.4994 ] [73])
                (plus:DI (reg/f:DI 0 ax [orig:70 D.4994 ] [70])
                    (reg:DI 1 dx [orig:72 D.4992 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.4992 ] [72])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.4994 ] [70])
            (nil))))
(insn 36 35 37 5 (set (reg/f:DI 1 dx [orig:74 D.4995 ] [74])
        (mem/f:DI (reg/f:DI 0 ax [orig:73 D.4994 ] [73]) [0 *_26+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.4994 ] [73])
        (nil)))
(insn 37 36 38 5 (set (reg/f:DI 0 ax [orig:75 D.4994 ] [75])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 config.bound+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:SI 2 cx [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:DI 2 cx [orig:76 D.4996 ] [76])
        (sign_extend:DI (reg:SI 2 cx [99]))) mSector.c:118 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [99])
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 2 cx [orig:77 D.4996 ] [77])
                (plus:DI (reg:DI 2 cx [orig:76 D.4996 ] [76])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:76 D.4996 ] [76])
        (nil)))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 2 cx [orig:78 D.4996 ] [78])
                (ashift:DI (reg:DI 2 cx [orig:77 D.4996 ] [77])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:77 D.4996 ] [77])
        (nil)))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 0 ax [orig:79 D.4994 ] [79])
                (plus:DI (reg/f:DI 0 ax [orig:75 D.4994 ] [75])
                    (reg:DI 2 cx [orig:78 D.4996 ] [78])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:78 D.4996 ] [78])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.4994 ] [75])
            (nil))))
(insn 43 42 44 5 (set (reg/f:DI 2 cx [orig:80 D.4995 ] [80])
        (mem/f:DI (reg/f:DI 0 ax [orig:79 D.4994 ] [79]) [0 *_32+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.4994 ] [79])
        (nil)))
(insn 44 43 45 5 (set (reg/f:DI 0 ax [orig:81 D.4994 ] [81])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 config.bound+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:SI 4 si [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 4 si [orig:82 D.4992 ] [82])
        (sign_extend:DI (reg:SI 4 si [100]))) mSector.c:118 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 4 si [100])
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 4 si [orig:83 D.4992 ] [83])
                (ashift:DI (reg:DI 4 si [orig:82 D.4992 ] [82])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:82 D.4992 ] [82])
        (nil)))
(insn 48 47 49 5 (parallel [
            (set (reg/f:DI 0 ax [orig:84 D.4994 ] [84])
                (plus:DI (reg/f:DI 0 ax [orig:81 D.4994 ] [81])
                    (reg:DI 4 si [orig:83 D.4992 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:83 D.4992 ] [83])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 D.4994 ] [81])
            (nil))))
(insn 49 48 51 5 (set (reg/f:DI 0 ax [orig:85 D.4995 ] [85])
        (mem/f:DI (reg/f:DI 0 ax [orig:84 D.4994 ] [84]) [0 *_37+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 D.4994 ] [84])
        (nil)))
(insn 51 49 52 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:80 D.4995 ] [80])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:80 D.4995 ] [80])
        (nil)))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 D.4995 ] [85])) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 D.4995 ] [85])
        (nil)))
(call_insn 53 52 55 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:118 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 55 53 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 D.4993 ] [86])
            (const_int 0 [0]))) mSector.c:118 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 D.4993 ] [86])
        (nil)))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) mSector.c:118 612 {*jcc_1}
     (nil)
 -> 78)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 101 102 103 104 105 106 107 108
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 6 (set (reg/f:DI 2 cx [orig:87 D.4991 ] [87])
        (mem/f:DI (reg/f:DI 0 ax [101]) [0 *flight_10(D)+0 S8 A64])) mSector.c:119 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [101])
        (nil)))
(insn 60 59 61 6 (set (reg:SI 0 ax [102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:DI 1 dx [orig:88 D.4992 ] [88])
        (sign_extend:DI (reg:SI 0 ax [102]))) mSector.c:119 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [102])
        (nil)))
(insn 62 61 63 6 (set (reg:DI 0 ax [103])
        (reg:DI 1 dx [orig:88 D.4992 ] [88])) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 0 ax [103])
                (ashift:DI (reg:DI 0 ax [103])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 513 {*ashldi3_1}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 0 ax [103])
                (plus:DI (reg:DI 0 ax [103])
                    (reg:DI 1 dx [orig:88 D.4992 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:88 D.4992 ] [88])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:88 D.4992 ] [88])
                (const_int 5 [0x5]))
            (nil))))
(insn 65 64 68 6 (parallel [
            (set (reg:DI 0 ax [104])
                (ashift:DI (reg:DI 0 ax [103])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [103])
        (nil)))
(insn 68 65 69 6 (parallel [
            (set (reg/f:DI 2 cx [orig:90 D.4991 ] [90])
                (plus:DI (reg/f:DI 2 cx [orig:87 D.4991 ] [87])
                    (reg:DI 0 ax [orig:89 D.4992 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:89 D.4992 ] [89])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:87 D.4991 ] [87])
            (nil))))
(insn 69 68 142 6 (set (reg:SI 0 ax [orig:91 c.0 ] [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 142 69 71 6 (set (reg:SI 1 dx [105])
        (plus:SI (reg:SI 0 ax [orig:91 c.0 ] [91])
            (const_int 1 [0x1]))) mSector.c:119 266 {*leasi}
     (nil))
(insn 71 142 72 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (reg:SI 1 dx [105])) mSector.c:119 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [105])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:91 c.0 ] [91])
                (const_int 1 [0x1]))
            (nil))))
(insn 72 71 143 6 (set (reg:DI 0 ax [106])
        (sign_extend:DI (reg:SI 0 ax [orig:91 c.0 ] [91]))) mSector.c:119 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:91 c.0 ] [91])
        (nil)))
(insn 143 72 74 6 (set (reg:DI 1 dx [107])
        (plus:DI (reg:DI 0 ax [106])
            (const_int 28 [0x1c]))) mSector.c:119 267 {*leadi}
     (nil))
(insn 74 143 75 6 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 75 74 140 6 (set (mem/j:SI (plus:DI (mult:DI (reg:DI 1 dx [107])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [orig:90 D.4991 ] [90])) [0 _43->bound S4 A32])
        (reg:SI 0 ax [108])) mSector.c:119 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [108])
        (expr_list:REG_DEAD (reg:DI 1 dx [107])
            (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:90 D.4991 ] [90])
                (nil)))))
(jump_insn 140 75 141 6 (set (pc)
        (label_ref 88)) mSector.c:120 650 {jump}
     (nil)
 -> 88)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 141 140 78)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 78 141 79 7 53 "" [1 uses])
(note 79 78 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65
(code_label 81 80 82 8 52 "" [1 uses])
(note 82 81 83 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 8 (set (reg:SI 0 ax [orig:64 D.4993 ] [64])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 config.Nbound+0 S4 A128])) mSector.c:117 89 {*movsi_internal}
     (nil))
(insn 84 83 86 8 (parallel [
            (set (reg:SI 0 ax [orig:65 D.4993 ] [65])
                (plus:SI (reg:SI 0 ax [orig:64 D.4993 ] [64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.4993 ] [64])
        (nil)))
(insn 86 84 87 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:65 D.4993 ] [65])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:117 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.4993 ] [65])
        (nil)))
(jump_insn 87 86 88 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) mSector.c:117 612 {*jcc_1}
     (nil)
 -> 85)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 88 87 89 9 54 "" [1 uses])
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 63 109 110 111 112
(code_label 91 90 92 10 51 "" [1 uses])
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg/f:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 10 (set (reg/f:DI 2 cx [orig:59 D.4991 ] [59])
        (mem/f:DI (reg/f:DI 0 ax [109]) [0 *flight_10(D)+0 S8 A64])) mSector.c:116 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [109])
        (nil)))
(insn 95 94 96 10 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:116 89 {*movsi_internal}
     (nil))
(insn 96 95 97 10 (set (reg:DI 1 dx [orig:60 D.4992 ] [60])
        (sign_extend:DI (reg:SI 0 ax [110]))) mSector.c:116 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [110])
        (nil)))
(insn 97 96 98 10 (set (reg:DI 0 ax [111])
        (reg:DI 1 dx [orig:60 D.4992 ] [60])) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:DI 0 ax [111])
                (ashift:DI (reg:DI 0 ax [111])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 513 {*ashldi3_1}
     (nil))
(insn 99 98 100 10 (parallel [
            (set (reg:DI 0 ax [111])
                (plus:DI (reg:DI 0 ax [111])
                    (reg:DI 1 dx [orig:60 D.4992 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.4992 ] [60])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:60 D.4992 ] [60])
                (const_int 5 [0x5]))
            (nil))))
(insn 100 99 103 10 (parallel [
            (set (reg:DI 0 ax [112])
                (ashift:DI (reg:DI 0 ax [111])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [111])
        (nil)))
(insn 103 100 104 10 (parallel [
            (set (reg/f:DI 0 ax [orig:62 D.4991 ] [62])
                (plus:DI (reg:DI 0 ax [orig:61 D.4992 ] [61])
                    (reg/f:DI 2 cx [orig:59 D.4991 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.4992 ] [61])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:59 D.4991 ] [59])
            (nil))))
(insn 104 103 105 10 (set (reg:SI 0 ax [orig:63 D.4993 ] [63])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:62 D.4991 ] [62])
                (const_int 4 [0x4])) [0 _14->n_nvp+0 S4 A32])) mSector.c:116 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.4991 ] [62])
        (nil)))
(insn 105 104 106 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:63 D.4993 ] [63])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:116 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.4993 ] [63])
        (nil)))
(jump_insn 106 105 107 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:116 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 107 106 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 109 107 110 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:116 7 {*cmpsi_1}
     (nil))
(jump_insn 110 109 111 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) mSector.c:116 612 {*jcc_1}
     (nil)
 -> 108)
;;  succ:       4
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 111 110 112 12 56 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:115 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 113
(code_label 114 113 115 13 50 "" [1 uses])
(note 115 114 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 13 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:115 89 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [113])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32]))) mSector.c:115 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [113])
        (nil)))
(jump_insn 119 118 120 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:115 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       3
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 92 93
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 131 14 (set (reg:SI 0 ax [orig:92 D.4993 ] [92])
        (const_int 1 [0x1])) mSector.c:122 89 {*movsi_internal}
     (nil))
(insn 131 121 0 14 (use (reg/i:SI 0 ax)) mSector.c:123 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function remove_aircraft (remove_aircraft, funcdef_no=8, decl_uid=1904, cgraph_uid=8)

scanning new insn with uid = 105.
deleting insn with uid = 85.
deleting insn with uid = 85.
deleting insn with uid = 91.
deleting insn with uid = 95.
scanning new insn with uid = 106.
deleting insn with uid = 39.
deleting insn with uid = 39.
deleting insn with uid = 46.
scanning new insn with uid = 107.
deleting insn with uid = 49.
deleting insn with uid = 49.
deleting insn with uid = 58.
deleting insn with uid = 59.
deleting insn with uid = 16.
deleting insn with uid = 17.
deleting insn with uid = 20.


remove_aircraft

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={35d,34u,1e} r1={12d,12u,3e} r2={7d,4u} r4={7d,4u} r5={9d,6u} r6={1d,33u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={18d,3u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 328{215d,109u,4e} in 69{66 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 77 78 79 80
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])
        (reg:DI 5 di [ fligth ])) mSector.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ fligth ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])
        (reg:DI 4 si [ Nfligth ])) mSector.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ Nfligth ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32])
        (reg:SI 1 dx [ sel ])) mSector.c:125 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ sel ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:59 D.4997 ] [59])
        (mem:SI (reg/f:DI 0 ax [77]) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:126 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:60 D.4997 ] [60])
                (plus:SI (reg:SI 0 ax [orig:59 D.4997 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.4997 ] [59])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx [orig:61 D.4998 ] [61])
        (sign_extend:DI (reg:SI 0 ax [orig:60 D.4997 ] [60]))) mSector.c:126 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.4997 ] [60])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 0 ax [78])
        (reg:DI 1 dx [orig:61 D.4998 ] [61])) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 0 ax [78])
                (ashift:DI (reg:DI 0 ax [78])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 513 {*ashldi3_1}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 0 ax [78])
                (plus:DI (reg:DI 0 ax [78])
                    (reg:DI 1 dx [orig:61 D.4998 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.4998 ] [61])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:61 D.4998 ] [61])
                (const_int 5 [0x5]))
            (nil))))
(insn 15 14 18 2 (parallel [
            (set (reg:DI 0 ax [79])
                (ashift:DI (reg:DI 0 ax [78])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [78])
        (nil)))
(insn 18 15 19 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:62 D.4998 ] [62])) mSector.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.4998 ] [62])
        (nil)))
(call_insn 19 18 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:126 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 19 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
        (reg/f:DI 0 ax [80])) mSector.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (nil)))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (const_int 0 [0]))) mSector.c:127 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) mSector.c:127 612 {*jcc_1}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f44d286ced8 *.LC9>)) mSector.c:127 87 {*movdi_internal_rex64}
     (nil))
(call_insn 26 25 27 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:127 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 28 4 61 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 30 29 101 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 89 {*movsi_internal}
     (nil))
(jump_insn 101 30 102 4 (set (pc)
        (label_ref 68)) mSector.c:129 650 {jump}
     (nil)
 -> 68)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 102 101 72)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 81
(code_label 72 102 33 5 64 "" [1 uses])
(note 33 72 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 0 ax [81])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [81])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32]))) mSector.c:129 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [81])
        (nil)))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) mSector.c:129 612 {*jcc_1}
     (nil)
 -> 65)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66 67 68 69 70 71 82 83 84 85 86 87 88 89 90 91 92
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 106 6 (set (reg:SI 0 ax [orig:64 h.1 ] [64])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 106 38 40 6 (set (reg:SI 1 dx [82])
        (plus:SI (reg:SI 0 ax [orig:64 h.1 ] [64])
            (const_int 1 [0x1]))) mSector.c:129 266 {*leasi}
     (nil))
(insn 40 106 41 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (reg:SI 1 dx [82])) mSector.c:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [82])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:64 h.1 ] [64])
                (const_int 1 [0x1]))
            (nil))))
(insn 41 40 42 6 (set (reg:DI 1 dx [orig:65 D.4998 ] [65])
        (sign_extend:DI (reg:SI 0 ax [orig:64 h.1 ] [64]))) mSector.c:129 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 h.1 ] [64])
        (nil)))
(insn 42 41 43 6 (set (reg:DI 0 ax [83])
        (reg:DI 1 dx [orig:65 D.4998 ] [65])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 0 ax [83])
                (ashift:DI (reg:DI 0 ax [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 0 ax [83])
                (plus:DI (reg:DI 0 ax [83])
                    (reg:DI 1 dx [orig:65 D.4998 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.4998 ] [65])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:65 D.4998 ] [65])
                (const_int 5 [0x5]))
            (nil))))
(insn 45 44 47 6 (parallel [
            (set (reg:DI 0 ax [84])
                (ashift:DI (reg:DI 0 ax [83])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 47 45 48 6 (set (reg:DI 1 dx [orig:66 D.4998 ] [66])
        (reg:DI 0 ax [83])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 48 47 107 6 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 107 48 50 6 (set (reg/f:DI 4 si [orig:67 D.4999 ] [67])
        (plus:DI (reg:DI 1 dx [orig:66 D.4998 ] [66])
            (reg/f:DI 0 ax [85]))) mSector.c:129 267 {*leadi}
     (nil))
(insn 50 107 51 6 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 6 (set (reg/f:DI 2 cx [orig:68 D.4999 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [86]) [0 *fligth_19(D)+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [86])
        (nil)))
(insn 52 51 53 6 (set (reg:SI 0 ax [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 1 dx [orig:69 D.4998 ] [69])
        (sign_extend:DI (reg:SI 0 ax [87]))) mSector.c:129 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [87])
        (nil)))
(insn 54 53 55 6 (set (reg:DI 0 ax [88])
        (reg:DI 1 dx [orig:69 D.4998 ] [69])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 0 ax [88])
                (ashift:DI (reg:DI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 0 ax [88])
                (plus:DI (reg:DI 0 ax [88])
                    (reg:DI 1 dx [orig:69 D.4998 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.4998 ] [69])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:69 D.4998 ] [69])
                (const_int 5 [0x5]))
            (nil))))
(insn 57 56 60 6 (parallel [
            (set (reg:DI 0 ax [89])
                (ashift:DI (reg:DI 0 ax [88])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(insn 60 57 61 6 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.4999 ] [71])
                (plus:DI (reg:DI 0 ax [orig:70 D.4998 ] [70])
                    (reg/f:DI 2 cx [orig:68 D.4999 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 D.4998 ] [70])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:68 D.4999 ] [68])
            (nil))))
(insn 61 60 62 6 (set (reg:DI 1 dx [90])
        (reg/f:DI 4 si [orig:67 D.4999 ] [67])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:67 D.4999 ] [67])
        (nil)))
(insn 62 61 63 6 (set (reg:DI 4 si [91])
        (reg/f:DI 0 ax [orig:71 D.4999 ] [71])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.4999 ] [71])
        (nil)))
(insn 63 62 103 6 (set (reg:DI 0 ax [92])
        (const_int 20 [0x14])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 103 63 104 6 (set (reg:DI 5 di [90])
        (reg:DI 1 dx [90])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [90])
        (nil)))
(insn 104 103 64 6 (set (reg:DI 2 cx [92])
        (reg:DI 0 ax [92])) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(insn 64 104 65 6 (parallel [
            (set (reg:DI 2 cx [92])
                (const_int 0 [0]))
            (set (reg:DI 5 di [90])
                (plus:DI (ashift:DI (reg:DI 2 cx [92])
                        (const_int 3 [0x3]))
                    (reg:DI 5 di [90])))
            (set (reg:DI 4 si [91])
                (plus:DI (ashift:DI (reg:DI 2 cx [92])
                        (const_int 3 [0x3]))
                    (reg:DI 4 si [91])))
            (set (mem:BLK (reg:DI 5 di [90]) [0 *_18+0 S160 A128])
                (mem:BLK (reg:DI 4 si [91]) [0 *_23+0 S160 A128]))
            (use (reg:DI 2 cx [92]))
        ]) mSector.c:129 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 2 cx [92])
        (expr_list:REG_UNUSED (reg:DI 5 di [90])
            (expr_list:REG_UNUSED (reg:DI 4 si [91])
                (nil)))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 65 64 66 7 63 "" [1 uses])
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 93
(code_label 68 67 69 8 62 "" [1 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 73 8 (set (reg:SI 0 ax [orig:63 D.4997 ] [63])
        (mem:SI (reg/f:DI 0 ax [93]) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (nil)))
(insn 73 71 74 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:63 D.4997 ] [63])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32]))) mSector.c:129 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.4997 ] [63])
        (nil)))
(jump_insn 74 73 75 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) mSector.c:129 612 {*jcc_1}
     (nil)
 -> 72)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 72 73 74 75 76 94 95 96 97 98
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 9 (set (reg/f:DI 0 ax [orig:72 D.4999 ] [72])
        (mem/f:DI (reg/f:DI 0 ax [94]) [0 *fligth_19(D)+0 S8 A64])) mSector.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (nil)))
(insn 78 77 79 9 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:72 D.4999 ] [72])) mSector.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 D.4999 ] [72])
        (nil)))
(call_insn 79 78 80 9 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:130 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 9 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 9 (set (reg/f:DI 1 dx [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 9 (set (mem/f:DI (reg/f:DI 0 ax [95]) [0 *fligth_19(D)+0 S8 A64])
        (reg/f:DI 1 dx [96])) mSector.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [96])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
            (nil))))
(insn 83 82 84 9 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 105 9 (set (reg:SI 0 ax [orig:73 D.4997 ] [73])
        (mem:SI (reg/f:DI 0 ax [97]) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:133 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (nil)))
(insn 105 84 86 9 (set (reg:SI 1 dx [orig:74 D.4997 ] [74])
        (plus:SI (reg:SI 0 ax [orig:73 D.4997 ] [73])
            (const_int -1 [0xffffffffffffffff]))) mSector.c:133 266 {*leasi}
     (nil))
(insn 86 105 87 9 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 9 (set (mem:SI (reg/f:DI 0 ax [98]) [0 *Nfligth_4(D)+0 S4 A32])
        (reg:SI 1 dx [orig:74 D.4997 ] [74])) mSector.c:133 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [98])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:74 D.4997 ] [74])
            (nil))))
(insn 88 87 98 9 (set (reg:SI 0 ax [orig:75 D.4997 ] [75])
        (const_int 1 [0x1])) mSector.c:135 89 {*movsi_internal}
     (nil))
(insn 98 88 0 9 (use (reg/i:SI 0 ax)) mSector.c:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function add_nvp (add_nvp, funcdef_no=9, decl_uid=1886, cgraph_uid=9)

scanning new insn with uid = 259.
deleting insn with uid = 201.
deleting insn with uid = 201.
scanning new insn with uid = 260.
deleting insn with uid = 228.
deleting insn with uid = 228.
scanning new insn with uid = 261.
deleting insn with uid = 233.
deleting insn with uid = 233.
deleting insn with uid = 239.
deleting insn with uid = 243.
scanning new insn with uid = 262.
deleting insn with uid = 153.
deleting insn with uid = 153.
deleting insn with uid = 257.
scanning new insn with uid = 263.
deleting insn with uid = 169.
deleting insn with uid = 169.
scanning new insn with uid = 264.
scanning new insn with uid = 265.
deleting insn with uid = 176.
deleting insn with uid = 176.
scanning new insn with uid = 266.
scanning new insn with uid = 267.
deleting insn with uid = 177.
deleting insn with uid = 177.
scanning new insn with uid = 268.
deleting insn with uid = 86.
deleting insn with uid = 86.
scanning new insn with uid = 269.
deleting insn with uid = 93.
deleting insn with uid = 93.
scanning new insn with uid = 270.
deleting insn with uid = 97.
deleting insn with uid = 97.
scanning new insn with uid = 271.
deleting insn with uid = 101.
deleting insn with uid = 101.
scanning new insn with uid = 272.
scanning new insn with uid = 273.
deleting insn with uid = 105.
deleting insn with uid = 105.
scanning new insn with uid = 274.
scanning new insn with uid = 275.
deleting insn with uid = 106.
deleting insn with uid = 106.
scanning new insn with uid = 276.
deleting insn with uid = 109.
deleting insn with uid = 109.
scanning new insn with uid = 277.
deleting insn with uid = 113.
deleting insn with uid = 113.
scanning new insn with uid = 278.
deleting insn with uid = 117.
deleting insn with uid = 117.
scanning new insn with uid = 279.
scanning new insn with uid = 280.
deleting insn with uid = 121.
deleting insn with uid = 121.
scanning new insn with uid = 281.
scanning new insn with uid = 282.
deleting insn with uid = 122.
deleting insn with uid = 122.
deleting insn with uid = 255.
scanning new insn with uid = 283.
deleting insn with uid = 127.
deleting insn with uid = 127.
scanning new insn with uid = 284.
scanning new insn with uid = 285.
deleting insn with uid = 135.
deleting insn with uid = 135.
scanning new insn with uid = 286.
scanning new insn with uid = 287.
deleting insn with uid = 136.
deleting insn with uid = 136.
scanning new insn with uid = 288.
deleting insn with uid = 73.
deleting insn with uid = 73.
scanning new insn with uid = 289.
deleting insn with uid = 39.
deleting insn with uid = 39.
deleting insn with uid = 253.
scanning new insn with uid = 290.
deleting insn with uid = 54.
deleting insn with uid = 54.
scanning new insn with uid = 291.
scanning new insn with uid = 292.
deleting insn with uid = 61.
deleting insn with uid = 61.
scanning new insn with uid = 293.
scanning new insn with uid = 294.
deleting insn with uid = 62.
deleting insn with uid = 62.
deleting insn with uid = 15.
deleting insn with uid = 21.


add_nvp

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={123d,122u} r1={44d,36u,8e} r2={23d,19u} r4={9d,1u} r5={17d,9u} r6={1d,85u} r7={1d,24u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={52d,6u} r18={8d} r19={8d} r20={1d,1u,8e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} 
;;    total ref usage 904{585d,303u,16e} in 220{212 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 161 162 163 164
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:138 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])
        (reg:DI 4 si [ st_indx ])) mSector.c:138 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ st_indx ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])
        (reg:DI 1 dx [ p ])) mSector.c:138 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:59 D.5001 ] [59])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [161])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:140 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [161])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:60 D.5001 ] [60])
                (plus:SI (reg:SI 0 ax [orig:59 D.5001 ] [59])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.5001 ] [59])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 0 ax [orig:61 D.5002 ] [61])
        (sign_extend:DI (reg:SI 0 ax [orig:60 D.5001 ] [60]))) mSector.c:140 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.5001 ] [60])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 0 ax [orig:62 D.5002 ] [62])
                (ashift:DI (reg:DI 0 ax [orig:61 D.5002 ] [61])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.5002 ] [61])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:62 D.5002 ] [62])) mSector.c:140 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.5002 ] [62])
        (nil)))
(call_insn 14 13 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:140 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 16 14 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
        (reg/f:DI 0 ax [162])) mSector.c:140 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [162])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:63 D.5001 ] [63])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [163])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [163])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:63 D.5001 ] [63])) mSector.c:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.5001 ] [63])
        (nil)))
(call_insn 20 19 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:141 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 22 20 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
        (reg:DI 0 ax [164])) mSector.c:141 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [164])
        (nil)))
(insn 23 22 249 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:145 89 {*movsi_internal}
     (nil))
(jump_insn 249 23 250 2 (set (pc)
        (label_ref 64)) mSector.c:145 650 {jump}
     (nil)
 -> 64)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 250 249 68)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 66 165
(code_label 68 250 26 3 69 "" [1 uses])
(note 26 68 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg/f:DI 0 ax [165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (set (reg:SI 0 ax [orig:65 D.5001 ] [65])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [165])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:146 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [165])
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (reg:SI 0 ax [orig:66 D.5001 ] [66])
                (plus:SI (reg:SI 0 ax [orig:65 D.5001 ] [65])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:146 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.5001 ] [65])
        (nil)))
(insn 30 29 31 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:66 D.5001 ] [66])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:146 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.5001 ] [66])
        (nil)))
(jump_insn 31 30 32 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mSector.c:146 612 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:146 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:146 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 166 167 168 169 170 171 172 173
(code_label 35 34 36 5 68 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 0 ax [166])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 89 {*movsi_internal}
     (nil))
(insn 38 37 289 5 (set (reg:DI 0 ax [orig:67 D.5002 ] [67])
        (sign_extend:DI (reg:SI 0 ax [166]))) mSector.c:147 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [166])
        (nil)))
(insn 289 38 40 5 (set (reg:DI 1 dx [orig:68 D.5002 ] [68])
        (mult:DI (reg:DI 0 ax [orig:67 D.5002 ] [67])
            (const_int 8 [0x8]))) mSector.c:147 267 {*leadi}
     (nil))
(insn 40 289 41 5 (set (reg/f:DI 0 ax [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 1 dx [orig:69 D.5003 ] [69])
                (plus:DI (reg:DI 1 dx [orig:68 D.5002 ] [68])
                    (reg/f:DI 0 ax [167])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [167])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.5002 ] [68])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:68 D.5002 ] [68]))
                (nil)))))
(insn 42 41 43 5 (set (reg/f:DI 0 ax [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 0 ax [orig:70 D.5003 ] [70])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [168])
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [168])
        (nil)))
(insn 44 43 45 5 (set (reg:SI 2 cx [169])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 89 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 2 cx [orig:71 D.5002 ] [71])
        (sign_extend:DI (reg:SI 2 cx [169]))) mSector.c:147 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [169])
        (nil)))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 2 cx [orig:72 D.5002 ] [72])
                (ashift:DI (reg:DI 2 cx [orig:71 D.5002 ] [71])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:71 D.5002 ] [71])
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.5003 ] [73])
                (plus:DI (reg/f:DI 0 ax [orig:70 D.5003 ] [70])
                    (reg:DI 2 cx [orig:72 D.5002 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:72 D.5002 ] [72])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.5003 ] [70])
            (nil))))
(insn 48 47 49 5 (set (reg/f:DI 0 ax [orig:74 D.5004 ] [74])
        (mem/f:DI (reg/f:DI 0 ax [orig:73 D.5003 ] [73]) [0 *_22+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.5003 ] [73])
        (nil)))
(insn 49 48 50 5 (set (mem/f:DI (reg/f:DI 1 dx [orig:69 D.5003 ] [69]) [0 *_18+0 S8 A64])
        (reg/f:DI 0 ax [orig:74 D.5004 ] [74])) mSector.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.5004 ] [74])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:69 D.5003 ] [69])
            (nil))))
(insn 50 49 51 5 (set (reg:SI 0 ax [170])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:DI 0 ax [orig:75 D.5002 ] [75])
        (sign_extend:DI (reg:SI 0 ax [170]))) mSector.c:148 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [170])
        (nil)))
(insn 52 51 254 5 (parallel [
            (set (reg:DI 0 ax [orig:76 D.5002 ] [76])
                (ashift:DI (reg:DI 0 ax [orig:76 D.5002 ] [76])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 513 {*ashldi3_1}
     (nil))
(insn 254 52 53 5 (set (reg:DI 1 dx [orig:76 D.5002 ] [76])
        (reg:DI 0 ax [orig:76 D.5002 ] [76])) mSector.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:76 D.5002 ] [76])
        (nil)))
(insn 53 254 290 5 (set (reg/f:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 290 53 55 5 (set (reg/f:DI 2 cx [orig:77 D.5004 ] [77])
        (plus:DI (reg:DI 1 dx [orig:76 D.5002 ] [76])
            (reg/f:DI 0 ax [171]))) mSector.c:148 267 {*leadi}
     (nil))
(insn 55 290 56 5 (set (reg/f:DI 0 ax [172])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 5 (set (reg/f:DI 0 ax [orig:78 D.5004 ] [78])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [172])
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [172])
        (nil)))
(insn 57 56 58 5 (set (reg:SI 1 dx [173])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:DI 1 dx [orig:79 D.5002 ] [79])
        (sign_extend:DI (reg:SI 1 dx [173]))) mSector.c:148 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [173])
        (nil)))
(insn 59 58 60 5 (parallel [
            (set (reg:DI 1 dx [orig:80 D.5002 ] [80])
                (ashift:DI (reg:DI 1 dx [orig:79 D.5002 ] [79])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:79 D.5002 ] [79])
        (nil)))
(insn 60 59 291 5 (parallel [
            (set (reg/f:DI 0 ax [orig:81 D.5004 ] [81])
                (plus:DI (reg/f:DI 0 ax [orig:78 D.5004 ] [78])
                    (reg:DI 1 dx [orig:80 D.5002 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:80 D.5002 ] [80])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 D.5004 ] [78])
            (nil))))
(insn 291 60 292 5 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:81 D.5004 ] [81])
                (const_int 8 [0x8])) [0 *_30+8 S4 A64])) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 292 291 293 5 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:81 D.5004 ] [81]) [0 *_30+0 S8 A128])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 293 292 294 5 (set (mem:DI (reg/f:DI 2 cx [orig:77 D.5004 ] [77]) [0 *_26+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 294 293 63 5 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:77 D.5004 ] [77])
                (const_int 8 [0x8])) [0 *_26+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 63 294 64 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:145 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 174
(code_label 64 63 65 6 67 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg/f:DI 0 ax [174])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 69 6 (set (reg:SI 0 ax [orig:64 D.5001 ] [64])
        (mem:SI (reg/f:DI 0 ax [174]) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:145 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [174])
        (nil)))
(insn 69 67 70 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:64 D.5001 ] [64])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:145 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.5001 ] [64])
        (nil)))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) mSector.c:145 612 {*jcc_1}
     (nil)
 -> 68)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 175 176
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 288 7 (set (reg:SI 0 ax [175])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:152 89 {*movsi_internal}
     (nil))
(insn 288 72 74 7 (set (reg:SI 1 dx [orig:83 D.5001 ] [83])
        (plus:SI (reg:SI 0 ax [175])
            (const_int -1 [0xffffffffffffffff]))) mSector.c:152 266 {*leasi}
     (nil))
(insn 74 288 75 7 (set (reg/f:DI 0 ax [176])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 7 (set (reg:SI 0 ax [orig:84 D.5001 ] [84])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [176])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:152 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [176])
        (nil)))
(insn 76 75 77 7 (parallel [
            (set (reg:SI 0 ax [orig:85 D.5001 ] [85])
                (plus:SI (reg:SI 0 ax [orig:84 D.5001 ] [84])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 D.5001 ] [84])
        (nil)))
(insn 77 76 78 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:83 D.5001 ] [83])
            (reg:SI 0 ax [orig:85 D.5001 ] [85]))) mSector.c:152 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.5001 ] [85])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:83 D.5001 ] [83])
            (nil))))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) mSector.c:152 612 {*jcc_1}
     (nil)
 -> 82)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:152 87 {*movdi_internal_rex64}
     (nil))
(call_insn 81 80 82 8 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:152 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
(code_label 82 81 83 9 70 "" [1 uses])
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (set (reg:SI 0 ax [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:153 89 {*movsi_internal}
     (nil))
(insn 85 84 268 9 (set (reg:DI 0 ax [orig:86 D.5002 ] [86])
        (sign_extend:DI (reg:SI 0 ax [177]))) mSector.c:153 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [177])
        (nil)))
(insn 268 85 87 9 (set (reg:DI 1 dx [orig:87 D.5002 ] [87])
        (mult:DI (reg:DI 0 ax [orig:86 D.5002 ] [86])
            (const_int 8 [0x8]))) mSector.c:153 267 {*leadi}
     (nil))
(insn 87 268 88 9 (set (reg/f:DI 0 ax [178])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 9 (parallel [
            (set (reg/f:DI 1 dx [orig:88 D.5003 ] [88])
                (plus:DI (reg:DI 1 dx [orig:87 D.5002 ] [87])
                    (reg/f:DI 0 ax [178])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [178])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:87 D.5002 ] [87])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:87 D.5002 ] [87]))
                (nil)))))
(insn 89 88 90 9 (set (reg/f:DI 0 ax [179])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mSector.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 9 (set (mem/f:DI (reg/f:DI 1 dx [orig:88 D.5003 ] [88]) [0 *_38+0 S8 A64])
        (reg/f:DI 0 ax [179])) mSector.c:153 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [179])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:88 D.5003 ] [88])
            (nil))))
(insn 91 90 92 9 (set (reg:SI 0 ax [180])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 92 91 269 9 (set (reg:DI 0 ax [orig:89 D.5002 ] [89])
        (sign_extend:DI (reg:SI 0 ax [180]))) mSector.c:154 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [180])
        (nil)))
(insn 269 92 94 9 (set (reg:DI 1 dx [orig:90 D.5002 ] [90])
        (mult:DI (reg:DI 0 ax [orig:89 D.5002 ] [89])
            (const_int 8 [0x8]))) mSector.c:154 267 {*leadi}
     (nil))
(insn 94 269 95 9 (set (reg/f:DI 0 ax [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.5003 ] [91])
                (plus:DI (reg/f:DI 0 ax [181])
                    (reg:DI 1 dx [orig:90 D.5002 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [181])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:90 D.5002 ] [90])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:90 D.5002 ] [90]))
                (nil)))))
(insn 96 95 270 9 (set (reg/f:DI 0 ax [orig:92 D.5004 ] [92])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.5003 ] [91]) [0 *_42+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.5003 ] [91])
        (nil)))
(insn 270 96 98 9 (set (reg/f:DI 2 cx [orig:93 D.5004 ] [93])
        (plus:DI (reg/f:DI 0 ax [orig:92 D.5004 ] [92])
            (const_int 32 [0x20]))) mSector.c:154 267 {*leadi}
     (nil))
(insn 98 270 99 9 (set (reg:SI 0 ax [182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (reg:DI 0 ax [orig:94 D.5002 ] [94])
        (sign_extend:DI (reg:SI 0 ax [182]))) mSector.c:154 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [182])
        (nil)))
(insn 100 99 271 9 (parallel [
            (set (reg:DI 0 ax [orig:95 D.5002 ] [95])
                (ashift:DI (reg:DI 0 ax [orig:94 D.5002 ] [94])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:94 D.5002 ] [94])
        (nil)))
(insn 271 100 102 9 (set (reg:DI 1 dx [orig:96 D.5006 ] [96])
        (plus:DI (reg:DI 0 ax [orig:95 D.5002 ] [95])
            (const_int -8 [0xfffffffffffffff8]))) mSector.c:154 267 {*leadi}
     (nil))
(insn 102 271 103 9 (set (reg/f:DI 0 ax [183])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg/f:DI 0 ax [orig:97 D.5003 ] [97])
                (plus:DI (reg/f:DI 0 ax [183])
                    (reg:DI 1 dx [orig:96 D.5006 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [183])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:96 D.5006 ] [96])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:96 D.5006 ] [96]))
                (nil)))))
(insn 104 103 272 9 (set (reg/f:DI 0 ax [orig:98 D.5004 ] [98])
        (mem/f:DI (reg/f:DI 0 ax [orig:97 D.5003 ] [97]) [0 *_48+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.5003 ] [97])
        (nil)))
(insn 272 104 273 9 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:98 D.5004 ] [98])
                (const_int 40 [0x28])) [0 MEM[(long double *)_49 + 32B]+8 S4 A64])) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 273 272 274 9 (set (reg:DI 0 ax)
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:98 D.5004 ] [98])
                (const_int 32 [0x20])) [0 MEM[(long double *)_49 + 32B]+0 S8 A128])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 274 273 275 9 (set (mem:DI (reg/f:DI 2 cx [orig:93 D.5004 ] [93]) [0 *_44+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 275 274 107 9 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:93 D.5004 ] [93])
                (const_int 8 [0x8])) [0 *_44+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 107 275 108 9 (set (reg:SI 0 ax [184])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 108 107 276 9 (set (reg:DI 0 ax [orig:100 D.5002 ] [100])
        (sign_extend:DI (reg:SI 0 ax [184]))) mSector.c:155 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [184])
        (nil)))
(insn 276 108 110 9 (set (reg:DI 1 dx [orig:101 D.5002 ] [101])
        (mult:DI (reg:DI 0 ax [orig:100 D.5002 ] [100])
            (const_int 8 [0x8]))) mSector.c:155 267 {*leadi}
     (nil))
(insn 110 276 111 9 (set (reg/f:DI 0 ax [185])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 9 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.5003 ] [102])
                (plus:DI (reg/f:DI 0 ax [185])
                    (reg:DI 1 dx [orig:101 D.5002 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [185])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:101 D.5002 ] [101])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:101 D.5002 ] [101]))
                (nil)))))
(insn 112 111 277 9 (set (reg/f:DI 0 ax [orig:103 D.5004 ] [103])
        (mem/f:DI (reg/f:DI 0 ax [orig:102 D.5003 ] [102]) [0 *_53+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 D.5003 ] [102])
        (nil)))
(insn 277 112 114 9 (set (reg/f:DI 2 cx [orig:104 D.5004 ] [104])
        (plus:DI (reg/f:DI 0 ax [orig:103 D.5004 ] [103])
            (const_int 48 [0x30]))) mSector.c:155 267 {*leadi}
     (nil))
(insn 114 277 115 9 (set (reg:SI 0 ax [186])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 115 114 116 9 (set (reg:DI 0 ax [orig:105 D.5002 ] [105])
        (sign_extend:DI (reg:SI 0 ax [186]))) mSector.c:155 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [186])
        (nil)))
(insn 116 115 278 9 (parallel [
            (set (reg:DI 0 ax [orig:106 D.5002 ] [106])
                (ashift:DI (reg:DI 0 ax [orig:105 D.5002 ] [105])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:105 D.5002 ] [105])
        (nil)))
(insn 278 116 118 9 (set (reg:DI 1 dx [orig:107 D.5006 ] [107])
        (plus:DI (reg:DI 0 ax [orig:106 D.5002 ] [106])
            (const_int -8 [0xfffffffffffffff8]))) mSector.c:155 267 {*leadi}
     (nil))
(insn 118 278 119 9 (set (reg/f:DI 0 ax [187])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 9 (parallel [
            (set (reg/f:DI 0 ax [orig:108 D.5003 ] [108])
                (plus:DI (reg/f:DI 0 ax [187])
                    (reg:DI 1 dx [orig:107 D.5006 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [187])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:107 D.5006 ] [107])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:107 D.5006 ] [107]))
                (nil)))))
(insn 120 119 279 9 (set (reg/f:DI 0 ax [orig:109 D.5004 ] [109])
        (mem/f:DI (reg/f:DI 0 ax [orig:108 D.5003 ] [108]) [0 *_59+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:108 D.5003 ] [108])
        (nil)))
(insn 279 120 280 9 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:109 D.5004 ] [109])
                (const_int 56 [0x38])) [0 MEM[(long double *)_60 + 48B]+8 S4 A64])) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 280 279 281 9 (set (reg:DI 0 ax)
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:109 D.5004 ] [109])
                (const_int 48 [0x30])) [0 MEM[(long double *)_60 + 48B]+0 S8 A128])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 281 280 282 9 (set (mem:DI (reg/f:DI 2 cx [orig:104 D.5004 ] [104]) [0 *_55+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 282 281 123 9 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:104 D.5004 ] [104])
                (const_int 8 [0x8])) [0 *_55+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 123 282 124 9 (set (reg:SI 0 ax [188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 89 {*movsi_internal}
     (nil))
(insn 124 123 125 9 (set (reg:DI 0 ax [orig:111 D.5002 ] [111])
        (sign_extend:DI (reg:SI 0 ax [188]))) mSector.c:157 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [188])
        (nil)))
(insn 125 124 256 9 (parallel [
            (set (reg:DI 0 ax [orig:112 D.5002 ] [112])
                (ashift:DI (reg:DI 0 ax [orig:112 D.5002 ] [112])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 513 {*ashldi3_1}
     (nil))
(insn 256 125 126 9 (set (reg:DI 1 dx [orig:112 D.5002 ] [112])
        (reg:DI 0 ax [orig:112 D.5002 ] [112])) mSector.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:112 D.5002 ] [112])
        (nil)))
(insn 126 256 283 9 (set (reg/f:DI 0 ax [189])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 283 126 128 9 (set (reg/f:DI 2 cx [orig:113 D.5004 ] [113])
        (plus:DI (reg:DI 1 dx [orig:112 D.5002 ] [112])
            (reg/f:DI 0 ax [189]))) mSector.c:157 267 {*leadi}
     (nil))
(insn 128 283 129 9 (set (reg/f:DI 0 ax [190])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 9 (set (reg/f:DI 0 ax [orig:114 D.5004 ] [114])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [190])
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [190])
        (nil)))
(insn 130 129 131 9 (set (reg:SI 1 dx [191])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 89 {*movsi_internal}
     (nil))
(insn 131 130 132 9 (set (reg:DI 1 dx [orig:115 D.5002 ] [115])
        (sign_extend:DI (reg:SI 1 dx [191]))) mSector.c:157 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [191])
        (nil)))
(insn 132 131 133 9 (parallel [
            (set (reg:DI 1 dx [orig:116 D.5002 ] [116])
                (ashift:DI (reg:DI 1 dx [orig:115 D.5002 ] [115])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:115 D.5002 ] [115])
        (nil)))
(insn 133 132 134 9 (parallel [
            (set (reg:DI 1 dx [orig:117 D.5006 ] [117])
                (plus:DI (reg:DI 1 dx [orig:116 D.5002 ] [116])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:116 D.5002 ] [116])
        (nil)))
(insn 134 133 284 9 (parallel [
            (set (reg/f:DI 0 ax [orig:118 D.5004 ] [118])
                (plus:DI (reg/f:DI 0 ax [orig:114 D.5004 ] [114])
                    (reg:DI 1 dx [orig:117 D.5006 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:117 D.5006 ] [117])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:114 D.5004 ] [114])
            (nil))))
(insn 284 134 285 9 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:118 D.5004 ] [118])
                (const_int 8 [0x8])) [0 *_69+8 S4 A64])) mSector.c:157 89 {*movsi_internal}
     (nil))
(insn 285 284 286 9 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:118 D.5004 ] [118]) [0 *_69+0 S8 A128])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 286 285 287 9 (set (mem:DI (reg/f:DI 2 cx [orig:113 D.5004 ] [113]) [0 *_64+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 287 286 251 9 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:113 D.5004 ] [113])
                (const_int 8 [0x8])) [0 *_64+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:157 89 {*movsi_internal}
     (nil))
(jump_insn 251 287 252 9 (set (pc)
        (label_ref 179)) mSector.c:161 650 {jump}
     (nil)
 -> 179)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 252 251 184)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122 123 192
(code_label 184 252 139 10 73 "" [1 uses])
(note 139 184 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 10 (set (reg/f:DI 0 ax [192])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:162 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 10 (set (reg:SI 0 ax [orig:122 D.5001 ] [122])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [192])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:162 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [192])
        (nil)))
(insn 142 141 143 10 (parallel [
            (set (reg:SI 0 ax [orig:123 D.5001 ] [123])
                (plus:SI (reg:SI 0 ax [orig:122 D.5001 ] [122])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:162 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:122 D.5001 ] [122])
        (nil)))
(insn 143 142 144 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:123 D.5001 ] [123])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:162 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:123 D.5001 ] [123])
        (nil)))
(jump_insn 144 143 145 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) mSector.c:162 612 {*jcc_1}
     (nil)
 -> 148)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 145 144 146 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:162 87 {*movdi_internal_rex64}
     (nil))
(call_insn 147 146 148 11 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:162 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 193 194 195 196 197 198 199 200
(code_label 148 147 149 12 72 "" [1 uses])
(note 149 148 150 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 12 (set (reg:SI 0 ax [193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 89 {*movsi_internal}
     (nil))
(insn 151 150 152 12 (set (reg:DI 0 ax [orig:124 D.5006 ] [124])
        (sign_extend:DI (reg:SI 0 ax [193]))) mSector.c:163 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [193])
        (nil)))
(insn 152 151 262 12 (parallel [
            (set (reg:DI 0 ax [orig:125 D.5006 ] [125])
                (plus:DI (reg:DI 0 ax [orig:124 D.5006 ] [124])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:124 D.5006 ] [124])
        (nil)))
(insn 262 152 154 12 (set (reg:DI 1 dx [orig:126 D.5006 ] [126])
        (mult:DI (reg:DI 0 ax [orig:125 D.5006 ] [125])
            (const_int 8 [0x8]))) mSector.c:163 267 {*leadi}
     (nil))
(insn 154 262 155 12 (set (reg/f:DI 0 ax [194])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg/f:DI 1 dx [orig:127 D.5003 ] [127])
                (plus:DI (reg:DI 1 dx [orig:126 D.5006 ] [126])
                    (reg/f:DI 0 ax [194])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [194])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:126 D.5006 ] [126])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:126 D.5006 ] [126]))
                (nil)))))
(insn 156 155 157 12 (set (reg/f:DI 0 ax [195])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 12 (set (reg/f:DI 0 ax [orig:128 D.5003 ] [128])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [195])
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [195])
        (nil)))
(insn 158 157 159 12 (set (reg:SI 2 cx [196])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 89 {*movsi_internal}
     (nil))
(insn 159 158 160 12 (set (reg:DI 2 cx [orig:129 D.5002 ] [129])
        (sign_extend:DI (reg:SI 2 cx [196]))) mSector.c:163 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [196])
        (nil)))
(insn 160 159 161 12 (parallel [
            (set (reg:DI 2 cx [orig:130 D.5002 ] [130])
                (ashift:DI (reg:DI 2 cx [orig:129 D.5002 ] [129])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:129 D.5002 ] [129])
        (nil)))
(insn 161 160 162 12 (parallel [
            (set (reg/f:DI 0 ax [orig:131 D.5003 ] [131])
                (plus:DI (reg/f:DI 0 ax [orig:128 D.5003 ] [128])
                    (reg:DI 2 cx [orig:130 D.5002 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:130 D.5002 ] [130])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:128 D.5003 ] [128])
            (nil))))
(insn 162 161 163 12 (set (reg/f:DI 0 ax [orig:132 D.5004 ] [132])
        (mem/f:DI (reg/f:DI 0 ax [orig:131 D.5003 ] [131]) [0 *_82+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:131 D.5003 ] [131])
        (nil)))
(insn 163 162 164 12 (set (mem/f:DI (reg/f:DI 1 dx [orig:127 D.5003 ] [127]) [0 *_78+0 S8 A64])
        (reg/f:DI 0 ax [orig:132 D.5004 ] [132])) mSector.c:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:132 D.5004 ] [132])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:127 D.5003 ] [127])
            (nil))))
(insn 164 163 165 12 (set (reg:SI 0 ax [197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 165 164 166 12 (set (reg:DI 0 ax [orig:133 D.5006 ] [133])
        (sign_extend:DI (reg:SI 0 ax [197]))) mSector.c:164 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [197])
        (nil)))
(insn 166 165 167 12 (parallel [
            (set (reg:DI 0 ax [orig:134 D.5006 ] [134])
                (plus:DI (reg:DI 0 ax [orig:133 D.5006 ] [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:133 D.5006 ] [133])
        (nil)))
(insn 167 166 258 12 (parallel [
            (set (reg:DI 0 ax [orig:135 D.5006 ] [135])
                (ashift:DI (reg:DI 0 ax [orig:135 D.5006 ] [135])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 513 {*ashldi3_1}
     (nil))
(insn 258 167 168 12 (set (reg:DI 1 dx [orig:135 D.5006 ] [135])
        (reg:DI 0 ax [orig:135 D.5006 ] [135])) mSector.c:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:135 D.5006 ] [135])
        (nil)))
(insn 168 258 263 12 (set (reg/f:DI 0 ax [198])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 263 168 170 12 (set (reg/f:DI 2 cx [orig:136 D.5004 ] [136])
        (plus:DI (reg:DI 1 dx [orig:135 D.5006 ] [135])
            (reg/f:DI 0 ax [198]))) mSector.c:164 267 {*leadi}
     (nil))
(insn 170 263 171 12 (set (reg/f:DI 0 ax [199])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 171 170 172 12 (set (reg/f:DI 0 ax [orig:137 D.5004 ] [137])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [199])
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [199])
        (nil)))
(insn 172 171 173 12 (set (reg:SI 1 dx [200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 173 172 174 12 (set (reg:DI 1 dx [orig:138 D.5002 ] [138])
        (sign_extend:DI (reg:SI 1 dx [200]))) mSector.c:164 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [200])
        (nil)))
(insn 174 173 175 12 (parallel [
            (set (reg:DI 1 dx [orig:139 D.5002 ] [139])
                (ashift:DI (reg:DI 1 dx [orig:138 D.5002 ] [138])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:138 D.5002 ] [138])
        (nil)))
(insn 175 174 264 12 (parallel [
            (set (reg/f:DI 0 ax [orig:140 D.5004 ] [140])
                (plus:DI (reg/f:DI 0 ax [orig:137 D.5004 ] [137])
                    (reg:DI 1 dx [orig:139 D.5002 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:139 D.5002 ] [139])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:137 D.5004 ] [137])
            (nil))))
(insn 264 175 265 12 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:140 D.5004 ] [140])
                (const_int 8 [0x8])) [0 *_91+8 S4 A64])) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 265 264 266 12 (set (reg:DI 0 ax)
        (mem:DI (reg/f:DI 0 ax [orig:140 D.5004 ] [140]) [0 *_91+0 S8 A128])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 266 265 267 12 (set (mem:DI (reg/f:DI 2 cx [orig:136 D.5004 ] [136]) [0 *_87+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 267 266 178 12 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:136 D.5004 ] [136])
                (const_int 8 [0x8])) [0 *_87+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 178 267 179 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 201
(code_label 179 178 180 13 71 "" [1 uses])
(note 180 179 181 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 13 (set (reg/f:DI 0 ax [201])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:161 87 {*movdi_internal_rex64}
     (nil))
(insn 182 181 183 13 (set (reg:SI 0 ax [orig:120 D.5001 ] [120])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [201])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:161 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [201])
        (nil)))
(insn 183 182 185 13 (parallel [
            (set (reg:SI 0 ax [orig:121 D.5001 ] [121])
                (plus:SI (reg:SI 0 ax [orig:120 D.5001 ] [120])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:120 D.5001 ] [120])
        (nil)))
(insn 185 183 186 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:121 D.5001 ] [121])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:161 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:121 D.5001 ] [121])
        (nil)))
(jump_insn 186 185 187 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:161 612 {*jcc_1}
     (nil)
 -> 184)
;;  succ:       10
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 142 143 202
(note 187 186 188 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 14 (set (reg/f:DI 0 ax [202])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 189 188 190 14 (set (reg:SI 0 ax [orig:142 D.5001 ] [142])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [202])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [202])
        (nil)))
(insn 190 189 191 14 (parallel [
            (set (reg:SI 0 ax [orig:143 D.5001 ] [143])
                (plus:SI (reg:SI 0 ax [orig:142 D.5001 ] [142])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:167 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:142 D.5001 ] [142])
        (nil)))
(insn 191 190 192 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:143 D.5001 ] [143])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:167 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:143 D.5001 ] [143])
        (nil)))
(jump_insn 192 191 193 14 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) mSector.c:167 612 {*jcc_1}
     (nil)
 -> 196)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 193 192 194 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:167 87 {*movdi_internal_rex64}
     (nil))
(call_insn 195 194 196 15 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:167 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 203 204 205 206 207 208 209 210 211 212 213 214 215 216
(code_label 196 195 197 16 74 "" [1 uses])
(note 197 196 198 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 16 (set (reg:SI 0 ax [203])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 89 {*movsi_internal}
     (nil))
(insn 199 198 200 16 (set (reg:DI 0 ax [orig:144 D.5006 ] [144])
        (sign_extend:DI (reg:SI 0 ax [203]))) mSector.c:168 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [203])
        (nil)))
(insn 200 199 259 16 (parallel [
            (set (reg:DI 0 ax [orig:145 D.5006 ] [145])
                (plus:DI (reg:DI 0 ax [orig:144 D.5006 ] [144])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:144 D.5006 ] [144])
        (nil)))
(insn 259 200 202 16 (set (reg:DI 1 dx [orig:146 D.5006 ] [146])
        (mult:DI (reg:DI 0 ax [orig:145 D.5006 ] [145])
            (const_int 8 [0x8]))) mSector.c:168 267 {*leadi}
     (nil))
(insn 202 259 203 16 (set (reg/f:DI 0 ax [204])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 16 (parallel [
            (set (reg/f:DI 1 dx [orig:147 D.5003 ] [147])
                (plus:DI (reg:DI 1 dx [orig:146 D.5006 ] [146])
                    (reg/f:DI 0 ax [204])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [204])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:146 D.5006 ] [146])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
                    (reg:DI 1 dx [orig:146 D.5006 ] [146]))
                (nil)))))
(insn 204 203 205 16 (set (reg/f:DI 0 ax [205])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 205 204 206 16 (set (reg/f:DI 0 ax [orig:148 D.5003 ] [148])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [205])
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [205])
        (nil)))
(insn 206 205 207 16 (set (reg:SI 2 cx [206])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 89 {*movsi_internal}
     (nil))
(insn 207 206 208 16 (set (reg:DI 2 cx [orig:149 D.5002 ] [149])
        (sign_extend:DI (reg:SI 2 cx [206]))) mSector.c:168 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [206])
        (nil)))
(insn 208 207 209 16 (parallel [
            (set (reg:DI 2 cx [orig:150 D.5002 ] [150])
                (ashift:DI (reg:DI 2 cx [orig:149 D.5002 ] [149])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:149 D.5002 ] [149])
        (nil)))
(insn 209 208 210 16 (parallel [
            (set (reg/f:DI 0 ax [orig:151 D.5003 ] [151])
                (plus:DI (reg/f:DI 0 ax [orig:148 D.5003 ] [148])
                    (reg:DI 2 cx [orig:150 D.5002 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:150 D.5002 ] [150])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:148 D.5003 ] [148])
            (nil))))
(insn 210 209 211 16 (set (reg/f:DI 0 ax [orig:152 D.5004 ] [152])
        (mem/f:DI (reg/f:DI 0 ax [orig:151 D.5003 ] [151]) [0 *_103+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:151 D.5003 ] [151])
        (nil)))
(insn 211 210 212 16 (set (mem/f:DI (reg/f:DI 1 dx [orig:147 D.5003 ] [147]) [0 *_99+0 S8 A64])
        (reg/f:DI 0 ax [orig:152 D.5004 ] [152])) mSector.c:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:152 D.5004 ] [152])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:147 D.5003 ] [147])
            (nil))))
(insn 212 211 213 16 (set (reg/f:DI 0 ax [207])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:171 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 16 (set (reg/f:DI 0 ax [orig:153 D.5003 ] [153])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [207])
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [207])
        (nil)))
(insn 214 213 215 16 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:153 D.5003 ] [153])) mSector.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:153 D.5003 ] [153])
        (nil)))
(call_insn 215 214 216 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:171 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 216 215 217 16 (set (reg/f:DI 0 ax [208])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 217 216 218 16 (set (reg/f:DI 0 ax [orig:154 D.5004 ] [154])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [208])
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [208])
        (nil)))
(insn 218 217 219 16 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:154 D.5004 ] [154])) mSector.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:154 D.5004 ] [154])
        (nil)))
(call_insn 219 218 220 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:172 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 220 219 221 16 (set (reg/f:DI 0 ax [209])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 221 220 222 16 (set (reg/f:DI 1 dx [210])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 16 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [209])
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])
        (reg/f:DI 1 dx [210])) mSector.c:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [210])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [209])
            (nil))))
(insn 223 222 224 16 (set (reg/f:DI 0 ax [211])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 16 (set (reg/f:DI 1 dx [212])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 16 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [211])
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])
        (reg/f:DI 1 dx [212])) mSector.c:176 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [212])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [211])
            (nil))))
(insn 226 225 227 16 (set (reg/f:DI 0 ax [213])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 227 226 260 16 (set (reg:SI 0 ax [orig:155 D.5001 ] [155])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [213])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [213])
        (nil)))
(insn 260 227 229 16 (set (reg:SI 1 dx [orig:156 D.5001 ] [156])
        (plus:SI (reg:SI 0 ax [orig:155 D.5001 ] [155])
            (const_int 1 [0x1]))) mSector.c:179 266 {*leasi}
     (nil))
(insn 229 260 230 16 (set (reg/f:DI 0 ax [214])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 230 229 231 16 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [214])
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])
        (reg:SI 1 dx [orig:156 D.5001 ] [156])) mSector.c:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [214])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:156 D.5001 ] [156])
            (nil))))
(insn 231 230 232 16 (set (reg/f:DI 0 ax [215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 232 231 261 16 (set (reg:SI 0 ax [orig:157 D.5001 ] [157])
        (mem:SI (reg/f:DI 0 ax [215]) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:180 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [215])
        (nil)))
(insn 261 232 234 16 (set (reg:SI 1 dx [orig:158 D.5001 ] [158])
        (plus:SI (reg:SI 0 ax [orig:157 D.5001 ] [157])
            (const_int 1 [0x1]))) mSector.c:180 266 {*leasi}
     (nil))
(insn 234 261 235 16 (set (reg/f:DI 0 ax [216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 235 234 236 16 (set (mem:SI (reg/f:DI 0 ax [216]) [0 *st_indx_12(D)+0 S4 A32])
        (reg:SI 1 dx [orig:158 D.5001 ] [158])) mSector.c:180 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [216])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:158 D.5001 ] [158])
            (nil))))
(insn 236 235 246 16 (set (reg:SI 0 ax [orig:159 D.5001 ] [159])
        (const_int 1 [0x1])) mSector.c:182 89 {*movsi_internal}
     (nil))
(insn 246 236 0 16 (use (reg/i:SI 0 ax)) mSector.c:183 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _add_nvp_bound (_add_nvp_bound, funcdef_no=10, decl_uid=4061, cgraph_uid=10)

deleting insn with uid = 15.
scanning new insn with uid = 102.
deleting insn with uid = 20.
deleting insn with uid = 20.
scanning new insn with uid = 103.
deleting insn with uid = 26.
deleting insn with uid = 26.
deleting insn with uid = 38.
deleting insn with uid = 39.
deleting insn with uid = 56.
deleting insn with uid = 57.
deleting insn with uid = 67.
deleting insn with uid = 69.
deleting insn with uid = 80.
deleting insn with uid = 81.
scanning new insn with uid = 104.
deleting insn with uid = 84.
deleting insn with uid = 84.
deleting insn with uid = 85.
deleting insn with uid = 92.
deleting insn with uid = 96.


_add_nvp_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={42d,40u} r1={19d,19u,5e} r2={7d,4u} r4={7d,4u} r5={8d,5u} r6={1d,25u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={24d} r18={3d} r19={3d} r20={1d,1u,3e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={6d,3u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 350{236d,106u,8e} in 76{73 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:185 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 4 si [ i ])) mSector.c:185 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ i ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
        (reg:SI 1 dx [ j ])) mSector.c:185 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ j ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
        (reg:DI 2 cx [ bound ])) mSector.c:185 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ bound ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])
        (reg:SI 37 r8 [ k ])) mSector.c:185 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ k ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:186 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [orig:59 st_indx.2 ] [59])
                (plus:SI (reg:SI 0 ax [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:186 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [94])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
                (const_int 1 [0x1]))
            (nil))))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 st_indx+0 S4 A32])
        (reg:SI 0 ax [orig:59 st_indx.2 ] [59])) mSector.c:186 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 st_indx.2 ] [59])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 4 [0x4])) mSector.c:187 89 {*movsi_internal}
     (nil))
(call_insn 14 13 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 16 14 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 0 ax [95])) mSector.c:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [95])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 0 ax [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 0 ax [orig:60 D.5008 ] [60])
        (sign_extend:DI (reg:SI 0 ax [96]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [96])
        (nil)))
(insn 19 18 102 2 (parallel [
            (set (reg:DI 0 ax [orig:61 D.5008 ] [61])
                (plus:DI (reg:DI 0 ax [orig:60 D.5008 ] [60])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.5008 ] [60])
        (nil)))
(insn 102 19 21 2 (set (reg:DI 1 dx [orig:62 D.5008 ] [62])
        (mult:DI (reg:DI 0 ax [orig:61 D.5008 ] [61])
            (const_int 8 [0x8]))) mSector.c:189 267 {*leadi}
     (nil))
(insn 21 102 22 2 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.5009 ] [63])
                (plus:DI (reg/f:DI 0 ax [97])
                    (reg:DI 1 dx [orig:62 D.5008 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.5008 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.5008 ] [62]))
                (nil)))))
(insn 23 22 24 2 (set (reg/f:DI 2 cx [orig:64 D.5010 ] [64])
        (mem/f:DI (reg/f:DI 0 ax [orig:63 D.5009 ] [63]) [0 *_9+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.5009 ] [63])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 0 ax [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 25 24 103 2 (set (reg:DI 0 ax [orig:65 D.5011 ] [65])
        (sign_extend:DI (reg:SI 0 ax [98]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [98])
        (nil)))
(insn 103 25 27 2 (set (reg:DI 1 dx [orig:66 D.5011 ] [66])
        (mult:DI (reg:DI 0 ax [orig:65 D.5011 ] [65])
            (const_int 8 [0x8]))) mSector.c:189 267 {*leadi}
     (nil))
(insn 27 103 28 2 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.5009 ] [67])
                (plus:DI (reg/f:DI 0 ax [99])
                    (reg:DI 1 dx [orig:66 D.5011 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.5011 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.5011 ] [66]))
                (nil)))))
(insn 29 28 30 2 (set (reg/f:DI 5 di [orig:68 D.5010 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [orig:67 D.5009 ] [67]) [0 *_13+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.5009 ] [67])
        (nil)))
(insn 30 29 31 2 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 4 si [orig:69 D.5012 ] [69])
        (mem/f:DI (reg/f:DI 0 ax [100]) [0 *f_15(D)+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [100])
        (nil)))
(insn 32 31 33 2 (set (reg:SI 0 ax [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 1 dx [orig:70 D.5011 ] [70])
        (sign_extend:DI (reg:SI 0 ax [101]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [101])
        (nil)))
(insn 34 33 35 2 (set (reg:DI 0 ax [102])
        (reg:DI 1 dx [orig:70 D.5011 ] [70])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 0 ax [102])
                (ashift:DI (reg:DI 0 ax [102])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 0 ax [102])
                (plus:DI (reg:DI 0 ax [102])
                    (reg:DI 1 dx [orig:70 D.5011 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.5011 ] [70])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:70 D.5011 ] [70])
                (const_int 5 [0x5]))
            (nil))))
(insn 37 36 40 2 (parallel [
            (set (reg:DI 0 ax [103])
                (ashift:DI (reg:DI 0 ax [102])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [102])
        (nil)))
(insn 40 37 41 2 (parallel [
            (set (reg/f:DI 0 ax [orig:72 D.5012 ] [72])
                (plus:DI (reg:DI 0 ax [orig:71 D.5011 ] [71])
                    (reg/f:DI 4 si [orig:69 D.5012 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:71 D.5011 ] [71])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:69 D.5012 ] [69])
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [orig:73 D.5009 ] [73])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:72 D.5012 ] [72])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 D.5012 ] [72])
        (nil)))
(insn 42 41 43 2 (set (reg:SI 1 dx [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 1 dx [orig:74 D.5008 ] [74])
        (sign_extend:DI (reg:SI 1 dx [104]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [104])
        (nil)))
(insn 44 43 45 2 (parallel [
            (set (reg:DI 1 dx [orig:75 D.5008 ] [75])
                (plus:DI (reg:DI 1 dx [orig:74 D.5008 ] [74])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.5008 ] [74])
        (nil)))
(insn 45 44 46 2 (parallel [
            (set (reg:DI 1 dx [orig:76 D.5008 ] [76])
                (ashift:DI (reg:DI 1 dx [orig:75 D.5008 ] [75])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:75 D.5008 ] [75])
        (nil)))
(insn 46 45 47 2 (parallel [
            (set (reg/f:DI 0 ax [orig:77 D.5009 ] [77])
                (plus:DI (reg/f:DI 0 ax [orig:73 D.5009 ] [73])
                    (reg:DI 1 dx [orig:76 D.5008 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:76 D.5008 ] [76])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.5009 ] [73])
            (nil))))
(insn 47 46 48 2 (set (reg/f:DI 4 si [orig:78 D.5010 ] [78])
        (mem/f:DI (reg/f:DI 0 ax [orig:77 D.5009 ] [77]) [0 *_25+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 D.5009 ] [77])
        (nil)))
(insn 48 47 49 2 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 37 r8 [orig:79 D.5012 ] [79])
        (mem/f:DI (reg/f:DI 0 ax [105]) [0 *f_15(D)+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [105])
        (nil)))
(insn 50 49 51 2 (set (reg:SI 0 ax [106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 1 dx [orig:80 D.5011 ] [80])
        (sign_extend:DI (reg:SI 0 ax [106]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [106])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 0 ax [107])
        (reg:DI 1 dx [orig:80 D.5011 ] [80])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 0 ax [107])
                (ashift:DI (reg:DI 0 ax [107])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 0 ax [107])
                (plus:DI (reg:DI 0 ax [107])
                    (reg:DI 1 dx [orig:80 D.5011 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:80 D.5011 ] [80])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:80 D.5011 ] [80])
                (const_int 5 [0x5]))
            (nil))))
(insn 55 54 58 2 (parallel [
            (set (reg:DI 0 ax [108])
                (ashift:DI (reg:DI 0 ax [107])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [107])
        (nil)))
(insn 58 55 59 2 (parallel [
            (set (reg/f:DI 0 ax [orig:82 D.5012 ] [82])
                (plus:DI (reg:DI 0 ax [orig:81 D.5011 ] [81])
                    (reg/f:DI 37 r8 [orig:79 D.5012 ] [79])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:81 D.5011 ] [81])
        (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:79 D.5012 ] [79])
            (nil))))
(insn 59 58 60 2 (set (reg/f:DI 0 ax [orig:83 D.5009 ] [83])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:82 D.5012 ] [82])
                (const_int 8 [0x8])) [0 _30->nvp+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.5012 ] [82])
        (nil)))
(insn 60 59 61 2 (set (reg:SI 1 dx [109])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 1 dx [orig:84 D.5011 ] [84])
        (sign_extend:DI (reg:SI 1 dx [109]))) mSector.c:189 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [109])
        (nil)))
(insn 62 61 63 2 (parallel [
            (set (reg:DI 1 dx [orig:85 D.5011 ] [85])
                (ashift:DI (reg:DI 1 dx [orig:84 D.5011 ] [84])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.5011 ] [84])
        (nil)))
(insn 63 62 64 2 (parallel [
            (set (reg/f:DI 0 ax [orig:86 D.5009 ] [86])
                (plus:DI (reg/f:DI 0 ax [orig:83 D.5009 ] [83])
                    (reg:DI 1 dx [orig:85 D.5011 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:85 D.5011 ] [85])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 D.5009 ] [83])
            (nil))))
(insn 64 63 65 2 (set (reg/f:DI 0 ax [orig:87 D.5010 ] [87])
        (mem/f:DI (reg/f:DI 0 ax [orig:86 D.5009 ] [86]) [0 *_34+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.5009 ] [86])
        (nil)))
(insn 65 64 66 2 (set (reg:DI 1 dx [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 68 2 (set (reg:DI 37 r8)
        (reg:DI 1 dx [110])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [110])
        (nil)))
(insn 68 66 70 2 (set (reg:DI 1 dx)
        (reg/f:DI 5 di [orig:68 D.5010 ] [68])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:68 D.5010 ] [68])
        (nil)))
(insn 70 68 71 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 D.5010 ] [87])) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.5010 ] [87])
        (nil)))
(call_insn 71 70 72 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_intersection") [flags 0x41]  <function_decl 0x7f44d29fc200 find_intersection>) [0 find_intersection S1 A8])
            (const_int 0 [0]))) mSector.c:189 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 72 71 73 2 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (reg/f:DI 2 cx [orig:88 D.5012 ] [88])
        (mem/f:DI (reg/f:DI 0 ax [111]) [0 *f_15(D)+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (nil)))
(insn 74 73 75 2 (set (reg:SI 0 ax [112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:190 89 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:DI 1 dx [orig:89 D.5011 ] [89])
        (sign_extend:DI (reg:SI 0 ax [112]))) mSector.c:190 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [112])
        (nil)))
(insn 76 75 77 2 (set (reg:DI 0 ax [113])
        (reg:DI 1 dx [orig:89 D.5011 ] [89])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 0 ax [113])
                (ashift:DI (reg:DI 0 ax [113])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 513 {*ashldi3_1}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 0 ax [113])
                (plus:DI (reg:DI 0 ax [113])
                    (reg:DI 1 dx [orig:89 D.5011 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:89 D.5011 ] [89])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:89 D.5011 ] [89])
                (const_int 5 [0x5]))
            (nil))))
(insn 79 78 82 2 (parallel [
            (set (reg:DI 0 ax [114])
                (ashift:DI (reg:DI 0 ax [113])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [113])
        (nil)))
(insn 82 79 83 2 (parallel [
            (set (reg/f:DI 2 cx [orig:91 D.5012 ] [91])
                (plus:DI (reg/f:DI 2 cx [orig:88 D.5012 ] [88])
                    (reg:DI 0 ax [orig:90 D.5011 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:90 D.5011 ] [90])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:88 D.5012 ] [88])
            (nil))))
(insn 83 82 104 2 (set (reg:DI 1 dx [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 104 83 86 2 (set (reg:DI 0 ax [116])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -12 [0xfffffffffffffff4]))) mSector.c:190 267 {*leadi}
     (nil))
(insn 86 104 87 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [116])) mSector.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [116])
        (nil)))
(insn 87 86 88 2 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:91 D.5012 ] [91])) mSector.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:91 D.5012 ] [91])
        (nil)))
(call_insn 88 87 89 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nvp") [flags 0x3]  <function_decl 0x7f44d2a01300 add_nvp>) [0 add_nvp S1 A8])
            (const_int 0 [0]))) mSector.c:190 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 89 88 99 2 (set (reg:SI 0 ax [orig:92 D.5013 ] [92])
        (const_int 1 [0x1])) mSector.c:191 89 {*movsi_internal}
     (nil))
(insn 99 89 0 2 (use (reg/i:SI 0 ax)) mSector.c:192 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _is_to_add (_is_to_add, funcdef_no=11, decl_uid=4069, cgraph_uid=11)

deleting insn with uid = 106.
deleting insn with uid = 110.
scanning new insn with uid = 118.
deleting insn with uid = 80.
deleting insn with uid = 80.
scanning new insn with uid = 119.
deleting insn with uid = 86.
deleting insn with uid = 86.
deleting insn with uid = 90.
deleting insn with uid = 94.
scanning new insn with uid = 120.
deleting insn with uid = 53.
deleting insn with uid = 53.
scanning new insn with uid = 121.
deleting insn with uid = 59.
deleting insn with uid = 59.
deleting insn with uid = 63.
deleting insn with uid = 67.
scanning new insn with uid = 122.
deleting insn with uid = 11.
deleting insn with uid = 11.
scanning new insn with uid = 123.
deleting insn with uid = 17.
deleting insn with uid = 17.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 39.


_is_to_add

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={44d,43u} r1={16d,13u,2e} r2={9d,5u,2e} r4={13d,10u,2e} r5={10d,7u} r6={1d,30u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={25d,3u} r18={3d} r19={3d} r20={1d,1u,6e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 378{244d,122u,12e} in 86{83 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 113 114 115 116 117 118
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])
        (reg:SI 5 di [ xp ])) mSector.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ xp ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:194 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ bound ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 1 dx [ k ])) mSector.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ k ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [orig:60 D.5015 ] [60])
        (sign_extend:DI (reg:SI 0 ax [113]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [113])
        (nil)))
(insn 10 9 122 2 (parallel [
            (set (reg:DI 0 ax [orig:61 D.5015 ] [61])
                (plus:DI (reg:DI 0 ax [orig:60 D.5015 ] [60])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.5015 ] [60])
        (nil)))
(insn 122 10 12 2 (set (reg:DI 1 dx [orig:62 D.5015 ] [62])
        (mult:DI (reg:DI 0 ax [orig:61 D.5015 ] [61])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 12 122 13 2 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.5016 ] [63])
                (plus:DI (reg/f:DI 0 ax [114])
                    (reg:DI 1 dx [orig:62 D.5015 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [114])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.5015 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.5015 ] [62]))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 2 cx [orig:64 D.5017 ] [64])
        (mem/f:DI (reg/f:DI 0 ax [orig:63 D.5016 ] [63]) [0 *_7+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.5016 ] [63])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 0 ax [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 16 15 123 2 (set (reg:DI 0 ax [orig:65 D.5018 ] [65])
        (sign_extend:DI (reg:SI 0 ax [115]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [115])
        (nil)))
(insn 123 16 18 2 (set (reg:DI 1 dx [orig:66 D.5018 ] [66])
        (mult:DI (reg:DI 0 ax [orig:65 D.5018 ] [65])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 18 123 19 2 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.5016 ] [67])
                (plus:DI (reg/f:DI 0 ax [116])
                    (reg:DI 1 dx [orig:66 D.5018 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [116])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.5018 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.5018 ] [66]))
                (nil)))))
(insn 20 19 21 2 (set (reg/f:DI 1 dx [orig:68 D.5017 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [orig:67 D.5016 ] [67]) [0 *_11+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.5016 ] [67])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [orig:69 D.5016 ] [69])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si [117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si [orig:70 D.5015 ] [70])
        (sign_extend:DI (reg:SI 4 si [117]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 4 si [117])
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 4 si [orig:71 D.5015 ] [71])
                (plus:DI (reg:DI 4 si [orig:70 D.5015 ] [70])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:70 D.5015 ] [70])
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 4 si [orig:72 D.5015 ] [72])
                (ashift:DI (reg:DI 4 si [orig:71 D.5015 ] [71])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:71 D.5015 ] [71])
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 0 ax [orig:73 D.5016 ] [73])
                (plus:DI (reg/f:DI 0 ax [orig:69 D.5016 ] [69])
                    (reg:DI 4 si [orig:72 D.5015 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:72 D.5015 ] [72])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.5016 ] [69])
            (nil))))
(insn 27 26 28 2 (set (reg/f:DI 4 si [orig:74 D.5017 ] [74])
        (mem/f:DI (reg/f:DI 0 ax [orig:73 D.5016 ] [73]) [0 *_18+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.5016 ] [73])
        (nil)))
(insn 28 27 29 2 (set (reg/f:DI 0 ax [orig:75 D.5016 ] [75])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:SI 5 di [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di [orig:76 D.5018 ] [76])
        (sign_extend:DI (reg:SI 5 di [118]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di [118])
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 5 di [orig:77 D.5018 ] [77])
                (ashift:DI (reg:DI 5 di [orig:76 D.5018 ] [76])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:76 D.5018 ] [76])
        (nil)))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 0 ax [orig:78 D.5016 ] [78])
                (plus:DI (reg/f:DI 0 ax [orig:75 D.5016 ] [75])
                    (reg:DI 5 di [orig:77 D.5018 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:77 D.5018 ] [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.5016 ] [75])
            (nil))))
(insn 33 32 37 2 (set (reg/f:DI 0 ax [orig:79 D.5017 ] [79])
        (mem/f:DI (reg/f:DI 0 ax [orig:78 D.5016 ] [78]) [0 *_23+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 D.5016 ] [78])
        (nil)))
(insn 37 33 38 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:79 D.5017 ] [79])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.5017 ] [79])
        (nil)))
(call_insn 38 37 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("segments_intersect") [flags 0x41]  <function_decl 0x7f44d29f7d00 segments_intersect>) [0 segments_intersect S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 40 38 41 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:80 D.5014 ] [80])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:80 D.5014 ] [80])
        (nil)))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 119 120 121 122 123
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg/f:DI 0 ax [orig:81 D.5016 ] [81])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 3 (set (reg:SI 1 dx [119])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:DI 1 dx [orig:82 D.5015 ] [82])
        (sign_extend:DI (reg:SI 1 dx [119]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [119])
        (nil)))
(insn 46 45 47 3 (parallel [
            (set (reg:DI 1 dx [orig:83 D.5015 ] [83])
                (plus:DI (reg:DI 1 dx [orig:82 D.5015 ] [82])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:82 D.5015 ] [82])
        (nil)))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 1 dx [orig:84 D.5015 ] [84])
                (ashift:DI (reg:DI 1 dx [orig:83 D.5015 ] [83])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:83 D.5015 ] [83])
        (nil)))
(insn 48 47 49 3 (parallel [
            (set (reg/f:DI 0 ax [orig:85 D.5016 ] [85])
                (plus:DI (reg/f:DI 0 ax [orig:81 D.5016 ] [81])
                    (reg:DI 1 dx [orig:84 D.5015 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.5015 ] [84])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 D.5016 ] [81])
            (nil))))
(insn 49 48 50 3 (set (reg/f:DI 1 dx [orig:86 D.5017 ] [86])
        (mem/f:DI (reg/f:DI 0 ax [orig:85 D.5016 ] [85]) [0 *_30+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 D.5016 ] [85])
        (nil)))
(insn 50 49 51 3 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 51 50 52 3 (set (reg:DI 0 ax [orig:87 D.5015 ] [87])
        (sign_extend:DI (reg:SI 0 ax [120]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [120])
        (nil)))
(insn 52 51 120 3 (parallel [
            (set (reg:DI 0 ax [orig:88 D.5015 ] [88])
                (plus:DI (reg:DI 0 ax [orig:87 D.5015 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:87 D.5015 ] [87])
        (nil)))
(insn 120 52 54 3 (set (reg:DI 2 cx [orig:89 D.5015 ] [89])
        (mult:DI (reg:DI 0 ax [orig:88 D.5015 ] [88])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 54 120 55 3 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg/f:DI 0 ax [orig:90 D.5016 ] [90])
                (plus:DI (reg/f:DI 0 ax [121])
                    (reg:DI 2 cx [orig:89 D.5015 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [121])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:89 D.5015 ] [89])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 2 cx [orig:89 D.5015 ] [89]))
                (nil)))))
(insn 56 55 57 3 (set (reg/f:DI 2 cx [orig:91 D.5017 ] [91])
        (mem/f:DI (reg/f:DI 0 ax [orig:90 D.5016 ] [90]) [0 *_35+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 D.5016 ] [90])
        (nil)))
(insn 57 56 58 3 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 58 57 121 3 (set (reg:DI 0 ax [orig:92 D.5018 ] [92])
        (sign_extend:DI (reg:SI 0 ax [122]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [122])
        (nil)))
(insn 121 58 60 3 (set (reg:DI 4 si [orig:93 D.5018 ] [93])
        (mult:DI (reg:DI 0 ax [orig:92 D.5018 ] [92])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 60 121 61 3 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg/f:DI 0 ax [orig:94 D.5016 ] [94])
                (plus:DI (reg/f:DI 0 ax [123])
                    (reg:DI 4 si [orig:93 D.5018 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [123])
        (expr_list:REG_DEAD (reg:DI 4 si [orig:93 D.5018 ] [93])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 4 si [orig:93 D.5018 ] [93]))
                (nil)))))
(insn 62 61 64 3 (set (reg/f:DI 0 ax [orig:95 D.5017 ] [95])
        (mem/f:DI (reg/f:DI 0 ax [orig:94 D.5016 ] [94]) [0 *_39+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:94 D.5016 ] [94])
        (nil)))
(insn 64 62 65 3 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:91 D.5017 ] [91])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:91 D.5017 ] [91])
        (nil)))
(insn 65 64 66 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 D.5017 ] [95])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:95 D.5017 ] [95])
        (nil)))
(call_insn 66 65 68 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 68 66 69 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 D.5014 ] [96])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:96 D.5014 ] [96])
        (nil)))
(jump_insn 69 68 70 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 124 125 126 127 128
(note 70 69 71 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 4 (set (reg/f:DI 0 ax [orig:97 D.5016 ] [97])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 4 (set (reg:SI 1 dx [124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:DI 1 dx [orig:98 D.5018 ] [98])
        (sign_extend:DI (reg:SI 1 dx [124]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [124])
        (nil)))
(insn 74 73 75 4 (parallel [
            (set (reg:DI 1 dx [orig:99 D.5018 ] [99])
                (ashift:DI (reg:DI 1 dx [orig:98 D.5018 ] [98])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:98 D.5018 ] [98])
        (nil)))
(insn 75 74 76 4 (parallel [
            (set (reg/f:DI 0 ax [orig:100 D.5016 ] [100])
                (plus:DI (reg/f:DI 0 ax [orig:97 D.5016 ] [97])
                    (reg:DI 1 dx [orig:99 D.5018 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:99 D.5018 ] [99])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.5016 ] [97])
            (nil))))
(insn 76 75 77 4 (set (reg/f:DI 1 dx [orig:101 D.5017 ] [101])
        (mem/f:DI (reg/f:DI 0 ax [orig:100 D.5016 ] [100]) [0 *_45+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:100 D.5016 ] [100])
        (nil)))
(insn 77 76 78 4 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:DI 0 ax [orig:102 D.5015 ] [102])
        (sign_extend:DI (reg:SI 0 ax [125]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [125])
        (nil)))
(insn 79 78 118 4 (parallel [
            (set (reg:DI 0 ax [orig:103 D.5015 ] [103])
                (plus:DI (reg:DI 0 ax [orig:102 D.5015 ] [102])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:102 D.5015 ] [102])
        (nil)))
(insn 118 79 81 4 (set (reg:DI 2 cx [orig:104 D.5015 ] [104])
        (mult:DI (reg:DI 0 ax [orig:103 D.5015 ] [103])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 81 118 82 4 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 4 (parallel [
            (set (reg/f:DI 0 ax [orig:105 D.5016 ] [105])
                (plus:DI (reg/f:DI 0 ax [126])
                    (reg:DI 2 cx [orig:104 D.5015 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [126])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:104 D.5015 ] [104])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 2 cx [orig:104 D.5015 ] [104]))
                (nil)))))
(insn 83 82 84 4 (set (reg/f:DI 2 cx [orig:106 D.5017 ] [106])
        (mem/f:DI (reg/f:DI 0 ax [orig:105 D.5016 ] [105]) [0 *_50+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:105 D.5016 ] [105])
        (nil)))
(insn 84 83 85 4 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 85 84 119 4 (set (reg:DI 0 ax [orig:107 D.5018 ] [107])
        (sign_extend:DI (reg:SI 0 ax [127]))) mSector.c:196 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [127])
        (nil)))
(insn 119 85 87 4 (set (reg:DI 4 si [orig:108 D.5018 ] [108])
        (mult:DI (reg:DI 0 ax [orig:107 D.5018 ] [107])
            (const_int 8 [0x8]))) mSector.c:196 267 {*leadi}
     (nil))
(insn 87 119 88 4 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 4 (parallel [
            (set (reg/f:DI 0 ax [orig:109 D.5016 ] [109])
                (plus:DI (reg/f:DI 0 ax [128])
                    (reg:DI 4 si [orig:108 D.5018 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [128])
        (expr_list:REG_DEAD (reg:DI 4 si [orig:108 D.5018 ] [108])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
                    (reg:DI 4 si [orig:108 D.5018 ] [108]))
                (nil)))))
(insn 89 88 91 4 (set (reg/f:DI 0 ax [orig:110 D.5017 ] [110])
        (mem/f:DI (reg/f:DI 0 ax [orig:109 D.5016 ] [109]) [0 *_54+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.5016 ] [109])
        (nil)))
(insn 91 89 92 4 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:106 D.5017 ] [106])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:106 D.5017 ] [106])
        (nil)))
(insn 92 91 93 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:110 D.5017 ] [110])) mSector.c:196 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:110 D.5017 ] [110])
        (nil)))
(call_insn 93 92 95 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 95 93 96 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 D.5014 ] [111])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:111 D.5014 ] [111])
        (nil)))
(jump_insn 96 95 97 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 97 96 98 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 116 5 (set (reg:SI 0 ax [orig:59 D.5014 ] [59])
        (const_int 1 [0x1])) mSector.c:197 89 {*movsi_internal}
     (nil))
(jump_insn 116 98 117 5 (set (pc)
        (label_ref 104)) mSector.c:197 650 {jump}
     (nil)
 -> 104)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 117 116 101)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 101 117 102 6 79 "" [3 uses])
(note 102 101 103 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 6 (set (reg:SI 0 ax [orig:59 D.5014 ] [59])
        (const_int 0 [0])) mSector.c:199 89 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 112
(code_label 104 103 105 7 80 "" [1 uses])
(note 105 104 113 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 113 105 0 7 (use (reg/i:SI 0 ax)) mSector.c:200 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function modify_traj_intersect_bound (modify_traj_intersect_bound, funcdef_no=12, decl_uid=1882, cgraph_uid=12)

deleting insn with uid = 103.
deleting insn with uid = 107.
deleting insn with uid = 79.
deleting insn with uid = 80.
scanning new insn with uid = 117.
deleting insn with uid = 88.
deleting insn with uid = 88.
scanning new insn with uid = 118.
scanning new insn with uid = 119.
deleting insn with uid = 89.
deleting insn with uid = 89.
scanning new insn with uid = 120.
scanning new insn with uid = 121.
deleting insn with uid = 90.
deleting insn with uid = 90.
deleting insn with uid = 62.
deleting insn with uid = 63.
deleting insn with uid = 39.
deleting insn with uid = 40.
scanning new insn with uid = 122.
deleting insn with uid = 48.
deleting insn with uid = 48.
scanning new insn with uid = 123.
scanning new insn with uid = 124.
deleting insn with uid = 49.
deleting insn with uid = 49.
scanning new insn with uid = 125.
scanning new insn with uid = 126.
deleting insn with uid = 50.
deleting insn with uid = 50.
deleting insn with uid = 19.
deleting insn with uid = 20.
scanning new insn with uid = 127.
deleting insn with uid = 24.
deleting insn with uid = 24.
scanning new insn with uid = 128.
scanning new insn with uid = 129.
deleting insn with uid = 25.
deleting insn with uid = 25.
scanning new insn with uid = 130.
scanning new insn with uid = 131.
deleting insn with uid = 26.
deleting insn with uid = 26.


modify_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={45d,45u} r1={14d,17u,4e} r2={8d,10u} r4={1d,1u} r5={1d,1u} r6={1d,29u} r7={1d,8u} r17={25d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 225{107d,114u,4e} in 83{83 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ Nflight ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 113 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:214 89 {*movsi_internal}
     (nil))
(jump_insn 113 7 114 2 (set (pc)
        (label_ref 92)) mSector.c:214 650 {jump}
     (nil)
 -> 92)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 114 113 96)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 65 66 95 96 97 98 99
(code_label 96 114 10 3 85 "" [1 uses])
(note 10 96 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 2 cx [orig:60 D.5020 ] [60])
        (mem/f:DI (reg/f:DI 0 ax [95]) [0 *flight_6(D)+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
        (nil)))
(insn 13 12 14 3 (set (reg:SI 0 ax [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:215 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx [orig:61 D.5021 ] [61])
        (sign_extend:DI (reg:SI 0 ax [96]))) mSector.c:215 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [96])
        (nil)))
(insn 15 14 16 3 (set (reg:DI 0 ax [97])
        (reg:DI 1 dx [orig:61 D.5021 ] [61])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 0 ax [97])
                (ashift:DI (reg:DI 0 ax [97])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 0 ax [97])
                (plus:DI (reg:DI 0 ax [97])
                    (reg:DI 1 dx [orig:61 D.5021 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.5021 ] [61])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:61 D.5021 ] [61])
                (const_int 5 [0x5]))
            (nil))))
(insn 18 17 21 3 (parallel [
            (set (reg:DI 0 ax [98])
                (ashift:DI (reg:DI 0 ax [97])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [97])
        (nil)))
(insn 21 18 22 3 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.5020 ] [63])
                (plus:DI (reg:DI 0 ax [orig:62 D.5021 ] [62])
                    (reg/f:DI 2 cx [orig:60 D.5020 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.5021 ] [62])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:60 D.5020 ] [60])
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [orig:64 D.5022 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 D.5020 ] [63])
                (const_int 8 [0x8])) [0 _10->nvp+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.5020 ] [63])
        (nil)))
(insn 23 22 127 3 (set (reg/f:DI 0 ax [orig:65 D.5023 ] [65])
        (mem/f:DI (reg/f:DI 0 ax [orig:64 D.5022 ] [64]) [0 *_11+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.5022 ] [64])
        (nil)))
(insn 127 23 128 3 (set (reg/f:DI 2 cx [orig:66 D.5023 ] [66])
        (plus:DI (reg/f:DI 0 ax [orig:65 D.5023 ] [65])
            (const_int 48 [0x30]))) mSector.c:215 267 {*leadi}
     (nil))
(insn 128 127 129 3 (set (reg:DI 0 ax)
        (const_int 0 [0])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 3 (set (reg:SI 1 dx)
        (const_int 0 [0])) mSector.c:215 89 {*movsi_internal}
     (nil))
(insn 130 129 131 3 (set (mem:DI (reg/f:DI 2 cx [orig:66 D.5023 ] [66]) [0 *_13+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 27 3 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:66 D.5023 ] [66])
                (const_int 8 [0x8])) [0 *_13+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:215 89 {*movsi_internal}
     (nil))
(insn 27 131 115 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:216 89 {*movsi_internal}
     (nil))
(jump_insn 115 27 116 3 (set (pc)
        (label_ref 52)) mSector.c:216 650 {jump}
     (nil)
 -> 52)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 116 115 67)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 73 74 75 76 77 78 79 80 81 82 100 101 102 103 104 105
(code_label 67 116 30 4 84 "" [1 uses])
(note 30 67 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 2 cx [orig:73 D.5020 ] [73])
        (mem/f:DI (reg/f:DI 0 ax [100]) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [100])
        (nil)))
(insn 33 32 34 4 (set (reg:SI 0 ax [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 1 dx [orig:74 D.5021 ] [74])
        (sign_extend:DI (reg:SI 0 ax [101]))) mSector.c:216 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [101])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 0 ax [102])
        (reg:DI 1 dx [orig:74 D.5021 ] [74])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 0 ax [102])
                (ashift:DI (reg:DI 0 ax [102])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 0 ax [102])
                (plus:DI (reg:DI 0 ax [102])
                    (reg:DI 1 dx [orig:74 D.5021 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.5021 ] [74])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:74 D.5021 ] [74])
                (const_int 5 [0x5]))
            (nil))))
(insn 38 37 41 4 (parallel [
            (set (reg:DI 0 ax [103])
                (ashift:DI (reg:DI 0 ax [102])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [102])
        (nil)))
(insn 41 38 42 4 (parallel [
            (set (reg/f:DI 0 ax [orig:76 D.5020 ] [76])
                (plus:DI (reg:DI 0 ax [orig:75 D.5021 ] [75])
                    (reg/f:DI 2 cx [orig:73 D.5020 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:75 D.5021 ] [75])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:73 D.5020 ] [73])
            (nil))))
(insn 42 41 43 4 (set (reg/f:DI 0 ax [orig:77 D.5022 ] [77])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:76 D.5020 ] [76])
                (const_int 8 [0x8])) [0 _24->nvp+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:76 D.5020 ] [76])
        (nil)))
(insn 43 42 44 4 (set (reg:SI 1 dx [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 1 dx [orig:78 D.5021 ] [78])
        (sign_extend:DI (reg:SI 1 dx [104]))) mSector.c:216 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [104])
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 1 dx [orig:79 D.5021 ] [79])
                (ashift:DI (reg:DI 1 dx [orig:78 D.5021 ] [78])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:78 D.5021 ] [78])
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 0 ax [orig:80 D.5022 ] [80])
                (plus:DI (reg/f:DI 0 ax [orig:77 D.5022 ] [77])
                    (reg:DI 1 dx [orig:79 D.5021 ] [79])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:79 D.5021 ] [79])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 D.5022 ] [77])
            (nil))))
(insn 47 46 122 4 (set (reg/f:DI 0 ax [orig:81 D.5023 ] [81])
        (mem/f:DI (reg/f:DI 0 ax [orig:80 D.5022 ] [80]) [0 *_28+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.5022 ] [80])
        (nil)))
(insn 122 47 123 4 (set (reg/f:DI 2 cx [orig:82 D.5023 ] [82])
        (plus:DI (reg/f:DI 0 ax [orig:81 D.5023 ] [81])
            (const_int 48 [0x30]))) mSector.c:216 267 {*leadi}
     (nil))
(insn 123 122 124 4 (set (reg:DI 0 ax)
        (const_int -9223372036854775808 [0x8000000000000000])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 4 (set (reg:SI 1 dx)
        (const_int 16383 [0x3fff])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 125 124 126 4 (set (mem:DI (reg/f:DI 2 cx [orig:82 D.5023 ] [82]) [0 *_30+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 51 4 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:82 D.5023 ] [82])
                (const_int 8 [0x8])) [0 *_30+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 51 126 52 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67 68 69 70 71 72 106 107 108 109
(code_label 52 51 53 5 83 "" [1 uses])
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 2 cx [orig:67 D.5020 ] [67])
        (mem/f:DI (reg/f:DI 0 ax [106]) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [106])
        (nil)))
(insn 56 55 57 5 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (set (reg:DI 1 dx [orig:68 D.5021 ] [68])
        (sign_extend:DI (reg:SI 0 ax [107]))) mSector.c:216 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [107])
        (nil)))
(insn 58 57 59 5 (set (reg:DI 0 ax [108])
        (reg:DI 1 dx [orig:68 D.5021 ] [68])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:DI 0 ax [108])
                (ashift:DI (reg:DI 0 ax [108])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 60 59 61 5 (parallel [
            (set (reg:DI 0 ax [108])
                (plus:DI (reg:DI 0 ax [108])
                    (reg:DI 1 dx [orig:68 D.5021 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.5021 ] [68])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:68 D.5021 ] [68])
                (const_int 5 [0x5]))
            (nil))))
(insn 61 60 64 5 (parallel [
            (set (reg:DI 0 ax [109])
                (ashift:DI (reg:DI 0 ax [108])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [108])
        (nil)))
(insn 64 61 65 5 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.5020 ] [70])
                (plus:DI (reg:DI 0 ax [orig:69 D.5021 ] [69])
                    (reg/f:DI 2 cx [orig:67 D.5020 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.5021 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:67 D.5020 ] [67])
            (nil))))
(insn 65 64 66 5 (set (reg:SI 0 ax [orig:71 D.5019 ] [71])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:70 D.5020 ] [70])
                (const_int 4 [0x4])) [0 _18->n_nvp+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.5020 ] [70])
        (nil)))
(insn 66 65 68 5 (parallel [
            (set (reg:SI 0 ax [orig:72 D.5019 ] [72])
                (plus:SI (reg:SI 0 ax [orig:71 D.5019 ] [71])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 D.5019 ] [71])
        (nil)))
(insn 68 66 69 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:72 D.5019 ] [72])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) mSector.c:216 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 D.5019 ] [72])
        (nil)))
(jump_insn 69 68 70 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:216 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 86 87 88 89 90 91 92 110 111 112 113 114 115
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 6 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 6 (set (reg/f:DI 2 cx [orig:83 D.5020 ] [83])
        (mem/f:DI (reg/f:DI 0 ax [110]) [0 *flight_6(D)+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [110])
        (nil)))
(insn 73 72 74 6 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 74 73 75 6 (set (reg:DI 1 dx [orig:84 D.5021 ] [84])
        (sign_extend:DI (reg:SI 0 ax [111]))) mSector.c:217 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [111])
        (nil)))
(insn 75 74 76 6 (set (reg:DI 0 ax [112])
        (reg:DI 1 dx [orig:84 D.5021 ] [84])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 6 (parallel [
            (set (reg:DI 0 ax [112])
                (ashift:DI (reg:DI 0 ax [112])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (nil))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 0 ax [112])
                (plus:DI (reg:DI 0 ax [112])
                    (reg:DI 1 dx [orig:84 D.5021 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.5021 ] [84])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:84 D.5021 ] [84])
                (const_int 5 [0x5]))
            (nil))))
(insn 78 77 81 6 (parallel [
            (set (reg:DI 0 ax [113])
                (ashift:DI (reg:DI 0 ax [112])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [112])
        (nil)))
(insn 81 78 82 6 (parallel [
            (set (reg/f:DI 0 ax [orig:86 D.5020 ] [86])
                (plus:DI (reg:DI 0 ax [orig:85 D.5021 ] [85])
                    (reg/f:DI 2 cx [orig:83 D.5020 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:85 D.5021 ] [85])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:83 D.5020 ] [83])
            (nil))))
(insn 82 81 83 6 (set (reg/f:DI 0 ax [orig:87 D.5022 ] [87])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:86 D.5020 ] [86])
                (const_int 8 [0x8])) [0 _35->nvp+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.5020 ] [86])
        (nil)))
(insn 83 82 84 6 (set (reg:SI 1 dx [114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 1 dx [orig:88 D.5021 ] [88])
        (sign_extend:DI (reg:SI 1 dx [114]))) mSector.c:217 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [114])
        (nil)))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 1 dx [orig:89 D.5021 ] [89])
                (ashift:DI (reg:DI 1 dx [orig:88 D.5021 ] [88])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:88 D.5021 ] [88])
        (nil)))
(insn 86 85 87 6 (parallel [
            (set (reg/f:DI 0 ax [orig:90 D.5022 ] [90])
                (plus:DI (reg/f:DI 0 ax [orig:87 D.5022 ] [87])
                    (reg:DI 1 dx [orig:89 D.5021 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:89 D.5021 ] [89])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.5022 ] [87])
            (nil))))
(insn 87 86 117 6 (set (reg/f:DI 0 ax [orig:91 D.5023 ] [91])
        (mem/f:DI (reg/f:DI 0 ax [orig:90 D.5022 ] [90]) [0 *_39+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 D.5022 ] [90])
        (nil)))
(insn 117 87 118 6 (set (reg/f:DI 2 cx [orig:92 D.5023 ] [92])
        (plus:DI (reg/f:DI 0 ax [orig:91 D.5023 ] [91])
            (const_int 48 [0x30]))) mSector.c:217 267 {*leadi}
     (nil))
(insn 118 117 119 6 (set (reg:DI 0 ax)
        (const_int 0 [0])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 6 (set (reg:SI 1 dx)
        (const_int 0 [0])) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 120 119 121 6 (set (mem:DI (reg/f:DI 2 cx [orig:92 D.5023 ] [92]) [0 *_41+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 121 120 91 6 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:92 D.5023 ] [92])
                (const_int 8 [0x8])) [0 *_41+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 91 121 92 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:214 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 116
(code_label 92 91 93 7 82 "" [1 uses])
(note 93 92 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 7 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 97 7 (set (reg:SI 0 ax [orig:59 D.5019 ] [59])
        (mem:SI (reg/f:DI 0 ax [116]) [0 *Nflight_4(D)+0 S4 A32])) mSector.c:214 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [116])
        (nil)))
(insn 97 95 98 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.5019 ] [59])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mSector.c:214 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.5019 ] [59])
        (nil)))
(jump_insn 98 97 99 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) mSector.c:214 612 {*jcc_1}
     (nil)
 -> 96)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 93 94
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 110 8 (set (reg:SI 0 ax [orig:93 D.5019 ] [93])
        (const_int 1 [0x1])) mSector.c:220 89 {*movsi_internal}
     (nil))
(insn 110 100 0 8 (use (reg/i:SI 0 ax)) mSector.c:221 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function set_boundary_flag_onFlight (set_boundary_flag_onFlight, funcdef_no=13, decl_uid=1890, cgraph_uid=13)

deleting insn with uid = 526.
deleting insn with uid = 530.
deleting insn with uid = 495.
deleting insn with uid = 496.
deleting insn with uid = 506.
deleting insn with uid = 507.
deleting insn with uid = 466.
deleting insn with uid = 467.
deleting insn with uid = 478.
deleting insn with uid = 479.
deleting insn with uid = 450.
deleting insn with uid = 451.
deleting insn with uid = 435.
deleting insn with uid = 436.
deleting insn with uid = 418.
deleting insn with uid = 419.
deleting insn with uid = 398.
deleting insn with uid = 399.
scanning new insn with uid = 555.
deleting insn with uid = 400.
deleting insn with uid = 400.
deleting insn with uid = 372.
deleting insn with uid = 373.
deleting insn with uid = 386.
deleting insn with uid = 345.
deleting insn with uid = 346.
deleting insn with uid = 358.
scanning new insn with uid = 556.
deleting insn with uid = 303.
deleting insn with uid = 303.
deleting insn with uid = 308.
deleting insn with uid = 319.
deleting insn with uid = 320.
deleting insn with uid = 294.
deleting insn with uid = 295.
deleting insn with uid = 276.
deleting insn with uid = 277.
deleting insn with uid = 256.
deleting insn with uid = 257.
scanning new insn with uid = 557.
deleting insn with uid = 258.
deleting insn with uid = 258.
deleting insn with uid = 229.
deleting insn with uid = 230.
deleting insn with uid = 243.
deleting insn with uid = 202.
deleting insn with uid = 203.
deleting insn with uid = 215.
deleting insn with uid = 179.
deleting insn with uid = 180.
deleting insn with uid = 154.
deleting insn with uid = 155.
scanning new insn with uid = 558.
deleting insn with uid = 163.
deleting insn with uid = 163.
scanning new insn with uid = 559.
scanning new insn with uid = 560.
deleting insn with uid = 164.
deleting insn with uid = 164.
scanning new insn with uid = 561.
scanning new insn with uid = 562.
deleting insn with uid = 165.
deleting insn with uid = 165.
deleting insn with uid = 130.
deleting insn with uid = 131.
scanning new insn with uid = 563.
deleting insn with uid = 139.
deleting insn with uid = 139.
scanning new insn with uid = 564.
scanning new insn with uid = 565.
deleting insn with uid = 140.
deleting insn with uid = 140.
scanning new insn with uid = 566.
scanning new insn with uid = 567.
deleting insn with uid = 141.
deleting insn with uid = 141.
deleting insn with uid = 104.
deleting insn with uid = 105.
deleting insn with uid = 77.
deleting insn with uid = 78.
deleting insn with uid = 91.
deleting insn with uid = 50.
deleting insn with uid = 51.
deleting insn with uid = 63.
deleting insn with uid = 19.
deleting insn with uid = 20.
deleting insn with uid = 31.
deleting insn with uid = 32.


set_boundary_flag_onFlight

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={224d,222u,1e} r1={78d,92u,24e} r2={37d,29u} r4={26d,17u} r5={25d,16u} r6={1d,130u} r7={1d,40u} r8={10d,1u} r9={10d,1u} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={149d,14u} r18={9d} r19={9d} r20={1d,1u,1e} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} 
;;    total ref usage 1485{896d,563u,26e} in 410{401 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ Nflight ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 539 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:225 89 {*movsi_internal}
     (nil))
(jump_insn 539 7 540 2 (set (pc)
        (label_ref 515)) mSector.c:225 650 {jump}
     (nil)
 -> 515)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 540 539 519)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 65 66 67 243 244 245 246 247 248 249 250
(code_label 519 540 10 3 107 "" [1 uses])
(note 10 519 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [243])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 2 cx [orig:60 D.5025 ] [60])
        (mem/f:DI (reg/f:DI 0 ax [243]) [0 *f_9(D)+0 S8 A64])) mSector.c:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [243])
        (nil)))
(insn 13 12 14 3 (set (reg:SI 0 ax [244])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:226 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx [orig:61 D.5026 ] [61])
        (sign_extend:DI (reg:SI 0 ax [244]))) mSector.c:226 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [244])
        (nil)))
(insn 15 14 16 3 (set (reg:DI 0 ax [245])
        (reg:DI 1 dx [orig:61 D.5026 ] [61])) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 0 ax [245])
                (ashift:DI (reg:DI 0 ax [245])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 0 ax [245])
                (plus:DI (reg:DI 0 ax [245])
                    (reg:DI 1 dx [orig:61 D.5026 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.5026 ] [61])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:61 D.5026 ] [61])
                (const_int 5 [0x5]))
            (nil))))
(insn 18 17 21 3 (parallel [
            (set (reg:DI 0 ax [246])
                (ashift:DI (reg:DI 0 ax [245])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [245])
        (nil)))
(insn 21 18 22 3 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.5025 ] [63])
                (plus:DI (reg:DI 0 ax [orig:62 D.5026 ] [62])
                    (reg/f:DI 2 cx [orig:60 D.5025 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.5026 ] [62])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:60 D.5025 ] [60])
            (nil))))
(insn 22 21 23 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:63 D.5025 ] [63])
                (const_int 44 [0x2c])) [0 _13->st_indx+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.5025 ] [63])
        (nil)))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [247])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 2 cx [orig:64 D.5025 ] [64])
        (mem/f:DI (reg/f:DI 0 ax [247]) [0 *f_9(D)+0 S8 A64])) mSector.c:227 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [247])
        (nil)))
(insn 25 24 26 3 (set (reg:SI 0 ax [248])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:227 89 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 1 dx [orig:65 D.5026 ] [65])
        (sign_extend:DI (reg:SI 0 ax [248]))) mSector.c:227 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [248])
        (nil)))
(insn 27 26 28 3 (set (reg:DI 0 ax [249])
        (reg:DI 1 dx [orig:65 D.5026 ] [65])) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 0 ax [249])
                (ashift:DI (reg:DI 0 ax [249])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 513 {*ashldi3_1}
     (nil))
(insn 29 28 30 3 (parallel [
            (set (reg:DI 0 ax [249])
                (plus:DI (reg:DI 0 ax [249])
                    (reg:DI 1 dx [orig:65 D.5026 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.5026 ] [65])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:65 D.5026 ] [65])
                (const_int 5 [0x5]))
            (nil))))
(insn 30 29 33 3 (parallel [
            (set (reg:DI 0 ax [250])
                (ashift:DI (reg:DI 0 ax [249])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [249])
        (nil)))
(insn 33 30 34 3 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.5025 ] [67])
                (plus:DI (reg:DI 0 ax [orig:66 D.5026 ] [66])
                    (reg/f:DI 2 cx [orig:64 D.5025 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.5026 ] [66])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:64 D.5025 ] [64])
            (nil))))
(insn 34 33 35 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:67 D.5025 ] [67])
                (const_int 40 [0x28])) [0 _17->ready+0 S4 A64])
        (const_int 0 [0])) mSector.c:227 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.5025 ] [67])
        (nil)))
(insn 35 34 36 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 89 {*movsi_internal}
     (nil))
(insn 36 35 541 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 89 {*movsi_internal}
     (nil))
(jump_insn 541 36 542 3 (set (pc)
        (label_ref 169)) mSector.c:228 650 {jump}
     (nil)
 -> 169)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 542 541 184)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 77 78 79 80 81 82 83 84 85 251 252 253 254 255
(code_label 184 542 39 4 94 "" [1 uses])
(note 39 184 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:SI 4 si [orig:74 D.5024 ] [74])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (reg/f:DI 2 cx [orig:75 D.5027 ] [75])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 0 ax [251])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 4 (set (reg/f:DI 5 di [orig:76 D.5025 ] [76])
        (mem/f:DI (reg/f:DI 0 ax [251]) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [251])
        (nil)))
(insn 44 43 45 4 (set (reg:SI 0 ax [252])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 1 dx [orig:77 D.5026 ] [77])
        (sign_extend:DI (reg:SI 0 ax [252]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [252])
        (nil)))
(insn 46 45 47 4 (set (reg:DI 0 ax [253])
        (reg:DI 1 dx [orig:77 D.5026 ] [77])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 0 ax [253])
                (ashift:DI (reg:DI 0 ax [253])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 0 ax [253])
                (plus:DI (reg:DI 0 ax [253])
                    (reg:DI 1 dx [orig:77 D.5026 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:77 D.5026 ] [77])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:77 D.5026 ] [77])
                (const_int 5 [0x5]))
            (nil))))
(insn 49 48 52 4 (parallel [
            (set (reg:DI 0 ax [254])
                (ashift:DI (reg:DI 0 ax [253])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [253])
        (nil)))
(insn 52 49 53 4 (parallel [
            (set (reg/f:DI 0 ax [orig:79 D.5025 ] [79])
                (plus:DI (reg:DI 0 ax [orig:78 D.5026 ] [78])
                    (reg/f:DI 5 di [orig:76 D.5025 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:78 D.5026 ] [78])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:76 D.5025 ] [76])
            (nil))))
(insn 53 52 54 4 (set (reg/f:DI 0 ax [orig:80 D.5027 ] [80])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:79 D.5025 ] [79])
                (const_int 8 [0x8])) [0 _31->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.5025 ] [79])
        (nil)))
(insn 54 53 55 4 (set (reg:SI 1 dx [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 1 dx [orig:81 D.5026 ] [81])
        (sign_extend:DI (reg:SI 1 dx [255]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [255])
        (nil)))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 1 dx [orig:82 D.5026 ] [82])
                (ashift:DI (reg:DI 1 dx [orig:81 D.5026 ] [81])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:81 D.5026 ] [81])
        (nil)))
(insn 57 56 58 4 (parallel [
            (set (reg/f:DI 0 ax [orig:83 D.5027 ] [83])
                (plus:DI (reg/f:DI 0 ax [orig:80 D.5027 ] [80])
                    (reg:DI 1 dx [orig:82 D.5026 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:82 D.5026 ] [82])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.5027 ] [80])
            (nil))))
(insn 58 57 59 4 (set (reg/f:DI 0 ax [orig:84 D.5028 ] [84])
        (mem/f:DI (reg/f:DI 0 ax [orig:83 D.5027 ] [83]) [0 *_35+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 D.5027 ] [83])
        (nil)))
(insn 59 58 60 4 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:74 D.5024 ] [74])) mSector.c:229 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:74 D.5024 ] [74])
        (nil)))
(insn 60 59 61 4 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:75 D.5027 ] [75])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:75 D.5027 ] [75])
        (nil)))
(insn 61 60 62 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:84 D.5028 ] [84])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 D.5028 ] [84])
        (nil)))
(call_insn 62 61 64 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 64 62 65 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 D.5024 ] [85])
            (const_int 0 [0]))) mSector.c:229 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.5024 ] [85])
        (nil)))
(jump_insn 65 64 66 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 88 89 90 91 92 93 94 95 96 97 98 256 257 258 259 260
(note 66 65 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 5 (set (reg:SI 4 si [orig:86 D.5024 ] [86])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 68 67 69 5 (set (reg/f:DI 2 cx [orig:87 D.5027 ] [87])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 5 (set (reg/f:DI 0 ax [256])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 71 5 (set (reg/f:DI 5 di [orig:88 D.5025 ] [88])
        (mem/f:DI (reg/f:DI 0 ax [256]) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [256])
        (nil)))
(insn 71 70 72 5 (set (reg:SI 0 ax [257])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 72 71 73 5 (set (reg:DI 1 dx [orig:89 D.5026 ] [89])
        (sign_extend:DI (reg:SI 0 ax [257]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [257])
        (nil)))
(insn 73 72 74 5 (set (reg:DI 0 ax [258])
        (reg:DI 1 dx [orig:89 D.5026 ] [89])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 5 (parallel [
            (set (reg:DI 0 ax [258])
                (ashift:DI (reg:DI 0 ax [258])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 75 74 76 5 (parallel [
            (set (reg:DI 0 ax [258])
                (plus:DI (reg:DI 0 ax [258])
                    (reg:DI 1 dx [orig:89 D.5026 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:89 D.5026 ] [89])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:89 D.5026 ] [89])
                (const_int 5 [0x5]))
            (nil))))
(insn 76 75 79 5 (parallel [
            (set (reg:DI 0 ax [259])
                (ashift:DI (reg:DI 0 ax [258])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [258])
        (nil)))
(insn 79 76 80 5 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.5025 ] [91])
                (plus:DI (reg:DI 0 ax [orig:90 D.5026 ] [90])
                    (reg/f:DI 5 di [orig:88 D.5025 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:90 D.5026 ] [90])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:88 D.5025 ] [88])
            (nil))))
(insn 80 79 81 5 (set (reg/f:DI 0 ax [orig:92 D.5027 ] [92])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:91 D.5025 ] [91])
                (const_int 8 [0x8])) [0 _43->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.5025 ] [91])
        (nil)))
(insn 81 80 82 5 (set (reg:SI 1 dx [260])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 82 81 83 5 (set (reg:DI 1 dx [orig:93 D.5029 ] [93])
        (sign_extend:DI (reg:SI 1 dx [260]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [260])
        (nil)))
(insn 83 82 84 5 (parallel [
            (set (reg:DI 1 dx [orig:94 D.5029 ] [94])
                (plus:DI (reg:DI 1 dx [orig:93 D.5029 ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:93 D.5029 ] [93])
        (nil)))
(insn 84 83 85 5 (parallel [
            (set (reg:DI 1 dx [orig:95 D.5029 ] [95])
                (ashift:DI (reg:DI 1 dx [orig:94 D.5029 ] [94])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:94 D.5029 ] [94])
        (nil)))
(insn 85 84 86 5 (parallel [
            (set (reg/f:DI 0 ax [orig:96 D.5027 ] [96])
                (plus:DI (reg/f:DI 0 ax [orig:92 D.5027 ] [92])
                    (reg:DI 1 dx [orig:95 D.5029 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:95 D.5029 ] [95])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.5027 ] [92])
            (nil))))
(insn 86 85 87 5 (set (reg/f:DI 0 ax [orig:97 D.5028 ] [97])
        (mem/f:DI (reg/f:DI 0 ax [orig:96 D.5027 ] [96]) [0 *_48+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.5027 ] [96])
        (nil)))
(insn 87 86 88 5 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:86 D.5024 ] [86])) mSector.c:229 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:86 D.5024 ] [86])
        (nil)))
(insn 88 87 89 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:87 D.5027 ] [87])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:87 D.5027 ] [87])
        (nil)))
(insn 89 88 90 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:97 D.5028 ] [97])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.5028 ] [97])
        (nil)))
(call_insn 90 89 92 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 92 90 93 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 D.5024 ] [98])
            (const_int 0 [0]))) mSector.c:229 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:98 D.5024 ] [98])
        (nil)))
(jump_insn 93 92 94 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 102 103 104 105 106 107 108 109 261 262 263 264 265 266
(code_label 94 93 95 6 90 "" [1 uses])
(note 95 94 96 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 6 (set (reg/f:DI 0 ax [261])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 6 (set (reg/f:DI 2 cx [orig:99 D.5025 ] [99])
        (mem/f:DI (reg/f:DI 0 ax [261]) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [261])
        (nil)))
(insn 98 97 99 6 (set (reg:SI 0 ax [262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 99 98 100 6 (set (reg:DI 1 dx [orig:100 D.5026 ] [100])
        (sign_extend:DI (reg:SI 0 ax [262]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [262])
        (nil)))
(insn 100 99 101 6 (set (reg:DI 0 ax [263])
        (reg:DI 1 dx [orig:100 D.5026 ] [100])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 6 (parallel [
            (set (reg:DI 0 ax [263])
                (ashift:DI (reg:DI 0 ax [263])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 102 101 103 6 (parallel [
            (set (reg:DI 0 ax [263])
                (plus:DI (reg:DI 0 ax [263])
                    (reg:DI 1 dx [orig:100 D.5026 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:100 D.5026 ] [100])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:100 D.5026 ] [100])
                (const_int 5 [0x5]))
            (nil))))
(insn 103 102 106 6 (parallel [
            (set (reg:DI 0 ax [264])
                (ashift:DI (reg:DI 0 ax [263])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [263])
        (nil)))
(insn 106 103 107 6 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.5025 ] [102])
                (plus:DI (reg:DI 0 ax [orig:101 D.5026 ] [101])
                    (reg/f:DI 2 cx [orig:99 D.5025 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:101 D.5026 ] [101])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:99 D.5025 ] [99])
            (nil))))
(insn 107 106 108 6 (set (reg/f:DI 0 ax [orig:103 D.5027 ] [103])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:102 D.5025 ] [102])
                (const_int 8 [0x8])) [0 _54->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 D.5025 ] [102])
        (nil)))
(insn 108 107 109 6 (set (reg:SI 1 dx [265])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 109 108 110 6 (set (reg:DI 1 dx [orig:104 D.5026 ] [104])
        (sign_extend:DI (reg:SI 1 dx [265]))) mSector.c:229 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [265])
        (nil)))
(insn 110 109 111 6 (parallel [
            (set (reg:DI 1 dx [orig:105 D.5026 ] [105])
                (ashift:DI (reg:DI 1 dx [orig:104 D.5026 ] [104])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:104 D.5026 ] [104])
        (nil)))
(insn 111 110 112 6 (parallel [
            (set (reg/f:DI 0 ax [orig:106 D.5027 ] [106])
                (plus:DI (reg/f:DI 0 ax [orig:103 D.5027 ] [103])
                    (reg:DI 1 dx [orig:105 D.5026 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:105 D.5026 ] [105])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:103 D.5027 ] [103])
            (nil))))
(insn 112 111 113 6 (set (reg/f:DI 0 ax [orig:107 D.5028 ] [107])
        (mem/f:DI (reg/f:DI 0 ax [orig:106 D.5027 ] [106]) [0 *_58+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:106 D.5027 ] [106])
        (nil)))
(insn 113 112 114 6 (parallel [
            (set (reg/f:DI 0 ax [orig:108 D.5028 ] [108])
                (plus:DI (reg/f:DI 0 ax [orig:107 D.5028 ] [107])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:107 D.5028 ] [107])
        (nil)))
(insn 114 113 115 6 (set (reg:XF 9 st(1) [orig:109 D.5030 ] [109])
        (mem:XF (reg/f:DI 0 ax [orig:108 D.5028 ] [108]) [0 *_60+0 S16 A128])) mSector.c:229 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:108 D.5028 ] [108])
        (nil)))
(insn 115 114 116 6 (set (reg:XF 8 st [266])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mSector.c:229 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.4e+2 [0x0.fp+8])
        (nil)))
(insn 116 115 117 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 9 st(1) [orig:109 D.5030 ] [109])
            (reg:XF 8 st [266]))) mSector.c:229 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [266])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:109 D.5030 ] [109])
            (nil))))
(jump_insn 117 116 121 6 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 144)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 112 113 114 115 116 117 118 119 267 268 269 270 271 272
(note 121 117 122 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 7 (set (reg/f:DI 0 ax [267])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 7 (set (reg/f:DI 2 cx [orig:110 D.5025 ] [110])
        (mem/f:DI (reg/f:DI 0 ax [267]) [0 *f_9(D)+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [267])
        (nil)))
(insn 124 123 125 7 (set (reg:SI 0 ax [268])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:230 89 {*movsi_internal}
     (nil))
(insn 125 124 126 7 (set (reg:DI 1 dx [orig:111 D.5026 ] [111])
        (sign_extend:DI (reg:SI 0 ax [268]))) mSector.c:230 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [268])
        (nil)))
(insn 126 125 127 7 (set (reg:DI 0 ax [269])
        (reg:DI 1 dx [orig:111 D.5026 ] [111])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 7 (parallel [
            (set (reg:DI 0 ax [269])
                (ashift:DI (reg:DI 0 ax [269])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (nil))
(insn 128 127 129 7 (parallel [
            (set (reg:DI 0 ax [269])
                (plus:DI (reg:DI 0 ax [269])
                    (reg:DI 1 dx [orig:111 D.5026 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:111 D.5026 ] [111])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:111 D.5026 ] [111])
                (const_int 5 [0x5]))
            (nil))))
(insn 129 128 132 7 (parallel [
            (set (reg:DI 0 ax [270])
                (ashift:DI (reg:DI 0 ax [269])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [269])
        (nil)))
(insn 132 129 133 7 (parallel [
            (set (reg/f:DI 0 ax [orig:113 D.5025 ] [113])
                (plus:DI (reg:DI 0 ax [orig:112 D.5026 ] [112])
                    (reg/f:DI 2 cx [orig:110 D.5025 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:112 D.5026 ] [112])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:110 D.5025 ] [110])
            (nil))))
(insn 133 132 134 7 (set (reg/f:DI 0 ax [orig:114 D.5027 ] [114])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:113 D.5025 ] [113])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:113 D.5025 ] [113])
        (nil)))
(insn 134 133 135 7 (set (reg:SI 1 dx [271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:230 89 {*movsi_internal}
     (nil))
(insn 135 134 136 7 (set (reg:DI 1 dx [orig:115 D.5026 ] [115])
        (sign_extend:DI (reg:SI 1 dx [271]))) mSector.c:230 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [271])
        (nil)))
(insn 136 135 137 7 (parallel [
            (set (reg:DI 1 dx [orig:116 D.5026 ] [116])
                (ashift:DI (reg:DI 1 dx [orig:115 D.5026 ] [115])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:115 D.5026 ] [115])
        (nil)))
(insn 137 136 138 7 (parallel [
            (set (reg/f:DI 0 ax [orig:117 D.5027 ] [117])
                (plus:DI (reg/f:DI 0 ax [orig:114 D.5027 ] [114])
                    (reg:DI 1 dx [orig:116 D.5026 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:116 D.5026 ] [116])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:114 D.5027 ] [114])
            (nil))))
(insn 138 137 563 7 (set (reg/f:DI 0 ax [orig:118 D.5028 ] [118])
        (mem/f:DI (reg/f:DI 0 ax [orig:117 D.5027 ] [117]) [0 *_69+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:117 D.5027 ] [117])
        (nil)))
(insn 563 138 564 7 (set (reg/f:DI 2 cx [orig:119 D.5028 ] [119])
        (plus:DI (reg/f:DI 0 ax [orig:118 D.5028 ] [118])
            (const_int 48 [0x30]))) mSector.c:230 267 {*leadi}
     (nil))
(insn 564 563 565 7 (set (reg:DI 0 ax)
        (const_int -9223372036854775808 [0x8000000000000000])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 565 564 566 7 (set (reg:SI 1 dx)
        (const_int 16383 [0x3fff])) mSector.c:230 89 {*movsi_internal}
     (nil))
(insn 566 565 567 7 (set (mem:DI (reg/f:DI 2 cx [orig:119 D.5028 ] [119]) [0 *_71+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 567 566 543 7 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:119 D.5028 ] [119])
                (const_int 8 [0x8])) [0 *_71+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:230 89 {*movsi_internal}
     (nil))
(jump_insn 543 567 544 7 (set (pc)
        (label_ref 166)) mSector.c:230 650 {jump}
     (nil)
 -> 166)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 544 543 144)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 122 123 124 125 126 127 128 129 273 274 275 276 277 278
(code_label 144 544 145 8 91 "" [2 uses])
(note 145 144 146 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 8 (set (reg/f:DI 0 ax [273])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 8 (set (reg/f:DI 2 cx [orig:120 D.5025 ] [120])
        (mem/f:DI (reg/f:DI 0 ax [273]) [0 *f_9(D)+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [273])
        (nil)))
(insn 148 147 149 8 (set (reg:SI 0 ax [274])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:232 89 {*movsi_internal}
     (nil))
(insn 149 148 150 8 (set (reg:DI 1 dx [orig:121 D.5026 ] [121])
        (sign_extend:DI (reg:SI 0 ax [274]))) mSector.c:232 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [274])
        (nil)))
(insn 150 149 151 8 (set (reg:DI 0 ax [275])
        (reg:DI 1 dx [orig:121 D.5026 ] [121])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 151 150 152 8 (parallel [
            (set (reg:DI 0 ax [275])
                (ashift:DI (reg:DI 0 ax [275])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (nil))
(insn 152 151 153 8 (parallel [
            (set (reg:DI 0 ax [275])
                (plus:DI (reg:DI 0 ax [275])
                    (reg:DI 1 dx [orig:121 D.5026 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:121 D.5026 ] [121])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:121 D.5026 ] [121])
                (const_int 5 [0x5]))
            (nil))))
(insn 153 152 156 8 (parallel [
            (set (reg:DI 0 ax [276])
                (ashift:DI (reg:DI 0 ax [275])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [275])
        (nil)))
(insn 156 153 157 8 (parallel [
            (set (reg/f:DI 0 ax [orig:123 D.5025 ] [123])
                (plus:DI (reg:DI 0 ax [orig:122 D.5026 ] [122])
                    (reg/f:DI 2 cx [orig:120 D.5025 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:122 D.5026 ] [122])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:120 D.5025 ] [120])
            (nil))))
(insn 157 156 158 8 (set (reg/f:DI 0 ax [orig:124 D.5027 ] [124])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:123 D.5025 ] [123])
                (const_int 8 [0x8])) [0 _75->nvp+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:123 D.5025 ] [123])
        (nil)))
(insn 158 157 159 8 (set (reg:SI 1 dx [277])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:232 89 {*movsi_internal}
     (nil))
(insn 159 158 160 8 (set (reg:DI 1 dx [orig:125 D.5026 ] [125])
        (sign_extend:DI (reg:SI 1 dx [277]))) mSector.c:232 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [277])
        (nil)))
(insn 160 159 161 8 (parallel [
            (set (reg:DI 1 dx [orig:126 D.5026 ] [126])
                (ashift:DI (reg:DI 1 dx [orig:125 D.5026 ] [125])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:125 D.5026 ] [125])
        (nil)))
(insn 161 160 162 8 (parallel [
            (set (reg/f:DI 0 ax [orig:127 D.5027 ] [127])
                (plus:DI (reg/f:DI 0 ax [orig:124 D.5027 ] [124])
                    (reg:DI 1 dx [orig:126 D.5026 ] [126])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:126 D.5026 ] [126])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:124 D.5027 ] [124])
            (nil))))
(insn 162 161 558 8 (set (reg/f:DI 0 ax [orig:128 D.5028 ] [128])
        (mem/f:DI (reg/f:DI 0 ax [orig:127 D.5027 ] [127]) [0 *_79+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:127 D.5027 ] [127])
        (nil)))
(insn 558 162 559 8 (set (reg/f:DI 2 cx [orig:129 D.5028 ] [129])
        (plus:DI (reg/f:DI 0 ax [orig:128 D.5028 ] [128])
            (const_int 48 [0x30]))) mSector.c:232 267 {*leadi}
     (nil))
(insn 559 558 560 8 (set (reg:DI 0 ax)
        (const_int 0 [0])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 560 559 561 8 (set (reg:SI 1 dx)
        (const_int 0 [0])) mSector.c:232 89 {*movsi_internal}
     (nil))
(insn 561 560 562 8 (set (mem:DI (reg/f:DI 2 cx [orig:129 D.5028 ] [129]) [0 *_81+0 S8 A128])
        (reg:DI 0 ax)) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 562 561 166 8 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:129 D.5028 ] [129])
                (const_int 8 [0x8])) [0 *_81+8 S4 A64])
        (reg:SI 1 dx)) mSector.c:232 89 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 166 562 167 9 93 "" [1 uses])
(note 167 166 168 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70 71 72 73 279 280 281 282
(code_label 169 168 170 10 89 "" [1 uses])
(note 170 169 171 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 10 (set (reg/f:DI 0 ax [279])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 172 171 173 10 (set (reg/f:DI 2 cx [orig:68 D.5025 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [279]) [0 *f_9(D)+0 S8 A64])) mSector.c:228 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [279])
        (nil)))
(insn 173 172 174 10 (set (reg:SI 0 ax [280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:228 89 {*movsi_internal}
     (nil))
(insn 174 173 175 10 (set (reg:DI 1 dx [orig:69 D.5026 ] [69])
        (sign_extend:DI (reg:SI 0 ax [280]))) mSector.c:228 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [280])
        (nil)))
(insn 175 174 176 10 (set (reg:DI 0 ax [281])
        (reg:DI 1 dx [orig:69 D.5026 ] [69])) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 10 (parallel [
            (set (reg:DI 0 ax [281])
                (ashift:DI (reg:DI 0 ax [281])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 513 {*ashldi3_1}
     (nil))
(insn 177 176 178 10 (parallel [
            (set (reg:DI 0 ax [281])
                (plus:DI (reg:DI 0 ax [281])
                    (reg:DI 1 dx [orig:69 D.5026 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.5026 ] [69])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:69 D.5026 ] [69])
                (const_int 5 [0x5]))
            (nil))))
(insn 178 177 181 10 (parallel [
            (set (reg:DI 0 ax [282])
                (ashift:DI (reg:DI 0 ax [281])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [281])
        (nil)))
(insn 181 178 182 10 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.5025 ] [71])
                (plus:DI (reg:DI 0 ax [orig:70 D.5026 ] [70])
                    (reg/f:DI 2 cx [orig:68 D.5025 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 D.5026 ] [70])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:68 D.5025 ] [68])
            (nil))))
(insn 182 181 183 10 (set (reg:SI 0 ax [orig:72 D.5024 ] [72])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:71 D.5025 ] [71])
                (const_int 4 [0x4])) [0 _23->n_nvp+0 S4 A32])) mSector.c:228 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.5025 ] [71])
        (nil)))
(insn 183 182 185 10 (parallel [
            (set (reg:SI 0 ax [orig:73 D.5024 ] [73])
                (plus:SI (reg:SI 0 ax [orig:72 D.5024 ] [72])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 D.5024 ] [72])
        (nil)))
(insn 185 183 186 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:73 D.5024 ] [73])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:228 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 D.5024 ] [73])
        (nil)))
(jump_insn 186 185 187 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:228 612 {*jcc_1}
     (nil)
 -> 184)
;;  succ:       4
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 187 186 188 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 545 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:238 89 {*movsi_internal}
     (nil))
(jump_insn 545 188 546 11 (set (pc)
        (label_ref 266)) mSector.c:238 650 {jump}
     (nil)
 -> 266)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 546 545 281)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 136 137 138 139 140 141 142 143 144 145 146 147 283 284 285 286 287
(code_label 281 546 191 12 99 "" [1 uses])
(note 191 281 192 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 12 (set (reg:SI 4 si [orig:136 D.5024 ] [136])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 193 192 194 12 (set (reg/f:DI 2 cx [orig:137 D.5027 ] [137])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 194 193 195 12 (set (reg/f:DI 0 ax [283])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 195 194 196 12 (set (reg/f:DI 5 di [orig:138 D.5025 ] [138])
        (mem/f:DI (reg/f:DI 0 ax [283]) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [283])
        (nil)))
(insn 196 195 197 12 (set (reg:SI 0 ax [284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 197 196 198 12 (set (reg:DI 1 dx [orig:139 D.5026 ] [139])
        (sign_extend:DI (reg:SI 0 ax [284]))) mSector.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [284])
        (nil)))
(insn 198 197 199 12 (set (reg:DI 0 ax [285])
        (reg:DI 1 dx [orig:139 D.5026 ] [139])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 199 198 200 12 (parallel [
            (set (reg:DI 0 ax [285])
                (ashift:DI (reg:DI 0 ax [285])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 200 199 201 12 (parallel [
            (set (reg:DI 0 ax [285])
                (plus:DI (reg:DI 0 ax [285])
                    (reg:DI 1 dx [orig:139 D.5026 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:139 D.5026 ] [139])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:139 D.5026 ] [139])
                (const_int 5 [0x5]))
            (nil))))
(insn 201 200 204 12 (parallel [
            (set (reg:DI 0 ax [286])
                (ashift:DI (reg:DI 0 ax [285])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [285])
        (nil)))
(insn 204 201 205 12 (parallel [
            (set (reg/f:DI 0 ax [orig:141 D.5025 ] [141])
                (plus:DI (reg:DI 0 ax [orig:140 D.5026 ] [140])
                    (reg/f:DI 5 di [orig:138 D.5025 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:140 D.5026 ] [140])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:138 D.5025 ] [138])
            (nil))))
(insn 205 204 206 12 (set (reg/f:DI 0 ax [orig:142 D.5027 ] [142])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:141 D.5025 ] [141])
                (const_int 8 [0x8])) [0 _95->nvp+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:141 D.5025 ] [141])
        (nil)))
(insn 206 205 207 12 (set (reg:SI 1 dx [287])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 207 206 208 12 (set (reg:DI 1 dx [orig:143 D.5026 ] [143])
        (sign_extend:DI (reg:SI 1 dx [287]))) mSector.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [287])
        (nil)))
(insn 208 207 209 12 (parallel [
            (set (reg:DI 1 dx [orig:144 D.5026 ] [144])
                (ashift:DI (reg:DI 1 dx [orig:143 D.5026 ] [143])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:143 D.5026 ] [143])
        (nil)))
(insn 209 208 210 12 (parallel [
            (set (reg/f:DI 0 ax [orig:145 D.5027 ] [145])
                (plus:DI (reg/f:DI 0 ax [orig:142 D.5027 ] [142])
                    (reg:DI 1 dx [orig:144 D.5026 ] [144])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:144 D.5026 ] [144])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:142 D.5027 ] [142])
            (nil))))
(insn 210 209 211 12 (set (reg/f:DI 0 ax [orig:146 D.5028 ] [146])
        (mem/f:DI (reg/f:DI 0 ax [orig:145 D.5027 ] [145]) [0 *_99+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:145 D.5027 ] [145])
        (nil)))
(insn 211 210 212 12 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:136 D.5024 ] [136])) mSector.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:136 D.5024 ] [136])
        (nil)))
(insn 212 211 213 12 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:137 D.5027 ] [137])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:137 D.5027 ] [137])
        (nil)))
(insn 213 212 214 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:146 D.5028 ] [146])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:146 D.5028 ] [146])
        (nil)))
(call_insn 214 213 216 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 216 214 217 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:147 D.5024 ] [147])
            (const_int 0 [0]))) mSector.c:238 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:147 D.5024 ] [147])
        (nil)))
(jump_insn 217 216 218 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 246)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149 150 151 152 153 154 155 156 157 158 159 160 288 289 290 291 292
(note 218 217 219 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 13 (set (reg:SI 4 si [orig:148 D.5024 ] [148])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 220 219 221 13 (set (reg/f:DI 2 cx [orig:149 D.5027 ] [149])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 221 220 222 13 (set (reg/f:DI 0 ax [288])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 13 (set (reg/f:DI 5 di [orig:150 D.5025 ] [150])
        (mem/f:DI (reg/f:DI 0 ax [288]) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [288])
        (nil)))
(insn 223 222 224 13 (set (reg:SI 0 ax [289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 224 223 225 13 (set (reg:DI 1 dx [orig:151 D.5026 ] [151])
        (sign_extend:DI (reg:SI 0 ax [289]))) mSector.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [289])
        (nil)))
(insn 225 224 226 13 (set (reg:DI 0 ax [290])
        (reg:DI 1 dx [orig:151 D.5026 ] [151])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 226 225 227 13 (parallel [
            (set (reg:DI 0 ax [290])
                (ashift:DI (reg:DI 0 ax [290])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 227 226 228 13 (parallel [
            (set (reg:DI 0 ax [290])
                (plus:DI (reg:DI 0 ax [290])
                    (reg:DI 1 dx [orig:151 D.5026 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:151 D.5026 ] [151])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:151 D.5026 ] [151])
                (const_int 5 [0x5]))
            (nil))))
(insn 228 227 231 13 (parallel [
            (set (reg:DI 0 ax [291])
                (ashift:DI (reg:DI 0 ax [290])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [290])
        (nil)))
(insn 231 228 232 13 (parallel [
            (set (reg/f:DI 0 ax [orig:153 D.5025 ] [153])
                (plus:DI (reg:DI 0 ax [orig:152 D.5026 ] [152])
                    (reg/f:DI 5 di [orig:150 D.5025 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:152 D.5026 ] [152])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:150 D.5025 ] [150])
            (nil))))
(insn 232 231 233 13 (set (reg/f:DI 0 ax [orig:154 D.5027 ] [154])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:153 D.5025 ] [153])
                (const_int 8 [0x8])) [0 _107->nvp+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:153 D.5025 ] [153])
        (nil)))
(insn 233 232 234 13 (set (reg:SI 1 dx [292])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 234 233 235 13 (set (reg:DI 1 dx [orig:155 D.5029 ] [155])
        (sign_extend:DI (reg:SI 1 dx [292]))) mSector.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [292])
        (nil)))
(insn 235 234 236 13 (parallel [
            (set (reg:DI 1 dx [orig:156 D.5029 ] [156])
                (plus:DI (reg:DI 1 dx [orig:155 D.5029 ] [155])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:155 D.5029 ] [155])
        (nil)))
(insn 236 235 237 13 (parallel [
            (set (reg:DI 1 dx [orig:157 D.5029 ] [157])
                (ashift:DI (reg:DI 1 dx [orig:156 D.5029 ] [156])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:156 D.5029 ] [156])
        (nil)))
(insn 237 236 238 13 (parallel [
            (set (reg/f:DI 0 ax [orig:158 D.5027 ] [158])
                (plus:DI (reg/f:DI 0 ax [orig:154 D.5027 ] [154])
                    (reg:DI 1 dx [orig:157 D.5029 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:157 D.5029 ] [157])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:154 D.5027 ] [154])
            (nil))))
(insn 238 237 239 13 (set (reg/f:DI 0 ax [orig:159 D.5028 ] [159])
        (mem/f:DI (reg/f:DI 0 ax [orig:158 D.5027 ] [158]) [0 *_112+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:158 D.5027 ] [158])
        (nil)))
(insn 239 238 240 13 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:148 D.5024 ] [148])) mSector.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:148 D.5024 ] [148])
        (nil)))
(insn 240 239 241 13 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:149 D.5027 ] [149])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:149 D.5027 ] [149])
        (nil)))
(insn 241 240 242 13 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:159 D.5028 ] [159])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.5028 ] [159])
        (nil)))
(call_insn 242 241 244 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 244 242 245 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:160 D.5024 ] [160])
            (const_int 0 [0]))) mSector.c:238 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:160 D.5024 ] [160])
        (nil)))
(jump_insn 245 244 246 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 263)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161 162 163 164 293 294 295 296 297
(code_label 246 245 247 14 96 "" [1 uses])
(note 247 246 248 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 14 (set (reg/f:DI 0 ax [293])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 249 248 250 14 (set (reg/f:DI 2 cx [orig:161 D.5025 ] [161])
        (mem/f:DI (reg/f:DI 0 ax [293]) [0 *f_9(D)+0 S8 A64])) mSector.c:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [293])
        (nil)))
(insn 250 249 251 14 (set (reg:SI 0 ax [294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:239 89 {*movsi_internal}
     (nil))
(insn 251 250 252 14 (set (reg:DI 1 dx [orig:162 D.5026 ] [162])
        (sign_extend:DI (reg:SI 0 ax [294]))) mSector.c:239 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [294])
        (nil)))
(insn 252 251 253 14 (set (reg:DI 0 ax [295])
        (reg:DI 1 dx [orig:162 D.5026 ] [162])) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 253 252 254 14 (parallel [
            (set (reg:DI 0 ax [295])
                (ashift:DI (reg:DI 0 ax [295])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 513 {*ashldi3_1}
     (nil))
(insn 254 253 255 14 (parallel [
            (set (reg:DI 0 ax [295])
                (plus:DI (reg:DI 0 ax [295])
                    (reg:DI 1 dx [orig:162 D.5026 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:162 D.5026 ] [162])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:162 D.5026 ] [162])
                (const_int 5 [0x5]))
            (nil))))
(insn 255 254 557 14 (parallel [
            (set (reg:DI 0 ax [296])
                (ashift:DI (reg:DI 0 ax [295])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [295])
        (nil)))
(insn 557 255 259 14 (set (reg/f:DI 1 dx [orig:164 D.5025 ] [164])
        (plus:DI (reg/f:DI 2 cx [orig:161 D.5025 ] [161])
            (reg:DI 0 ax [orig:163 D.5026 ] [163]))) mSector.c:239 267 {*leadi}
     (nil))
(insn 259 557 260 14 (set (reg:SI 0 ax [297])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:239 89 {*movsi_internal}
     (nil))
(insn 260 259 547 14 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:164 D.5025 ] [164])
                (const_int 112 [0x70])) [0 _119->bound+0 S4 A128])
        (reg:SI 0 ax [297])) mSector.c:239 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [297])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:164 D.5025 ] [164])
            (nil))))
(jump_insn 547 260 548 14 (set (pc)
        (label_ref 284)) mSector.c:240 650 {jump}
     (nil)
 -> 284)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 548 547 263)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 263 548 264 15 97 "" [1 uses])
(note 264 263 265 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 273 {*addsi_1}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 132 133 134 135 298 299 300 301
(code_label 266 265 267 16 95 "" [1 uses])
(note 267 266 268 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 16 (set (reg/f:DI 0 ax [298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 269 268 270 16 (set (reg/f:DI 2 cx [orig:130 D.5025 ] [130])
        (mem/f:DI (reg/f:DI 0 ax [298]) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [298])
        (nil)))
(insn 270 269 271 16 (set (reg:SI 0 ax [299])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 271 270 272 16 (set (reg:DI 1 dx [orig:131 D.5026 ] [131])
        (sign_extend:DI (reg:SI 0 ax [299]))) mSector.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [299])
        (nil)))
(insn 272 271 273 16 (set (reg:DI 0 ax [300])
        (reg:DI 1 dx [orig:131 D.5026 ] [131])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 273 272 274 16 (parallel [
            (set (reg:DI 0 ax [300])
                (ashift:DI (reg:DI 0 ax [300])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 274 273 275 16 (parallel [
            (set (reg:DI 0 ax [300])
                (plus:DI (reg:DI 0 ax [300])
                    (reg:DI 1 dx [orig:131 D.5026 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:131 D.5026 ] [131])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:131 D.5026 ] [131])
                (const_int 5 [0x5]))
            (nil))))
(insn 275 274 278 16 (parallel [
            (set (reg:DI 0 ax [301])
                (ashift:DI (reg:DI 0 ax [300])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [300])
        (nil)))
(insn 278 275 279 16 (parallel [
            (set (reg/f:DI 0 ax [orig:133 D.5025 ] [133])
                (plus:DI (reg:DI 0 ax [orig:132 D.5026 ] [132])
                    (reg/f:DI 2 cx [orig:130 D.5025 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:132 D.5026 ] [132])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:130 D.5025 ] [130])
            (nil))))
(insn 279 278 280 16 (set (reg:SI 0 ax [orig:134 D.5024 ] [134])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:133 D.5025 ] [133])
                (const_int 4 [0x4])) [0 _87->n_nvp+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:133 D.5025 ] [133])
        (nil)))
(insn 280 279 282 16 (parallel [
            (set (reg:SI 0 ax [orig:135 D.5024 ] [135])
                (plus:SI (reg:SI 0 ax [orig:134 D.5024 ] [134])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:134 D.5024 ] [134])
        (nil)))
(insn 282 280 283 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:135 D.5024 ] [135])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:238 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 D.5024 ] [135])
        (nil)))
(jump_insn 283 282 284 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 281)
;;  succ:       12
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              14 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165 166 167 168 169 170 302 303 304 305
(code_label 284 283 285 17 98 "" [1 uses])
(note 285 284 286 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 17 (set (reg/f:DI 0 ax [302])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 287 286 288 17 (set (reg/f:DI 2 cx [orig:165 D.5025 ] [165])
        (mem/f:DI (reg/f:DI 0 ax [302]) [0 *f_9(D)+0 S8 A64])) mSector.c:242 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [302])
        (nil)))
(insn 288 287 289 17 (set (reg:SI 0 ax [303])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:242 89 {*movsi_internal}
     (nil))
(insn 289 288 290 17 (set (reg:DI 1 dx [orig:166 D.5026 ] [166])
        (sign_extend:DI (reg:SI 0 ax [303]))) mSector.c:242 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [303])
        (nil)))
(insn 290 289 291 17 (set (reg:DI 0 ax [304])
        (reg:DI 1 dx [orig:166 D.5026 ] [166])) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 17 (parallel [
            (set (reg:DI 0 ax [304])
                (ashift:DI (reg:DI 0 ax [304])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 513 {*ashldi3_1}
     (nil))
(insn 292 291 293 17 (parallel [
            (set (reg:DI 0 ax [304])
                (plus:DI (reg:DI 0 ax [304])
                    (reg:DI 1 dx [orig:166 D.5026 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:166 D.5026 ] [166])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:166 D.5026 ] [166])
                (const_int 5 [0x5]))
            (nil))))
(insn 293 292 296 17 (parallel [
            (set (reg:DI 0 ax [305])
                (ashift:DI (reg:DI 0 ax [304])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [304])
        (nil)))
(insn 296 293 297 17 (parallel [
            (set (reg/f:DI 0 ax [orig:168 D.5025 ] [168])
                (plus:DI (reg:DI 0 ax [orig:167 D.5026 ] [167])
                    (reg/f:DI 2 cx [orig:165 D.5025 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:167 D.5026 ] [167])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:165 D.5025 ] [165])
            (nil))))
(insn 297 296 298 17 (set (reg:SI 0 ax [orig:169 D.5024 ] [169])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:168 D.5025 ] [168])
                (const_int 4 [0x4])) [0 _123->n_nvp+0 S4 A32])) mSector.c:242 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:168 D.5025 ] [168])
        (nil)))
(insn 298 297 299 17 (parallel [
            (set (reg:SI 0 ax [orig:170 D.5024 ] [170])
                (plus:SI (reg:SI 0 ax [orig:169 D.5024 ] [169])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:169 D.5024 ] [169])
        (nil)))
(insn 299 298 300 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:170 D.5024 ] [170])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:242 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:170 D.5024 ] [170])
        (nil)))
(jump_insn 300 299 301 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) mSector.c:242 612 {*jcc_1}
     (nil)
 -> 329)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 171 172 173 174 175 176 306 307 308 309 310 311 312
(note 301 300 302 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 556 18 (set (reg:SI 0 ax [orig:171 i.3 ] [171])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:243 89 {*movsi_internal}
     (nil))
(insn 556 302 304 18 (set (reg:SI 1 dx [306])
        (plus:SI (reg:SI 0 ax [orig:171 i.3 ] [171])
            (const_int -1 [0xffffffffffffffff]))) mSector.c:243 266 {*leasi}
     (nil))
(insn 304 556 305 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 1 dx [306])) mSector.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [306])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:171 i.3 ] [171])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 305 304 306 18 (set (reg:DI 4 si [307])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 306 305 307 18 (set (reg:DI 2 cx [308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 307 306 309 18 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:171 i.3 ] [171])) mSector.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:171 i.3 ] [171])
        (nil)))
(insn 309 307 310 18 (set (reg:DI 5 di)
        (reg:DI 2 cx [308])) mSector.c:243 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [308])
        (nil)))
(call_insn 310 309 311 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_aircraft") [flags 0x3]  <function_decl 0x7f44d2a01700 remove_aircraft>) [0 remove_aircraft S1 A8])
            (const_int 0 [0]))) mSector.c:243 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 311 310 312 18 (set (reg/f:DI 0 ax [309])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 312 311 313 18 (set (reg/f:DI 2 cx [orig:172 D.5025 ] [172])
        (mem/f:DI (reg/f:DI 0 ax [309]) [0 *f_9(D)+0 S8 A64])) mSector.c:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [309])
        (nil)))
(insn 313 312 314 18 (set (reg:SI 0 ax [310])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:244 89 {*movsi_internal}
     (nil))
(insn 314 313 315 18 (set (reg:DI 1 dx [orig:173 D.5026 ] [173])
        (sign_extend:DI (reg:SI 0 ax [310]))) mSector.c:244 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [310])
        (nil)))
(insn 315 314 316 18 (set (reg:DI 0 ax [311])
        (reg:DI 1 dx [orig:173 D.5026 ] [173])) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 316 315 317 18 (parallel [
            (set (reg:DI 0 ax [311])
                (ashift:DI (reg:DI 0 ax [311])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 513 {*ashldi3_1}
     (nil))
(insn 317 316 318 18 (parallel [
            (set (reg:DI 0 ax [311])
                (plus:DI (reg:DI 0 ax [311])
                    (reg:DI 1 dx [orig:173 D.5026 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:173 D.5026 ] [173])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:173 D.5026 ] [173])
                (const_int 5 [0x5]))
            (nil))))
(insn 318 317 321 18 (parallel [
            (set (reg:DI 0 ax [312])
                (ashift:DI (reg:DI 0 ax [311])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [311])
        (nil)))
(insn 321 318 322 18 (parallel [
            (set (reg/f:DI 0 ax [orig:175 D.5025 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 D.5026 ] [174])
                    (reg/f:DI 2 cx [orig:172 D.5025 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:174 D.5026 ] [174])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:172 D.5025 ] [172])
            (nil))))
(insn 322 321 323 18 (set (reg:SI 0 ax [orig:176 D.5024 ] [176])
        (mem/j:SI (reg/f:DI 0 ax [orig:175 D.5025 ] [175]) [0 _131->ID+0 S4 A128])) mSector.c:244 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:175 D.5025 ] [175])
        (nil)))
(insn 323 322 324 18 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:176 D.5024 ] [176])) mSector.c:244 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:176 D.5024 ] [176])
        (nil)))
(insn 324 323 325 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f44d28a47b8 *.LC13>)) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 325 324 326 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) mSector.c:244 91 {*movqi_internal}
     (nil))
(call_insn 326 325 549 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f44d2950f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mSector.c:244 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(jump_insn 549 326 550 18 (set (pc)
        (label_ref 512)) mSector.c:245 650 {jump}
     (nil)
 -> 512)
;;  succ:       29 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 550 549 329)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 329 550 330 19 100 "" [1 uses])
(note 330 329 331 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 551 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 273 {*addsi_1}
     (nil))
(jump_insn 551 331 552 19 (set (pc)
        (label_ref 408)) mSector.c:248 650 {jump}
     (nil)
 -> 408)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 552 551 422)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 182 183 184 185 186 187 188 189 190 191 192 193 313 314 315 316 317
(code_label 422 552 334 20 105 "" [1 uses])
(note 334 422 335 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 20 (set (reg:SI 4 si [orig:182 D.5024 ] [182])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 336 335 337 20 (set (reg/f:DI 2 cx [orig:183 D.5027 ] [183])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 337 336 338 20 (set (reg/f:DI 0 ax [313])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 338 337 339 20 (set (reg/f:DI 5 di [orig:184 D.5025 ] [184])
        (mem/f:DI (reg/f:DI 0 ax [313]) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [313])
        (nil)))
(insn 339 338 340 20 (set (reg:SI 0 ax [314])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 340 339 341 20 (set (reg:DI 1 dx [orig:185 D.5026 ] [185])
        (sign_extend:DI (reg:SI 0 ax [314]))) mSector.c:248 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [314])
        (nil)))
(insn 341 340 342 20 (set (reg:DI 0 ax [315])
        (reg:DI 1 dx [orig:185 D.5026 ] [185])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 342 341 343 20 (parallel [
            (set (reg:DI 0 ax [315])
                (ashift:DI (reg:DI 0 ax [315])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 343 342 344 20 (parallel [
            (set (reg:DI 0 ax [315])
                (plus:DI (reg:DI 0 ax [315])
                    (reg:DI 1 dx [orig:185 D.5026 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:185 D.5026 ] [185])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:185 D.5026 ] [185])
                (const_int 5 [0x5]))
            (nil))))
(insn 344 343 347 20 (parallel [
            (set (reg:DI 0 ax [316])
                (ashift:DI (reg:DI 0 ax [315])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [315])
        (nil)))
(insn 347 344 348 20 (parallel [
            (set (reg/f:DI 0 ax [orig:187 D.5025 ] [187])
                (plus:DI (reg:DI 0 ax [orig:186 D.5026 ] [186])
                    (reg/f:DI 5 di [orig:184 D.5025 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:186 D.5026 ] [186])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:184 D.5025 ] [184])
            (nil))))
(insn 348 347 349 20 (set (reg/f:DI 0 ax [orig:188 D.5027 ] [188])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:187 D.5025 ] [187])
                (const_int 8 [0x8])) [0 _144->nvp+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:187 D.5025 ] [187])
        (nil)))
(insn 349 348 350 20 (set (reg:SI 1 dx [317])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 350 349 351 20 (set (reg:DI 1 dx [orig:189 D.5026 ] [189])
        (sign_extend:DI (reg:SI 1 dx [317]))) mSector.c:248 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [317])
        (nil)))
(insn 351 350 352 20 (parallel [
            (set (reg:DI 1 dx [orig:190 D.5026 ] [190])
                (ashift:DI (reg:DI 1 dx [orig:189 D.5026 ] [189])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:189 D.5026 ] [189])
        (nil)))
(insn 352 351 353 20 (parallel [
            (set (reg/f:DI 0 ax [orig:191 D.5027 ] [191])
                (plus:DI (reg/f:DI 0 ax [orig:188 D.5027 ] [188])
                    (reg:DI 1 dx [orig:190 D.5026 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:190 D.5026 ] [190])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:188 D.5027 ] [188])
            (nil))))
(insn 353 352 354 20 (set (reg/f:DI 0 ax [orig:192 D.5028 ] [192])
        (mem/f:DI (reg/f:DI 0 ax [orig:191 D.5027 ] [191]) [0 *_148+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:191 D.5027 ] [191])
        (nil)))
(insn 354 353 355 20 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:182 D.5024 ] [182])) mSector.c:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:182 D.5024 ] [182])
        (nil)))
(insn 355 354 356 20 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:183 D.5027 ] [183])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:183 D.5027 ] [183])
        (nil)))
(insn 356 355 357 20 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:192 D.5028 ] [192])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:192 D.5028 ] [192])
        (nil)))
(call_insn 357 356 359 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 359 357 360 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:193 D.5024 ] [193])
            (const_int 0 [0]))) mSector.c:248 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:193 D.5024 ] [193])
        (nil)))
(jump_insn 360 359 361 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 405)
;;  succ:       21 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 194 195 196 197 198 199 200 201 202 203 204 205 206 318 319 320 321 322
(note 361 360 362 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 21 (set (reg:SI 4 si [orig:194 D.5024 ] [194])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 c.Nbound+0 S4 A128])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 363 362 364 21 (set (reg/f:DI 2 cx [orig:195 D.5027 ] [195])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 c.bound+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 364 363 365 21 (set (reg/f:DI 0 ax [318])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 365 364 366 21 (set (reg/f:DI 5 di [orig:196 D.5025 ] [196])
        (mem/f:DI (reg/f:DI 0 ax [318]) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [318])
        (nil)))
(insn 366 365 367 21 (set (reg:SI 0 ax [319])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 367 366 368 21 (set (reg:DI 1 dx [orig:197 D.5026 ] [197])
        (sign_extend:DI (reg:SI 0 ax [319]))) mSector.c:248 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [319])
        (nil)))
(insn 368 367 369 21 (set (reg:DI 0 ax [320])
        (reg:DI 1 dx [orig:197 D.5026 ] [197])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 369 368 370 21 (parallel [
            (set (reg:DI 0 ax [320])
                (ashift:DI (reg:DI 0 ax [320])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 370 369 371 21 (parallel [
            (set (reg:DI 0 ax [320])
                (plus:DI (reg:DI 0 ax [320])
                    (reg:DI 1 dx [orig:197 D.5026 ] [197])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:197 D.5026 ] [197])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:197 D.5026 ] [197])
                (const_int 5 [0x5]))
            (nil))))
(insn 371 370 374 21 (parallel [
            (set (reg:DI 0 ax [321])
                (ashift:DI (reg:DI 0 ax [320])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [320])
        (nil)))
(insn 374 371 375 21 (parallel [
            (set (reg/f:DI 0 ax [orig:199 D.5025 ] [199])
                (plus:DI (reg:DI 0 ax [orig:198 D.5026 ] [198])
                    (reg/f:DI 5 di [orig:196 D.5025 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:198 D.5026 ] [198])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:196 D.5025 ] [196])
            (nil))))
(insn 375 374 376 21 (set (reg/f:DI 0 ax [orig:200 D.5027 ] [200])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:199 D.5025 ] [199])
                (const_int 8 [0x8])) [0 _156->nvp+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:199 D.5025 ] [199])
        (nil)))
(insn 376 375 377 21 (set (reg:SI 1 dx [322])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 377 376 378 21 (set (reg:DI 1 dx [orig:201 D.5026 ] [201])
        (sign_extend:DI (reg:SI 1 dx [322]))) mSector.c:248 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [322])
        (nil)))
(insn 378 377 379 21 (parallel [
            (set (reg:DI 1 dx [orig:202 D.5026 ] [202])
                (ashift:DI (reg:DI 1 dx [orig:201 D.5026 ] [201])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:201 D.5026 ] [201])
        (nil)))
(insn 379 378 380 21 (parallel [
            (set (reg:DI 1 dx [orig:203 D.5029 ] [203])
                (plus:DI (reg:DI 1 dx [orig:202 D.5026 ] [202])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:202 D.5026 ] [202])
        (nil)))
(insn 380 379 381 21 (parallel [
            (set (reg/f:DI 0 ax [orig:204 D.5027 ] [204])
                (plus:DI (reg/f:DI 0 ax [orig:200 D.5027 ] [200])
                    (reg:DI 1 dx [orig:203 D.5029 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:203 D.5029 ] [203])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:200 D.5027 ] [200])
            (nil))))
(insn 381 380 382 21 (set (reg/f:DI 0 ax [orig:205 D.5028 ] [205])
        (mem/f:DI (reg/f:DI 0 ax [orig:204 D.5027 ] [204]) [0 *_161+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:204 D.5027 ] [204])
        (nil)))
(insn 382 381 383 21 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:194 D.5024 ] [194])) mSector.c:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:194 D.5024 ] [194])
        (nil)))
(insn 383 382 384 21 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:195 D.5027 ] [195])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:195 D.5027 ] [195])
        (nil)))
(insn 384 383 385 21 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:205 D.5028 ] [205])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:205 D.5028 ] [205])
        (nil)))
(call_insn 385 384 387 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 387 385 388 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:206 D.5024 ] [206])
            (const_int 0 [0]))) mSector.c:248 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:206 D.5024 ] [206])
        (nil)))
(jump_insn 388 387 389 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 405)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207 208 209 210 323 324 325 326 327
(note 389 388 390 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 22 (set (reg/f:DI 0 ax [323])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 391 390 392 22 (set (reg/f:DI 2 cx [orig:207 D.5025 ] [207])
        (mem/f:DI (reg/f:DI 0 ax [323]) [0 *f_9(D)+0 S8 A64])) mSector.c:249 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [323])
        (nil)))
(insn 392 391 393 22 (set (reg:SI 0 ax [324])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:249 89 {*movsi_internal}
     (nil))
(insn 393 392 394 22 (set (reg:DI 1 dx [orig:208 D.5026 ] [208])
        (sign_extend:DI (reg:SI 0 ax [324]))) mSector.c:249 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [324])
        (nil)))
(insn 394 393 395 22 (set (reg:DI 0 ax [325])
        (reg:DI 1 dx [orig:208 D.5026 ] [208])) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 395 394 396 22 (parallel [
            (set (reg:DI 0 ax [325])
                (ashift:DI (reg:DI 0 ax [325])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 513 {*ashldi3_1}
     (nil))
(insn 396 395 397 22 (parallel [
            (set (reg:DI 0 ax [325])
                (plus:DI (reg:DI 0 ax [325])
                    (reg:DI 1 dx [orig:208 D.5026 ] [208])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:208 D.5026 ] [208])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:208 D.5026 ] [208])
                (const_int 5 [0x5]))
            (nil))))
(insn 397 396 555 22 (parallel [
            (set (reg:DI 0 ax [326])
                (ashift:DI (reg:DI 0 ax [325])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [325])
        (nil)))
(insn 555 397 401 22 (set (reg/f:DI 1 dx [orig:210 D.5025 ] [210])
        (plus:DI (reg/f:DI 2 cx [orig:207 D.5025 ] [207])
            (reg:DI 0 ax [orig:209 D.5026 ] [209]))) mSector.c:249 267 {*leadi}
     (nil))
(insn 401 555 402 22 (set (reg:SI 0 ax [327])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:249 89 {*movsi_internal}
     (nil))
(insn 402 401 553 22 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:210 D.5025 ] [210])
                (const_int 116 [0x74])) [0 _167->bound+4 S4 A32])
        (reg:SI 0 ax [327])) mSector.c:249 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [327])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:210 D.5025 ] [210])
            (nil))))
(jump_insn 553 402 554 22 (set (pc)
        (label_ref 425)) mSector.c:250 650 {jump}
     (nil)
 -> 425)
;;  succ:       25 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 554 553 405)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 405 554 406 23 103 "" [2 uses])
(note 406 405 407 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 273 {*addsi_1}
     (nil))
;;  succ:       24 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU,DFS_BACK)
;;              19 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177 178 179 180 181 328 329 330 331
(code_label 408 407 409 24 102 "" [1 uses])
(note 409 408 410 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 24 (set (reg/f:DI 0 ax [328])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 411 410 412 24 (set (reg/f:DI 2 cx [orig:177 D.5025 ] [177])
        (mem/f:DI (reg/f:DI 0 ax [328]) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [328])
        (nil)))
(insn 412 411 413 24 (set (reg:SI 0 ax [329])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 413 412 414 24 (set (reg:DI 1 dx [orig:178 D.5026 ] [178])
        (sign_extend:DI (reg:SI 0 ax [329]))) mSector.c:248 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [329])
        (nil)))
(insn 414 413 415 24 (set (reg:DI 0 ax [330])
        (reg:DI 1 dx [orig:178 D.5026 ] [178])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 415 414 416 24 (parallel [
            (set (reg:DI 0 ax [330])
                (ashift:DI (reg:DI 0 ax [330])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 416 415 417 24 (parallel [
            (set (reg:DI 0 ax [330])
                (plus:DI (reg:DI 0 ax [330])
                    (reg:DI 1 dx [orig:178 D.5026 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:178 D.5026 ] [178])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:178 D.5026 ] [178])
                (const_int 5 [0x5]))
            (nil))))
(insn 417 416 420 24 (parallel [
            (set (reg:DI 0 ax [331])
                (ashift:DI (reg:DI 0 ax [330])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [330])
        (nil)))
(insn 420 417 421 24 (parallel [
            (set (reg/f:DI 0 ax [orig:180 D.5025 ] [180])
                (plus:DI (reg:DI 0 ax [orig:179 D.5026 ] [179])
                    (reg/f:DI 2 cx [orig:177 D.5025 ] [177])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:179 D.5026 ] [179])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:177 D.5025 ] [177])
            (nil))))
(insn 421 420 423 24 (set (reg:SI 0 ax [orig:181 D.5024 ] [181])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:180 D.5025 ] [180])
                (const_int 4 [0x4])) [0 _137->n_nvp+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:180 D.5025 ] [180])
        (nil)))
(insn 423 421 424 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:181 D.5024 ] [181])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:248 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:181 D.5024 ] [181])
        (nil)))
(jump_insn 424 423 425 24 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 422)
;;  succ:       20
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              22 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211 212 213 214 215 332 333 334 335
(code_label 425 424 426 25 104 "" [1 uses])
(note 426 425 427 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 25 (set (reg/f:DI 0 ax [332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 428 427 429 25 (set (reg/f:DI 2 cx [orig:211 D.5025 ] [211])
        (mem/f:DI (reg/f:DI 0 ax [332]) [0 *f_9(D)+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [332])
        (nil)))
(insn 429 428 430 25 (set (reg:SI 0 ax [333])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 430 429 431 25 (set (reg:DI 1 dx [orig:212 D.5026 ] [212])
        (sign_extend:DI (reg:SI 0 ax [333]))) mSector.c:252 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [333])
        (nil)))
(insn 431 430 432 25 (set (reg:DI 0 ax [334])
        (reg:DI 1 dx [orig:212 D.5026 ] [212])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 432 431 433 25 (parallel [
            (set (reg:DI 0 ax [334])
                (ashift:DI (reg:DI 0 ax [334])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 433 432 434 25 (parallel [
            (set (reg:DI 0 ax [334])
                (plus:DI (reg:DI 0 ax [334])
                    (reg:DI 1 dx [orig:212 D.5026 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:212 D.5026 ] [212])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:212 D.5026 ] [212])
                (const_int 5 [0x5]))
            (nil))))
(insn 434 433 437 25 (parallel [
            (set (reg:DI 0 ax [335])
                (ashift:DI (reg:DI 0 ax [334])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [334])
        (nil)))
(insn 437 434 438 25 (parallel [
            (set (reg/f:DI 0 ax [orig:214 D.5025 ] [214])
                (plus:DI (reg:DI 0 ax [orig:213 D.5026 ] [213])
                    (reg/f:DI 2 cx [orig:211 D.5025 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:213 D.5026 ] [213])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:211 D.5025 ] [211])
            (nil))))
(insn 438 437 439 25 (set (reg:SI 0 ax [orig:215 D.5024 ] [215])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:214 D.5025 ] [214])
                (const_int 4 [0x4])) [0 _172->n_nvp+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:214 D.5025 ] [214])
        (nil)))
(insn 439 438 440 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:215 D.5024 ] [215])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:252 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:215 D.5024 ] [215])
        (nil)))
(jump_insn 440 439 441 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) mSector.c:252 612 {*jcc_1}
     (nil)
 -> 456)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 216 217 218 219 220 336 337 338 339 340
(note 441 440 442 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 26 (set (reg/f:DI 0 ax [336])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 443 442 444 26 (set (reg/f:DI 2 cx [orig:216 D.5025 ] [216])
        (mem/f:DI (reg/f:DI 0 ax [336]) [0 *f_9(D)+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [336])
        (nil)))
(insn 444 443 445 26 (set (reg:SI 0 ax [337])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 445 444 446 26 (set (reg:DI 1 dx [orig:217 D.5026 ] [217])
        (sign_extend:DI (reg:SI 0 ax [337]))) mSector.c:252 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [337])
        (nil)))
(insn 446 445 447 26 (set (reg:DI 0 ax [338])
        (reg:DI 1 dx [orig:217 D.5026 ] [217])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 447 446 448 26 (parallel [
            (set (reg:DI 0 ax [338])
                (ashift:DI (reg:DI 0 ax [338])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 448 447 449 26 (parallel [
            (set (reg:DI 0 ax [338])
                (plus:DI (reg:DI 0 ax [338])
                    (reg:DI 1 dx [orig:217 D.5026 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:217 D.5026 ] [217])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:217 D.5026 ] [217])
                (const_int 5 [0x5]))
            (nil))))
(insn 449 448 452 26 (parallel [
            (set (reg:DI 0 ax [339])
                (ashift:DI (reg:DI 0 ax [338])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [338])
        (nil)))
(insn 452 449 453 26 (parallel [
            (set (reg/f:DI 0 ax [orig:219 D.5025 ] [219])
                (plus:DI (reg:DI 0 ax [orig:218 D.5026 ] [218])
                    (reg/f:DI 2 cx [orig:216 D.5025 ] [216])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:218 D.5026 ] [218])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:216 D.5025 ] [216])
            (nil))))
(insn 453 452 454 26 (set (reg:SI 1 dx [340])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 454 453 455 26 (parallel [
            (set (reg:SI 1 dx [orig:220 D.5024 ] [220])
                (plus:SI (reg:SI 1 dx [340])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [340])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 455 454 456 26 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:219 D.5025 ] [219])
                (const_int 116 [0x74])) [0 _177->bound+4 S4 A32])
        (reg:SI 1 dx [orig:220 D.5024 ] [220])) mSector.c:252 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:220 D.5024 ] [220])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:219 D.5025 ] [219])
            (nil))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 221 222 223 224 225 226 227 228 229 230 341 342 343 344 345 346 347 348
(code_label 456 455 457 27 106 "" [1 uses])
(note 457 456 458 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 27 (set (reg/f:DI 0 ax [341])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 459 458 460 27 (set (reg/f:DI 2 cx [orig:221 D.5025 ] [221])
        (mem/f:DI (reg/f:DI 0 ax [341]) [0 *f_9(D)+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [341])
        (nil)))
(insn 460 459 461 27 (set (reg:SI 0 ax [342])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 461 460 462 27 (set (reg:DI 1 dx [orig:222 D.5026 ] [222])
        (sign_extend:DI (reg:SI 0 ax [342]))) mSector.c:255 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [342])
        (nil)))
(insn 462 461 463 27 (set (reg:DI 0 ax [343])
        (reg:DI 1 dx [orig:222 D.5026 ] [222])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 463 462 464 27 (parallel [
            (set (reg:DI 0 ax [343])
                (ashift:DI (reg:DI 0 ax [343])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 464 463 465 27 (parallel [
            (set (reg:DI 0 ax [343])
                (plus:DI (reg:DI 0 ax [343])
                    (reg:DI 1 dx [orig:222 D.5026 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:222 D.5026 ] [222])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:222 D.5026 ] [222])
                (const_int 5 [0x5]))
            (nil))))
(insn 465 464 468 27 (parallel [
            (set (reg:DI 0 ax [344])
                (ashift:DI (reg:DI 0 ax [343])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [343])
        (nil)))
(insn 468 465 469 27 (parallel [
            (set (reg/f:DI 0 ax [orig:224 D.5025 ] [224])
                (plus:DI (reg:DI 0 ax [orig:223 D.5026 ] [223])
                    (reg/f:DI 2 cx [orig:221 D.5025 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:223 D.5026 ] [223])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:221 D.5025 ] [221])
            (nil))))
(insn 469 468 470 27 (set (reg:SI 2 cx [orig:225 D.5024 ] [225])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:224 D.5025 ] [224])
                (const_int 112 [0x70])) [0 _182->bound+0 S4 A128])) mSector.c:255 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:224 D.5025 ] [224])
        (nil)))
(insn 470 469 471 27 (set (reg/f:DI 0 ax [345])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 471 470 472 27 (set (reg/f:DI 4 si [orig:226 D.5025 ] [226])
        (mem/f:DI (reg/f:DI 0 ax [345]) [0 *f_9(D)+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [345])
        (nil)))
(insn 472 471 473 27 (set (reg:SI 0 ax [346])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 473 472 474 27 (set (reg:DI 1 dx [orig:227 D.5026 ] [227])
        (sign_extend:DI (reg:SI 0 ax [346]))) mSector.c:255 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [346])
        (nil)))
(insn 474 473 475 27 (set (reg:DI 0 ax [347])
        (reg:DI 1 dx [orig:227 D.5026 ] [227])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 475 474 476 27 (parallel [
            (set (reg:DI 0 ax [347])
                (ashift:DI (reg:DI 0 ax [347])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 476 475 477 27 (parallel [
            (set (reg:DI 0 ax [347])
                (plus:DI (reg:DI 0 ax [347])
                    (reg:DI 1 dx [orig:227 D.5026 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:227 D.5026 ] [227])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:227 D.5026 ] [227])
                (const_int 5 [0x5]))
            (nil))))
(insn 477 476 480 27 (parallel [
            (set (reg:DI 0 ax [348])
                (ashift:DI (reg:DI 0 ax [347])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [347])
        (nil)))
(insn 480 477 481 27 (parallel [
            (set (reg/f:DI 0 ax [orig:229 D.5025 ] [229])
                (plus:DI (reg:DI 0 ax [orig:228 D.5026 ] [228])
                    (reg/f:DI 4 si [orig:226 D.5025 ] [226])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:228 D.5026 ] [228])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:226 D.5025 ] [226])
            (nil))))
(insn 481 480 482 27 (set (reg:SI 0 ax [orig:230 D.5024 ] [230])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:229 D.5025 ] [229])
                (const_int 116 [0x74])) [0 _187->bound+4 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:229 D.5025 ] [229])
        (nil)))
(insn 482 481 483 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:225 D.5024 ] [225])
            (reg:SI 0 ax [orig:230 D.5024 ] [230]))) mSector.c:255 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:230 D.5024 ] [230])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:225 D.5024 ] [225])
            (nil))))
(jump_insn 483 482 484 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mSector.c:255 612 {*jcc_1}
     (nil)
 -> 512)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 231 232 233 234 235 236 237 238 239 240 349 350 351 352 353 354 355 356
(note 484 483 485 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f44d28a4850 *.LC14>)) mSector.c:256 87 {*movdi_internal_rex64}
     (nil))
(call_insn 486 485 487 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:256 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 28 (set (reg/f:DI 0 ax [349])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 488 487 489 28 (set (reg/f:DI 2 cx [orig:231 D.5025 ] [231])
        (mem/f:DI (reg/f:DI 0 ax [349]) [0 *f_9(D)+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [349])
        (nil)))
(insn 489 488 490 28 (set (reg:SI 0 ax [350])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (nil))
(insn 490 489 491 28 (set (reg:DI 1 dx [orig:232 D.5026 ] [232])
        (sign_extend:DI (reg:SI 0 ax [350]))) mSector.c:257 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [350])
        (nil)))
(insn 491 490 492 28 (set (reg:DI 0 ax [351])
        (reg:DI 1 dx [orig:232 D.5026 ] [232])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 492 491 493 28 (parallel [
            (set (reg:DI 0 ax [351])
                (ashift:DI (reg:DI 0 ax [351])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 493 492 494 28 (parallel [
            (set (reg:DI 0 ax [351])
                (plus:DI (reg:DI 0 ax [351])
                    (reg:DI 1 dx [orig:232 D.5026 ] [232])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:232 D.5026 ] [232])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:232 D.5026 ] [232])
                (const_int 5 [0x5]))
            (nil))))
(insn 494 493 497 28 (parallel [
            (set (reg:DI 0 ax [352])
                (ashift:DI (reg:DI 0 ax [351])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [351])
        (nil)))
(insn 497 494 498 28 (parallel [
            (set (reg/f:DI 2 cx [orig:234 D.5025 ] [234])
                (plus:DI (reg/f:DI 2 cx [orig:231 D.5025 ] [231])
                    (reg:DI 0 ax [orig:233 D.5026 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:233 D.5026 ] [233])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:231 D.5025 ] [231])
            (nil))))
(insn 498 497 499 28 (set (reg/f:DI 0 ax [353])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 499 498 500 28 (set (reg/f:DI 4 si [orig:235 D.5025 ] [235])
        (mem/f:DI (reg/f:DI 0 ax [353]) [0 *f_9(D)+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [353])
        (nil)))
(insn 500 499 501 28 (set (reg:SI 0 ax [354])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (nil))
(insn 501 500 502 28 (set (reg:DI 1 dx [orig:236 D.5026 ] [236])
        (sign_extend:DI (reg:SI 0 ax [354]))) mSector.c:257 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [354])
        (nil)))
(insn 502 501 503 28 (set (reg:DI 0 ax [355])
        (reg:DI 1 dx [orig:236 D.5026 ] [236])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 503 502 504 28 (parallel [
            (set (reg:DI 0 ax [355])
                (ashift:DI (reg:DI 0 ax [355])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 504 503 505 28 (parallel [
            (set (reg:DI 0 ax [355])
                (plus:DI (reg:DI 0 ax [355])
                    (reg:DI 1 dx [orig:236 D.5026 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:236 D.5026 ] [236])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:236 D.5026 ] [236])
                (const_int 5 [0x5]))
            (nil))))
(insn 505 504 508 28 (parallel [
            (set (reg:DI 0 ax [356])
                (ashift:DI (reg:DI 0 ax [355])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [355])
        (nil)))
(insn 508 505 509 28 (parallel [
            (set (reg/f:DI 0 ax [orig:238 D.5025 ] [238])
                (plus:DI (reg:DI 0 ax [orig:237 D.5026 ] [237])
                    (reg/f:DI 4 si [orig:235 D.5025 ] [235])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:237 D.5026 ] [237])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:235 D.5025 ] [235])
            (nil))))
(insn 509 508 510 28 (set (reg:SI 0 ax [orig:239 D.5024 ] [239])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:238 D.5025 ] [238])
                (const_int 116 [0x74])) [0 _196->bound+4 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:238 D.5025 ] [238])
        (nil)))
(insn 510 509 511 28 (parallel [
            (set (reg:SI 0 ax [orig:240 D.5024 ] [240])
                (plus:SI (reg:SI 0 ax [orig:239 D.5024 ] [239])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:239 D.5024 ] [239])
        (nil)))
(insn 511 510 512 28 (set (mem/j:SI (plus:DI (reg/f:DI 2 cx [orig:234 D.5025 ] [234])
                (const_int 116 [0x74])) [0 _192->bound+4 S4 A32])
        (reg:SI 0 ax [orig:240 D.5024 ] [240])) mSector.c:257 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:240 D.5024 ] [240])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:234 D.5025 ] [234])
            (nil))))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;;              27
;;              18 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 512 511 513 29 101 "" [2 uses])
(note 513 512 514 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:225 273 {*addsi_1}
     (nil))
;;  succ:       30 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 357
(code_label 515 514 516 30 88 "" [1 uses])
(note 516 515 517 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 30 (set (reg/f:DI 0 ax [357])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 518 517 520 30 (set (reg:SI 0 ax [orig:59 D.5024 ] [59])
        (mem:SI (reg/f:DI 0 ax [357]) [0 *Nflight_7(D)+0 S4 A32])) mSector.c:225 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [357])
        (nil)))
(insn 520 518 521 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.5024 ] [59])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mSector.c:225 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.5024 ] [59])
        (nil)))
(jump_insn 521 520 522 30 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) mSector.c:225 612 {*jcc_1}
     (nil)
 -> 519)
;;  succ:       3
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 241 242
(note 522 521 523 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 533 31 (set (reg:SI 0 ax [orig:241 D.5024 ] [241])
        (const_int 1 [0x1])) mSector.c:262 89 {*movsi_internal}
     (nil))
(insn 533 523 0 31 (use (reg/i:SI 0 ax)) mSector.c:263 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function is_on_bound (is_on_bound, funcdef_no=14, decl_uid=1900, cgraph_uid=14)

deleting insn with uid = 51.
deleting insn with uid = 55.
scanning new insn with uid = 65.
deleting insn with uid = 15.
deleting insn with uid = 15.
scanning new insn with uid = 66.
deleting insn with uid = 21.
deleting insn with uid = 21.
deleting insn with uid = 26.
deleting insn with uid = 30.


is_on_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={16d,15u} r1={5d,4u,2e} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,21u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={8d,2u} r18={1d} r19={1d} r20={1d,1u,3e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 151{89d,57u,5e} in 33{32 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ bound ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
        (reg:SI 1 dx [ N ])) mSector.c:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ N ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 61 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:267 89 {*movsi_internal}
     (nil))
(jump_insn 61 8 62 2 (set (pc)
        (label_ref 40)) mSector.c:267 650 {jump}
     (nil)
 -> 40)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 62 61 44)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 63 64 65 66 67 68 69 70 72 73 74 75 76
(code_label 44 62 11 3 114 "" [1 uses])
(note 11 44 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 0 ax [72])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 0 ax [orig:61 D.5034 ] [61])
        (sign_extend:DI (reg:SI 0 ax [72]))) mSector.c:267 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [72])
        (nil)))
(insn 14 13 65 3 (parallel [
            (set (reg:DI 0 ax [orig:62 D.5034 ] [62])
                (plus:DI (reg:DI 0 ax [orig:61 D.5034 ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.5034 ] [61])
        (nil)))
(insn 65 14 16 3 (set (reg:DI 1 dx [orig:63 D.5034 ] [63])
        (mult:DI (reg:DI 0 ax [orig:62 D.5034 ] [62])
            (const_int 8 [0x8]))) mSector.c:267 267 {*leadi}
     (nil))
(insn 16 65 17 3 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg/f:DI 0 ax [orig:64 D.5035 ] [64])
                (plus:DI (reg/f:DI 0 ax [73])
                    (reg:DI 1 dx [orig:63 D.5034 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.5034 ] [63])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:63 D.5034 ] [63]))
                (nil)))))
(insn 18 17 19 3 (set (reg/f:DI 2 cx [orig:65 D.5036 ] [65])
        (mem/f:DI (reg/f:DI 0 ax [orig:64 D.5035 ] [64]) [0 *_10+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.5035 ] [64])
        (nil)))
(insn 19 18 20 3 (set (reg:SI 0 ax [74])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 20 19 66 3 (set (reg:DI 0 ax [orig:66 D.5037 ] [66])
        (sign_extend:DI (reg:SI 0 ax [74]))) mSector.c:267 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [74])
        (nil)))
(insn 66 20 22 3 (set (reg:DI 1 dx [orig:67 D.5037 ] [67])
        (mult:DI (reg:DI 0 ax [orig:66 D.5037 ] [66])
            (const_int 8 [0x8]))) mSector.c:267 267 {*leadi}
     (nil))
(insn 22 66 23 3 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg/f:DI 0 ax [orig:68 D.5035 ] [68])
                (plus:DI (reg/f:DI 0 ax [75])
                    (reg:DI 1 dx [orig:67 D.5037 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:67 D.5037 ] [67])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
                    (reg:DI 1 dx [orig:67 D.5037 ] [67]))
                (nil)))))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [orig:69 D.5036 ] [69])
        (mem/f:DI (reg/f:DI 0 ax [orig:68 D.5035 ] [68]) [0 *_14+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.5035 ] [68])
        (nil)))
(insn 25 24 27 3 (set (reg:DI 1 dx [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 27 25 28 3 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:65 D.5036 ] [65])) mSector.c:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:65 D.5036 ] [65])
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:69 D.5036 ] [69])) mSector.c:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.5036 ] [69])
        (nil)))
(call_insn 29 28 31 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:267 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 31 29 32 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:70 D.5033 ] [70])
            (const_int 0 [0]))) mSector.c:267 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:70 D.5033 ] [70])
        (nil)))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) mSector.c:267 612 {*jcc_1}
     (nil)
 -> 37)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 63 4 (set (reg:SI 0 ax [orig:59 D.5033 ] [59])
        (const_int 1 [0x1])) mSector.c:267 89 {*movsi_internal}
     (nil))
(jump_insn 63 34 64 4 (set (pc)
        (label_ref 49)) mSector.c:267 650 {jump}
     (nil)
 -> 49)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 64 63 37)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 37 64 38 5 112 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 77
(code_label 40 39 41 6 111 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 0 ax [77])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 43 42 45 6 (parallel [
            (set (reg:SI 0 ax [orig:60 D.5033 ] [60])
                (plus:SI (reg:SI 0 ax [77])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [77])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 45 43 46 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:60 D.5033 ] [60])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:267 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.5033 ] [60])
        (nil)))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) mSector.c:267 612 {*jcc_1}
     (nil)
 -> 44)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:SI 0 ax [orig:59 D.5033 ] [59])
        (const_int 0 [0])) mSector.c:268 89 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 71
(code_label 49 48 50 8 113 "" [1 uses])
(note 50 49 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 50 0 8 (use (reg/i:SI 0 ax)) mSector.c:269 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _alloc_shock (_alloc_shock, funcdef_no=15, decl_uid=4116, cgraph_uid=15)

scanning new insn with uid = 52.
scanning new insn with uid = 53.
deleting insn with uid = 41.
deleting insn with uid = 41.
scanning new insn with uid = 54.
scanning new insn with uid = 55.
deleting insn with uid = 42.
deleting insn with uid = 42.
scanning new insn with uid = 56.
deleting insn with uid = 50.
deleting insn with uid = 50.
scanning new insn with uid = 57.
scanning new insn with uid = 58.
deleting insn with uid = 43.
deleting insn with uid = 43.
deleting insn with uid = 25.
deleting insn with uid = 31.
deleting insn with uid = 35.


_alloc_shock

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 9[st(1)] 10[st(2)] 17[flags] 19[fpcr]
;;  ref usage 	r0={10d,11u} r1={4d,2u} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,21u} r7={1d,3u} r8={6d,5u} r9={3d,2u} r10={3d,2u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d} r18={1d} r19={1d,1u} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 135{84d,51u,0e} in 31{30 regular + 1 call} insns.
(note 1 0 44 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [fpcr] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [fpcr] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79
(note 44 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 44 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])
        (reg:DI 5 di [ shock ])) mSector.c:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ shock ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 52 2 (set (reg:SI 0 ax [orig:59 D.5038 ] [59])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [0 conf.nsim+0 S4 A128])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 52 6 53 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0  S4 A32])
        (reg:SI 0 ax [orig:59 D.5038 ] [59])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 53 52 8 2 (set (reg:XF 9 st(1) [orig:60 D.5039 ] [60])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0  S4 A32]))) mSector.c:272 256 {*floatsixf2_i387}
     (nil))
(insn 8 53 9 2 (set (reg:XF 10 st(2) [orig:61 D.5039 ] [61])
        (mem/j/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [0 conf.f_lvl+16 S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 8 st [orig:62 D.5039 ] [62])
        (mem/j/c:XF (plus:DI (reg/f:DI 6 bp)
                (const_int 176 [0xb0])) [0 conf.f_lvl+0 S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 10 st(2) [orig:63 D.5039 ] [63])
        (minus:XF (reg:XF 10 st(2) [orig:61 D.5039 ] [61])
            (reg:XF 8 st [orig:62 D.5039 ] [62]))) mSector.c:272 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:62 D.5039 ] [62])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:61 D.5039 ] [61])
            (nil))))
(insn 11 10 12 2 (set (reg:XF 8 st [74])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 12 11 13 2 (set (reg:XF 8 st [orig:64 D.5039 ] [64])
        (div:XF (reg:XF 10 st(2) [orig:63 D.5039 ] [63])
            (reg:XF 8 st [74]))) mSector.c:272 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [74])
        (expr_list:REG_DEAD (reg:XF 10 st(2) [orig:63 D.5039 ] [63])
            (nil))))
(insn 13 12 14 2 (set (reg:XF 9 st(1) [orig:65 D.5039 ] [65])
        (mult:XF (reg:XF 9 st(1) [orig:60 D.5039 ] [60])
            (reg:XF 8 st [orig:64 D.5039 ] [64]))) mSector.c:272 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:64 D.5039 ] [64])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:60 D.5039 ] [60])
            (nil))))
(insn 14 13 54 2 (set (reg:SI 0 ax [orig:66 D.5038 ] [66])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 132 [0x84])) [0 conf.Nm_shock+0 S4 A32])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 54 14 55 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0  S4 A32])
        (reg:SI 0 ax [orig:66 D.5038 ] [66])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 55 54 16 2 (set (reg:XF 8 st [orig:67 D.5039 ] [67])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0  S4 A32]))) mSector.c:272 256 {*floatsixf2_i387}
     (nil))
(insn 16 55 48 2 (set (reg:XF 8 st [orig:68 D.5039 ] [68])
        (mult:XF (reg:XF 8 st [orig:67 D.5039 ] [67])
            (reg:XF 9 st(1) [orig:65 D.5039 ] [65]))) mSector.c:272 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:67 D.5039 ] [67])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:65 D.5039 ] [65])
            (nil))))
(insn 48 16 49 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -14 [0xfffffffffffffff2])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mSector.c:272 199 {x86_fnstcw_1}
     (nil))
(insn 49 48 56 2 (set (reg:HI 0 ax [79])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -14 [0xfffffffffffffff2])) [0  S2 A16])) mSector.c:272 90 {*movhi_internal}
     (nil))
(insn 56 49 51 2 (parallel [
            (set (zero_extract:SI (reg:SI 0 ax [79])
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (ior:SI (zero_extract:SI (reg:SI 0 ax [79])
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:272 446 {*iorqi_ext_0}
     (nil))
(insn 51 56 57 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0  S2 A16])
        (reg:HI 0 ax [79])) mSector.c:272 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 0 ax [79])
        (nil)))
(insn 57 51 58 2 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0  S4 A32])
                (fix:SI (reg:XF 8 st [orig:68 D.5039 ] [68])))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -14 [0xfffffffffffffff2])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0  S2 A16]))
        ]) mSector.c:272 196 {fix_truncsi_i387}
     (nil))
(insn 58 57 18 2 (set (reg:SI 1 dx [orig:69 D.5038 ] [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0  S4 A32])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 18 58 19 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:272 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (mem/j:SI (reg/f:DI 0 ax [75]) [0 shock_12(D)->Nshock+0 S4 A64])
        (reg:SI 1 dx [orig:69 D.5038 ] [69])) mSector.c:272 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:69 D.5038 ] [69])
            (nil))))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 ax [orig:70 D.5038 ] [70])
        (mem/j:SI (reg/f:DI 0 ax [76]) [0 shock_12(D)->Nshock+0 S4 A64])) mSector.c:273 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (const_int 6 [0x6])) mSector.c:273 89 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:70 D.5038 ] [70])) mSector.c:273 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:70 D.5038 ] [70])
        (nil)))
(call_insn 24 23 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:273 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 26 24 27 2 (set (reg/f:DI 1 dx [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [77])
                (const_int 8 [0x8])) [0 shock_12(D)->shock+0 S8 A64])
        (reg/f:DI 0 ax [orig:71 D.5040 ] [71])) mSector.c:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.5040 ] [71])
            (nil))))
(insn 28 27 45 2 (set (reg:SI 0 ax [orig:72 D.5038 ] [72])
        (const_int 1 [0x1])) mSector.c:274 89 {*movsi_internal}
     (nil))
(note 45 28 38 2 NOTE_INSN_DELETED)
(insn 38 45 0 2 (use (reg/i:SI 0 ax)) mSector.c:275 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _set_cross_timeM1 (_set_cross_timeM1, funcdef_no=16, decl_uid=4120, cgraph_uid=16)

deleting insn with uid = 91.
deleting insn with uid = 95.
deleting insn with uid = 19.
deleting insn with uid = 20.
deleting insn with uid = 30.
deleting insn with uid = 31.
deleting insn with uid = 42.
deleting insn with uid = 43.
deleting insn with uid = 58.
deleting insn with uid = 59.
deleting insn with uid = 70.
deleting insn with uid = 71.


_set_cross_timeM1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={45d,45u} r1={6d,10u,5e} r2={3d,2u} r4={5d,5u} r5={3d,3u} r6={1d,22u} r7={1d,5u} r8={2d,2u} r9={1d,1u} r17={26d,1u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 206{104d,97u,5e} in 69{69 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mSector.c:277 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 101 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:279 89 {*movsi_internal}
     (nil))
(jump_insn 101 7 102 2 (set (pc)
        (label_ref 81)) mSector.c:279 650 {jump}
     (nil)
 -> 81)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 102 101 83)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
(code_label 83 102 10 3 119 "" [1 uses])
(note 10 83 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 2 cx [orig:59 D.5041 ] [59])
        (mem/f:DI (reg/f:DI 0 ax [94]) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (nil)))
(insn 13 12 14 3 (set (reg:SI 0 ax [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx [orig:60 D.5042 ] [60])
        (sign_extend:DI (reg:SI 0 ax [95]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [95])
        (nil)))
(insn 15 14 16 3 (set (reg:DI 0 ax [96])
        (reg:DI 1 dx [orig:60 D.5042 ] [60])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 0 ax [96])
                (ashift:DI (reg:DI 0 ax [96])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 0 ax [96])
                (plus:DI (reg:DI 0 ax [96])
                    (reg:DI 1 dx [orig:60 D.5042 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.5042 ] [60])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:60 D.5042 ] [60])
                (const_int 5 [0x5]))
            (nil))))
(insn 18 17 21 3 (parallel [
            (set (reg:DI 0 ax [97])
                (ashift:DI (reg:DI 0 ax [96])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(insn 21 18 22 3 (parallel [
            (set (reg/f:DI 2 cx [orig:62 D.5041 ] [62])
                (plus:DI (reg/f:DI 2 cx [orig:59 D.5041 ] [59])
                    (reg:DI 0 ax [orig:61 D.5042 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.5042 ] [61])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:59 D.5041 ] [59])
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 4 si [orig:63 D.5041 ] [63])
        (mem/f:DI (reg/f:DI 0 ax [98]) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [98])
        (nil)))
(insn 24 23 25 3 (set (reg:SI 0 ax [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 1 dx [orig:64 D.5042 ] [64])
        (sign_extend:DI (reg:SI 0 ax [99]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [99])
        (nil)))
(insn 26 25 27 3 (set (reg:DI 0 ax [100])
        (reg:DI 1 dx [orig:64 D.5042 ] [64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (parallel [
            (set (reg:DI 0 ax [100])
                (ashift:DI (reg:DI 0 ax [100])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 0 ax [100])
                (plus:DI (reg:DI 0 ax [100])
                    (reg:DI 1 dx [orig:64 D.5042 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.5042 ] [64])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:64 D.5042 ] [64])
                (const_int 5 [0x5]))
            (nil))))
(insn 29 28 32 3 (parallel [
            (set (reg:DI 0 ax [101])
                (ashift:DI (reg:DI 0 ax [100])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [100])
        (nil)))
(insn 32 29 33 3 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.5041 ] [66])
                (plus:DI (reg:DI 0 ax [orig:65 D.5042 ] [65])
                    (reg/f:DI 4 si [orig:63 D.5041 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.5042 ] [65])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:63 D.5041 ] [63])
            (nil))))
(insn 33 32 34 3 (set (reg/f:DI 4 si [orig:67 D.5043 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:66 D.5041 ] [66])
                (const_int 16 [0x10])) [0 _12->time+0 S8 A128])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.5041 ] [66])
        (nil)))
(insn 34 33 35 3 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 5 di [orig:68 D.5041 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [102]) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [102])
        (nil)))
(insn 36 35 37 3 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 1 dx [orig:69 D.5042 ] [69])
        (sign_extend:DI (reg:SI 0 ax [103]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [103])
        (nil)))
(insn 38 37 39 3 (set (reg:DI 0 ax [104])
        (reg:DI 1 dx [orig:69 D.5042 ] [69])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 3 (parallel [
            (set (reg:DI 0 ax [104])
                (ashift:DI (reg:DI 0 ax [104])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 40 39 41 3 (parallel [
            (set (reg:DI 0 ax [104])
                (plus:DI (reg:DI 0 ax [104])
                    (reg:DI 1 dx [orig:69 D.5042 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.5042 ] [69])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:69 D.5042 ] [69])
                (const_int 5 [0x5]))
            (nil))))
(insn 41 40 44 3 (parallel [
            (set (reg:DI 0 ax [105])
                (ashift:DI (reg:DI 0 ax [104])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [104])
        (nil)))
(insn 44 41 45 3 (parallel [
            (set (reg/f:DI 0 ax [orig:71 D.5041 ] [71])
                (plus:DI (reg:DI 0 ax [orig:70 D.5042 ] [70])
                    (reg/f:DI 5 di [orig:68 D.5041 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 D.5042 ] [70])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:68 D.5041 ] [68])
            (nil))))
(insn 45 44 46 3 (set (reg:SI 0 ax [orig:72 D.5044 ] [72])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:71 D.5041 ] [71])
                (const_int 116 [0x74])) [0 _17->bound+4 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.5041 ] [71])
        (nil)))
(insn 46 45 47 3 (set (reg:DI 0 ax [orig:73 D.5042 ] [73])
        (sign_extend:DI (reg:SI 0 ax [orig:72 D.5044 ] [72]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 D.5044 ] [72])
        (nil)))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 0 ax [orig:74 D.5042 ] [74])
                (ashift:DI (reg:DI 0 ax [orig:73 D.5042 ] [73])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:73 D.5042 ] [73])
        (nil)))
(insn 48 47 49 3 (parallel [
            (set (reg/f:DI 0 ax [orig:75 D.5043 ] [75])
                (plus:DI (reg:DI 0 ax [orig:74 D.5042 ] [74])
                    (reg/f:DI 4 si [orig:67 D.5043 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:74 D.5042 ] [74])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:67 D.5043 ] [67])
            (nil))))
(insn 49 48 50 3 (set (reg:XF 9 st(1) [orig:76 D.5045 ] [76])
        (mem:XF (reg/f:DI 0 ax [orig:75 D.5043 ] [75]) [0 *_21+0 S16 A128])) mSector.c:279 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.5043 ] [75])
        (nil)))
(insn 50 49 51 3 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 3 (set (reg/f:DI 4 si [orig:77 D.5041 ] [77])
        (mem/f:DI (reg/f:DI 0 ax [106]) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [106])
        (nil)))
(insn 52 51 53 3 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (set (reg:DI 1 dx [orig:78 D.5042 ] [78])
        (sign_extend:DI (reg:SI 0 ax [107]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [107])
        (nil)))
(insn 54 53 55 3 (set (reg:DI 0 ax [108])
        (reg:DI 1 dx [orig:78 D.5042 ] [78])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg:DI 0 ax [108])
                (ashift:DI (reg:DI 0 ax [108])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 0 ax [108])
                (plus:DI (reg:DI 0 ax [108])
                    (reg:DI 1 dx [orig:78 D.5042 ] [78])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:78 D.5042 ] [78])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:78 D.5042 ] [78])
                (const_int 5 [0x5]))
            (nil))))
(insn 57 56 60 3 (parallel [
            (set (reg:DI 0 ax [109])
                (ashift:DI (reg:DI 0 ax [108])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [108])
        (nil)))
(insn 60 57 61 3 (parallel [
            (set (reg/f:DI 0 ax [orig:80 D.5041 ] [80])
                (plus:DI (reg:DI 0 ax [orig:79 D.5042 ] [79])
                    (reg/f:DI 4 si [orig:77 D.5041 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:79 D.5042 ] [79])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:77 D.5041 ] [77])
            (nil))))
(insn 61 60 62 3 (set (reg/f:DI 4 si [orig:81 D.5043 ] [81])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:80 D.5041 ] [80])
                (const_int 16 [0x10])) [0 _26->time+0 S8 A128])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.5041 ] [80])
        (nil)))
(insn 62 61 63 3 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg/f:DI 5 di [orig:82 D.5041 ] [82])
        (mem/f:DI (reg/f:DI 0 ax [110]) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [110])
        (nil)))
(insn 64 63 65 3 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 65 64 66 3 (set (reg:DI 1 dx [orig:83 D.5042 ] [83])
        (sign_extend:DI (reg:SI 0 ax [111]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [111])
        (nil)))
(insn 66 65 67 3 (set (reg:DI 0 ax [112])
        (reg:DI 1 dx [orig:83 D.5042 ] [83])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 3 (parallel [
            (set (reg:DI 0 ax [112])
                (ashift:DI (reg:DI 0 ax [112])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 68 67 69 3 (parallel [
            (set (reg:DI 0 ax [112])
                (plus:DI (reg:DI 0 ax [112])
                    (reg:DI 1 dx [orig:83 D.5042 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:83 D.5042 ] [83])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:83 D.5042 ] [83])
                (const_int 5 [0x5]))
            (nil))))
(insn 69 68 72 3 (parallel [
            (set (reg:DI 0 ax [113])
                (ashift:DI (reg:DI 0 ax [112])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [112])
        (nil)))
(insn 72 69 73 3 (parallel [
            (set (reg/f:DI 0 ax [orig:85 D.5041 ] [85])
                (plus:DI (reg:DI 0 ax [orig:84 D.5042 ] [84])
                    (reg/f:DI 5 di [orig:82 D.5041 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:84 D.5042 ] [84])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:82 D.5041 ] [82])
            (nil))))
(insn 73 72 74 3 (set (reg:SI 0 ax [orig:86 D.5044 ] [86])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:85 D.5041 ] [85])
                (const_int 112 [0x70])) [0 _31->bound+0 S4 A128])) mSector.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 D.5041 ] [85])
        (nil)))
(insn 74 73 75 3 (set (reg:DI 0 ax [orig:87 D.5042 ] [87])
        (sign_extend:DI (reg:SI 0 ax [orig:86 D.5044 ] [86]))) mSector.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 D.5044 ] [86])
        (nil)))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 0 ax [orig:88 D.5042 ] [88])
                (ashift:DI (reg:DI 0 ax [orig:87 D.5042 ] [87])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:87 D.5042 ] [87])
        (nil)))
(insn 76 75 77 3 (parallel [
            (set (reg/f:DI 0 ax [orig:89 D.5043 ] [89])
                (plus:DI (reg:DI 0 ax [orig:88 D.5042 ] [88])
                    (reg/f:DI 4 si [orig:81 D.5043 ] [81])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:88 D.5042 ] [88])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:81 D.5043 ] [81])
            (nil))))
(insn 77 76 78 3 (set (reg:XF 8 st [orig:90 D.5045 ] [90])
        (mem:XF (reg/f:DI 0 ax [orig:89 D.5043 ] [89]) [0 *_35+0 S16 A128])) mSector.c:279 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.5043 ] [89])
        (nil)))
(insn 78 77 79 3 (set (reg:XF 8 st [orig:91 D.5045 ] [91])
        (minus:XF (reg:XF 9 st(1) [orig:76 D.5045 ] [76])
            (reg:XF 8 st [orig:90 D.5045 ] [90]))) mSector.c:279 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:90 D.5045 ] [90])
        (expr_list:REG_DEAD (reg:XF 9 st(1) [orig:76 D.5045 ] [76])
            (nil))))
(insn 79 78 80 3 (set (mem/j:XF (plus:DI (reg/f:DI 2 cx [orig:62 D.5041 ] [62])
                (const_int 128 [0x80])) [0 _8->delta_t+0 S16 A128])
        (reg:XF 8 st [orig:91 D.5045 ] [91])) mSector.c:279 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st [orig:91 D.5045 ] [91])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:62 D.5041 ] [62])
            (nil))))
(insn 80 79 81 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114
(code_label 81 80 82 4 118 "" [1 uses])
(note 82 81 84 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 4 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [114])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mSector.c:279 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [114])
        (nil)))
(jump_insn 86 85 87 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) mSector.c:279 612 {*jcc_1}
     (nil)
 -> 83)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 92 93
(note 87 86 88 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 98 5 (set (reg:SI 0 ax [orig:92 D.5044 ] [92])
        (const_int 1 [0x1])) mSector.c:280 89 {*movsi_internal}
     (nil))
(insn 98 88 0 5 (use (reg/i:SI 0 ax)) mSector.c:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _alloc_flight_pos (_alloc_flight_pos, funcdef_no=17, decl_uid=4129, cgraph_uid=17)

deleting insn with uid = 42.
deleting insn with uid = 46.
deleting insn with uid = 20.
deleting insn with uid = 21.
scanning new insn with uid = 54.
deleting insn with uid = 22.
deleting insn with uid = 22.
deleting insn with uid = 29.


_alloc_flight_pos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={13d,13u} r1={3d,3u,1e} r2={3d,1u} r3={1d,1u} r4={3d,2u} r5={3d,2u} r6={1d,16u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={7d,1u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 131{84d,46u,1e} in 27{26 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 N_f+0 S4 A32])
        (reg:SI 4 si [ N_f ])) mSector.c:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N_f ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 conf+0 S8 A64])
        (reg:DI 1 dx [ conf ])) mSector.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ conf ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:285 89 {*movsi_internal}
     (nil))
(jump_insn 52 8 53 2 (set (pc)
        (label_ref 32)) mSector.c:285 650 {jump}
     (nil)
 -> 32)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 53 52 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 68 69 70 71 72
(code_label 34 53 11 3 123 "" [1 uses])
(note 11 34 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 2 cx [orig:59 D.5046 ] [59])
        (mem/f:DI (reg/f:DI 0 ax [68]) [0 *f_4(D)+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (nil)))
(insn 14 13 15 3 (set (reg:SI 0 ax [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 1 dx [orig:60 D.5047 ] [60])
        (sign_extend:DI (reg:SI 0 ax [69]))) mSector.c:285 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [69])
        (nil)))
(insn 16 15 17 3 (set (reg:DI 0 ax [70])
        (reg:DI 1 dx [orig:60 D.5047 ] [60])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 0 ax [70])
                (ashift:DI (reg:DI 0 ax [70])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 0 ax [70])
                (plus:DI (reg:DI 0 ax [70])
                    (reg:DI 1 dx [orig:60 D.5047 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.5047 ] [60])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:60 D.5047 ] [60])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 19 18 54 3 (parallel [
            (set (reg:DI 0 ax [71])
                (ashift:DI (reg:DI 0 ax [70])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 19 23 3 (set (reg/f:DI 3 bx [orig:62 D.5046 ] [62])
        (plus:DI (reg/f:DI 2 cx [orig:59 D.5046 ] [59])
            (reg:DI 0 ax [orig:61 D.5047 ] [61]))) mSector.c:285 267 {*leadi}
     (nil))
(insn 23 54 24 3 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 conf+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:SI 0 ax [orig:63 D.5048 ] [63])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [72])
                (const_int 192 [0xc0])) [0 conf_9(D)->t_w+0 S4 A128])) mSector.c:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 0 ax [orig:64 D.5048 ] [64])
                (ashift:SI (reg:SI 0 ax [orig:63 D.5048 ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 512 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.5048 ] [63])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:64 D.5048 ] [64])) mSector.c:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.5048 ] [64])
        (nil)))
(call_insn 28 27 30 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:285 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 30 28 31 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:62 D.5046 ] [62])
                (const_int 32 [0x20])) [0 _8->pos+0 S8 A128])
        (reg/f:DI 0 ax [orig:65 D.5049 ] [65])) mSector.c:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.5049 ] [65])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 D.5046 ] [62])
            (nil))))
(insn 31 30 32 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 73
(code_label 32 31 33 4 122 "" [1 uses])
(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 4 (set (reg:SI 0 ax [73])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [73])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [0 N_f+0 S4 A32]))) mSector.c:285 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [73])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) mSector.c:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 66 67
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 49 5 (set (reg:SI 0 ax [orig:66 D.5048 ] [66])
        (const_int 1 [0x1])) mSector.c:286 89 {*movsi_internal}
     (nil))
(insn 49 39 0 5 (use (reg/i:SI 0 ax)) mSector.c:287 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function init_Sector (init_Sector, funcdef_no=18, decl_uid=1896, cgraph_uid=18)

deleting insn with uid = 28.
deleting insn with uid = 45.
deleting insn with uid = 63.
deleting insn with uid = 67.


init_Sector

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={22d,14u} r1={15d,6u} r2={15d,8u} r4={19d,10u} r5={23d,14u} r6={1d,22u} r7={1d,15u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={9d} r18={9d} r19={9d} r20={1d,1u} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={12d,3u} r38={11d,1u} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} 
;;    total ref usage 555{461d,94u,0e} in 59{50 regular + 9 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ flight ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ Nflight ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])
        (reg:DI 1 dx [ config ])) mSector.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ config ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])
        (reg:DI 2 cx [ shock ])) mSector.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ shock ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])
        (reg:DI 37 r8 [ input_ABM ])) mSector.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ input_ABM ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:291 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [63])) mSector.c:291 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [63])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f44d24df4c0 *.LC16>)) mSector.c:291 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_boundary") [flags 0x41]  <function_decl 0x7f44d29f7200 get_boundary>) [0 get_boundary S1 A8])
            (const_int 0 [0]))) mSector.c:291 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:292 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [64])) mSector.c:292 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [64])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f44d24df558 *.LC17>)) mSector.c:292 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_configuration") [flags 0x41]  <function_decl 0x7f44d29f7300 get_configuration>) [0 get_configuration S1 A8])
            (const_int 0 [0]))) mSector.c:292 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f44d24df5f0 *.LC18>)) mSector.c:294 87 {*movdi_internal_rex64}
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:294 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:295 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [65])) mSector.c:295 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [65])
        (nil)))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("generate_temporary_point") [flags 0x3]  <function_decl 0x7f44d29fcf00 generate_temporary_point>) [0 generate_temporary_point S1 A8])
            (const_int 0 [0]))) mSector.c:295 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [66])) mSector.c:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [66])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [67])) mSector.c:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (nil)))
(call_insn 27 26 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_M1") [flags 0x41]  <function_decl 0x7f44d29f7100 get_M1>) [0 get_M1 S1 A8])
            (const_int 0 [0]))) mSector.c:297 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 29 27 30 2 (set (reg/f:DI 1 dx [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 1 dx [68]) [0 *Nflight_5(D)+0 S4 A32])
        (reg:SI 0 ax [orig:59 D.5050 ] [59])) mSector.c:297 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [68])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.5050 ] [59])
            (nil))))
(insn 31 30 32 2 (set (reg:DI 38 r9 [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:DI 37 r8 [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:DI 1 dx [72])
        (reg/f:DI 7 sp)) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si [73])
        (reg/f:DI 0 ax [71])) mSector.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 36 35 73 2 (set (reg:DI 0 ax [74])
        (const_int 38 [0x26])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 73 36 74 2 (set (reg:DI 5 di [72])
        (reg:DI 1 dx [72])) mSector.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [72])
        (nil)))
(insn 74 73 37 2 (set (reg:DI 2 cx [74])
        (reg:DI 0 ax [74])) mSector.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [74])
        (nil)))
(insn 37 74 38 2 (parallel [
            (set (reg:DI 2 cx [74])
                (const_int 0 [0]))
            (set (reg:DI 5 di [72])
                (plus:DI (ashift:DI (reg:DI 2 cx [74])
                        (const_int 3 [0x3]))
                    (reg:DI 5 di [72])))
            (set (reg:DI 4 si [73])
                (plus:DI (ashift:DI (reg:DI 2 cx [74])
                        (const_int 3 [0x3]))
                    (reg:DI 4 si [73])))
            (set (mem:BLK (reg:DI 5 di [72]) [0  S304 A128])
                (mem:BLK (reg:DI 4 si [73]) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 2 cx [74]))
        ]) mSector.c:299 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 2 cx [74])
        (expr_list:REG_UNUSED (reg:DI 5 di [72])
            (expr_list:REG_UNUSED (reg:DI 4 si [73])
                (nil)))))
(insn 38 37 39 2 (set (reg:DI 4 si)
        (reg:DI 38 r9 [69])) mSector.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [69])
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg:DI 37 r8 [70])) mSector.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [70])
        (nil)))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("modify_traj_intersect_bound") [flags 0x3]  <function_decl 0x7f44d2a01200 modify_traj_intersect_bound>) [0 modify_traj_intersect_bound S1 A8])
            (const_int 304 [0x130]))) mSector.c:299 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
                (nil)))))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:SI 2 cx [orig:60 D.5050 ] [60])
        (mem:SI (reg/f:DI 0 ax [75]) [0 *Nflight_5(D)+0 S4 A32])) mSector.c:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 43 42 44 2 (set (reg:DI 1 dx [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 46 2 (set (reg:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 46 44 47 2 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:60 D.5050 ] [60])) mSector.c:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:60 D.5050 ] [60])
        (nil)))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [77])) mSector.c:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [77])
        (nil)))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_flight_pos") [flags 0x3]  <function_decl 0x7f44d278ca00 _alloc_flight_pos>) [0 _alloc_flight_pos S1 A8])
            (const_int 0 [0]))) mSector.c:309 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 2 (set (reg:DI 37 r8 [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (reg:DI 1 dx [80])
        (reg/f:DI 7 sp)) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 4 si [81])
        (reg/f:DI 0 ax [79])) mSector.c:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (nil)))
(insn 53 52 75 2 (set (reg:DI 0 ax [82])
        (const_int 38 [0x26])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 75 53 76 2 (set (reg:DI 5 di [80])
        (reg:DI 1 dx [80])) mSector.c:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [80])
        (nil)))
(insn 76 75 54 2 (set (reg:DI 2 cx [82])
        (reg:DI 0 ax [82])) mSector.c:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [82])
        (nil)))
(insn 54 76 55 2 (parallel [
            (set (reg:DI 2 cx [82])
                (const_int 0 [0]))
            (set (reg:DI 5 di [80])
                (plus:DI (ashift:DI (reg:DI 2 cx [82])
                        (const_int 3 [0x3]))
                    (reg:DI 5 di [80])))
            (set (reg:DI 4 si [81])
                (plus:DI (ashift:DI (reg:DI 2 cx [82])
                        (const_int 3 [0x3]))
                    (reg:DI 4 si [81])))
            (set (mem:BLK (reg:DI 5 di [80]) [0  S304 A128])
                (mem:BLK (reg:DI 4 si [81]) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 2 cx [82]))
        ]) mSector.c:311 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 2 cx [82])
        (expr_list:REG_UNUSED (reg:DI 5 di [80])
            (expr_list:REG_UNUSED (reg:DI 4 si [81])
                (nil)))))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 37 r8 [78])) mSector.c:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [78])
        (nil)))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_shock") [flags 0x3]  <function_decl 0x7f44d278c800 _alloc_shock>) [0 _alloc_shock S1 A8])
            (const_int 304 [0x130]))) mSector.c:311 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
            (nil))))
(insn 57 56 58 2 (set (reg:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:312 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [83])) mSector.c:312 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(call_insn 59 58 60 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_temp_shock") [flags 0x41]  <function_decl 0x7f44d29f7400 get_temp_shock>) [0 get_temp_shock S1 A8])
            (const_int 0 [0]))) mSector.c:312 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 70 2 (set (reg:SI 0 ax [orig:61 D.5050 ] [61])
        (const_int 1 [0x1])) mSector.c:315 89 {*movsi_internal}
     (nil))
(insn 70 60 0 2 (use (reg/i:SI 0 ax)) mSector.c:316 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

