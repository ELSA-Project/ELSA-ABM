
;; Function _find_extrem (_find_extrem, funcdef_no=2, decl_uid=3943, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns


_find_extrem

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,15u} r7={1d,15u} r8={1d,2u} r16={1d,14u} r17={27d,5u} r20={1d,54u,4e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u,1e} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u,1e} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 293{112d,173u,8e} in 92{92 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:19 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32])
        (reg:SI 4 si [ np ])) mSector.c:19 89 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])
        (reg:SI 1 dx [ c ])) mSector.c:19 89 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
        (reg:SI 2 cx [ Max ])) mSector.c:19 89 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 Max+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:22 7 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:22 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       3 (FALLTHRU)
;;              9

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 60 [ D.4955 ])
        (mem/f:DI (reg/f:DI 99) [0 *p_10(D)+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 61 [ D.4956 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:23 149 {*extendsidi2_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 62 [ D.4956 ])
                (ashift:DI (reg:DI 61 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 63 [ D.4955 ])
                (plus:DI (reg/f:DI 60 [ D.4955 ])
                    (reg:DI 62 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (nil))
(insn 19 18 20 3 (set (reg:XF 101)
        (mem:XF (reg/f:DI 63 [ D.4955 ]) [0 *_15+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(insn 20 19 140 3 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 101)) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 140 20 141 3 (set (pc)
        (label_ref 57)) mSector.c:23 -1
     (nil)
 -> 57)
;;  succ:       7 [100.0%] 

(barrier 141 140 59)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 59 141 23 4 6 "" [1 uses])
(note 23 59 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 64 [ D.4956 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:23 149 {*extendsidi2_rex64}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 65 [ D.4956 ])
                (ashift:DI (reg:DI 64 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:DI 66 [ D.4957 ])
                (plus:DI (reg:DI 65 [ D.4956 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 65 [ D.4956 ]))
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 67 [ D.4955 ])
        (mem/f:DI (reg/f:DI 66 [ D.4957 ]) [0 *_20+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 4 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 68 [ D.4956 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:23 149 {*extendsidi2_rex64}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 69 [ D.4956 ])
                (ashift:DI (reg:DI 68 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 70 [ D.4955 ])
                (plus:DI (reg/f:DI 67 [ D.4955 ])
                    (reg:DI 69 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (nil))
(insn 34 33 35 4 (set (reg:XF 71 [ D.4954 ])
        (mem:XF (reg/f:DI 70 [ D.4955 ]) [0 *_24+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 4 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(insn 36 35 37 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 71 [ D.4954 ])
            (reg:XF 105))) mSector.c:23 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 37 36 41 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) mSector.c:23 612 {*jcc_1}
     (nil)
 -> 54)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 41 37 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 72 [ D.4956 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:23 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 73 [ D.4956 ])
                (ashift:DI (reg:DI 72 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 74 [ D.4957 ])
                (plus:DI (reg:DI 73 [ D.4956 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 73 [ D.4956 ]))
        (nil)))
(insn 47 46 48 5 (set (reg/f:DI 75 [ D.4955 ])
        (mem/f:DI (reg/f:DI 74 [ D.4957 ]) [0 *_28+0 S8 A64])) mSector.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 5 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:DI 76 [ D.4956 ])
        (sign_extend:DI (reg:SI 108))) mSector.c:23 149 {*extendsidi2_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 77 [ D.4956 ])
                (ashift:DI (reg:DI 76 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 513 {*ashldi3_1}
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg/f:DI 78 [ D.4955 ])
                (plus:DI (reg/f:DI 75 [ D.4955 ])
                    (reg:DI 77 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 274 {*adddi_1}
     (nil))
(insn 52 51 53 5 (set (reg:XF 109)
        (mem:XF (reg/f:DI 78 [ D.4955 ]) [0 *_32+0 S16 A128])) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
(insn 53 52 54 5 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 109)) mSector.c:23 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 54 53 55 6 4 "" [1 uses])
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:23 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 57 56 58 7 3 "" [1 uses])
(note 58 57 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 7 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:23 89 {*movsi_internal}
     (nil))
(insn 61 60 62 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:23 7 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) mSector.c:23 612 {*jcc_1}
     (nil)
 -> 59)
;;  succ:       4
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 142 8 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:24 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 142 64 143 8 (set (pc)
        (label_ref 122)) mSector.c:24 -1
     (nil)
 -> 122)
;;  succ:       15 [100.0%] 

(barrier 143 142 67)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 67 143 68 9 2 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 70 69 71 9 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 9 (set (reg/f:DI 79 [ D.4955 ])
        (mem/f:DI (reg/f:DI 111) [0 *p_10(D)+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 9 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 80 [ D.4956 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 9 (parallel [
            (set (reg:DI 81 [ D.4956 ])
                (ashift:DI (reg:DI 80 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg/f:DI 82 [ D.4955 ])
                (plus:DI (reg/f:DI 79 [ D.4955 ])
                    (reg:DI 81 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (nil))
(insn 76 75 77 9 (set (reg:XF 113)
        (mem:XF (reg/f:DI 82 [ D.4955 ]) [0 *_40+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(insn 77 76 144 9 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 113)) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 144 77 145 9 (set (pc)
        (label_ref 114)) mSector.c:27 -1
     (nil)
 -> 114)
;;  succ:       13 [100.0%] 

(barrier 145 144 116)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 116 145 80 10 11 "" [1 uses])
(note 80 116 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 82 81 83 10 (set (reg:DI 83 [ D.4956 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 83 82 84 10 (parallel [
            (set (reg:DI 84 [ D.4956 ])
                (ashift:DI (reg:DI 83 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (nil))
(insn 84 83 85 10 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg/f:DI 85 [ D.4957 ])
                (plus:DI (reg:DI 84 [ D.4956 ])
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 84 [ D.4956 ]))
        (nil)))
(insn 86 85 87 10 (set (reg/f:DI 86 [ D.4955 ])
        (mem/f:DI (reg/f:DI 85 [ D.4957 ]) [0 *_44+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 10 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:DI 87 [ D.4956 ])
        (sign_extend:DI (reg:SI 116))) mSector.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 88 [ D.4956 ])
                (ashift:DI (reg:DI 87 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (nil))
(insn 90 89 91 10 (parallel [
            (set (reg/f:DI 89 [ D.4955 ])
                (plus:DI (reg/f:DI 86 [ D.4955 ])
                    (reg:DI 88 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (nil))
(insn 91 90 92 10 (set (reg:XF 90 [ D.4954 ])
        (mem:XF (reg/f:DI 89 [ D.4955 ]) [0 *_48+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(insn 92 91 93 10 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(insn 93 92 94 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 117)
            (reg:XF 90 [ D.4954 ]))) mSector.c:27 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 94 93 98 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) mSector.c:27 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 98 94 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 11 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 100 99 101 11 (set (reg:DI 91 [ D.4956 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 101 100 102 11 (parallel [
            (set (reg:DI 92 [ D.4956 ])
                (ashift:DI (reg:DI 91 [ D.4956 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (nil))
(insn 102 101 103 11 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg/f:DI 93 [ D.4957 ])
                (plus:DI (reg:DI 92 [ D.4956 ])
                    (reg/f:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
            (reg:DI 92 [ D.4956 ]))
        (nil)))
(insn 104 103 105 11 (set (reg/f:DI 94 [ D.4955 ])
        (mem/f:DI (reg/f:DI 93 [ D.4957 ]) [0 *_52+0 S8 A64])) mSector.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 11 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 106 105 107 11 (set (reg:DI 95 [ D.4956 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 11 (parallel [
            (set (reg:DI 96 [ D.4956 ])
                (ashift:DI (reg:DI 95 [ D.4956 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 513 {*ashldi3_1}
     (nil))
(insn 108 107 109 11 (parallel [
            (set (reg/f:DI 97 [ D.4955 ])
                (plus:DI (reg/f:DI 94 [ D.4955 ])
                    (reg:DI 96 [ D.4956 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 274 {*adddi_1}
     (nil))
(insn 109 108 110 11 (set (reg:XF 121)
        (mem:XF (reg/f:DI 97 [ D.4955 ]) [0 *_56+0 S16 A128])) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
(insn 110 109 111 11 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 121)) mSector.c:27 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 111 110 112 12 9 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:27 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 114 113 115 13 8 "" [1 uses])
(note 115 114 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 13 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:27 89 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 122)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 np+0 S4 A32]))) mSector.c:27 7 {*cmpsi_1}
     (nil))
(jump_insn 119 118 120 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:27 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       10
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 14 (set (reg:XF 59 [ D.4954 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mSector.c:28 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              8 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 122 121 123 15 7 "" [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 128 15 (set (reg:XF 98 [ <retval> ])
        (reg:XF 59 [ D.4954 ])) 131 {*movxf_internal_rex64}
     (nil))
(insn 128 124 131 15 (set (reg/i:XF 8 st)
        (reg:XF 98 [ <retval> ])) mSector.c:30 131 {*movxf_internal_rex64}
     (nil))
(insn 131 128 0 15 (use (reg/i:XF 8 st)) mSector.c:30 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _point_proj (_point_proj, funcdef_no=3, decl_uid=3957, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns


_point_proj

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={9d,2u} r20={1d,41u,7e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={2d,1u} r60={1d,2u} r61={1d,2u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} 
;;    total ref usage 251{103d,141u,7e} in 91{91 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
        (reg:DI 5 di [ P ])) mSector.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
        (reg:DI 4 si [ A ])) mSector.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
        (reg:DI 1 dx [ B ])) mSector.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
        (reg:DI 2 cx [ H ])) mSector.c:32 87 {*movdi_internal_rex64}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 60 [ D.4960 ])
        (mem:XF (reg/f:DI 99) [0 *B_2(D)+0 S16 A128])) mSector.c:34 131 {*movxf_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:XF 61 [ D.4960 ])
        (mem:XF (reg/f:DI 100) [0 *A_4(D)+0 S16 A128])) mSector.c:34 131 {*movxf_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 14 13 111 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mSector.c:34 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       5
;;              3 (FALLTHRU)

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 111 14 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 111 16 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.4960 ])
            (reg:XF 61 [ D.4960 ]))) mSector.c:34 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 16 15 20 3 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) mSector.c:34 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 20 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 4 (set (reg:XF 62 [ D.4960 ])
        (mem:XF (reg/f:DI 101) [0 *B_2(D)+0 S16 A128])) mSector.c:35 131 {*movxf_internal_rex64}
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 4 (set (mem:XF (reg/f:DI 102) [0 *H_7(D)+0 S16 A128])
        (reg:XF 62 [ D.4960 ])) mSector.c:35 131 {*movxf_internal_rex64}
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 63 [ D.4961 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:36 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (reg:XF 64 [ D.4960 ])
        (mem:XF (plus:DI (reg/f:DI 104)
                (const_int 16 [0x10])) [0 MEM[(long double *)P_9(D) + 16B]+0 S16 A128])) mSector.c:36 131 {*movxf_internal_rex64}
     (nil))
(insn 29 28 30 4 (set (mem:XF (reg/f:DI 63 [ D.4961 ]) [0 *_8+0 S16 A128])
        (reg:XF 64 [ D.4960 ])) mSector.c:36 131 {*movxf_internal_rex64}
     (nil))
(insn 30 29 116 4 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:37 89 {*movsi_internal}
     (nil))
(jump_insn 116 30 117 4 (set (pc)
        (label_ref 100)) mSector.c:37 -1
     (nil)
 -> 100)
;;  succ:       6 [100.0%] 

(barrier 117 116 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 33 117 34 5 15 "" [2 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:DI 65 [ D.4961 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 37 36 38 5 (set (reg:XF 66 [ D.4960 ])
        (mem:XF (reg/f:DI 65 [ D.4961 ]) [0 *_12+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 67 [ D.4961 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:40 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 40 39 41 5 (set (reg:XF 68 [ D.4960 ])
        (mem:XF (reg/f:DI 67 [ D.4961 ]) [0 *_14+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (nil))
(insn 41 40 42 5 (set (reg:XF 69 [ D.4960 ])
        (minus:XF (reg:XF 66 [ D.4960 ])
            (reg:XF 68 [ D.4960 ]))) mSector.c:40 800 {*fop_xf_1_i387}
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 B+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg:XF 70 [ D.4960 ])
        (mem:XF (reg/f:DI 107) [0 *B_2(D)+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:40 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:XF 71 [ D.4960 ])
        (mem:XF (reg/f:DI 108) [0 *A_4(D)+0 S16 A128])) mSector.c:40 131 {*movxf_internal_rex64}
     (nil))
(insn 46 45 47 5 (set (reg:XF 72 [ D.4960 ])
        (minus:XF (reg:XF 70 [ D.4960 ])
            (reg:XF 71 [ D.4960 ]))) mSector.c:40 800 {*fop_xf_1_i387}
     (nil))
(insn 47 46 48 5 (set (reg:XF 109)
        (div:XF (reg:XF 69 [ D.4960 ])
            (reg:XF 72 [ D.4960 ]))) mSector.c:40 800 {*fop_xf_1_i387}
     (nil))
(insn 48 47 49 5 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])
        (reg:XF 109)) mSector.c:40 131 {*movxf_internal_rex64}
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg/f:DI 73 [ D.4961 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:41 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 51 50 52 5 (set (reg:XF 74 [ D.4960 ])
        (mem:XF (reg/f:DI 73 [ D.4961 ]) [0 *_21+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (nil))
(insn 52 51 53 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 A+0 S8 A64])) mSector.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 5 (set (reg:XF 75 [ D.4960 ])
        (mem:XF (reg/f:DI 111) [0 *A_4(D)+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (nil))
(insn 54 53 55 5 (set (reg:XF 112)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:41 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 5 (set (reg:XF 76 [ D.4960 ])
        (mult:XF (reg:XF 75 [ D.4960 ])
            (reg:XF 112))) mSector.c:41 799 {*fop_xf_comm_i387}
     (nil))
(insn 56 55 57 5 (set (reg:XF 113)
        (minus:XF (reg:XF 74 [ D.4960 ])
            (reg:XF 76 [ D.4960 ]))) mSector.c:41 800 {*fop_xf_1_i387}
     (nil))
(insn 57 56 58 5 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])
        (reg:XF 113)) mSector.c:41 131 {*movxf_internal_rex64}
     (nil))
(insn 58 57 59 5 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 5 (set (reg:XF 77 [ D.4960 ])
        (mem:XF (reg/f:DI 114) [0 *P_9(D)+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 60 59 61 5 (set (reg:XF 115)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 61 60 62 5 (set (reg:XF 78 [ D.4960 ])
        (div:XF (reg:XF 77 [ D.4960 ])
            (reg:XF 115))) mSector.c:43 800 {*fop_xf_1_i387}
     (nil))
(insn 62 61 63 5 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg/f:DI 79 [ D.4961 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 64 63 65 5 (set (reg:XF 80 [ D.4960 ])
        (mem:XF (reg/f:DI 79 [ D.4961 ]) [0 *_28+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 65 64 66 5 (set (reg:XF 81 [ D.4960 ])
        (plus:XF (reg:XF 78 [ D.4960 ])
            (reg:XF 80 [ D.4960 ]))) mSector.c:43 799 {*fop_xf_comm_i387}
     (nil))
(insn 66 65 67 5 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 68 5 (set (reg:XF 82 [ D.4960 ])
        (minus:XF (reg:XF 81 [ D.4960 ])
            (reg:XF 117))) mSector.c:43 800 {*fop_xf_1_i387}
     (nil))
(insn 68 67 69 5 (set (reg:XF 118)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 69 68 70 5 (set (reg:XF 119)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 70 69 71 5 (set (reg:XF 83 [ D.4960 ])
        (div:XF (reg:XF 118)
            (reg:XF 119))) mSector.c:43 800 {*fop_xf_1_i387}
     (nil))
(insn 71 70 72 5 (set (reg:XF 120)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 72 71 73 5 (set (reg:XF 84 [ D.4960 ])
        (plus:XF (reg:XF 83 [ D.4960 ])
            (reg:XF 120))) mSector.c:43 799 {*fop_xf_comm_i387}
     (nil))
(insn 73 72 74 5 (set (reg:XF 85 [ D.4960 ])
        (div:XF (reg:XF 82 [ D.4960 ])
            (reg:XF 84 [ D.4960 ]))) mSector.c:43 800 {*fop_xf_1_i387}
     (nil))
(insn 74 73 75 5 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 5 (set (mem:XF (reg/f:DI 121) [0 *H_7(D)+0 S16 A128])
        (reg:XF 85 [ D.4960 ])) mSector.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 76 75 77 5 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 5 (parallel [
            (set (reg/f:DI 86 [ D.4961 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 H+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 78 77 79 5 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 5 (set (reg:XF 87 [ D.4960 ])
        (mem:XF (reg/f:DI 123) [0 *P_9(D)+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 80 79 81 5 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 81 80 82 5 (set (reg:XF 88 [ D.4960 ])
        (div:XF (reg:XF 87 [ D.4960 ])
            (reg:XF 124))) mSector.c:44 800 {*fop_xf_1_i387}
     (nil))
(insn 82 81 83 5 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])) mSector.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 5 (parallel [
            (set (reg/f:DI 89 [ D.4961 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 P+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 84 83 85 5 (set (reg:XF 90 [ D.4960 ])
        (mem:XF (reg/f:DI 89 [ D.4961 ]) [0 *_38+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 85 84 86 5 (set (reg:XF 91 [ D.4960 ])
        (plus:XF (reg:XF 88 [ D.4960 ])
            (reg:XF 90 [ D.4960 ]))) mSector.c:44 799 {*fop_xf_comm_i387}
     (nil))
(insn 86 85 87 5 (set (reg:XF 126)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 87 86 88 5 (set (reg:XF 92 [ D.4960 ])
        (minus:XF (reg:XF 91 [ D.4960 ])
            (reg:XF 126))) mSector.c:44 800 {*fop_xf_1_i387}
     (nil))
(insn 88 87 89 5 (set (reg:XF 127)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 89 88 90 5 (set (reg:XF 128)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 90 89 91 5 (set (reg:XF 93 [ D.4960 ])
        (div:XF (reg:XF 127)
            (reg:XF 128))) mSector.c:44 800 {*fop_xf_1_i387}
     (nil))
(insn 91 90 92 5 (set (reg:XF 129)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 92 91 93 5 (set (reg:XF 94 [ D.4960 ])
        (plus:XF (reg:XF 93 [ D.4960 ])
            (reg:XF 129))) mSector.c:44 799 {*fop_xf_comm_i387}
     (nil))
(insn 93 92 94 5 (set (reg:XF 95 [ D.4960 ])
        (div:XF (reg:XF 92 [ D.4960 ])
            (reg:XF 94 [ D.4960 ]))) mSector.c:44 800 {*fop_xf_1_i387}
     (nil))
(insn 94 93 95 5 (set (reg:XF 130)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 m+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 95 94 96 5 (set (reg:XF 96 [ D.4960 ])
        (mult:XF (reg:XF 95 [ D.4960 ])
            (reg:XF 130))) mSector.c:44 799 {*fop_xf_comm_i387}
     (nil))
(insn 96 95 97 5 (set (reg:XF 131)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S16 A128])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 97 96 98 5 (set (reg:XF 97 [ D.4960 ])
        (plus:XF (reg:XF 96 [ D.4960 ])
            (reg:XF 131))) mSector.c:44 799 {*fop_xf_comm_i387}
     (nil))
(insn 98 97 99 5 (set (mem:XF (reg/f:DI 86 [ D.4961 ]) [0 *_35+0 S16 A128])
        (reg:XF 97 [ D.4960 ])) mSector.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 99 98 100 5 (set (reg:SI 59 [ D.4959 ])
        (const_int 1 [0x1])) mSector.c:46 89 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 100 99 101 6 17 "" [1 uses])
(note 101 100 102 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 106 6 (set (reg:SI 98 [ <retval> ])
        (reg:SI 59 [ D.4959 ])) 89 {*movsi_internal}
     (nil))
(insn 106 102 109 6 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) mSector.c:47 89 {*movsi_internal}
     (nil))
(insn 109 106 0 6 (use (reg/i:SI 0 ax)) mSector.c:47 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _check_tmp_point (_check_tmp_point, funcdef_no=4, decl_uid=3963, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns


_check_tmp_point

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={4d,3u} r1={5d,2u} r2={3d} r4={5d,2u} r5={5d,3u} r6={1d,10u} r7={1d,12u} r8={2d,1u} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,14u} r17={12d,3u} r18={2d} r19={2d} r20={1d,19u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} 
;;    total ref usage 243{150d,93u,0e} in 48{46 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:49 87 {*movdi_internal_rex64}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 60 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 conf.Nbound+0 S4 A128])) mSector.c:51 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 61 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx)
        (reg:SI 60 [ D.4962 ])) mSector.c:51 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.4963 ])) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:51 87 {*movdi_internal_rex64}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:51 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:SI 62 [ D.4962 ])
        (reg:SI 0 ax)) mSector.c:51 89 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.4962 ])
            (const_int 0 [0]))) mSector.c:51 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) mSector.c:51 612 {*jcc_1}
     (nil)
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 82 3 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:51 89 {*movsi_internal}
     (nil))
(jump_insn 82 17 83 3 (set (pc)
        (label_ref 67)) mSector.c:51 -1
     (nil)
 -> 67)
;;  succ:       10 [100.0%] 

(barrier 83 82 20)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 20 83 21 4 21 "" [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 84 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:52 89 {*movsi_internal}
     (nil))
(jump_insn 84 22 85 4 (set (pc)
        (label_ref 58)) mSector.c:52 -1
     (nil)
 -> 58)
;;  succ:       8 [100.0%] 

(barrier 85 84 62)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 62 85 25 5 26 "" [1 uses])
(note 25 62 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 65 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 66 [ D.4964 ])
        (sign_extend:DI (reg:SI 79))) mSector.c:52 149 {*extendsidi2_rex64}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 67 [ D.4964 ])
                (plus:DI (reg:DI 66 [ D.4964 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 68 [ D.4964 ])
                (ashift:DI (reg:DI 67 [ D.4964 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 513 {*ashldi3_1}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:DI 69 [ D.4963 ])
                (plus:DI (reg/f:DI 65 [ D.4963 ])
                    (reg:DI 68 [ D.4964 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 70 [ D.4965 ])
        (mem/f:DI (reg/f:DI 69 [ D.4963 ]) [0 *_15+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 71 [ D.4963 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 conf.bound+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 72 [ D.4966 ])
        (sign_extend:DI (reg:SI 80))) mSector.c:52 149 {*extendsidi2_rex64}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 73 [ D.4966 ])
                (ashift:DI (reg:DI 72 [ D.4966 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 513 {*ashldi3_1}
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 74 [ D.4963 ])
                (plus:DI (reg/f:DI 71 [ D.4963 ])
                    (reg:DI 73 [ D.4966 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 274 {*adddi_1}
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 75 [ D.4965 ])
        (mem/f:DI (reg/f:DI 74 [ D.4963 ]) [0 *_20+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 5 (set (reg:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg:DI 1 dx)
        (reg:DI 81)) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.4965 ])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg/f:DI 75 [ D.4965 ])) mSector.c:52 87 {*movdi_internal_rex64}
     (nil))
(call_insn 43 42 44 5 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("distance_point_segment") [flags 0x41]  <function_decl 0x7f44d29fca00 distance_point_segment>) [0 distance_point_segment S1 A8])
            (const_int 0 [0]))) mSector.c:52 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 44 43 45 5 (set (reg:XF 76 [ D.4967 ])
        (reg:XF 8 st)) mSector.c:52 131 {*movxf_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:XF 82)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mSector.c:52 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 46 45 47 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82)
            (reg:XF 76 [ D.4967 ]))) mSector.c:52 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 47 46 51 5 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mSector.c:52 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 51 47 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 87 6 (set (reg:SI 59 [ D.4962 ])
        (const_int 1 [0x1])) mSector.c:52 89 {*movsi_internal}
     (nil))
(jump_insn 87 52 88 6 (set (pc)
        (label_ref 67)) mSector.c:52 -1
     (nil)
 -> 67)
;;  succ:       10 [100.0%] 

(barrier 88 87 86)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 86 88 56 7 28 "" [1 uses])
(note 56 86 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 58 57 59 8 23 "" [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 63 [ D.4962 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 conf.Nbound+0 S4 A128])) mSector.c:52 89 {*movsi_internal}
     (nil))
(insn 61 60 63 8 (parallel [
            (set (reg:SI 64 [ D.4962 ])
                (plus:SI (reg:SI 63 [ D.4962 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:52 273 {*addsi_1}
     (nil))
(insn 63 61 64 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4962 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:52 7 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mSector.c:52 612 {*jcc_1}
     (nil)
 -> 62)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg:SI 59 [ D.4962 ])
        (const_int 0 [0])) mSector.c:54 89 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              3 [100.0%] 
;;              6 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 67 66 68 10 22 "" [2 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 73 10 (set (reg:SI 77 [ <retval> ])
        (reg:SI 59 [ D.4962 ])) 89 {*movsi_internal}
     (nil))
(insn 73 69 76 10 (set (reg/i:SI 0 ax)
        (reg:SI 77 [ <retval> ])) mSector.c:55 89 {*movsi_internal}
     (nil))
(insn 76 73 0 10 (use (reg/i:SI 0 ax)) mSector.c:55 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function generate_temporary_point (generate_temporary_point, funcdef_no=5, decl_uid=1870, cgraph_uid=5)

starting the processing of deferred insns
ending the processing of deferred insns


generate_temporary_point

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={11d,5u} r1={11d,1u} r2={10d} r4={13d,3u} r5={18d,9u} r6={1d,12u} r7={1d,21u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,11u} r17={26d,4u} r18={9d} r19={9d} r20={1d,40u} r21={10d,2u} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 631{484d,147u,0e} in 84{75 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])
        (reg:DI 5 di [ config ])) mSector.c:57 87 {*movdi_internal_rex64}
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.4976+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:57 966 {stack_tls_protect_set_di}
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:59 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/j:SI (plus:DI (reg/f:DI 81)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])
        (const_int 50000 [0xc350])) mSector.c:59 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:SI 59 [ D.4968 ])
        (mem/j:SI (plus:DI (reg/f:DI 82)
                (const_int 48 [0x30])) [0 config_3(D)->n_tmp_nvp+0 S4 A128])) mSector.c:61 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mSector.c:61 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 59 [ D.4968 ])) mSector.c:61 89 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:61 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 60 [ D.4969 ])
        (reg:DI 0 ax)) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 83)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])
        (reg/f:DI 60 [ D.4969 ])) mSector.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44d2849980 *.LC3>)) mSector.c:64 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:64 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f44d2849a18 *.LC4>)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f44d2849ab0 *.LC5>)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f44d2a89200 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mSector.c:67 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 22 21 23 2 (set (reg:DI 84)
        (reg:DI 0 ax)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mSector.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mSector.c:68 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) mSector.c:68 612 {*jcc_1}
     (nil)
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f44d2849b48 *.LC6>)) mSector.c:68 87 {*movdi_internal_rex64}
     (nil))
(call_insn 28 27 29 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:68 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 29 28 30 4 30 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 117 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
        (const_int 0 [0])) mSector.c:69 89 {*movsi_internal}
     (nil))
(jump_insn 117 31 118 4 (set (pc)
        (label_ref 81)) mSector.c:69 -1
     (nil)
 -> 81)
;;  succ:       9 [100.0%] 

(barrier 118 117 90)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 90 118 34 5 34 "" [1 uses])
(note 34 90 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 62 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 5 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:70 89 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 63 [ D.4971 ])
        (sign_extend:DI (reg:SI 86))) mSector.c:70 149 {*extendsidi2_rex64}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 64 [ D.4971 ])
                (ashift:DI (reg:DI 63 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 513 {*ashldi3_1}
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:DI 65 [ D.4969 ])
                (plus:DI (reg/f:DI 62 [ D.4969 ])
                    (reg:DI 64 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 274 {*adddi_1}
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 66 [ D.4972 ])
        (mem/f:DI (reg/f:DI 65 [ D.4969 ]) [0 *_12+0 S8 A64])) mSector.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:70 274 {*adddi_1}
     (nil))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (reg:DI 87)) mSector.c:70 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 44 43 45 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:70 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 5 (set (reg:DF 67 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:70 133 {*movdf_internal_rex64}
     (nil))
(insn 46 45 47 5 (set (reg:XF 68 [ D.4974 ])
        (float_extend:XF (reg:DF 67 [ D.4973 ]))) mSector.c:70 162 {*extenddfxf2_i387}
     (nil))
(insn 47 46 48 5 (set (mem:XF (reg/f:DI 66 [ D.4972 ]) [0 *_13+0 S16 A128])
        (reg:XF 68 [ D.4974 ])) mSector.c:70 131 {*movxf_internal_rex64}
     (nil))
(insn 48 47 119 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:71 89 {*movsi_internal}
     (nil))
(jump_insn 119 48 120 5 (set (pc)
        (label_ref 53)) mSector.c:71 -1
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 

(barrier 120 119 58)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 58 120 51 6 33 "" [1 uses])
(note 51 58 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:71 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 53 52 54 7 32 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:71 89 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:DI 88)
        (sign_extend:DI (reg:SI 89))) mSector.c:71 149 {*extendsidi2_rex64}
     (nil))
(insn 57 56 59 7 (set (reg:QI 69 [ D.4975 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 88))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mSector.c:71 91 {*movqi_internal}
     (nil))
(insn 59 57 60 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.4975 ])
            (const_int 9 [0x9]))) mSector.c:71 5 {*cmpqi_1}
     (nil))
(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) mSector.c:71 612 {*jcc_1}
     (nil)
 -> 58)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -536 [0xfffffffffffffde8])) [0 config+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 70 [ D.4969 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 40 [0x28])) [0 config_3(D)->tmp_nvp+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 8 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])) mSector.c:72 89 {*movsi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 71 [ D.4971 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:72 149 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 8 (parallel [
            (set (reg:DI 72 [ D.4971 ])
                (ashift:DI (reg:DI 71 [ D.4971 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 513 {*ashldi3_1}
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 73 [ D.4969 ])
                (plus:DI (reg/f:DI 70 [ D.4969 ])
                    (reg:DI 72 [ D.4971 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (nil))
(insn 68 67 69 8 (set (reg/f:DI 74 [ D.4972 ])
        (mem/f:DI (reg/f:DI 73 [ D.4969 ]) [0 *_22+0 S8 A64])) mSector.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg/f:DI 75 [ D.4972 ])
                (plus:DI (reg/f:DI 74 [ D.4972 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (nil))
(insn 70 69 71 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 273 {*addsi_1}
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (nil))
(insn 72 71 73 8 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 i+0 S4 A32])) mSector.c:72 89 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:DI 93)
        (sign_extend:DI (reg:SI 94))) mSector.c:72 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 8 (parallel [
            (set (reg/f:DI 76 [ D.4970 ])
                (plus:DI (reg:DI 92)
                    (reg:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:72 274 {*adddi_1}
     (nil))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg/f:DI 76 [ D.4970 ])) mSector.c:72 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 76 75 77 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f44d2a12d00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mSector.c:72 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 8 (set (reg:DF 77 [ D.4973 ])
        (reg:DF 21 xmm0)) mSector.c:72 133 {*movdf_internal_rex64}
     (nil))
(insn 78 77 79 8 (set (reg:XF 78 [ D.4974 ])
        (float_extend:XF (reg:DF 77 [ D.4973 ]))) mSector.c:72 162 {*extenddfxf2_i387}
     (nil))
(insn 79 78 80 8 (set (mem:XF (reg/f:DI 75 [ D.4972 ]) [0 *_24+0 S16 A128])
        (reg:XF 78 [ D.4974 ])) mSector.c:72 131 {*movxf_internal_rex64}
     (nil))
(insn 80 79 81 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -528 [0xfffffffffffffdf0])) [0 n+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 273 {*addsi_1}
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 81 80 82 9 31 "" [1 uses])
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:69 274 {*adddi_1}
     (nil))
(insn 85 84 86 9 (set (reg:DI 1 dx)
        (reg:DI 95)) mSector.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 9 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mSector.c:69 89 {*movsi_internal}
     (nil))
(insn 87 86 88 9 (set (reg:DI 5 di)
        (reg:DI 96)) mSector.c:69 87 {*movdi_internal_rex64}
     (nil))
(call_insn 88 87 89 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f44d2aa0300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mSector.c:69 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 89 88 91 9 (set (reg/f:DI 61 [ D.4970 ])
        (reg:DI 0 ax)) mSector.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 91 89 92 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.4970 ])
            (const_int 0 [0]))) mSector.c:69 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 92 91 93 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mSector.c:69 612 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       5
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 93 92 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 10 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mSector.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 10 (set (reg:DI 5 di)
        (reg:DI 97)) mSector.c:74 87 {*movdi_internal_rex64}
     (nil))
(call_insn 96 95 97 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f44d2a83f00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mSector.c:74 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 97 96 100 10 (set (reg:SI 79 [ D.4968 ])
        (const_int 1 [0x1])) mSector.c:75 89 {*movsi_internal}
     (nil))
(insn 100 97 104 10 (set (reg:SI 80 [ <retval> ])
        (reg:SI 79 [ D.4968 ])) 89 {*movsi_internal}
     (nil))
(insn 104 100 107 10 (set (reg/i:SI 0 ax)
        (reg:SI 80 [ <retval> ])) mSector.c:94 89 {*movsi_internal}
     (nil))
(insn 107 104 108 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.4976+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mSector.c:94 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 108 107 115 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:94 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       12
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 115 108 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 109 115 110 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f44d2852000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mSector.c:94 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 110 109 111)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 111 110 116 12 36 "" [1 uses])
(note 116 111 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 116 0 12 (use (reg/i:SI 0 ax)) mSector.c:94 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function cheak_traj_intersect_bound (cheak_traj_intersect_bound, funcdef_no=6, decl_uid=1874, cgraph_uid=6)

starting the processing of deferred insns
ending the processing of deferred insns


cheak_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={5d,1u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,17u} r7={1d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,19u} r17={29d,6u} r18={3d} r19={3d} r20={1d,44u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,2u,2e} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u,2e} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={4d,4u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={4d,4u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 401{229d,164u,8e} in 82{79 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mSector.c:96 89 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 125 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:98 89 {*movsi_internal}
     (nil))
(jump_insn 125 7 126 2 (set (pc)
        (label_ref 105)) mSector.c:98 -1
     (nil)
 -> 105)
;;  succ:       16 [100.0%] 

(barrier 126 125 107)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 107 126 10 3 47 "" [1 uses])
(note 10 107 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 89 {*movsi_internal}
     (nil))
(insn 12 11 127 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
        (const_int 0 [0])) mSector.c:99 89 {*movsi_internal}
     (nil))
(jump_insn 127 12 128 3 (set (pc)
        (label_ref 73)) mSector.c:99 -1
     (nil)
 -> 73)
;;  succ:       10 [100.0%] 

(barrier 128 127 86)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 86 128 15 4 44 "" [1 uses])
(note 15 86 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 129 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:100 89 {*movsi_internal}
     (nil))
(jump_insn 129 16 130 4 (set (pc)
        (label_ref 63)) mSector.c:100 -1
     (nil)
 -> 63)
;;  succ:       8 [100.0%] 

(barrier 130 129 67)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 67 130 19 5 43 "" [1 uses])
(note 19 67 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:DI 65 [ D.4983 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:101 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 5 (set (reg:DI 88)
        (reg:DI 65 [ D.4983 ])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 65 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 26 25 27 5 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 27 26 28 5 (set (reg:DI 66 [ D.4983 ])
        (reg:DI 88)) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:DI 67 [ D.4984 ])
                (plus:DI (reg:DI 66 [ D.4983 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 66 [ D.4983 ]))
        (nil)))
(insn 30 29 31 5 (set (reg/f:DI 68 [ D.4986 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67 [ D.4984 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 5 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:DI 69 [ D.4983 ])
        (sign_extend:DI (reg:SI 91))) mSector.c:101 149 {*extendsidi2_rex64}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 70 [ D.4983 ])
                (ashift:DI (reg:DI 69 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg/f:DI 71 [ D.4986 ])
                (plus:DI (reg/f:DI 68 [ D.4986 ])
                    (reg:DI 70 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 72 [ D.4987 ])
        (mem/f:DI (reg/f:DI 71 [ D.4986 ]) [0 *_24+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 73 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 5 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 74 [ D.4988 ])
        (sign_extend:DI (reg:SI 92))) mSector.c:101 149 {*extendsidi2_rex64}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 75 [ D.4988 ])
                (plus:DI (reg:DI 74 [ D.4988 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 76 [ D.4988 ])
                (ashift:DI (reg:DI 75 [ D.4988 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 77 [ D.4986 ])
                (plus:DI (reg/f:DI 73 [ D.4986 ])
                    (reg:DI 76 [ D.4988 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 78 [ D.4987 ])
        (mem/f:DI (reg/f:DI 77 [ D.4986 ]) [0 *_30+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 79 [ D.4986 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 80 [ D.4983 ])
        (sign_extend:DI (reg:SI 93))) mSector.c:101 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 81 [ D.4983 ])
                (ashift:DI (reg:DI 80 [ D.4983 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 513 {*ashldi3_1}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg/f:DI 82 [ D.4986 ])
                (plus:DI (reg/f:DI 79 [ D.4986 ])
                    (reg:DI 81 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:101 274 {*adddi_1}
     (nil))
(insn 48 47 49 5 (set (reg/f:DI 83 [ D.4987 ])
        (mem/f:DI (reg/f:DI 82 [ D.4986 ]) [0 *_35+0 S8 A64])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 5 (set (reg:DI 1 dx)
        (reg/f:DI 72 [ D.4987 ])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.4987 ])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.4987 ])) mSector.c:101 87 {*movdi_internal_rex64}
     (nil))
(call_insn 52 51 53 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:101 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 5 (set (reg:SI 84 [ D.4985 ])
        (reg:SI 0 ax)) mSector.c:101 89 {*movsi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ D.4985 ])
            (const_int 0 [0]))) mSector.c:101 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) mSector.c:101 612 {*jcc_1}
     (nil)
 -> 60)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 131 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:102 273 {*addsi_1}
     (nil))
(jump_insn 131 57 132 6 (set (pc)
        (label_ref 70)) mSector.c:103 -1
     (nil)
 -> 70)
;;  succ:       9 [100.0%] 

(barrier 132 131 60)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 60 132 61 7 41 "" [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 63 62 64 8 40 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:SI 63 [ D.4985 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 config.Nbound+0 S4 A128])) mSector.c:100 89 {*movsi_internal}
     (nil))
(insn 66 65 68 8 (parallel [
            (set (reg:SI 64 [ D.4985 ])
                (plus:SI (reg:SI 63 [ D.4985 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:100 273 {*addsi_1}
     (nil))
(insn 68 66 69 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:100 7 {*cmpsi_1}
     (nil))
(jump_insn 69 68 70 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:100 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 70 69 71 9 42 "" [1 uses])
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 73 72 74 10 39 "" [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:99 89 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (reg:DI 59 [ D.4983 ])
        (sign_extend:DI (reg:SI 94))) mSector.c:99 149 {*extendsidi2_rex64}
     (nil))
(insn 77 76 78 10 (set (reg:DI 95)
        (reg:DI 59 [ D.4983 ])) mSector.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 10 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 95)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 513 {*ashldi3_1}
     (nil))
(insn 79 78 80 10 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg:DI 95)
                    (reg:DI 59 [ D.4983 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 513 {*ashldi3_1}
     (nil))
(insn 81 80 82 10 (set (reg:DI 95)
        (reg:DI 96)) mSector.c:99 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.4983 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 82 81 83 10 (set (reg:DI 60 [ D.4983 ])
        (reg:DI 95)) mSector.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 10 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 10 (parallel [
            (set (reg/f:DI 61 [ D.4984 ])
                (plus:DI (reg:DI 60 [ D.4983 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:99 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.4983 ]))
        (nil)))
(insn 85 84 87 10 (set (reg:SI 62 [ D.4985 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.4984 ])
                (const_int 4 [0x4])) [0 _13->n_nvp+0 S4 A32])) mSector.c:99 89 {*movsi_internal}
     (nil))
(insn 87 85 88 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 62 [ D.4985 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:99 7 {*cmpsi_1}
     (nil))
(jump_insn 88 87 89 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mSector.c:99 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       4
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:105 7 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) mSector.c:105 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f44d2858ab0 *.LC7>)) mSector.c:105 87 {*movdi_internal_rex64}
     (nil))
(call_insn 94 93 95 12 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:105 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 95 94 96 13 45 "" [1 uses])
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 n_inter+0 S4 A32])
            (const_int 2 [0x2]))) mSector.c:107 7 {*cmpsi_1}
     (nil))
(jump_insn 98 97 99 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) mSector.c:107 612 {*jcc_1}
     (nil)
 -> 102)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f44d2858b48 *.LC8>)) mSector.c:107 87 {*movdi_internal_rex64}
     (nil))
(call_insn 101 100 102 14 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:107 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 102 101 103 15 46 "" [1 uses])
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:98 273 {*addsi_1}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 105 104 106 16 38 "" [1 uses])
(note 106 105 108 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 109 16 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:98 89 {*movsi_internal}
     (nil))
(insn 109 108 110 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nflight+0 S4 A32]))) mSector.c:98 7 {*cmpsi_1}
     (nil))
(jump_insn 110 109 111 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mSector.c:98 612 {*jcc_1}
     (nil)
 -> 107)
;;  succ:       3
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 115 17 (set (reg:SI 85 [ D.4985 ])
        (const_int 1 [0x1])) mSector.c:109 89 {*movsi_internal}
     (nil))
(insn 115 112 119 17 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ D.4985 ])) mSector.c:109 89 {*movsi_internal}
     (nil))
(insn 119 115 122 17 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) mSector.c:110 89 {*movsi_internal}
     (nil))
(insn 122 119 0 17 (use (reg/i:SI 0 ax)) mSector.c:110 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function init_traj_intersect_bound (init_traj_intersect_bound, funcdef_no=7, decl_uid=1878, cgraph_uid=7)

starting the processing of deferred insns
ending the processing of deferred insns


init_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,14u} r7={1d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,16u} r17={31d,5u} r18={1d} r19={1d} r20={1d,43u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,2u,2e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,2u,2e} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,2u,2e} r89={1d,1u} r90={1d,1u} r91={1d,2u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={4d,4u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={4d,4u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={4d,4u} r112={1d,1u} r113={1d,1u} 
;;    total ref usage 337{161d,169u,7e} in 95{94 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:112 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32])
        (reg:SI 4 si [ Nfligth ])) mSector.c:112 89 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 134 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:115 89 {*movsi_internal}
     (nil))
(jump_insn 134 7 135 2 (set (pc)
        (label_ref 114)) mSector.c:115 -1
     (nil)
 -> 114)
;;  succ:       13 [100.0%] 

(barrier 135 134 116)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 116 135 10 3 58 "" [1 uses])
(note 10 116 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 89 {*movsi_internal}
     (nil))
(insn 12 11 136 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (const_int 0 [0])) mSector.c:116 89 {*movsi_internal}
     (nil))
(jump_insn 136 12 137 3 (set (pc)
        (label_ref 91)) mSector.c:116 -1
     (nil)
 -> 91)
;;  succ:       10 [100.0%] 

(barrier 137 136 108)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 108 137 15 4 57 "" [1 uses])
(note 15 108 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 138 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (const_int 0 [0])) mSector.c:117 89 {*movsi_internal}
     (nil))
(jump_insn 138 16 139 4 (set (pc)
        (label_ref 81)) mSector.c:117 -1
     (nil)
 -> 81)
;;  succ:       8 [100.0%] 

(barrier 139 138 85)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 85 139 19 5 55 "" [1 uses])
(note 19 85 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 66 [ D.4991 ])
        (mem/f:DI (reg/f:DI 94) [0 *flight_10(D)+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 5 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 67 [ D.4992 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:118 149 {*extendsidi2_rex64}
     (nil))
(insn 24 23 25 5 (set (reg:DI 96)
        (reg:DI 67 [ D.4992 ])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 67 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 28 27 29 5 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 67 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 29 28 30 5 (set (reg:DI 68 [ D.4992 ])
        (reg:DI 96)) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 69 [ D.4991 ])
                (plus:DI (reg/f:DI 66 [ D.4991 ])
                    (reg:DI 68 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 70 [ D.4994 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 69 [ D.4991 ])
                (const_int 8 [0x8])) [0 _22->nvp+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 5 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 71 [ D.4992 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:118 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg:DI 72 [ D.4992 ])
                (ashift:DI (reg:DI 71 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:DI 73 [ D.4994 ])
                (plus:DI (reg/f:DI 70 [ D.4994 ])
                    (reg:DI 72 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 74 [ D.4995 ])
        (mem/f:DI (reg/f:DI 73 [ D.4994 ]) [0 *_26+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 5 (set (reg/f:DI 75 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:DI 76 [ D.4996 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:118 149 {*extendsidi2_rex64}
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 77 [ D.4996 ])
                (plus:DI (reg:DI 76 [ D.4996 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 78 [ D.4996 ])
                (ashift:DI (reg:DI 77 [ D.4996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 79 [ D.4994 ])
                (plus:DI (reg/f:DI 75 [ D.4994 ])
                    (reg:DI 78 [ D.4996 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 80 [ D.4995 ])
        (mem/f:DI (reg/f:DI 79 [ D.4994 ]) [0 *_32+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 81 [ D.4994 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 config.bound+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 82 [ D.4992 ])
        (sign_extend:DI (reg:SI 100))) mSector.c:118 149 {*extendsidi2_rex64}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 83 [ D.4992 ])
                (ashift:DI (reg:DI 82 [ D.4992 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 513 {*ashldi3_1}
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg/f:DI 84 [ D.4994 ])
                (plus:DI (reg/f:DI 81 [ D.4994 ])
                    (reg:DI 83 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:118 274 {*adddi_1}
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 85 [ D.4995 ])
        (mem/f:DI (reg/f:DI 84 [ D.4994 ]) [0 *_37+0 S8 A64])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (set (reg:DI 1 dx)
        (reg/f:DI 74 [ D.4995 ])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 5 (set (reg:DI 4 si)
        (reg/f:DI 80 [ D.4995 ])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.4995 ])) mSector.c:118 87 {*movdi_internal_rex64}
     (nil))
(call_insn 53 52 54 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:118 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 5 (set (reg:SI 86 [ D.4993 ])
        (reg:SI 0 ax)) mSector.c:118 89 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ D.4993 ])
            (const_int 0 [0]))) mSector.c:118 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) mSector.c:118 612 {*jcc_1}
     (nil)
 -> 78)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 6 (set (reg/f:DI 87 [ D.4991 ])
        (mem/f:DI (reg/f:DI 101) [0 *flight_10(D)+0 S8 A64])) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 6 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:DI 88 [ D.4992 ])
        (sign_extend:DI (reg:SI 102))) mSector.c:119 149 {*extendsidi2_rex64}
     (nil))
(insn 62 61 63 6 (set (reg:DI 103)
        (reg:DI 88 [ D.4992 ])) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 103)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 513 {*ashldi3_1}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 103)
                    (reg:DI 88 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 65 64 66 6 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 103)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 513 {*ashldi3_1}
     (nil))
(insn 66 65 67 6 (set (reg:DI 103)
        (reg:DI 104)) mSector.c:119 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 67 66 68 6 (set (reg:DI 89 [ D.4992 ])
        (reg:DI 103)) mSector.c:119 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 6 (parallel [
            (set (reg/f:DI 90 [ D.4991 ])
                (plus:DI (reg/f:DI 87 [ D.4991 ])
                    (reg:DI 89 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 274 {*adddi_1}
     (nil))
(insn 69 68 70 6 (set (reg:SI 91 [ c.0 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 91 [ c.0 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 273 {*addsi_1}
     (nil))
(insn 71 70 72 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
        (reg:SI 105)) mSector.c:119 89 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ c.0 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 72 71 73 6 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 91 [ c.0 ]))) mSector.c:119 149 {*extendsidi2_rex64}
     (nil))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 106)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:119 274 {*adddi_1}
     (nil))
(insn 74 73 75 6 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) mSector.c:119 89 {*movsi_internal}
     (nil))
(insn 75 74 140 6 (set (mem/j:SI (plus:DI (mult:DI (reg:DI 107)
                    (const_int 4 [0x4]))
                (reg/f:DI 90 [ D.4991 ])) [0 _43->bound S4 A32])
        (reg:SI 108)) mSector.c:119 89 {*movsi_internal}
     (nil))
(jump_insn 140 75 141 6 (set (pc)
        (label_ref 88)) mSector.c:120 -1
     (nil)
 -> 88)
;;  succ:       9 [100.0%] 

(barrier 141 140 78)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 78 141 79 7 53 "" [1 uses])
(note 79 78 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 81 80 82 8 52 "" [1 uses])
(note 82 81 83 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 8 (set (reg:SI 64 [ D.4993 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 config.Nbound+0 S4 A128])) mSector.c:117 89 {*movsi_internal}
     (nil))
(insn 84 83 86 8 (parallel [
            (set (reg:SI 65 [ D.4993 ])
                (plus:SI (reg:SI 64 [ D.4993 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:117 273 {*addsi_1}
     (nil))
(insn 86 84 87 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32]))) mSector.c:117 7 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) mSector.c:117 612 {*jcc_1}
     (nil)
 -> 85)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 88 87 89 9 54 "" [1 uses])
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 91 90 92 10 51 "" [1 uses])
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 10 (set (reg/f:DI 59 [ D.4991 ])
        (mem/f:DI (reg/f:DI 109) [0 *flight_10(D)+0 S8 A64])) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 10 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:116 89 {*movsi_internal}
     (nil))
(insn 96 95 97 10 (set (reg:DI 60 [ D.4992 ])
        (sign_extend:DI (reg:SI 110))) mSector.c:116 149 {*extendsidi2_rex64}
     (nil))
(insn 97 96 98 10 (set (reg:DI 111)
        (reg:DI 60 [ D.4992 ])) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:DI 111)
                (ashift:DI (reg:DI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 513 {*ashldi3_1}
     (nil))
(insn 99 98 100 10 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 111)
                    (reg:DI 60 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 111)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 513 {*ashldi3_1}
     (nil))
(insn 101 100 102 10 (set (reg:DI 111)
        (reg:DI 112)) mSector.c:116 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.4992 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 102 101 103 10 (set (reg:DI 61 [ D.4992 ])
        (reg:DI 111)) mSector.c:116 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 10 (parallel [
            (set (reg/f:DI 62 [ D.4991 ])
                (plus:DI (reg/f:DI 59 [ D.4991 ])
                    (reg:DI 61 [ D.4992 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:116 274 {*adddi_1}
     (nil))
(insn 104 103 105 10 (set (reg:SI 63 [ D.4993 ])
        (mem/j:SI (plus:DI (reg/f:DI 62 [ D.4991 ])
                (const_int 4 [0x4])) [0 _14->n_nvp+0 S4 A32])) mSector.c:116 89 {*movsi_internal}
     (nil))
(insn 105 104 106 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4993 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) mSector.c:116 7 {*cmpsi_1}
     (nil))
(jump_insn 106 105 107 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) mSector.c:116 612 {*jcc_1}
     (nil)
 -> 111)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 107 106 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 109 107 110 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])
            (const_int 1 [0x1]))) mSector.c:116 7 {*cmpsi_1}
     (nil))
(jump_insn 110 109 111 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) mSector.c:116 612 {*jcc_1}
     (nil)
 -> 108)
;;  succ:       4
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 111 110 112 12 56 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:115 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 114 113 115 13 50 "" [1 uses])
(note 115 114 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 118 13 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:115 89 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 Nfligth+0 S4 A32]))) mSector.c:115 7 {*cmpsi_1}
     (nil))
(jump_insn 119 118 120 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) mSector.c:115 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       3
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 124 14 (set (reg:SI 92 [ D.4993 ])
        (const_int 1 [0x1])) mSector.c:122 89 {*movsi_internal}
     (nil))
(insn 124 121 128 14 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.4993 ])) mSector.c:122 89 {*movsi_internal}
     (nil))
(insn 128 124 131 14 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:123 89 {*movsi_internal}
     (nil))
(insn 131 128 0 14 (use (reg/i:SI 0 ax)) mSector.c:123 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function remove_aircraft (remove_aircraft, funcdef_no=8, decl_uid=1904, cgraph_uid=8)

starting the processing of deferred insns
ending the processing of deferred insns


remove_aircraft

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={4d} r4={4d,1u} r5={7d,4u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={21d,3u} r18={3d} r19={3d} r20={1d,33u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,2u,2e} r62={1d,1u} r63={1d,1u} r64={1d,2u,1e} r65={1d,2u,2e} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,2u,2e} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={4d,4u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={4d,4u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={4d,4u} r89={1d,1u} r90={2d,2u} r91={2d,2u} r92={2d,3u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 365{225d,131u,9e} in 75{72 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])
        (reg:DI 5 di [ fligth ])) mSector.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])
        (reg:DI 4 si [ Nfligth ])) mSector.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32])
        (reg:SI 1 dx [ sel ])) mSector.c:125 89 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 59 [ D.4997 ])
        (mem:SI (reg/f:DI 77) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:126 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 60 [ D.4997 ])
                (plus:SI (reg:SI 59 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 273 {*addsi_1}
     (nil))
(insn 11 10 12 2 (set (reg:DI 61 [ D.4998 ])
        (sign_extend:DI (reg:SI 60 [ D.4997 ]))) mSector.c:126 149 {*extendsidi2_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 78)
        (reg:DI 61 [ D.4998 ])) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 78)
                (ashift:DI (reg:DI 78)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 513 {*ashldi3_1}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg:DI 78)
                    (reg:DI 61 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 79)
                (ashift:DI (reg:DI 78)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:126 513 {*ashldi3_1}
     (nil))
(insn 16 15 17 2 (set (reg:DI 78)
        (reg:DI 79)) mSector.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 62 [ D.4998 ])
        (reg:DI 78)) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 62 [ D.4998 ])) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:126 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 80)
        (reg:DI 0 ax)) mSector.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_NOALIAS (reg/f:DI 80)
        (nil)))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
        (reg/f:DI 80)) mSector.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (const_int 0 [0]))) mSector.c:127 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) mSector.c:127 612 {*jcc_1}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f44d286ced8 *.LC9>)) mSector.c:127 87 {*movdi_internal_rex64}
     (nil))
(call_insn 26 25 27 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:127 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 27 26 28 4 61 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 30 29 101 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (const_int 0 [0])) mSector.c:129 89 {*movsi_internal}
     (nil))
(jump_insn 101 30 102 4 (set (pc)
        (label_ref 68)) mSector.c:129 -1
     (nil)
 -> 68)
;;  succ:       8 [100.0%] 

(barrier 102 101 72)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 72 102 33 5 64 "" [1 uses])
(note 33 72 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 sel+0 S4 A32]))) mSector.c:129 7 {*cmpsi_1}
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) mSector.c:129 612 {*jcc_1}
     (nil)
 -> 65)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 64 [ h.1 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg:SI 64 [ h.1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 273 {*addsi_1}
     (nil))
(insn 40 39 41 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 h+0 S4 A32])
        (reg:SI 82)) mSector.c:129 89 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 64 [ h.1 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 41 40 42 6 (set (reg:DI 65 [ D.4998 ])
        (sign_extend:DI (reg:SI 64 [ h.1 ]))) mSector.c:129 149 {*extendsidi2_rex64}
     (nil))
(insn 42 41 43 6 (set (reg:DI 83)
        (reg:DI 65 [ D.4998 ])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 83)
                (ashift:DI (reg:DI 83)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg:DI 83)
                    (reg:DI 65 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 84)
                (ashift:DI (reg:DI 83)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 46 45 47 6 (set (reg:DI 83)
        (reg:DI 84)) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 47 46 48 6 (set (reg:DI 66 [ D.4998 ])
        (reg:DI 83)) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 6 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg/f:DI 67 [ D.4999 ])
                (plus:DI (reg:DI 66 [ D.4998 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])
            (reg:DI 66 [ D.4998 ]))
        (nil)))
(insn 50 49 51 6 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 6 (set (reg/f:DI 68 [ D.4999 ])
        (mem/f:DI (reg/f:DI 86) [0 *fligth_19(D)+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 6 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 69 [ D.4998 ])
        (sign_extend:DI (reg:SI 87))) mSector.c:129 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 55 6 (set (reg:DI 88)
        (reg:DI 69 [ D.4998 ])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 88)
                (ashift:DI (reg:DI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg:DI 88)
                    (reg:DI 69 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 89)
                (ashift:DI (reg:DI 88)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 513 {*ashldi3_1}
     (nil))
(insn 58 57 59 6 (set (reg:DI 88)
        (reg:DI 89)) mSector.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.4998 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 59 58 60 6 (set (reg:DI 70 [ D.4998 ])
        (reg:DI 88)) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 71 [ D.4999 ])
                (plus:DI (reg/f:DI 68 [ D.4999 ])
                    (reg:DI 70 [ D.4998 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 274 {*adddi_1}
     (nil))
(insn 61 60 62 6 (set (reg:DI 90)
        (reg/f:DI 67 [ D.4999 ])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 6 (set (reg:DI 91)
        (reg/f:DI 71 [ D.4999 ])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 6 (set (reg:DI 92)
        (const_int 20 [0x14])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 92)
                (const_int 0 [0]))
            (set (reg:DI 90)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 90)))
            (set (reg:DI 91)
                (plus:DI (ashift:DI (reg:DI 92)
                        (const_int 3 [0x3]))
                    (reg:DI 91)))
            (set (mem:BLK (reg:DI 90) [0 *_18+0 S160 A128])
                (mem:BLK (reg:DI 91) [0 *_23+0 S160 A128]))
            (use (reg:DI 92))
        ]) mSector.c:129 901 {*rep_movdi_rex64}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 65 64 66 7 63 "" [1 uses])
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:129 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 68 67 69 8 62 "" [1 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 73 8 (set (reg:SI 63 [ D.4997 ])
        (mem:SI (reg/f:DI 93) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:129 89 {*movsi_internal}
     (nil))
(insn 73 71 74 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.4997 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32]))) mSector.c:129 7 {*cmpsi_1}
     (nil))
(jump_insn 74 73 75 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) mSector.c:129 612 {*jcc_1}
     (nil)
 -> 72)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 9 (set (reg/f:DI 72 [ D.4999 ])
        (mem/f:DI (reg/f:DI 94) [0 *fligth_19(D)+0 S8 A64])) mSector.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 9 (set (reg:DI 5 di)
        (reg/f:DI 72 [ D.4999 ])) mSector.c:130 87 {*movdi_internal_rex64}
     (nil))
(call_insn 79 78 80 9 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:130 656 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 9 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 fligth+0 S8 A64])) mSector.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 9 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 New_fligth+0 S8 A64])) mSector.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 9 (set (mem/f:DI (reg/f:DI 95) [0 *fligth_19(D)+0 S8 A64])
        (reg/f:DI 96)) mSector.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 9 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 9 (set (reg:SI 73 [ D.4997 ])
        (mem:SI (reg/f:DI 97) [0 *Nfligth_4(D)+0 S4 A32])) mSector.c:133 89 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:SI 74 [ D.4997 ])
                (plus:SI (reg:SI 73 [ D.4997 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:133 273 {*addsi_1}
     (nil))
(insn 86 85 87 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nfligth+0 S8 A64])) mSector.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 9 (set (mem:SI (reg/f:DI 98) [0 *Nfligth_4(D)+0 S4 A32])
        (reg:SI 74 [ D.4997 ])) mSector.c:133 89 {*movsi_internal}
     (nil))
(insn 88 87 91 9 (set (reg:SI 75 [ D.4997 ])
        (const_int 1 [0x1])) mSector.c:135 89 {*movsi_internal}
     (nil))
(insn 91 88 95 9 (set (reg:SI 76 [ <retval> ])
        (reg:SI 75 [ D.4997 ])) mSector.c:135 89 {*movsi_internal}
     (nil))
(insn 95 91 98 9 (set (reg/i:SI 0 ax)
        (reg:SI 76 [ <retval> ])) mSector.c:136 89 {*movsi_internal}
     (nil))
(insn 98 95 0 9 (use (reg/i:SI 0 ax)) mSector.c:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function add_nvp (add_nvp, funcdef_no=9, decl_uid=1886, cgraph_uid=9)

starting the processing of deferred insns
ending the processing of deferred insns


add_nvp

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,4u} r1={9d,1u} r2={9d} r4={9d,1u} r5={17d,9u} r6={1d,16u} r7={1d,24u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,15u} r17={68d,6u} r18={8d} r19={8d} r20={1d,85u,12e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u,1e} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u,1e} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u,1e} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1e} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} 
;;    total ref usage 940{598d,319u,23e} in 211{203 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:138 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])
        (reg:DI 4 si [ st_indx ])) mSector.c:138 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])
        (reg:DI 1 dx [ p ])) mSector.c:138 87 {*movdi_internal_rex64}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 59 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:140 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 60 [ D.5001 ])
                (plus:SI (reg:SI 59 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 273 {*addsi_1}
     (nil))
(insn 11 10 12 2 (set (reg:DI 61 [ D.5002 ])
        (sign_extend:DI (reg:SI 60 [ D.5001 ]))) mSector.c:140 149 {*extendsidi2_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 62 [ D.5002 ])
                (ashift:DI (reg:DI 61 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:140 513 {*ashldi3_1}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 62 [ D.5002 ])) mSector.c:140 87 {*movdi_internal_rex64}
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f44d2970b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mSector.c:140 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 162)
        (reg:DI 0 ax)) mSector.c:140 87 {*movdi_internal_rex64}
     (expr_list:REG_NOALIAS (reg/f:DI 162)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
        (reg/f:DI 162)) mSector.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:SI 63 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 163)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:141 89 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 63 [ D.5001 ])) mSector.c:141 89 {*movsi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:141 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 164)
        (reg:DI 0 ax)) mSector.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
        (reg:DI 164)) mSector.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 249 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:145 89 {*movsi_internal}
     (nil))
(jump_insn 249 23 250 2 (set (pc)
        (label_ref 64)) mSector.c:145 -1
     (nil)
 -> 64)
;;  succ:       6 [100.0%] 

(barrier 250 249 68)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 68 250 26 3 69 "" [1 uses])
(note 26 68 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (set (reg:SI 65 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 165)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:146 89 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (parallel [
            (set (reg:SI 66 [ D.5001 ])
                (plus:SI (reg:SI 65 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:146 273 {*addsi_1}
     (nil))
(insn 30 29 31 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 66 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:146 7 {*cmpsi_1}
     (nil))
(jump_insn 31 30 32 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mSector.c:146 612 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:146 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:146 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 35 34 36 5 68 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 89 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 67 [ D.5002 ])
        (sign_extend:DI (reg:SI 166))) mSector.c:147 149 {*extendsidi2_rex64}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 68 [ D.5002 ])
                (ashift:DI (reg:DI 67 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 513 {*ashldi3_1}
     (nil))
(insn 40 39 41 5 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 69 [ D.5003 ])
                (plus:DI (reg:DI 68 [ D.5002 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 68 [ D.5002 ]))
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 70 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 168)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:147 89 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 71 [ D.5002 ])
        (sign_extend:DI (reg:SI 169))) mSector.c:147 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 72 [ D.5002 ])
                (ashift:DI (reg:DI 71 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 513 {*ashldi3_1}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg/f:DI 73 [ D.5003 ])
                (plus:DI (reg/f:DI 70 [ D.5003 ])
                    (reg:DI 72 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:147 274 {*adddi_1}
     (nil))
(insn 48 47 49 5 (set (reg/f:DI 74 [ D.5004 ])
        (mem/f:DI (reg/f:DI 73 [ D.5003 ]) [0 *_22+0 S8 A64])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 5 (set (mem/f:DI (reg/f:DI 69 [ D.5003 ]) [0 *_18+0 S8 A64])
        (reg/f:DI 74 [ D.5004 ])) mSector.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 5 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:DI 75 [ D.5002 ])
        (sign_extend:DI (reg:SI 170))) mSector.c:148 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 76 [ D.5002 ])
                (ashift:DI (reg:DI 75 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 513 {*ashldi3_1}
     (nil))
(insn 53 52 54 5 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 5 (parallel [
            (set (reg/f:DI 77 [ D.5004 ])
                (plus:DI (reg:DI 76 [ D.5002 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 76 [ D.5002 ]))
        (nil)))
(insn 55 54 56 5 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 5 (set (reg/f:DI 78 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 172)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 5 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:148 89 {*movsi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:DI 79 [ D.5002 ])
        (sign_extend:DI (reg:SI 173))) mSector.c:148 149 {*extendsidi2_rex64}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:DI 80 [ D.5002 ])
                (ashift:DI (reg:DI 79 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 513 {*ashldi3_1}
     (nil))
(insn 60 59 61 5 (parallel [
            (set (reg/f:DI 81 [ D.5004 ])
                (plus:DI (reg/f:DI 78 [ D.5004 ])
                    (reg:DI 80 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:148 274 {*adddi_1}
     (nil))
(insn 61 60 62 5 (set (reg:XF 82 [ D.5005 ])
        (mem:XF (reg/f:DI 81 [ D.5004 ]) [0 *_30+0 S16 A128])) mSector.c:148 131 {*movxf_internal_rex64}
     (nil))
(insn 62 61 63 5 (set (mem:XF (reg/f:DI 77 [ D.5004 ]) [0 *_26+0 S16 A128])
        (reg:XF 82 [ D.5005 ])) mSector.c:148 131 {*movxf_internal_rex64}
     (nil))
(insn 63 62 64 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:145 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 64 63 65 6 67 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 69 6 (set (reg:SI 64 [ D.5001 ])
        (mem:SI (reg/f:DI 174) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:145 89 {*movsi_internal}
     (nil))
(insn 69 67 70 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:145 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) mSector.c:145 612 {*jcc_1}
     (nil)
 -> 68)
;;  succ:       3
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:152 89 {*movsi_internal}
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:SI 83 [ D.5001 ])
                (plus:SI (reg:SI 175)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 273 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 74 73 75 7 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 7 (set (reg:SI 84 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 176)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:152 89 {*movsi_internal}
     (nil))
(insn 76 75 77 7 (parallel [
            (set (reg:SI 85 [ D.5001 ])
                (plus:SI (reg:SI 84 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:152 273 {*addsi_1}
     (nil))
(insn 77 76 78 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.5001 ])
            (reg:SI 85 [ D.5001 ]))) mSector.c:152 7 {*cmpsi_1}
     (nil))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) mSector.c:152 612 {*jcc_1}
     (nil)
 -> 82)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:152 87 {*movdi_internal_rex64}
     (nil))
(call_insn 81 80 82 8 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:152 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 82 81 83 9 70 "" [1 uses])
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:153 89 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:DI 86 [ D.5002 ])
        (sign_extend:DI (reg:SI 177))) mSector.c:153 149 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 87 [ D.5002 ])
                (ashift:DI (reg:DI 86 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 513 {*ashldi3_1}
     (nil))
(insn 87 86 88 9 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 9 (parallel [
            (set (reg/f:DI 88 [ D.5003 ])
                (plus:DI (reg:DI 87 [ D.5002 ])
                    (reg/f:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:153 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 87 [ D.5002 ]))
        (nil)))
(insn 89 88 90 9 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mSector.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 9 (set (mem/f:DI (reg/f:DI 88 [ D.5003 ]) [0 *_38+0 S8 A64])
        (reg/f:DI 179)) mSector.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 92 91 93 9 (set (reg:DI 89 [ D.5002 ])
        (sign_extend:DI (reg:SI 180))) mSector.c:154 149 {*extendsidi2_rex64}
     (nil))
(insn 93 92 94 9 (parallel [
            (set (reg:DI 90 [ D.5002 ])
                (ashift:DI (reg:DI 89 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 513 {*ashldi3_1}
     (nil))
(insn 94 93 95 9 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg/f:DI 91 [ D.5003 ])
                (plus:DI (reg:DI 90 [ D.5002 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 90 [ D.5002 ]))
        (nil)))
(insn 96 95 97 9 (set (reg/f:DI 92 [ D.5004 ])
        (mem/f:DI (reg/f:DI 91 [ D.5003 ]) [0 *_42+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg/f:DI 93 [ D.5004 ])
                (plus:DI (reg/f:DI 92 [ D.5004 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (nil))
(insn 98 97 99 9 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:154 89 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (reg:DI 94 [ D.5002 ])
        (sign_extend:DI (reg:SI 182))) mSector.c:154 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 9 (parallel [
            (set (reg:DI 95 [ D.5002 ])
                (ashift:DI (reg:DI 94 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 513 {*ashldi3_1}
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg:DI 96 [ D.5006 ])
                (plus:DI (reg:DI 95 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (nil))
(insn 102 101 103 9 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg/f:DI 97 [ D.5003 ])
                (plus:DI (reg:DI 96 [ D.5006 ])
                    (reg/f:DI 183)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:154 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 96 [ D.5006 ]))
        (nil)))
(insn 104 103 105 9 (set (reg/f:DI 98 [ D.5004 ])
        (mem/f:DI (reg/f:DI 97 [ D.5003 ]) [0 *_48+0 S8 A64])) mSector.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 9 (set (reg:XF 99 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 98 [ D.5004 ])
                (const_int 32 [0x20])) [0 MEM[(long double *)_49 + 32B]+0 S16 A128])) mSector.c:154 131 {*movxf_internal_rex64}
     (nil))
(insn 106 105 107 9 (set (mem:XF (reg/f:DI 93 [ D.5004 ]) [0 *_44+0 S16 A128])
        (reg:XF 99 [ D.5005 ])) mSector.c:154 131 {*movxf_internal_rex64}
     (nil))
(insn 107 106 108 9 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 108 107 109 9 (set (reg:DI 100 [ D.5002 ])
        (sign_extend:DI (reg:SI 184))) mSector.c:155 149 {*extendsidi2_rex64}
     (nil))
(insn 109 108 110 9 (parallel [
            (set (reg:DI 101 [ D.5002 ])
                (ashift:DI (reg:DI 100 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 513 {*ashldi3_1}
     (nil))
(insn 110 109 111 9 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 9 (parallel [
            (set (reg/f:DI 102 [ D.5003 ])
                (plus:DI (reg:DI 101 [ D.5002 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 101 [ D.5002 ]))
        (nil)))
(insn 112 111 113 9 (set (reg/f:DI 103 [ D.5004 ])
        (mem/f:DI (reg/f:DI 102 [ D.5003 ]) [0 *_53+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 113 112 114 9 (parallel [
            (set (reg/f:DI 104 [ D.5004 ])
                (plus:DI (reg/f:DI 103 [ D.5004 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (nil))
(insn 114 113 115 9 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:155 89 {*movsi_internal}
     (nil))
(insn 115 114 116 9 (set (reg:DI 105 [ D.5002 ])
        (sign_extend:DI (reg:SI 186))) mSector.c:155 149 {*extendsidi2_rex64}
     (nil))
(insn 116 115 117 9 (parallel [
            (set (reg:DI 106 [ D.5002 ])
                (ashift:DI (reg:DI 105 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 513 {*ashldi3_1}
     (nil))
(insn 117 116 118 9 (parallel [
            (set (reg:DI 107 [ D.5006 ])
                (plus:DI (reg:DI 106 [ D.5002 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (nil))
(insn 118 117 119 9 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 9 (parallel [
            (set (reg/f:DI 108 [ D.5003 ])
                (plus:DI (reg:DI 107 [ D.5006 ])
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:155 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 107 [ D.5006 ]))
        (nil)))
(insn 120 119 121 9 (set (reg/f:DI 109 [ D.5004 ])
        (mem/f:DI (reg/f:DI 108 [ D.5003 ]) [0 *_59+0 S8 A64])) mSector.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 121 120 122 9 (set (reg:XF 110 [ D.5005 ])
        (mem:XF (plus:DI (reg/f:DI 109 [ D.5004 ])
                (const_int 48 [0x30])) [0 MEM[(long double *)_60 + 48B]+0 S16 A128])) mSector.c:155 131 {*movxf_internal_rex64}
     (nil))
(insn 122 121 123 9 (set (mem:XF (reg/f:DI 104 [ D.5004 ]) [0 *_55+0 S16 A128])
        (reg:XF 110 [ D.5005 ])) mSector.c:155 131 {*movxf_internal_rex64}
     (nil))
(insn 123 122 124 9 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 89 {*movsi_internal}
     (nil))
(insn 124 123 125 9 (set (reg:DI 111 [ D.5002 ])
        (sign_extend:DI (reg:SI 188))) mSector.c:157 149 {*extendsidi2_rex64}
     (nil))
(insn 125 124 126 9 (parallel [
            (set (reg:DI 112 [ D.5002 ])
                (ashift:DI (reg:DI 111 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 513 {*ashldi3_1}
     (nil))
(insn 126 125 127 9 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 9 (parallel [
            (set (reg/f:DI 113 [ D.5004 ])
                (plus:DI (reg:DI 112 [ D.5002 ])
                    (reg/f:DI 189)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 112 [ D.5002 ]))
        (nil)))
(insn 128 127 129 9 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 9 (set (reg/f:DI 114 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 190)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 9 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:157 89 {*movsi_internal}
     (nil))
(insn 131 130 132 9 (set (reg:DI 115 [ D.5002 ])
        (sign_extend:DI (reg:SI 191))) mSector.c:157 149 {*extendsidi2_rex64}
     (nil))
(insn 132 131 133 9 (parallel [
            (set (reg:DI 116 [ D.5002 ])
                (ashift:DI (reg:DI 115 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 513 {*ashldi3_1}
     (nil))
(insn 133 132 134 9 (parallel [
            (set (reg:DI 117 [ D.5006 ])
                (plus:DI (reg:DI 116 [ D.5002 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 274 {*adddi_1}
     (nil))
(insn 134 133 135 9 (parallel [
            (set (reg/f:DI 118 [ D.5004 ])
                (plus:DI (reg/f:DI 114 [ D.5004 ])
                    (reg:DI 117 [ D.5006 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:157 274 {*adddi_1}
     (nil))
(insn 135 134 136 9 (set (reg:XF 119 [ D.5005 ])
        (mem:XF (reg/f:DI 118 [ D.5004 ]) [0 *_69+0 S16 A128])) mSector.c:157 131 {*movxf_internal_rex64}
     (nil))
(insn 136 135 251 9 (set (mem:XF (reg/f:DI 113 [ D.5004 ]) [0 *_64+0 S16 A128])
        (reg:XF 119 [ D.5005 ])) mSector.c:157 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 251 136 252 9 (set (pc)
        (label_ref 179)) mSector.c:161 -1
     (nil)
 -> 179)
;;  succ:       13 [100.0%] 

(barrier 252 251 184)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 184 252 139 10 73 "" [1 uses])
(note 139 184 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 10 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:162 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 10 (set (reg:SI 122 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 192)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:162 89 {*movsi_internal}
     (nil))
(insn 142 141 143 10 (parallel [
            (set (reg:SI 123 [ D.5001 ])
                (plus:SI (reg:SI 122 [ D.5001 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:162 273 {*addsi_1}
     (nil))
(insn 143 142 144 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 123 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:162 7 {*cmpsi_1}
     (nil))
(jump_insn 144 143 145 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) mSector.c:162 612 {*jcc_1}
     (nil)
 -> 148)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 145 144 146 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:162 87 {*movdi_internal_rex64}
     (nil))
(call_insn 147 146 148 11 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:162 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 148 147 149 12 72 "" [1 uses])
(note 149 148 150 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 12 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 89 {*movsi_internal}
     (nil))
(insn 151 150 152 12 (set (reg:DI 124 [ D.5006 ])
        (sign_extend:DI (reg:SI 193))) mSector.c:163 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 12 (parallel [
            (set (reg:DI 125 [ D.5006 ])
                (plus:DI (reg:DI 124 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (nil))
(insn 153 152 154 12 (parallel [
            (set (reg:DI 126 [ D.5006 ])
                (ashift:DI (reg:DI 125 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 513 {*ashldi3_1}
     (nil))
(insn 154 153 155 12 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg/f:DI 127 [ D.5003 ])
                (plus:DI (reg:DI 126 [ D.5006 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 126 [ D.5006 ]))
        (nil)))
(insn 156 155 157 12 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 12 (set (reg/f:DI 128 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 195)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 12 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:163 89 {*movsi_internal}
     (nil))
(insn 159 158 160 12 (set (reg:DI 129 [ D.5002 ])
        (sign_extend:DI (reg:SI 196))) mSector.c:163 149 {*extendsidi2_rex64}
     (nil))
(insn 160 159 161 12 (parallel [
            (set (reg:DI 130 [ D.5002 ])
                (ashift:DI (reg:DI 129 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 513 {*ashldi3_1}
     (nil))
(insn 161 160 162 12 (parallel [
            (set (reg/f:DI 131 [ D.5003 ])
                (plus:DI (reg/f:DI 128 [ D.5003 ])
                    (reg:DI 130 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:163 274 {*adddi_1}
     (nil))
(insn 162 161 163 12 (set (reg/f:DI 132 [ D.5004 ])
        (mem/f:DI (reg/f:DI 131 [ D.5003 ]) [0 *_82+0 S8 A64])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 163 162 164 12 (set (mem/f:DI (reg/f:DI 127 [ D.5003 ]) [0 *_78+0 S8 A64])
        (reg/f:DI 132 [ D.5004 ])) mSector.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 164 163 165 12 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 165 164 166 12 (set (reg:DI 133 [ D.5006 ])
        (sign_extend:DI (reg:SI 197))) mSector.c:164 149 {*extendsidi2_rex64}
     (nil))
(insn 166 165 167 12 (parallel [
            (set (reg:DI 134 [ D.5006 ])
                (plus:DI (reg:DI 133 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 274 {*adddi_1}
     (nil))
(insn 167 166 168 12 (parallel [
            (set (reg:DI 135 [ D.5006 ])
                (ashift:DI (reg:DI 134 [ D.5006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 513 {*ashldi3_1}
     (nil))
(insn 168 167 169 12 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 12 (parallel [
            (set (reg/f:DI 136 [ D.5004 ])
                (plus:DI (reg:DI 135 [ D.5006 ])
                    (reg/f:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])
            (reg:DI 135 [ D.5006 ]))
        (nil)))
(insn 170 169 171 12 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 171 170 172 12 (set (reg/f:DI 137 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 172 171 173 12 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:164 89 {*movsi_internal}
     (nil))
(insn 173 172 174 12 (set (reg:DI 138 [ D.5002 ])
        (sign_extend:DI (reg:SI 200))) mSector.c:164 149 {*extendsidi2_rex64}
     (nil))
(insn 174 173 175 12 (parallel [
            (set (reg:DI 139 [ D.5002 ])
                (ashift:DI (reg:DI 138 [ D.5002 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 513 {*ashldi3_1}
     (nil))
(insn 175 174 176 12 (parallel [
            (set (reg/f:DI 140 [ D.5004 ])
                (plus:DI (reg/f:DI 137 [ D.5004 ])
                    (reg:DI 139 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:164 274 {*adddi_1}
     (nil))
(insn 176 175 177 12 (set (reg:XF 141 [ D.5005 ])
        (mem:XF (reg/f:DI 140 [ D.5004 ]) [0 *_91+0 S16 A128])) mSector.c:164 131 {*movxf_internal_rex64}
     (nil))
(insn 177 176 178 12 (set (mem:XF (reg/f:DI 136 [ D.5004 ]) [0 *_87+0 S16 A128])
        (reg:XF 141 [ D.5005 ])) mSector.c:164 131 {*movxf_internal_rex64}
     (nil))
(insn 178 177 179 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 179 178 180 13 71 "" [1 uses])
(note 180 179 181 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 13 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:161 87 {*movdi_internal_rex64}
     (nil))
(insn 182 181 183 13 (set (reg:SI 120 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 201)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:161 89 {*movsi_internal}
     (nil))
(insn 183 182 185 13 (parallel [
            (set (reg:SI 121 [ D.5001 ])
                (plus:SI (reg:SI 120 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:161 273 {*addsi_1}
     (nil))
(insn 185 183 186 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 121 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:161 7 {*cmpsi_1}
     (nil))
(jump_insn 186 185 187 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:161 612 {*jcc_1}
     (nil)
 -> 184)
;;  succ:       10
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 187 186 188 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 14 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 189 188 190 14 (set (reg:SI 142 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 202)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:167 89 {*movsi_internal}
     (nil))
(insn 190 189 191 14 (parallel [
            (set (reg:SI 143 [ D.5001 ])
                (plus:SI (reg:SI 142 [ D.5001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:167 273 {*addsi_1}
     (nil))
(insn 191 190 192 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 143 [ D.5001 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) mSector.c:167 7 {*cmpsi_1}
     (nil))
(jump_insn 192 191 193 14 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) mSector.c:167 612 {*jcc_1}
     (nil)
 -> 196)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 193 192 194 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f44d2875b48 *.LC10>)) mSector.c:167 87 {*movdi_internal_rex64}
     (nil))
(call_insn 195 194 196 15 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f44d29f7900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mSector.c:167 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 196 195 197 16 74 "" [1 uses])
(note 197 196 198 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 16 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 89 {*movsi_internal}
     (nil))
(insn 199 198 200 16 (set (reg:DI 144 [ D.5006 ])
        (sign_extend:DI (reg:SI 203))) mSector.c:168 149 {*extendsidi2_rex64}
     (nil))
(insn 200 199 201 16 (parallel [
            (set (reg:DI 145 [ D.5006 ])
                (plus:DI (reg:DI 144 [ D.5006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (nil))
(insn 201 200 202 16 (parallel [
            (set (reg:DI 146 [ D.5006 ])
                (ashift:DI (reg:DI 145 [ D.5006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 513 {*ashldi3_1}
     (nil))
(insn 202 201 203 16 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 16 (parallel [
            (set (reg/f:DI 147 [ D.5003 ])
                (plus:DI (reg:DI 146 [ D.5006 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])
            (reg:DI 146 [ D.5006 ]))
        (nil)))
(insn 204 203 205 16 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 205 204 206 16 (set (reg/f:DI 148 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 205)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 206 205 207 16 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mSector.c:168 89 {*movsi_internal}
     (nil))
(insn 207 206 208 16 (set (reg:DI 149 [ D.5002 ])
        (sign_extend:DI (reg:SI 206))) mSector.c:168 149 {*extendsidi2_rex64}
     (nil))
(insn 208 207 209 16 (parallel [
            (set (reg:DI 150 [ D.5002 ])
                (ashift:DI (reg:DI 149 [ D.5002 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 513 {*ashldi3_1}
     (nil))
(insn 209 208 210 16 (parallel [
            (set (reg/f:DI 151 [ D.5003 ])
                (plus:DI (reg/f:DI 148 [ D.5003 ])
                    (reg:DI 150 [ D.5002 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:168 274 {*adddi_1}
     (nil))
(insn 210 209 211 16 (set (reg/f:DI 152 [ D.5004 ])
        (mem/f:DI (reg/f:DI 151 [ D.5003 ]) [0 *_103+0 S8 A64])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 211 210 212 16 (set (mem/f:DI (reg/f:DI 147 [ D.5003 ]) [0 *_99+0 S8 A64])
        (reg/f:DI 152 [ D.5004 ])) mSector.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 212 211 213 16 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:171 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 16 (set (reg/f:DI 153 [ D.5003 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 207)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])) mSector.c:171 87 {*movdi_internal_rex64}
     (nil))
(insn 214 213 215 16 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.5003 ])) mSector.c:171 87 {*movdi_internal_rex64}
     (nil))
(call_insn 215 214 216 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:171 656 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 216 215 217 16 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 217 216 218 16 (set (reg/f:DI 154 [ D.5004 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])) mSector.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 218 217 219 16 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.5004 ])) mSector.c:172 87 {*movdi_internal_rex64}
     (nil))
(call_insn 219 218 220 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f44d2969000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mSector.c:172 656 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 220 219 221 16 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 221 220 222 16 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nvp+0 S8 A64])) mSector.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 16 (set (mem/f/j:DI (plus:DI (reg/f:DI 209)
                (const_int 8 [0x8])) [0 f_3(D)->nvp+0 S8 A64])
        (reg/f:DI 210)) mSector.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 223 222 224 16 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 16 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 vel+0 S8 A64])) mSector.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 16 (set (mem/f/j:DI (plus:DI (reg/f:DI 211)
                (const_int 24 [0x18])) [0 f_3(D)->vel+0 S8 A64])
        (reg/f:DI 212)) mSector.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 226 225 227 16 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 227 226 228 16 (set (reg:SI 155 [ D.5001 ])
        (mem/j:SI (plus:DI (reg/f:DI 213)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])) mSector.c:179 89 {*movsi_internal}
     (nil))
(insn 228 227 229 16 (parallel [
            (set (reg:SI 156 [ D.5001 ])
                (plus:SI (reg:SI 155 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:179 273 {*addsi_1}
     (nil))
(insn 229 228 230 16 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 f+0 S8 A64])) mSector.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 230 229 231 16 (set (mem/j:SI (plus:DI (reg/f:DI 214)
                (const_int 4 [0x4])) [0 f_3(D)->n_nvp+0 S4 A32])
        (reg:SI 156 [ D.5001 ])) mSector.c:179 89 {*movsi_internal}
     (nil))
(insn 231 230 232 16 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 232 231 233 16 (set (reg:SI 157 [ D.5001 ])
        (mem:SI (reg/f:DI 215) [0 *st_indx_12(D)+0 S4 A32])) mSector.c:180 89 {*movsi_internal}
     (nil))
(insn 233 232 234 16 (parallel [
            (set (reg:SI 158 [ D.5001 ])
                (plus:SI (reg:SI 157 [ D.5001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:180 273 {*addsi_1}
     (nil))
(insn 234 233 235 16 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 st_indx+0 S8 A64])) mSector.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 235 234 236 16 (set (mem:SI (reg/f:DI 216) [0 *st_indx_12(D)+0 S4 A32])
        (reg:SI 158 [ D.5001 ])) mSector.c:180 89 {*movsi_internal}
     (nil))
(insn 236 235 239 16 (set (reg:SI 159 [ D.5001 ])
        (const_int 1 [0x1])) mSector.c:182 89 {*movsi_internal}
     (nil))
(insn 239 236 243 16 (set (reg:SI 160 [ <retval> ])
        (reg:SI 159 [ D.5001 ])) mSector.c:182 89 {*movsi_internal}
     (nil))
(insn 243 239 246 16 (set (reg/i:SI 0 ax)
        (reg:SI 160 [ <retval> ])) mSector.c:183 89 {*movsi_internal}
     (nil))
(insn 246 243 0 16 (use (reg/i:SI 0 ax)) mSector.c:183 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _add_nvp_bound (_add_nvp_bound, funcdef_no=10, decl_uid=4061, cgraph_uid=10)

starting the processing of deferred insns
ending the processing of deferred insns


_add_nvp_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,3u} r1={6d,3u} r2={5d,2u} r4={6d,3u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={27d} r18={3d} r19={3d} r20={1d,25u,3e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,2u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,2u,2e} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,2u,2e} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,2u,2e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={4d,4u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={4d,4u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={4d,4u} r114={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 383{252d,120u,11e} in 88{85 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 4 si [ i ])) mSector.c:185 89 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
        (reg:SI 1 dx [ j ])) mSector.c:185 89 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
        (reg:DI 2 cx [ bound ])) mSector.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])
        (reg:SI 37 r8 [ k ])) mSector.c:185 89 {*movsi_internal}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:186 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 59 [ st_indx.2 ])
                (plus:SI (reg:SI 94)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:186 273 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 st_indx+0 S4 A32])
        (reg:SI 59 [ st_indx.2 ])) mSector.c:186 89 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 4 [0x4])) mSector.c:187 89 {*movsi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f44d29f7700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mSector.c:187 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 95)
        (reg:DI 0 ax)) mSector.c:187 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 95)) mSector.c:187 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 60 [ D.5008 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 61 [ D.5008 ])
                (plus:DI (reg:DI 60 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 62 [ D.5008 ])
                (ashift:DI (reg:DI 61 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 63 [ D.5009 ])
                (plus:DI (reg:DI 62 [ D.5008 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5008 ]))
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 64 [ D.5010 ])
        (mem/f:DI (reg/f:DI 63 [ D.5009 ]) [0 *_9+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 k+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 65 [ D.5011 ])
        (sign_extend:DI (reg:SI 98))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 66 [ D.5011 ])
                (ashift:DI (reg:DI 65 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 67 [ D.5009 ])
                (plus:DI (reg:DI 66 [ D.5011 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5011 ]))
        (nil)))
(insn 29 28 30 2 (set (reg/f:DI 68 [ D.5010 ])
        (mem/f:DI (reg/f:DI 67 [ D.5009 ]) [0 *_13+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 69 [ D.5012 ])
        (mem/f:DI (reg/f:DI 100) [0 *f_15(D)+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 70 [ D.5011 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:DI 102)
        (reg:DI 70 [ D.5011 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 70 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 38 37 39 2 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 71 [ D.5011 ])
        (reg:DI 102)) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:DI 72 [ D.5012 ])
                (plus:DI (reg/f:DI 69 [ D.5012 ])
                    (reg:DI 71 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 73 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72 [ D.5012 ])
                (const_int 8 [0x8])) [0 _20->nvp+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 74 [ D.5008 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg:DI 75 [ D.5008 ])
                (plus:DI (reg:DI 74 [ D.5008 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 45 44 46 2 (parallel [
            (set (reg:DI 76 [ D.5008 ])
                (ashift:DI (reg:DI 75 [ D.5008 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 46 45 47 2 (parallel [
            (set (reg/f:DI 77 [ D.5009 ])
                (plus:DI (reg/f:DI 73 [ D.5009 ])
                    (reg:DI 76 [ D.5008 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 78 [ D.5010 ])
        (mem/f:DI (reg/f:DI 77 [ D.5009 ]) [0 *_25+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 79 [ D.5012 ])
        (mem/f:DI (reg/f:DI 105) [0 *f_15(D)+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 80 [ D.5011 ])
        (sign_extend:DI (reg:SI 106))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 107)
        (reg:DI 80 [ D.5011 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 107)
                (ashift:DI (reg:DI 107)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 107)
                    (reg:DI 80 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 55 54 56 2 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 107)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 56 55 57 2 (set (reg:DI 107)
        (reg:DI 108)) mSector.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 57 56 58 2 (set (reg:DI 81 [ D.5011 ])
        (reg:DI 107)) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (parallel [
            (set (reg/f:DI 82 [ D.5012 ])
                (plus:DI (reg/f:DI 79 [ D.5012 ])
                    (reg:DI 81 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 59 58 60 2 (set (reg/f:DI 83 [ D.5009 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82 [ D.5012 ])
                (const_int 8 [0x8])) [0 _30->nvp+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 j+0 S4 A32])) mSector.c:189 89 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 84 [ D.5011 ])
        (sign_extend:DI (reg:SI 109))) mSector.c:189 149 {*extendsidi2_rex64}
     (nil))
(insn 62 61 63 2 (parallel [
            (set (reg:DI 85 [ D.5011 ])
                (ashift:DI (reg:DI 84 [ D.5011 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 513 {*ashldi3_1}
     (nil))
(insn 63 62 64 2 (parallel [
            (set (reg/f:DI 86 [ D.5009 ])
                (plus:DI (reg/f:DI 83 [ D.5009 ])
                    (reg:DI 85 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:189 274 {*adddi_1}
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 87 [ D.5010 ])
        (mem/f:DI (reg/f:DI 86 [ D.5009 ]) [0 *_34+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 2 (set (reg:DI 37 r8)
        (reg:DI 110)) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5010 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 2 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5010 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 2 (set (reg:DI 4 si)
        (reg/f:DI 78 [ D.5010 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 71 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5010 ])) mSector.c:189 87 {*movdi_internal_rex64}
     (nil))
(call_insn 71 70 72 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_intersection") [flags 0x41]  <function_decl 0x7f44d29fc200 find_intersection>) [0 find_intersection S1 A8])
            (const_int 0 [0]))) mSector.c:189 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 72 71 73 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (reg/f:DI 88 [ D.5012 ])
        (mem/f:DI (reg/f:DI 111) [0 *f_15(D)+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 2 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) mSector.c:190 89 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:DI 89 [ D.5011 ])
        (sign_extend:DI (reg:SI 112))) mSector.c:190 149 {*extendsidi2_rex64}
     (nil))
(insn 76 75 77 2 (set (reg:DI 113)
        (reg:DI 89 [ D.5011 ])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 513 {*ashldi3_1}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg:DI 113)
                    (reg:DI 89 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 79 78 80 2 (parallel [
            (set (reg:DI 114)
                (ashift:DI (reg:DI 113)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 513 {*ashldi3_1}
     (nil))
(insn 80 79 81 2 (set (reg:DI 113)
        (reg:DI 114)) mSector.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5011 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 81 80 82 2 (set (reg:DI 90 [ D.5011 ])
        (reg:DI 113)) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 2 (parallel [
            (set (reg/f:DI 91 [ D.5012 ])
                (plus:DI (reg/f:DI 88 [ D.5012 ])
                    (reg:DI 90 [ D.5011 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 274 {*adddi_1}
     (nil))
(insn 83 82 84 2 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 2 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:190 274 {*adddi_1}
     (nil))
(insn 85 84 86 2 (set (reg:DI 1 dx)
        (reg:DI 115)) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 2 (set (reg:DI 4 si)
        (reg:DI 116)) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5012 ])) mSector.c:190 87 {*movdi_internal_rex64}
     (nil))
(call_insn 88 87 89 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nvp") [flags 0x3]  <function_decl 0x7f44d2a01300 add_nvp>) [0 add_nvp S1 A8])
            (const_int 0 [0]))) mSector.c:190 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 89 88 92 2 (set (reg:SI 92 [ D.5013 ])
        (const_int 1 [0x1])) mSector.c:191 89 {*movsi_internal}
     (nil))
(insn 92 89 96 2 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5013 ])) mSector.c:191 89 {*movsi_internal}
     (nil))
(insn 96 92 99 2 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:192 89 {*movsi_internal}
     (nil))
(insn 99 96 0 2 (use (reg/i:SI 0 ax)) mSector.c:192 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _is_to_add (_is_to_add, funcdef_no=11, decl_uid=4069, cgraph_uid=11)

starting the processing of deferred insns
ending the processing of deferred insns


_is_to_add

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d,5u} r1={7d,4u} r2={5d,1u} r4={7d,4u} r5={7d,4u} r6={1d,7u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,10u} r17={31d,3u} r18={3d} r19={3d} r20={1d,26u,6e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} 
;;    total ref usage 417{261d,144u,12e} in 96{93 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])
        (reg:SI 5 di [ xp ])) mSector.c:194 89 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])
        (reg:SI 1 dx [ k ])) mSector.c:194 89 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 60 [ D.5015 ])
        (sign_extend:DI (reg:SI 113))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 61 [ D.5015 ])
                (plus:DI (reg:DI 60 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 62 [ D.5015 ])
                (ashift:DI (reg:DI 61 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 63 [ D.5016 ])
                (plus:DI (reg:DI 62 [ D.5015 ])
                    (reg/f:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 62 [ D.5015 ]))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 64 [ D.5017 ])
        (mem/f:DI (reg/f:DI 63 [ D.5016 ]) [0 *_7+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 65 [ D.5018 ])
        (sign_extend:DI (reg:SI 115))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 66 [ D.5018 ])
                (ashift:DI (reg:DI 65 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 67 [ D.5016 ])
                (plus:DI (reg:DI 66 [ D.5018 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 66 [ D.5018 ]))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 68 [ D.5017 ])
        (mem/f:DI (reg/f:DI 67 [ D.5016 ]) [0 *_11+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 69 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 70 [ D.5015 ])
        (sign_extend:DI (reg:SI 117))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 71 [ D.5015 ])
                (plus:DI (reg:DI 70 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 72 [ D.5015 ])
                (ashift:DI (reg:DI 71 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 73 [ D.5016 ])
                (plus:DI (reg/f:DI 69 [ D.5016 ])
                    (reg:DI 72 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 74 [ D.5017 ])
        (mem/f:DI (reg/f:DI 73 [ D.5016 ]) [0 *_18+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 75 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 76 [ D.5018 ])
        (sign_extend:DI (reg:SI 118))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 77 [ D.5018 ])
                (ashift:DI (reg:DI 76 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 78 [ D.5016 ])
                (plus:DI (reg/f:DI 75 [ D.5016 ])
                    (reg:DI 77 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 79 [ D.5017 ])
        (mem/f:DI (reg/f:DI 78 [ D.5016 ]) [0 *_23+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 68 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 74 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("segments_intersect") [flags 0x41]  <function_decl 0x7f44d29f7d00 segments_intersect>) [0 segments_intersect S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 39 38 40 2 (set (reg:SI 80 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       3 (FALLTHRU)
;;              6

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg/f:DI 81 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 3 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:DI 82 [ D.5015 ])
        (sign_extend:DI (reg:SI 119))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 3 (parallel [
            (set (reg:DI 83 [ D.5015 ])
                (plus:DI (reg:DI 82 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 84 [ D.5015 ])
                (ashift:DI (reg:DI 83 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 48 47 49 3 (parallel [
            (set (reg/f:DI 85 [ D.5016 ])
                (plus:DI (reg/f:DI 81 [ D.5016 ])
                    (reg:DI 84 [ D.5015 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 49 48 50 3 (set (reg/f:DI 86 [ D.5017 ])
        (mem/f:DI (reg/f:DI 85 [ D.5016 ]) [0 *_30+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 3 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 51 50 52 3 (set (reg:DI 87 [ D.5015 ])
        (sign_extend:DI (reg:SI 120))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 3 (parallel [
            (set (reg:DI 88 [ D.5015 ])
                (plus:DI (reg:DI 87 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 53 52 54 3 (parallel [
            (set (reg:DI 89 [ D.5015 ])
                (ashift:DI (reg:DI 88 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 54 53 55 3 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg/f:DI 90 [ D.5016 ])
                (plus:DI (reg:DI 89 [ D.5015 ])
                    (reg/f:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 89 [ D.5015 ]))
        (nil)))
(insn 56 55 57 3 (set (reg/f:DI 91 [ D.5017 ])
        (mem/f:DI (reg/f:DI 90 [ D.5016 ]) [0 *_35+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 3 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 58 57 59 3 (set (reg:DI 92 [ D.5018 ])
        (sign_extend:DI (reg:SI 122))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 59 58 60 3 (parallel [
            (set (reg:DI 93 [ D.5018 ])
                (ashift:DI (reg:DI 92 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 60 59 61 3 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg/f:DI 94 [ D.5016 ])
                (plus:DI (reg:DI 93 [ D.5018 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 93 [ D.5018 ]))
        (nil)))
(insn 62 61 63 3 (set (reg/f:DI 95 [ D.5017 ])
        (mem/f:DI (reg/f:DI 94 [ D.5016 ]) [0 *_39+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg:DI 1 dx)
        (reg/f:DI 86 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 3 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 3 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(call_insn 66 65 67 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 67 66 68 3 (set (reg:SI 96 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 68 67 69 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 69 68 70 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 70 69 71 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 4 (set (reg/f:DI 97 [ D.5016 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 f.nvp+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 4 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 xp+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 73 72 74 4 (set (reg:DI 98 [ D.5018 ])
        (sign_extend:DI (reg:SI 124))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 4 (parallel [
            (set (reg:DI 99 [ D.5018 ])
                (ashift:DI (reg:DI 98 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 75 74 76 4 (parallel [
            (set (reg/f:DI 100 [ D.5016 ])
                (plus:DI (reg/f:DI 97 [ D.5016 ])
                    (reg:DI 99 [ D.5018 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 76 75 77 4 (set (reg/f:DI 101 [ D.5017 ])
        (mem/f:DI (reg/f:DI 100 [ D.5016 ]) [0 *_45+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 4 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:DI 102 [ D.5015 ])
        (sign_extend:DI (reg:SI 125))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 79 78 80 4 (parallel [
            (set (reg:DI 103 [ D.5015 ])
                (plus:DI (reg:DI 102 [ D.5015 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (nil))
(insn 80 79 81 4 (parallel [
            (set (reg:DI 104 [ D.5015 ])
                (ashift:DI (reg:DI 103 [ D.5015 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 81 80 82 4 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 4 (parallel [
            (set (reg/f:DI 105 [ D.5016 ])
                (plus:DI (reg:DI 104 [ D.5015 ])
                    (reg/f:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 104 [ D.5015 ]))
        (nil)))
(insn 83 82 84 4 (set (reg/f:DI 106 [ D.5017 ])
        (mem/f:DI (reg/f:DI 105 [ D.5016 ]) [0 *_50+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 4 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 k+0 S4 A32])) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:DI 107 [ D.5018 ])
        (sign_extend:DI (reg:SI 127))) mSector.c:196 149 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 4 (parallel [
            (set (reg:DI 108 [ D.5018 ])
                (ashift:DI (reg:DI 107 [ D.5018 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 513 {*ashldi3_1}
     (nil))
(insn 87 86 88 4 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 4 (parallel [
            (set (reg/f:DI 109 [ D.5016 ])
                (plus:DI (reg:DI 108 [ D.5018 ])
                    (reg/f:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:196 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 bound+0 S8 A64])
            (reg:DI 108 [ D.5018 ]))
        (nil)))
(insn 89 88 90 4 (set (reg/f:DI 110 [ D.5017 ])
        (mem/f:DI (reg/f:DI 109 [ D.5016 ]) [0 *_54+0 S8 A64])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 4 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 4 (set (reg:DI 4 si)
        (reg/f:DI 106 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(insn 92 91 93 4 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.5017 ])) mSector.c:196 87 {*movdi_internal_rex64}
     (nil))
(call_insn 93 92 94 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:196 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 94 93 95 4 (set (reg:SI 111 [ D.5014 ])
        (reg:SI 0 ax)) mSector.c:196 89 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5014 ])
            (const_int 0 [0]))) mSector.c:196 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 96 95 97 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) mSector.c:196 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 97 96 98 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 116 5 (set (reg:SI 59 [ D.5014 ])
        (const_int 1 [0x1])) mSector.c:197 89 {*movsi_internal}
     (nil))
(jump_insn 116 98 117 5 (set (pc)
        (label_ref 104)) mSector.c:197 -1
     (nil)
 -> 104)
;;  succ:       7 [100.0%] 

(barrier 117 116 101)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 101 117 102 6 79 "" [3 uses])
(note 102 101 103 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 6 (set (reg:SI 59 [ D.5014 ])
        (const_int 0 [0])) mSector.c:199 89 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 104 103 105 7 80 "" [1 uses])
(note 105 104 106 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 110 7 (set (reg:SI 112 [ <retval> ])
        (reg:SI 59 [ D.5014 ])) 89 {*movsi_internal}
     (nil))
(insn 110 106 113 7 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) mSector.c:200 89 {*movsi_internal}
     (nil))
(insn 113 110 0 7 (use (reg/i:SI 0 ax)) mSector.c:200 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function modify_traj_intersect_bound (modify_traj_intersect_bound, funcdef_no=12, decl_uid=1882, cgraph_uid=12)

starting the processing of deferred insns
ending the processing of deferred insns


modify_traj_intersect_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u} r17={28d,2u} r20={1d,29u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,2u,2e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,2u,2e} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,2u,2e} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,2u,2e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={4d,4u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={4d,4u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={4d,4u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={4d,4u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 258{118d,132u,8e} in 87{87 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:202 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:202 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 113 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:214 89 {*movsi_internal}
     (nil))
(jump_insn 113 7 114 2 (set (pc)
        (label_ref 92)) mSector.c:214 -1
     (nil)
 -> 92)
;;  succ:       7 [100.0%] 

(barrier 114 113 96)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 96 114 10 3 85 "" [1 uses])
(note 10 96 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ D.5020 ])
        (mem/f:DI (reg/f:DI 95) [0 *flight_6(D)+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 3 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:215 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 61 [ D.5021 ])
        (sign_extend:DI (reg:SI 96))) mSector.c:215 149 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:DI 97)
        (reg:DI 61 [ D.5021 ])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 97)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg:DI 97)
                    (reg:DI 61 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 98)
                (ashift:DI (reg:DI 97)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 513 {*ashldi3_1}
     (nil))
(insn 19 18 20 3 (set (reg:DI 97)
        (reg:DI 98)) mSector.c:215 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 3 (set (reg:DI 62 [ D.5021 ])
        (reg:DI 97)) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 63 [ D.5020 ])
                (plus:DI (reg/f:DI 60 [ D.5020 ])
                    (reg:DI 62 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 274 {*adddi_1}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 64 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ D.5020 ])
                (const_int 8 [0x8])) [0 _10->nvp+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 65 [ D.5023 ])
        (mem/f:DI (reg/f:DI 64 [ D.5022 ]) [0 *_11+0 S8 A64])) mSector.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (parallel [
            (set (reg/f:DI 66 [ D.5023 ])
                (plus:DI (reg/f:DI 65 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:215 274 {*adddi_1}
     (nil))
(insn 25 24 26 3 (set (reg:XF 99)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:215 131 {*movxf_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (mem:XF (reg/f:DI 66 [ D.5023 ]) [0 *_13+0 S16 A128])
        (reg:XF 99)) mSector.c:215 131 {*movxf_internal_rex64}
     (nil))
(insn 27 26 115 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:216 89 {*movsi_internal}
     (nil))
(jump_insn 115 27 116 3 (set (pc)
        (label_ref 52)) mSector.c:216 -1
     (nil)
 -> 52)
;;  succ:       5 [100.0%] 

(barrier 116 115 67)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 67 116 30 4 84 "" [1 uses])
(note 30 67 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 73 [ D.5020 ])
        (mem/f:DI (reg/f:DI 100) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 74 [ D.5021 ])
        (sign_extend:DI (reg:SI 101))) mSector.c:216 149 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 4 (set (reg:DI 102)
        (reg:DI 74 [ D.5021 ])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 102)
                (ashift:DI (reg:DI 102)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 102)
                    (reg:DI 74 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 103)
                (ashift:DI (reg:DI 102)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 39 38 40 4 (set (reg:DI 102)
        (reg:DI 103)) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 74 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 40 39 41 4 (set (reg:DI 75 [ D.5021 ])
        (reg:DI 102)) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg/f:DI 76 [ D.5020 ])
                (plus:DI (reg/f:DI 73 [ D.5020 ])
                    (reg:DI 75 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 77 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76 [ D.5020 ])
                (const_int 8 [0x8])) [0 _24->nvp+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 4 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 78 [ D.5021 ])
        (sign_extend:DI (reg:SI 104))) mSector.c:216 149 {*extendsidi2_rex64}
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 79 [ D.5021 ])
                (ashift:DI (reg:DI 78 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 80 [ D.5022 ])
                (plus:DI (reg/f:DI 77 [ D.5022 ])
                    (reg:DI 79 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 81 [ D.5023 ])
        (mem/f:DI (reg/f:DI 80 [ D.5022 ]) [0 *_28+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 82 [ D.5023 ])
                (plus:DI (reg/f:DI 81 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (nil))
(insn 49 48 50 4 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:216 131 {*movxf_internal_rex64}
     (nil))
(insn 50 49 51 4 (set (mem:XF (reg/f:DI 82 [ D.5023 ]) [0 *_30+0 S16 A128])
        (reg:XF 105)) mSector.c:216 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 52 51 53 5 83 "" [1 uses])
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 67 [ D.5020 ])
        (mem/f:DI (reg/f:DI 106) [0 *flight_6(D)+0 S8 A64])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 5 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (set (reg:DI 68 [ D.5021 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:216 149 {*extendsidi2_rex64}
     (nil))
(insn 58 57 59 5 (set (reg:DI 108)
        (reg:DI 68 [ D.5021 ])) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 60 59 61 5 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 68 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 61 60 62 5 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 513 {*ashldi3_1}
     (nil))
(insn 62 61 63 5 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 68 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 63 62 64 5 (set (reg:DI 69 [ D.5021 ])
        (reg:DI 108)) mSector.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 5 (parallel [
            (set (reg/f:DI 70 [ D.5020 ])
                (plus:DI (reg/f:DI 67 [ D.5020 ])
                    (reg:DI 69 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 274 {*adddi_1}
     (nil))
(insn 65 64 66 5 (set (reg:SI 71 [ D.5019 ])
        (mem/j:SI (plus:DI (reg/f:DI 70 [ D.5020 ])
                (const_int 4 [0x4])) [0 _18->n_nvp+0 S4 A32])) mSector.c:216 89 {*movsi_internal}
     (nil))
(insn 66 65 68 5 (parallel [
            (set (reg:SI 72 [ D.5019 ])
                (plus:SI (reg:SI 71 [ D.5019 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:216 273 {*addsi_1}
     (nil))
(insn 68 66 69 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 72 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) mSector.c:216 7 {*cmpsi_1}
     (nil))
(jump_insn 69 68 70 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) mSector.c:216 612 {*jcc_1}
     (nil)
 -> 67)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 6 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 flight+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 6 (set (reg/f:DI 83 [ D.5020 ])
        (mem/f:DI (reg/f:DI 110) [0 *flight_6(D)+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 6 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 74 73 75 6 (set (reg:DI 84 [ D.5021 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:217 149 {*extendsidi2_rex64}
     (nil))
(insn 75 74 76 6 (set (reg:DI 112)
        (reg:DI 84 [ D.5021 ])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 6 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (nil))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 84 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 78 77 79 6 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (nil))
(insn 79 78 80 6 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 84 [ D.5021 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 80 79 81 6 (set (reg:DI 85 [ D.5021 ])
        (reg:DI 112)) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg/f:DI 86 [ D.5020 ])
                (plus:DI (reg/f:DI 83 [ D.5020 ])
                    (reg:DI 85 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (nil))
(insn 82 81 83 6 (set (reg/f:DI 87 [ D.5022 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 86 [ D.5020 ])
                (const_int 8 [0x8])) [0 _35->nvp+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 6 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mSector.c:217 89 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 88 [ D.5021 ])
        (sign_extend:DI (reg:SI 114))) mSector.c:217 149 {*extendsidi2_rex64}
     (nil))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 89 [ D.5021 ])
                (ashift:DI (reg:DI 88 [ D.5021 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 513 {*ashldi3_1}
     (nil))
(insn 86 85 87 6 (parallel [
            (set (reg/f:DI 90 [ D.5022 ])
                (plus:DI (reg/f:DI 87 [ D.5022 ])
                    (reg:DI 89 [ D.5021 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (nil))
(insn 87 86 88 6 (set (reg/f:DI 91 [ D.5023 ])
        (mem/f:DI (reg/f:DI 90 [ D.5022 ]) [0 *_39+0 S8 A64])) mSector.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 6 (parallel [
            (set (reg/f:DI 92 [ D.5023 ])
                (plus:DI (reg/f:DI 91 [ D.5023 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:217 274 {*adddi_1}
     (nil))
(insn 89 88 90 6 (set (reg:XF 115)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:217 131 {*movxf_internal_rex64}
     (nil))
(insn 90 89 91 6 (set (mem:XF (reg/f:DI 92 [ D.5023 ]) [0 *_41+0 S16 A128])
        (reg:XF 115)) mSector.c:217 131 {*movxf_internal_rex64}
     (nil))
(insn 91 90 92 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:214 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 92 91 93 7 82 "" [1 uses])
(note 93 92 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 7 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 97 7 (set (reg:SI 59 [ D.5019 ])
        (mem:SI (reg/f:DI 116) [0 *Nflight_4(D)+0 S4 A32])) mSector.c:214 89 {*movsi_internal}
     (nil))
(insn 97 95 98 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5019 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) mSector.c:214 7 {*cmpsi_1}
     (nil))
(jump_insn 98 97 99 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) mSector.c:214 612 {*jcc_1}
     (nil)
 -> 96)
;;  succ:       3
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 103 8 (set (reg:SI 93 [ D.5019 ])
        (const_int 1 [0x1])) mSector.c:220 89 {*movsi_internal}
     (nil))
(insn 103 100 107 8 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.5019 ])) mSector.c:220 89 {*movsi_internal}
     (nil))
(insn 107 103 110 8 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) mSector.c:221 89 {*movsi_internal}
     (nil))
(insn 110 107 0 8 (use (reg/i:SI 0 ax)) mSector.c:221 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function set_boundary_flag_onFlight (set_boundary_flag_onFlight, funcdef_no=13, decl_uid=1890, cgraph_uid=13)

starting the processing of deferred insns
ending the processing of deferred insns


set_boundary_flag_onFlight

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={12d,9u} r1={17d,7u} r2={10d} r4={18d,9u} r5={19d,10u} r6={1d,31u} r7={1d,40u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,42u} r17={154d,14u} r18={9d} r19={9d} r20={1d,118u,1e} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r59={1d,1u} r60={1d,1u} r61={1d,2u,2e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u,2e} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,2u,2e} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,2u,2e} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,2u,2e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,2u,2e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,2u,2e} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,2u,2e} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,2u,2e} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u,2e} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,2u,2e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,2u,2e} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,2u,2e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u,1e} r172={1d,1u} r173={1d,2u,2e} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,2u,2e} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,2u,2e} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,2u,2e} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,2u,2e} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,2u,2e} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,2u,2e} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,2u,2e} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,2u,2e} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,2u,2e} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,2u,2e} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={4d,4u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={4d,4u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={4d,4u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={4d,4u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={4d,4u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={4d,4u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={4d,4u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={4d,4u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={4d,4u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={4d,4u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={4d,4u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={4d,4u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={4d,4u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={4d,4u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={4d,4u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={4d,4u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={4d,4u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={4d,4u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={4d,4u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={4d,4u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={4d,4u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={4d,4u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={4d,4u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={4d,4u} r356={1d,1u} r357={1d,1u} 
;;    total ref usage 1683{957d,676u,50e} in 463{454 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:223 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 539 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:225 89 {*movsi_internal}
     (nil))
(jump_insn 539 7 540 2 (set (pc)
        (label_ref 515)) mSector.c:225 -1
     (nil)
 -> 515)
;;  succ:       30 [100.0%] 

(barrier 540 539 519)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 519 540 10 3 107 "" [1 uses])
(note 10 519 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ D.5025 ])
        (mem/f:DI (reg/f:DI 243) [0 *f_9(D)+0 S8 A64])) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 3 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:226 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 61 [ D.5026 ])
        (sign_extend:DI (reg:SI 244))) mSector.c:226 149 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:DI 245)
        (reg:DI 61 [ D.5026 ])) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 245)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg:DI 245)
                    (reg:DI 61 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 246)
                (ashift:DI (reg:DI 245)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 513 {*ashldi3_1}
     (nil))
(insn 19 18 20 3 (set (reg:DI 245)
        (reg:DI 246)) mSector.c:226 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 3 (set (reg:DI 62 [ D.5026 ])
        (reg:DI 245)) mSector.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 63 [ D.5025 ])
                (plus:DI (reg/f:DI 60 [ D.5025 ])
                    (reg:DI 62 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:226 274 {*adddi_1}
     (nil))
(insn 22 21 23 3 (set (mem/j:SI (plus:DI (reg/f:DI 63 [ D.5025 ])
                (const_int 44 [0x2c])) [0 _13->st_indx+0 S4 A32])
        (const_int 1 [0x1])) mSector.c:226 89 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 64 [ D.5025 ])
        (mem/f:DI (reg/f:DI 247) [0 *f_9(D)+0 S8 A64])) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:227 89 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 65 [ D.5026 ])
        (sign_extend:DI (reg:SI 248))) mSector.c:227 149 {*extendsidi2_rex64}
     (nil))
(insn 27 26 28 3 (set (reg:DI 249)
        (reg:DI 65 [ D.5026 ])) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 249)
                (ashift:DI (reg:DI 249)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 513 {*ashldi3_1}
     (nil))
(insn 29 28 30 3 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg:DI 249)
                    (reg:DI 65 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg:DI 250)
                (ashift:DI (reg:DI 249)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 513 {*ashldi3_1}
     (nil))
(insn 31 30 32 3 (set (reg:DI 249)
        (reg:DI 250)) mSector.c:227 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 65 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 32 31 33 3 (set (reg:DI 66 [ D.5026 ])
        (reg:DI 249)) mSector.c:227 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (parallel [
            (set (reg/f:DI 67 [ D.5025 ])
                (plus:DI (reg/f:DI 64 [ D.5025 ])
                    (reg:DI 66 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:227 274 {*adddi_1}
     (nil))
(insn 34 33 35 3 (set (mem/j:SI (plus:DI (reg/f:DI 67 [ D.5025 ])
                (const_int 40 [0x28])) [0 _17->ready+0 S4 A64])
        (const_int 0 [0])) mSector.c:227 89 {*movsi_internal}
     (nil))
(insn 35 34 36 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 89 {*movsi_internal}
     (nil))
(insn 36 35 541 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32])
        (const_int 0 [0])) mSector.c:228 89 {*movsi_internal}
     (nil))
(jump_insn 541 36 542 3 (set (pc)
        (label_ref 169)) mSector.c:228 -1
     (nil)
 -> 169)
;;  succ:       10 [100.0%] 

(barrier 542 541 184)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 184 542 39 4 94 "" [1 uses])
(note 39 184 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:SI 74 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (reg/f:DI 75 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 4 (set (reg/f:DI 76 [ D.5025 ])
        (mem/f:DI (reg/f:DI 251) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 4 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 77 [ D.5026 ])
        (sign_extend:DI (reg:SI 252))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 4 (set (reg:DI 253)
        (reg:DI 77 [ D.5026 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 253)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 253)
                    (reg:DI 77 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 254)
                (ashift:DI (reg:DI 253)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 50 49 51 4 (set (reg:DI 253)
        (reg:DI 254)) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 77 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 51 50 52 4 (set (reg:DI 78 [ D.5026 ])
        (reg:DI 253)) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg/f:DI 79 [ D.5025 ])
                (plus:DI (reg/f:DI 76 [ D.5025 ])
                    (reg:DI 78 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 53 52 54 4 (set (reg/f:DI 80 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79 [ D.5025 ])
                (const_int 8 [0x8])) [0 _31->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 4 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 81 [ D.5026 ])
        (sign_extend:DI (reg:SI 255))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 82 [ D.5026 ])
                (ashift:DI (reg:DI 81 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg/f:DI 83 [ D.5027 ])
                (plus:DI (reg/f:DI 80 [ D.5027 ])
                    (reg:DI 82 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 58 57 59 4 (set (reg/f:DI 84 [ D.5028 ])
        (mem/f:DI (reg/f:DI 83 [ D.5027 ]) [0 *_35+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 4 (set (reg:SI 1 dx)
        (reg:SI 74 [ D.5024 ])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 60 59 61 4 (set (reg:DI 4 si)
        (reg/f:DI 75 [ D.5027 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.5028 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 64 4 (set (reg:SI 85 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 66 65 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 5 (set (reg:SI 86 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 68 67 69 5 (set (reg/f:DI 87 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 5 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 71 5 (set (reg/f:DI 88 [ D.5025 ])
        (mem/f:DI (reg/f:DI 256) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 5 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 72 71 73 5 (set (reg:DI 89 [ D.5026 ])
        (sign_extend:DI (reg:SI 257))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 73 72 74 5 (set (reg:DI 258)
        (reg:DI 89 [ D.5026 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 5 (parallel [
            (set (reg:DI 258)
                (ashift:DI (reg:DI 258)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 75 74 76 5 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg:DI 258)
                    (reg:DI 89 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 76 75 77 5 (parallel [
            (set (reg:DI 259)
                (ashift:DI (reg:DI 258)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 77 76 78 5 (set (reg:DI 258)
        (reg:DI 259)) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 78 77 79 5 (set (reg:DI 90 [ D.5026 ])
        (reg:DI 258)) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 5 (parallel [
            (set (reg/f:DI 91 [ D.5025 ])
                (plus:DI (reg/f:DI 88 [ D.5025 ])
                    (reg:DI 90 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 80 79 81 5 (set (reg/f:DI 92 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 91 [ D.5025 ])
                (const_int 8 [0x8])) [0 _43->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 5 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 82 81 83 5 (set (reg:DI 93 [ D.5029 ])
        (sign_extend:DI (reg:SI 260))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 83 82 84 5 (parallel [
            (set (reg:DI 94 [ D.5029 ])
                (plus:DI (reg:DI 93 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 84 83 85 5 (parallel [
            (set (reg:DI 95 [ D.5029 ])
                (ashift:DI (reg:DI 94 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 85 84 86 5 (parallel [
            (set (reg/f:DI 96 [ D.5027 ])
                (plus:DI (reg/f:DI 92 [ D.5027 ])
                    (reg:DI 95 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 86 85 87 5 (set (reg/f:DI 97 [ D.5028 ])
        (mem/f:DI (reg/f:DI 96 [ D.5027 ]) [0 *_48+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 5 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.5024 ])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 88 87 89 5 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.5027 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 5 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5028 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(call_insn 90 89 91 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:229 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 91 90 92 5 (set (reg:SI 98 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 92 91 93 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:229 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       6 (FALLTHRU)
;;              8

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 94 93 95 6 90 "" [1 uses])
(note 95 94 96 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 6 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 6 (set (reg/f:DI 99 [ D.5025 ])
        (mem/f:DI (reg/f:DI 261) [0 *f_9(D)+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 6 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 99 98 100 6 (set (reg:DI 100 [ D.5026 ])
        (sign_extend:DI (reg:SI 262))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 6 (set (reg:DI 263)
        (reg:DI 100 [ D.5026 ])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 6 (parallel [
            (set (reg:DI 263)
                (ashift:DI (reg:DI 263)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 102 101 103 6 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg:DI 263)
                    (reg:DI 100 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 103 102 104 6 (parallel [
            (set (reg:DI 264)
                (ashift:DI (reg:DI 263)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 104 103 105 6 (set (reg:DI 263)
        (reg:DI 264)) mSector.c:229 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 105 104 106 6 (set (reg:DI 101 [ D.5026 ])
        (reg:DI 263)) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 106 105 107 6 (parallel [
            (set (reg/f:DI 102 [ D.5025 ])
                (plus:DI (reg/f:DI 99 [ D.5025 ])
                    (reg:DI 101 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 107 106 108 6 (set (reg/f:DI 103 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 102 [ D.5025 ])
                (const_int 8 [0x8])) [0 _54->nvp+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 108 107 109 6 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:229 89 {*movsi_internal}
     (nil))
(insn 109 108 110 6 (set (reg:DI 104 [ D.5026 ])
        (sign_extend:DI (reg:SI 265))) mSector.c:229 149 {*extendsidi2_rex64}
     (nil))
(insn 110 109 111 6 (parallel [
            (set (reg:DI 105 [ D.5026 ])
                (ashift:DI (reg:DI 104 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 513 {*ashldi3_1}
     (nil))
(insn 111 110 112 6 (parallel [
            (set (reg/f:DI 106 [ D.5027 ])
                (plus:DI (reg/f:DI 103 [ D.5027 ])
                    (reg:DI 105 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 112 111 113 6 (set (reg/f:DI 107 [ D.5028 ])
        (mem/f:DI (reg/f:DI 106 [ D.5027 ]) [0 *_58+0 S8 A64])) mSector.c:229 87 {*movdi_internal_rex64}
     (nil))
(insn 113 112 114 6 (parallel [
            (set (reg/f:DI 108 [ D.5028 ])
                (plus:DI (reg/f:DI 107 [ D.5028 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:229 274 {*adddi_1}
     (nil))
(insn 114 113 115 6 (set (reg:XF 109 [ D.5030 ])
        (mem:XF (reg/f:DI 108 [ D.5028 ]) [0 *_60+0 S16 A128])) mSector.c:229 131 {*movxf_internal_rex64}
     (nil))
(insn 115 114 116 6 (set (reg:XF 266)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mSector.c:229 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.4e+2 [0x0.fp+8])
        (nil)))
(insn 116 115 117 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 109 [ D.5030 ])
            (reg:XF 266))) mSector.c:229 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 117 116 121 6 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 144)
            (pc))) mSector.c:229 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 121 117 122 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 7 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 7 (set (reg/f:DI 110 [ D.5025 ])
        (mem/f:DI (reg/f:DI 267) [0 *f_9(D)+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 7 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:230 89 {*movsi_internal}
     (nil))
(insn 125 124 126 7 (set (reg:DI 111 [ D.5026 ])
        (sign_extend:DI (reg:SI 268))) mSector.c:230 149 {*extendsidi2_rex64}
     (nil))
(insn 126 125 127 7 (set (reg:DI 269)
        (reg:DI 111 [ D.5026 ])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 7 (parallel [
            (set (reg:DI 269)
                (ashift:DI (reg:DI 269)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (nil))
(insn 128 127 129 7 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg:DI 269)
                    (reg:DI 111 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 129 128 130 7 (parallel [
            (set (reg:DI 270)
                (ashift:DI (reg:DI 269)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (nil))
(insn 130 129 131 7 (set (reg:DI 269)
        (reg:DI 270)) mSector.c:230 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 111 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 131 130 132 7 (set (reg:DI 112 [ D.5026 ])
        (reg:DI 269)) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 7 (parallel [
            (set (reg/f:DI 113 [ D.5025 ])
                (plus:DI (reg/f:DI 110 [ D.5025 ])
                    (reg:DI 112 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (nil))
(insn 133 132 134 7 (set (reg/f:DI 114 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 113 [ D.5025 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 134 133 135 7 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:230 89 {*movsi_internal}
     (nil))
(insn 135 134 136 7 (set (reg:DI 115 [ D.5026 ])
        (sign_extend:DI (reg:SI 271))) mSector.c:230 149 {*extendsidi2_rex64}
     (nil))
(insn 136 135 137 7 (parallel [
            (set (reg:DI 116 [ D.5026 ])
                (ashift:DI (reg:DI 115 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 513 {*ashldi3_1}
     (nil))
(insn 137 136 138 7 (parallel [
            (set (reg/f:DI 117 [ D.5027 ])
                (plus:DI (reg/f:DI 114 [ D.5027 ])
                    (reg:DI 116 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (nil))
(insn 138 137 139 7 (set (reg/f:DI 118 [ D.5028 ])
        (mem/f:DI (reg/f:DI 117 [ D.5027 ]) [0 *_69+0 S8 A64])) mSector.c:230 87 {*movdi_internal_rex64}
     (nil))
(insn 139 138 140 7 (parallel [
            (set (reg/f:DI 119 [ D.5028 ])
                (plus:DI (reg/f:DI 118 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:230 274 {*adddi_1}
     (nil))
(insn 140 139 141 7 (set (reg:XF 272)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S16 A128])) mSector.c:230 131 {*movxf_internal_rex64}
     (nil))
(insn 141 140 543 7 (set (mem:XF (reg/f:DI 119 [ D.5028 ]) [0 *_71+0 S16 A128])
        (reg:XF 272)) mSector.c:230 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 543 141 544 7 (set (pc)
        (label_ref 166)) mSector.c:230 -1
     (nil)
 -> 166)
;;  succ:       9 [100.0%] 

(barrier 544 543 144)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 144 544 145 8 91 "" [2 uses])
(note 145 144 146 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 8 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 8 (set (reg/f:DI 120 [ D.5025 ])
        (mem/f:DI (reg/f:DI 273) [0 *f_9(D)+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 8 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:232 89 {*movsi_internal}
     (nil))
(insn 149 148 150 8 (set (reg:DI 121 [ D.5026 ])
        (sign_extend:DI (reg:SI 274))) mSector.c:232 149 {*extendsidi2_rex64}
     (nil))
(insn 150 149 151 8 (set (reg:DI 275)
        (reg:DI 121 [ D.5026 ])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 151 150 152 8 (parallel [
            (set (reg:DI 275)
                (ashift:DI (reg:DI 275)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (nil))
(insn 152 151 153 8 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg:DI 275)
                    (reg:DI 121 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 153 152 154 8 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 275)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (nil))
(insn 154 153 155 8 (set (reg:DI 275)
        (reg:DI 276)) mSector.c:232 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 121 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 155 154 156 8 (set (reg:DI 122 [ D.5026 ])
        (reg:DI 275)) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 156 155 157 8 (parallel [
            (set (reg/f:DI 123 [ D.5025 ])
                (plus:DI (reg/f:DI 120 [ D.5025 ])
                    (reg:DI 122 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (nil))
(insn 157 156 158 8 (set (reg/f:DI 124 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 123 [ D.5025 ])
                (const_int 8 [0x8])) [0 _75->nvp+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 8 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:232 89 {*movsi_internal}
     (nil))
(insn 159 158 160 8 (set (reg:DI 125 [ D.5026 ])
        (sign_extend:DI (reg:SI 277))) mSector.c:232 149 {*extendsidi2_rex64}
     (nil))
(insn 160 159 161 8 (parallel [
            (set (reg:DI 126 [ D.5026 ])
                (ashift:DI (reg:DI 125 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 513 {*ashldi3_1}
     (nil))
(insn 161 160 162 8 (parallel [
            (set (reg/f:DI 127 [ D.5027 ])
                (plus:DI (reg/f:DI 124 [ D.5027 ])
                    (reg:DI 126 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (nil))
(insn 162 161 163 8 (set (reg/f:DI 128 [ D.5028 ])
        (mem/f:DI (reg/f:DI 127 [ D.5027 ]) [0 *_79+0 S8 A64])) mSector.c:232 87 {*movdi_internal_rex64}
     (nil))
(insn 163 162 164 8 (parallel [
            (set (reg/f:DI 129 [ D.5028 ])
                (plus:DI (reg/f:DI 128 [ D.5028 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:232 274 {*adddi_1}
     (nil))
(insn 164 163 165 8 (set (reg:XF 278)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) mSector.c:232 131 {*movxf_internal_rex64}
     (nil))
(insn 165 164 166 8 (set (mem:XF (reg/f:DI 129 [ D.5028 ]) [0 *_81+0 S16 A128])
        (reg:XF 278)) mSector.c:232 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 166 165 167 9 93 "" [1 uses])
(note 167 166 168 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 169 168 170 10 89 "" [1 uses])
(note 170 169 171 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 10 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 172 171 173 10 (set (reg/f:DI 68 [ D.5025 ])
        (mem/f:DI (reg/f:DI 279) [0 *f_9(D)+0 S8 A64])) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 173 172 174 10 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:228 89 {*movsi_internal}
     (nil))
(insn 174 173 175 10 (set (reg:DI 69 [ D.5026 ])
        (sign_extend:DI (reg:SI 280))) mSector.c:228 149 {*extendsidi2_rex64}
     (nil))
(insn 175 174 176 10 (set (reg:DI 281)
        (reg:DI 69 [ D.5026 ])) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 10 (parallel [
            (set (reg:DI 281)
                (ashift:DI (reg:DI 281)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 513 {*ashldi3_1}
     (nil))
(insn 177 176 178 10 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg:DI 281)
                    (reg:DI 69 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 178 177 179 10 (parallel [
            (set (reg:DI 282)
                (ashift:DI (reg:DI 281)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 513 {*ashldi3_1}
     (nil))
(insn 179 178 180 10 (set (reg:DI 281)
        (reg:DI 282)) mSector.c:228 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 180 179 181 10 (set (reg:DI 70 [ D.5026 ])
        (reg:DI 281)) mSector.c:228 87 {*movdi_internal_rex64}
     (nil))
(insn 181 180 182 10 (parallel [
            (set (reg/f:DI 71 [ D.5025 ])
                (plus:DI (reg/f:DI 68 [ D.5025 ])
                    (reg:DI 70 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 274 {*adddi_1}
     (nil))
(insn 182 181 183 10 (set (reg:SI 72 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5025 ])
                (const_int 4 [0x4])) [0 _23->n_nvp+0 S4 A32])) mSector.c:228 89 {*movsi_internal}
     (nil))
(insn 183 182 185 10 (parallel [
            (set (reg:SI 73 [ D.5024 ])
                (plus:SI (reg:SI 72 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:228 273 {*addsi_1}
     (nil))
(insn 185 183 186 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:228 7 {*cmpsi_1}
     (nil))
(jump_insn 186 185 187 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) mSector.c:228 612 {*jcc_1}
     (nil)
 -> 184)
;;  succ:       4
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 187 186 188 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 545 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) mSector.c:238 89 {*movsi_internal}
     (nil))
(jump_insn 545 188 546 11 (set (pc)
        (label_ref 266)) mSector.c:238 -1
     (nil)
 -> 266)
;;  succ:       16 [100.0%] 

(barrier 546 545 281)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 281 546 191 12 99 "" [1 uses])
(note 191 281 192 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 12 (set (reg:SI 136 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 193 192 194 12 (set (reg/f:DI 137 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 194 193 195 12 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 195 194 196 12 (set (reg/f:DI 138 [ D.5025 ])
        (mem/f:DI (reg/f:DI 283) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 196 195 197 12 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 197 196 198 12 (set (reg:DI 139 [ D.5026 ])
        (sign_extend:DI (reg:SI 284))) mSector.c:238 149 {*extendsidi2_rex64}
     (nil))
(insn 198 197 199 12 (set (reg:DI 285)
        (reg:DI 139 [ D.5026 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 199 198 200 12 (parallel [
            (set (reg:DI 285)
                (ashift:DI (reg:DI 285)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 200 199 201 12 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg:DI 285)
                    (reg:DI 139 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 201 200 202 12 (parallel [
            (set (reg:DI 286)
                (ashift:DI (reg:DI 285)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 202 201 203 12 (set (reg:DI 285)
        (reg:DI 286)) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 139 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 203 202 204 12 (set (reg:DI 140 [ D.5026 ])
        (reg:DI 285)) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 204 203 205 12 (parallel [
            (set (reg/f:DI 141 [ D.5025 ])
                (plus:DI (reg/f:DI 138 [ D.5025 ])
                    (reg:DI 140 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 205 204 206 12 (set (reg/f:DI 142 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 141 [ D.5025 ])
                (const_int 8 [0x8])) [0 _95->nvp+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 206 205 207 12 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 207 206 208 12 (set (reg:DI 143 [ D.5026 ])
        (sign_extend:DI (reg:SI 287))) mSector.c:238 149 {*extendsidi2_rex64}
     (nil))
(insn 208 207 209 12 (parallel [
            (set (reg:DI 144 [ D.5026 ])
                (ashift:DI (reg:DI 143 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 209 208 210 12 (parallel [
            (set (reg/f:DI 145 [ D.5027 ])
                (plus:DI (reg/f:DI 142 [ D.5027 ])
                    (reg:DI 144 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 210 209 211 12 (set (reg/f:DI 146 [ D.5028 ])
        (mem/f:DI (reg/f:DI 145 [ D.5027 ]) [0 *_99+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 211 210 212 12 (set (reg:SI 1 dx)
        (reg:SI 136 [ D.5024 ])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 212 211 213 12 (set (reg:DI 4 si)
        (reg/f:DI 137 [ D.5027 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 12 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.5028 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(call_insn 214 213 215 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 215 214 216 12 (set (reg:SI 147 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 216 215 217 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 217 216 218 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 246)
;;  succ:       14
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 218 217 219 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 13 (set (reg:SI 148 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 220 219 221 13 (set (reg/f:DI 149 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 221 220 222 13 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 13 (set (reg/f:DI 150 [ D.5025 ])
        (mem/f:DI (reg/f:DI 288) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 223 222 224 13 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 224 223 225 13 (set (reg:DI 151 [ D.5026 ])
        (sign_extend:DI (reg:SI 289))) mSector.c:238 149 {*extendsidi2_rex64}
     (nil))
(insn 225 224 226 13 (set (reg:DI 290)
        (reg:DI 151 [ D.5026 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 226 225 227 13 (parallel [
            (set (reg:DI 290)
                (ashift:DI (reg:DI 290)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 227 226 228 13 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 290)
                    (reg:DI 151 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 228 227 229 13 (parallel [
            (set (reg:DI 291)
                (ashift:DI (reg:DI 290)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 229 228 230 13 (set (reg:DI 290)
        (reg:DI 291)) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 151 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 230 229 231 13 (set (reg:DI 152 [ D.5026 ])
        (reg:DI 290)) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 231 230 232 13 (parallel [
            (set (reg/f:DI 153 [ D.5025 ])
                (plus:DI (reg/f:DI 150 [ D.5025 ])
                    (reg:DI 152 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 232 231 233 13 (set (reg/f:DI 154 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 153 [ D.5025 ])
                (const_int 8 [0x8])) [0 _107->nvp+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 233 232 234 13 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 234 233 235 13 (set (reg:DI 155 [ D.5029 ])
        (sign_extend:DI (reg:SI 292))) mSector.c:238 149 {*extendsidi2_rex64}
     (nil))
(insn 235 234 236 13 (parallel [
            (set (reg:DI 156 [ D.5029 ])
                (plus:DI (reg:DI 155 [ D.5029 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 236 235 237 13 (parallel [
            (set (reg:DI 157 [ D.5029 ])
                (ashift:DI (reg:DI 156 [ D.5029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 237 236 238 13 (parallel [
            (set (reg/f:DI 158 [ D.5027 ])
                (plus:DI (reg/f:DI 154 [ D.5027 ])
                    (reg:DI 157 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 238 237 239 13 (set (reg/f:DI 159 [ D.5028 ])
        (mem/f:DI (reg/f:DI 158 [ D.5027 ]) [0 *_112+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 239 238 240 13 (set (reg:SI 1 dx)
        (reg:SI 148 [ D.5024 ])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 240 239 241 13 (set (reg:DI 4 si)
        (reg/f:DI 149 [ D.5027 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 241 240 242 13 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.5028 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(call_insn 242 241 243 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:238 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 243 242 244 13 (set (reg:SI 160 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 244 243 245 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:238 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 245 244 246 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 263)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 246 245 247 14 96 "" [1 uses])
(note 247 246 248 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 14 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 249 248 250 14 (set (reg/f:DI 161 [ D.5025 ])
        (mem/f:DI (reg/f:DI 293) [0 *f_9(D)+0 S8 A64])) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 14 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:239 89 {*movsi_internal}
     (nil))
(insn 251 250 252 14 (set (reg:DI 162 [ D.5026 ])
        (sign_extend:DI (reg:SI 294))) mSector.c:239 149 {*extendsidi2_rex64}
     (nil))
(insn 252 251 253 14 (set (reg:DI 295)
        (reg:DI 162 [ D.5026 ])) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 253 252 254 14 (parallel [
            (set (reg:DI 295)
                (ashift:DI (reg:DI 295)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 513 {*ashldi3_1}
     (nil))
(insn 254 253 255 14 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg:DI 295)
                    (reg:DI 162 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 255 254 256 14 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 295)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 513 {*ashldi3_1}
     (nil))
(insn 256 255 257 14 (set (reg:DI 295)
        (reg:DI 296)) mSector.c:239 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 257 256 258 14 (set (reg:DI 163 [ D.5026 ])
        (reg:DI 295)) mSector.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 258 257 259 14 (parallel [
            (set (reg/f:DI 164 [ D.5025 ])
                (plus:DI (reg/f:DI 161 [ D.5025 ])
                    (reg:DI 163 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:239 274 {*adddi_1}
     (nil))
(insn 259 258 260 14 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:239 89 {*movsi_internal}
     (nil))
(insn 260 259 547 14 (set (mem/j:SI (plus:DI (reg/f:DI 164 [ D.5025 ])
                (const_int 112 [0x70])) [0 _119->bound+0 S4 A128])
        (reg:SI 297)) mSector.c:239 89 {*movsi_internal}
     (nil))
(jump_insn 547 260 548 14 (set (pc)
        (label_ref 284)) mSector.c:240 -1
     (nil)
 -> 284)
;;  succ:       17 [100.0%] 

(barrier 548 547 263)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 263 548 264 15 97 "" [1 uses])
(note 264 263 265 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 273 {*addsi_1}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 266 265 267 16 95 "" [1 uses])
(note 267 266 268 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 16 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 269 268 270 16 (set (reg/f:DI 130 [ D.5025 ])
        (mem/f:DI (reg/f:DI 298) [0 *f_9(D)+0 S8 A64])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 270 269 271 16 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 271 270 272 16 (set (reg:DI 131 [ D.5026 ])
        (sign_extend:DI (reg:SI 299))) mSector.c:238 149 {*extendsidi2_rex64}
     (nil))
(insn 272 271 273 16 (set (reg:DI 300)
        (reg:DI 131 [ D.5026 ])) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 273 272 274 16 (parallel [
            (set (reg:DI 300)
                (ashift:DI (reg:DI 300)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 274 273 275 16 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg:DI 300)
                    (reg:DI 131 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 275 274 276 16 (parallel [
            (set (reg:DI 301)
                (ashift:DI (reg:DI 300)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 513 {*ashldi3_1}
     (nil))
(insn 276 275 277 16 (set (reg:DI 300)
        (reg:DI 301)) mSector.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 131 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 277 276 278 16 (set (reg:DI 132 [ D.5026 ])
        (reg:DI 300)) mSector.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 278 277 279 16 (parallel [
            (set (reg/f:DI 133 [ D.5025 ])
                (plus:DI (reg/f:DI 130 [ D.5025 ])
                    (reg:DI 132 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 274 {*adddi_1}
     (nil))
(insn 279 278 280 16 (set (reg:SI 134 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 133 [ D.5025 ])
                (const_int 4 [0x4])) [0 _87->n_nvp+0 S4 A32])) mSector.c:238 89 {*movsi_internal}
     (nil))
(insn 280 279 282 16 (parallel [
            (set (reg:SI 135 [ D.5024 ])
                (plus:SI (reg:SI 134 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:238 273 {*addsi_1}
     (nil))
(insn 282 280 283 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 135 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:238 7 {*cmpsi_1}
     (nil))
(jump_insn 283 282 284 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) mSector.c:238 612 {*jcc_1}
     (nil)
 -> 281)
;;  succ:       12
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              14 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 284 283 285 17 98 "" [1 uses])
(note 285 284 286 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 17 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 287 286 288 17 (set (reg/f:DI 165 [ D.5025 ])
        (mem/f:DI (reg/f:DI 302) [0 *f_9(D)+0 S8 A64])) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 288 287 289 17 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:242 89 {*movsi_internal}
     (nil))
(insn 289 288 290 17 (set (reg:DI 166 [ D.5026 ])
        (sign_extend:DI (reg:SI 303))) mSector.c:242 149 {*extendsidi2_rex64}
     (nil))
(insn 290 289 291 17 (set (reg:DI 304)
        (reg:DI 166 [ D.5026 ])) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 17 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 513 {*ashldi3_1}
     (nil))
(insn 292 291 293 17 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 166 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 293 292 294 17 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 513 {*ashldi3_1}
     (nil))
(insn 294 293 295 17 (set (reg:DI 304)
        (reg:DI 305)) mSector.c:242 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 166 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 295 294 296 17 (set (reg:DI 167 [ D.5026 ])
        (reg:DI 304)) mSector.c:242 87 {*movdi_internal_rex64}
     (nil))
(insn 296 295 297 17 (parallel [
            (set (reg/f:DI 168 [ D.5025 ])
                (plus:DI (reg/f:DI 165 [ D.5025 ])
                    (reg:DI 167 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 274 {*adddi_1}
     (nil))
(insn 297 296 298 17 (set (reg:SI 169 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 168 [ D.5025 ])
                (const_int 4 [0x4])) [0 _123->n_nvp+0 S4 A32])) mSector.c:242 89 {*movsi_internal}
     (nil))
(insn 298 297 299 17 (parallel [
            (set (reg:SI 170 [ D.5024 ])
                (plus:SI (reg:SI 169 [ D.5024 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:242 273 {*addsi_1}
     (nil))
(insn 299 298 300 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:242 7 {*cmpsi_1}
     (nil))
(jump_insn 300 299 301 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) mSector.c:242 612 {*jcc_1}
     (nil)
 -> 329)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 301 300 302 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 18 (set (reg:SI 171 [ i.3 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:243 89 {*movsi_internal}
     (nil))
(insn 303 302 304 18 (parallel [
            (set (reg:SI 306)
                (plus:SI (reg:SI 171 [ i.3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:243 273 {*addsi_1}
     (nil))
(insn 304 303 305 18 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 306)) mSector.c:243 89 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 171 [ i.3 ])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 305 304 306 18 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 306 305 307 18 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 307 306 308 18 (set (reg:SI 1 dx)
        (reg:SI 171 [ i.3 ])) mSector.c:243 89 {*movsi_internal}
     (nil))
(insn 308 307 309 18 (set (reg:DI 4 si)
        (reg:DI 307)) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 309 308 310 18 (set (reg:DI 5 di)
        (reg:DI 308)) mSector.c:243 87 {*movdi_internal_rex64}
     (nil))
(call_insn 310 309 311 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_aircraft") [flags 0x3]  <function_decl 0x7f44d2a01700 remove_aircraft>) [0 remove_aircraft S1 A8])
            (const_int 0 [0]))) mSector.c:243 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 311 310 312 18 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 312 311 313 18 (set (reg/f:DI 172 [ D.5025 ])
        (mem/f:DI (reg/f:DI 309) [0 *f_9(D)+0 S8 A64])) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 313 312 314 18 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:244 89 {*movsi_internal}
     (nil))
(insn 314 313 315 18 (set (reg:DI 173 [ D.5026 ])
        (sign_extend:DI (reg:SI 310))) mSector.c:244 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 18 (set (reg:DI 311)
        (reg:DI 173 [ D.5026 ])) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 316 315 317 18 (parallel [
            (set (reg:DI 311)
                (ashift:DI (reg:DI 311)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 513 {*ashldi3_1}
     (nil))
(insn 317 316 318 18 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 311)
                    (reg:DI 173 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 318 317 319 18 (parallel [
            (set (reg:DI 312)
                (ashift:DI (reg:DI 311)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 513 {*ashldi3_1}
     (nil))
(insn 319 318 320 18 (set (reg:DI 311)
        (reg:DI 312)) mSector.c:244 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 320 319 321 18 (set (reg:DI 174 [ D.5026 ])
        (reg:DI 311)) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 321 320 322 18 (parallel [
            (set (reg/f:DI 175 [ D.5025 ])
                (plus:DI (reg/f:DI 172 [ D.5025 ])
                    (reg:DI 174 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:244 274 {*adddi_1}
     (nil))
(insn 322 321 323 18 (set (reg:SI 176 [ D.5024 ])
        (mem/j:SI (reg/f:DI 175 [ D.5025 ]) [0 _131->ID+0 S4 A128])) mSector.c:244 89 {*movsi_internal}
     (nil))
(insn 323 322 324 18 (set (reg:SI 4 si)
        (reg:SI 176 [ D.5024 ])) mSector.c:244 89 {*movsi_internal}
     (nil))
(insn 324 323 325 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f44d28a47b8 *.LC13>)) mSector.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 325 324 326 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) mSector.c:244 91 {*movqi_internal}
     (nil))
(call_insn 326 325 549 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f44d2950f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mSector.c:244 663 {*call_value}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(jump_insn 549 326 550 18 (set (pc)
        (label_ref 512)) mSector.c:245 -1
     (nil)
 -> 512)
;;  succ:       29 [100.0%] 

(barrier 550 549 329)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 329 550 330 19 100 "" [1 uses])
(note 330 329 331 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 551 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 273 {*addsi_1}
     (nil))
(jump_insn 551 331 552 19 (set (pc)
        (label_ref 408)) mSector.c:248 -1
     (nil)
 -> 408)
;;  succ:       24 [100.0%] 

(barrier 552 551 422)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 422 552 334 20 105 "" [1 uses])
(note 334 422 335 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 20 (set (reg:SI 182 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 336 335 337 20 (set (reg/f:DI 183 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 337 336 338 20 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 338 337 339 20 (set (reg/f:DI 184 [ D.5025 ])
        (mem/f:DI (reg/f:DI 313) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 339 338 340 20 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 340 339 341 20 (set (reg:DI 185 [ D.5026 ])
        (sign_extend:DI (reg:SI 314))) mSector.c:248 149 {*extendsidi2_rex64}
     (nil))
(insn 341 340 342 20 (set (reg:DI 315)
        (reg:DI 185 [ D.5026 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 342 341 343 20 (parallel [
            (set (reg:DI 315)
                (ashift:DI (reg:DI 315)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 343 342 344 20 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg:DI 315)
                    (reg:DI 185 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 344 343 345 20 (parallel [
            (set (reg:DI 316)
                (ashift:DI (reg:DI 315)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 345 344 346 20 (set (reg:DI 315)
        (reg:DI 316)) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 346 345 347 20 (set (reg:DI 186 [ D.5026 ])
        (reg:DI 315)) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 347 346 348 20 (parallel [
            (set (reg/f:DI 187 [ D.5025 ])
                (plus:DI (reg/f:DI 184 [ D.5025 ])
                    (reg:DI 186 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 348 347 349 20 (set (reg/f:DI 188 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 187 [ D.5025 ])
                (const_int 8 [0x8])) [0 _144->nvp+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 349 348 350 20 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 350 349 351 20 (set (reg:DI 189 [ D.5026 ])
        (sign_extend:DI (reg:SI 317))) mSector.c:248 149 {*extendsidi2_rex64}
     (nil))
(insn 351 350 352 20 (parallel [
            (set (reg:DI 190 [ D.5026 ])
                (ashift:DI (reg:DI 189 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 352 351 353 20 (parallel [
            (set (reg/f:DI 191 [ D.5027 ])
                (plus:DI (reg/f:DI 188 [ D.5027 ])
                    (reg:DI 190 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 353 352 354 20 (set (reg/f:DI 192 [ D.5028 ])
        (mem/f:DI (reg/f:DI 191 [ D.5027 ]) [0 *_148+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 354 353 355 20 (set (reg:SI 1 dx)
        (reg:SI 182 [ D.5024 ])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 355 354 356 20 (set (reg:DI 4 si)
        (reg/f:DI 183 [ D.5027 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 356 355 357 20 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.5028 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(call_insn 357 356 358 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 358 357 359 20 (set (reg:SI 193 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 359 358 360 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 360 359 361 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 405)
;;  succ:       21 (FALLTHRU)
;;              23

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 361 360 362 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 21 (set (reg:SI 194 [ D.5024 ])
        (mem/j/c:SI (reg/f:DI 16 argp) [0 c.Nbound+0 S4 A128])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 363 362 364 21 (set (reg/f:DI 195 [ D.5027 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 c.bound+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 364 363 365 21 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 365 364 366 21 (set (reg/f:DI 196 [ D.5025 ])
        (mem/f:DI (reg/f:DI 318) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 366 365 367 21 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 367 366 368 21 (set (reg:DI 197 [ D.5026 ])
        (sign_extend:DI (reg:SI 319))) mSector.c:248 149 {*extendsidi2_rex64}
     (nil))
(insn 368 367 369 21 (set (reg:DI 320)
        (reg:DI 197 [ D.5026 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 369 368 370 21 (parallel [
            (set (reg:DI 320)
                (ashift:DI (reg:DI 320)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 370 369 371 21 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg:DI 320)
                    (reg:DI 197 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 371 370 372 21 (parallel [
            (set (reg:DI 321)
                (ashift:DI (reg:DI 320)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 372 371 373 21 (set (reg:DI 320)
        (reg:DI 321)) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 373 372 374 21 (set (reg:DI 198 [ D.5026 ])
        (reg:DI 320)) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 374 373 375 21 (parallel [
            (set (reg/f:DI 199 [ D.5025 ])
                (plus:DI (reg/f:DI 196 [ D.5025 ])
                    (reg:DI 198 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 375 374 376 21 (set (reg/f:DI 200 [ D.5027 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 199 [ D.5025 ])
                (const_int 8 [0x8])) [0 _156->nvp+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 376 375 377 21 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 377 376 378 21 (set (reg:DI 201 [ D.5026 ])
        (sign_extend:DI (reg:SI 322))) mSector.c:248 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 379 21 (parallel [
            (set (reg:DI 202 [ D.5026 ])
                (ashift:DI (reg:DI 201 [ D.5026 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 379 378 380 21 (parallel [
            (set (reg:DI 203 [ D.5029 ])
                (plus:DI (reg:DI 202 [ D.5026 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 380 379 381 21 (parallel [
            (set (reg/f:DI 204 [ D.5027 ])
                (plus:DI (reg/f:DI 200 [ D.5027 ])
                    (reg:DI 203 [ D.5029 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 381 380 382 21 (set (reg/f:DI 205 [ D.5028 ])
        (mem/f:DI (reg/f:DI 204 [ D.5027 ]) [0 *_161+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 382 381 383 21 (set (reg:SI 1 dx)
        (reg:SI 194 [ D.5024 ])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 383 382 384 21 (set (reg:DI 4 si)
        (reg/f:DI 195 [ D.5027 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 384 383 385 21 (set (reg:DI 5 di)
        (reg/f:DI 205 [ D.5028 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(call_insn 385 384 386 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("point_in_polygon") [flags 0x41]  <function_decl 0x7f44d29f7e00 point_in_polygon>) [0 point_in_polygon S1 A8])
            (const_int 0 [0]))) mSector.c:248 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 386 385 387 21 (set (reg:SI 206 [ D.5024 ])
        (reg:SI 0 ax)) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 387 386 388 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 206 [ D.5024 ])
            (const_int 0 [0]))) mSector.c:248 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 388 387 389 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 405)
;;  succ:       22 (FALLTHRU)
;;              23

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 389 388 390 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 22 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 391 390 392 22 (set (reg/f:DI 207 [ D.5025 ])
        (mem/f:DI (reg/f:DI 323) [0 *f_9(D)+0 S8 A64])) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 392 391 393 22 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:249 89 {*movsi_internal}
     (nil))
(insn 393 392 394 22 (set (reg:DI 208 [ D.5026 ])
        (sign_extend:DI (reg:SI 324))) mSector.c:249 149 {*extendsidi2_rex64}
     (nil))
(insn 394 393 395 22 (set (reg:DI 325)
        (reg:DI 208 [ D.5026 ])) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 395 394 396 22 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 513 {*ashldi3_1}
     (nil))
(insn 396 395 397 22 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 325)
                    (reg:DI 208 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 397 396 398 22 (parallel [
            (set (reg:DI 326)
                (ashift:DI (reg:DI 325)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 513 {*ashldi3_1}
     (nil))
(insn 398 397 399 22 (set (reg:DI 325)
        (reg:DI 326)) mSector.c:249 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 399 398 400 22 (set (reg:DI 209 [ D.5026 ])
        (reg:DI 325)) mSector.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 400 399 401 22 (parallel [
            (set (reg/f:DI 210 [ D.5025 ])
                (plus:DI (reg/f:DI 207 [ D.5025 ])
                    (reg:DI 209 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:249 274 {*adddi_1}
     (nil))
(insn 401 400 402 22 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:249 89 {*movsi_internal}
     (nil))
(insn 402 401 553 22 (set (mem/j:SI (plus:DI (reg/f:DI 210 [ D.5025 ])
                (const_int 116 [0x74])) [0 _167->bound+4 S4 A32])
        (reg:SI 327)) mSector.c:249 89 {*movsi_internal}
     (nil))
(jump_insn 553 402 554 22 (set (pc)
        (label_ref 425)) mSector.c:250 -1
     (nil)
 -> 425)
;;  succ:       25 [100.0%] 

(barrier 554 553 405)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 405 554 406 23 103 "" [2 uses])
(note 406 405 407 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 273 {*addsi_1}
     (nil))
;;  succ:       24 (FALLTHRU,DFS_BACK)

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU,DFS_BACK)
;;              19 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 408 407 409 24 102 "" [1 uses])
(note 409 408 410 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 24 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 411 410 412 24 (set (reg/f:DI 177 [ D.5025 ])
        (mem/f:DI (reg/f:DI 328) [0 *f_9(D)+0 S8 A64])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 412 411 413 24 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 413 412 414 24 (set (reg:DI 178 [ D.5026 ])
        (sign_extend:DI (reg:SI 329))) mSector.c:248 149 {*extendsidi2_rex64}
     (nil))
(insn 414 413 415 24 (set (reg:DI 330)
        (reg:DI 178 [ D.5026 ])) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 415 414 416 24 (parallel [
            (set (reg:DI 330)
                (ashift:DI (reg:DI 330)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 416 415 417 24 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg:DI 330)
                    (reg:DI 178 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 417 416 418 24 (parallel [
            (set (reg:DI 331)
                (ashift:DI (reg:DI 330)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 513 {*ashldi3_1}
     (nil))
(insn 418 417 419 24 (set (reg:DI 330)
        (reg:DI 331)) mSector.c:248 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 419 418 420 24 (set (reg:DI 179 [ D.5026 ])
        (reg:DI 330)) mSector.c:248 87 {*movdi_internal_rex64}
     (nil))
(insn 420 419 421 24 (parallel [
            (set (reg/f:DI 180 [ D.5025 ])
                (plus:DI (reg/f:DI 177 [ D.5025 ])
                    (reg:DI 179 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:248 274 {*adddi_1}
     (nil))
(insn 421 420 423 24 (set (reg:SI 181 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 180 [ D.5025 ])
                (const_int 4 [0x4])) [0 _137->n_nvp+0 S4 A32])) mSector.c:248 89 {*movsi_internal}
     (nil))
(insn 423 421 424 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 181 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:248 7 {*cmpsi_1}
     (nil))
(jump_insn 424 423 425 24 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) mSector.c:248 612 {*jcc_1}
     (nil)
 -> 422)
;;  succ:       20
;;              25 (FALLTHRU)

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              22 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 425 424 426 25 104 "" [1 uses])
(note 426 425 427 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 25 (set (reg/f:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 428 427 429 25 (set (reg/f:DI 211 [ D.5025 ])
        (mem/f:DI (reg/f:DI 332) [0 *f_9(D)+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 429 428 430 25 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 430 429 431 25 (set (reg:DI 212 [ D.5026 ])
        (sign_extend:DI (reg:SI 333))) mSector.c:252 149 {*extendsidi2_rex64}
     (nil))
(insn 431 430 432 25 (set (reg:DI 334)
        (reg:DI 212 [ D.5026 ])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 432 431 433 25 (parallel [
            (set (reg:DI 334)
                (ashift:DI (reg:DI 334)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 433 432 434 25 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg:DI 334)
                    (reg:DI 212 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 434 433 435 25 (parallel [
            (set (reg:DI 335)
                (ashift:DI (reg:DI 334)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 435 434 436 25 (set (reg:DI 334)
        (reg:DI 335)) mSector.c:252 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 436 435 437 25 (set (reg:DI 213 [ D.5026 ])
        (reg:DI 334)) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 437 436 438 25 (parallel [
            (set (reg/f:DI 214 [ D.5025 ])
                (plus:DI (reg/f:DI 211 [ D.5025 ])
                    (reg:DI 213 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (nil))
(insn 438 437 439 25 (set (reg:SI 215 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 214 [ D.5025 ])
                (const_int 4 [0x4])) [0 _172->n_nvp+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 439 438 440 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) mSector.c:252 7 {*cmpsi_1}
     (nil))
(jump_insn 440 439 441 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) mSector.c:252 612 {*jcc_1}
     (nil)
 -> 456)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 441 440 442 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 26 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 443 442 444 26 (set (reg/f:DI 216 [ D.5025 ])
        (mem/f:DI (reg/f:DI 336) [0 *f_9(D)+0 S8 A64])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 444 443 445 26 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 445 444 446 26 (set (reg:DI 217 [ D.5026 ])
        (sign_extend:DI (reg:SI 337))) mSector.c:252 149 {*extendsidi2_rex64}
     (nil))
(insn 446 445 447 26 (set (reg:DI 338)
        (reg:DI 217 [ D.5026 ])) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 447 446 448 26 (parallel [
            (set (reg:DI 338)
                (ashift:DI (reg:DI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 448 447 449 26 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg:DI 338)
                    (reg:DI 217 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 449 448 450 26 (parallel [
            (set (reg:DI 339)
                (ashift:DI (reg:DI 338)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 513 {*ashldi3_1}
     (nil))
(insn 450 449 451 26 (set (reg:DI 338)
        (reg:DI 339)) mSector.c:252 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 217 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 451 450 452 26 (set (reg:DI 218 [ D.5026 ])
        (reg:DI 338)) mSector.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 452 451 453 26 (parallel [
            (set (reg/f:DI 219 [ D.5025 ])
                (plus:DI (reg/f:DI 216 [ D.5025 ])
                    (reg:DI 218 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 274 {*adddi_1}
     (nil))
(insn 453 452 454 26 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) mSector.c:252 89 {*movsi_internal}
     (nil))
(insn 454 453 455 26 (parallel [
            (set (reg:SI 220 [ D.5024 ])
                (plus:SI (reg:SI 340)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:252 273 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 455 454 456 26 (set (mem/j:SI (plus:DI (reg/f:DI 219 [ D.5025 ])
                (const_int 116 [0x74])) [0 _177->bound+4 S4 A32])
        (reg:SI 220 [ D.5024 ])) mSector.c:252 89 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 456 455 457 27 106 "" [1 uses])
(note 457 456 458 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 27 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 459 458 460 27 (set (reg/f:DI 221 [ D.5025 ])
        (mem/f:DI (reg/f:DI 341) [0 *f_9(D)+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 460 459 461 27 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 461 460 462 27 (set (reg:DI 222 [ D.5026 ])
        (sign_extend:DI (reg:SI 342))) mSector.c:255 149 {*extendsidi2_rex64}
     (nil))
(insn 462 461 463 27 (set (reg:DI 343)
        (reg:DI 222 [ D.5026 ])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 463 462 464 27 (parallel [
            (set (reg:DI 343)
                (ashift:DI (reg:DI 343)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 464 463 465 27 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg:DI 343)
                    (reg:DI 222 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 465 464 466 27 (parallel [
            (set (reg:DI 344)
                (ashift:DI (reg:DI 343)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 466 465 467 27 (set (reg:DI 343)
        (reg:DI 344)) mSector.c:255 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 222 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 467 466 468 27 (set (reg:DI 223 [ D.5026 ])
        (reg:DI 343)) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 468 467 469 27 (parallel [
            (set (reg/f:DI 224 [ D.5025 ])
                (plus:DI (reg/f:DI 221 [ D.5025 ])
                    (reg:DI 223 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (nil))
(insn 469 468 470 27 (set (reg:SI 225 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 224 [ D.5025 ])
                (const_int 112 [0x70])) [0 _182->bound+0 S4 A128])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 470 469 471 27 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 471 470 472 27 (set (reg/f:DI 226 [ D.5025 ])
        (mem/f:DI (reg/f:DI 345) [0 *f_9(D)+0 S8 A64])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 472 471 473 27 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 473 472 474 27 (set (reg:DI 227 [ D.5026 ])
        (sign_extend:DI (reg:SI 346))) mSector.c:255 149 {*extendsidi2_rex64}
     (nil))
(insn 474 473 475 27 (set (reg:DI 347)
        (reg:DI 227 [ D.5026 ])) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 475 474 476 27 (parallel [
            (set (reg:DI 347)
                (ashift:DI (reg:DI 347)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 476 475 477 27 (parallel [
            (set (reg:DI 347)
                (plus:DI (reg:DI 347)
                    (reg:DI 227 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 477 476 478 27 (parallel [
            (set (reg:DI 348)
                (ashift:DI (reg:DI 347)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 513 {*ashldi3_1}
     (nil))
(insn 478 477 479 27 (set (reg:DI 347)
        (reg:DI 348)) mSector.c:255 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 479 478 480 27 (set (reg:DI 228 [ D.5026 ])
        (reg:DI 347)) mSector.c:255 87 {*movdi_internal_rex64}
     (nil))
(insn 480 479 481 27 (parallel [
            (set (reg/f:DI 229 [ D.5025 ])
                (plus:DI (reg/f:DI 226 [ D.5025 ])
                    (reg:DI 228 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:255 274 {*adddi_1}
     (nil))
(insn 481 480 482 27 (set (reg:SI 230 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 229 [ D.5025 ])
                (const_int 116 [0x74])) [0 _187->bound+4 S4 A32])) mSector.c:255 89 {*movsi_internal}
     (nil))
(insn 482 481 483 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 225 [ D.5024 ])
            (reg:SI 230 [ D.5024 ]))) mSector.c:255 7 {*cmpsi_1}
     (nil))
(jump_insn 483 482 484 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mSector.c:255 612 {*jcc_1}
     (nil)
 -> 512)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 484 483 485 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f44d28a4850 *.LC14>)) mSector.c:256 87 {*movdi_internal_rex64}
     (nil))
(call_insn 486 485 487 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:256 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 28 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 488 487 489 28 (set (reg/f:DI 231 [ D.5025 ])
        (mem/f:DI (reg/f:DI 349) [0 *f_9(D)+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 489 488 490 28 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (nil))
(insn 490 489 491 28 (set (reg:DI 232 [ D.5026 ])
        (sign_extend:DI (reg:SI 350))) mSector.c:257 149 {*extendsidi2_rex64}
     (nil))
(insn 491 490 492 28 (set (reg:DI 351)
        (reg:DI 232 [ D.5026 ])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 492 491 493 28 (parallel [
            (set (reg:DI 351)
                (ashift:DI (reg:DI 351)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 493 492 494 28 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg:DI 351)
                    (reg:DI 232 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 494 493 495 28 (parallel [
            (set (reg:DI 352)
                (ashift:DI (reg:DI 351)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 495 494 496 28 (set (reg:DI 351)
        (reg:DI 352)) mSector.c:257 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 496 495 497 28 (set (reg:DI 233 [ D.5026 ])
        (reg:DI 351)) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 497 496 498 28 (parallel [
            (set (reg/f:DI 234 [ D.5025 ])
                (plus:DI (reg/f:DI 231 [ D.5025 ])
                    (reg:DI 233 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (nil))
(insn 498 497 499 28 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 499 498 500 28 (set (reg/f:DI 235 [ D.5025 ])
        (mem/f:DI (reg/f:DI 353) [0 *f_9(D)+0 S8 A64])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 500 499 501 28 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (nil))
(insn 501 500 502 28 (set (reg:DI 236 [ D.5026 ])
        (sign_extend:DI (reg:SI 354))) mSector.c:257 149 {*extendsidi2_rex64}
     (nil))
(insn 502 501 503 28 (set (reg:DI 355)
        (reg:DI 236 [ D.5026 ])) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 503 502 504 28 (parallel [
            (set (reg:DI 355)
                (ashift:DI (reg:DI 355)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 504 503 505 28 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg:DI 355)
                    (reg:DI 236 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 505 504 506 28 (parallel [
            (set (reg:DI 356)
                (ashift:DI (reg:DI 355)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 513 {*ashldi3_1}
     (nil))
(insn 506 505 507 28 (set (reg:DI 355)
        (reg:DI 356)) mSector.c:257 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.5026 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 507 506 508 28 (set (reg:DI 237 [ D.5026 ])
        (reg:DI 355)) mSector.c:257 87 {*movdi_internal_rex64}
     (nil))
(insn 508 507 509 28 (parallel [
            (set (reg/f:DI 238 [ D.5025 ])
                (plus:DI (reg/f:DI 235 [ D.5025 ])
                    (reg:DI 237 [ D.5026 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 274 {*adddi_1}
     (nil))
(insn 509 508 510 28 (set (reg:SI 239 [ D.5024 ])
        (mem/j:SI (plus:DI (reg/f:DI 238 [ D.5025 ])
                (const_int 116 [0x74])) [0 _196->bound+4 S4 A32])) mSector.c:257 89 {*movsi_internal}
     (nil))
(insn 510 509 511 28 (parallel [
            (set (reg:SI 240 [ D.5024 ])
                (plus:SI (reg:SI 239 [ D.5024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:257 273 {*addsi_1}
     (nil))
(insn 511 510 512 28 (set (mem/j:SI (plus:DI (reg/f:DI 234 [ D.5025 ])
                (const_int 116 [0x74])) [0 _192->bound+4 S4 A32])
        (reg:SI 240 [ D.5024 ])) mSector.c:257 89 {*movsi_internal}
     (nil))
;;  succ:       29 (FALLTHRU)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;;              27
;;              18 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 512 511 513 29 101 "" [2 uses])
(note 513 512 514 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:225 273 {*addsi_1}
     (nil))
;;  succ:       30 (FALLTHRU,DFS_BACK)

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 515 514 516 30 88 "" [1 uses])
(note 516 515 517 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 30 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 Nflight+0 S8 A64])) mSector.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 518 517 520 30 (set (reg:SI 59 [ D.5024 ])
        (mem:SI (reg/f:DI 357) [0 *Nflight_7(D)+0 S4 A32])) mSector.c:225 89 {*movsi_internal}
     (nil))
(insn 520 518 521 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) mSector.c:225 7 {*cmpsi_1}
     (nil))
(jump_insn 521 520 522 30 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) mSector.c:225 612 {*jcc_1}
     (nil)
 -> 519)
;;  succ:       3
;;              31 (FALLTHRU)

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 522 521 523 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 526 31 (set (reg:SI 241 [ D.5024 ])
        (const_int 1 [0x1])) mSector.c:262 89 {*movsi_internal}
     (nil))
(insn 526 523 530 31 (set (reg:SI 242 [ <retval> ])
        (reg:SI 241 [ D.5024 ])) mSector.c:262 89 {*movsi_internal}
     (nil))
(insn 530 526 533 31 (set (reg/i:SI 0 ax)
        (reg:SI 242 [ <retval> ])) mSector.c:263 89 {*movsi_internal}
     (nil))
(insn 533 530 0 31 (use (reg/i:SI 0 ax)) mSector.c:263 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function is_on_bound (is_on_bound, funcdef_no=14, decl_uid=1900, cgraph_uid=14)

starting the processing of deferred insns
ending the processing of deferred insns


is_on_bound

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={10d,2u} r18={1d} r19={1d} r20={1d,21u,3e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u,1e} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u,1e} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} 
;;    total ref usage 176{96d,75u,5e} in 37{36 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mSector.c:265 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
        (reg:DI 4 si [ bound ])) mSector.c:265 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
        (reg:SI 1 dx [ N ])) mSector.c:265 89 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 61 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:267 89 {*movsi_internal}
     (nil))
(jump_insn 61 8 62 2 (set (pc)
        (label_ref 40)) mSector.c:267 -1
     (nil)
 -> 40)
;;  succ:       6 [100.0%] 

(barrier 62 61 44)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 44 62 11 3 114 "" [1 uses])
(note 11 44 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 72)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 61 [ D.5034 ])
        (sign_extend:DI (reg:SI 72))) mSector.c:267 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 62 [ D.5034 ])
                (plus:DI (reg:DI 61 [ D.5034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:DI 63 [ D.5034 ])
                (ashift:DI (reg:DI 62 [ D.5034 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 513 {*ashldi3_1}
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg/f:DI 64 [ D.5035 ])
                (plus:DI (reg:DI 63 [ D.5034 ])
                    (reg/f:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 63 [ D.5034 ]))
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 65 [ D.5036 ])
        (mem/f:DI (reg/f:DI 64 [ D.5035 ]) [0 *_10+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 66 [ D.5037 ])
        (sign_extend:DI (reg:SI 74))) mSector.c:267 149 {*extendsidi2_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg:DI 67 [ D.5037 ])
                (ashift:DI (reg:DI 66 [ D.5037 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 513 {*ashldi3_1}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg/f:DI 68 [ D.5035 ])
                (plus:DI (reg:DI 67 [ D.5037 ])
                    (reg/f:DI 75)))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 bound+0 S8 A64])
            (reg:DI 67 [ D.5037 ]))
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 69 [ D.5036 ])
        (mem/f:DI (reg/f:DI 68 [ D.5035 ]) [0 *_14+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (reg/f:DI 65 [ D.5036 ])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 69 [ D.5036 ])) mSector.c:267 87 {*movdi_internal_rex64}
     (nil))
(call_insn 29 28 30 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x41]  <function_decl 0x7f44d29fc100 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mSector.c:267 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 3 (set (reg:SI 70 [ D.5033 ])
        (reg:SI 0 ax)) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.5033 ])
            (const_int 0 [0]))) mSector.c:267 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) mSector.c:267 612 {*jcc_1}
     (nil)
 -> 37)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 63 4 (set (reg:SI 59 [ D.5033 ])
        (const_int 1 [0x1])) mSector.c:267 89 {*movsi_internal}
     (nil))
(jump_insn 63 34 64 4 (set (pc)
        (label_ref 49)) mSector.c:267 -1
     (nil)
 -> 49)
;;  succ:       8 [100.0%] 

(barrier 64 63 37)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 37 64 38 5 112 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 40 39 41 6 111 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])) mSector.c:267 89 {*movsi_internal}
     (nil))
(insn 43 42 45 6 (parallel [
            (set (reg:SI 60 [ D.5033 ])
                (plus:SI (reg:SI 77)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:267 273 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 N+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 45 43 46 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 60 [ D.5033 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) mSector.c:267 7 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) mSector.c:267 612 {*jcc_1}
     (nil)
 -> 44)
;;  succ:       3
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:SI 59 [ D.5033 ])
        (const_int 0 [0])) mSector.c:268 89 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 49 48 50 8 113 "" [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 55 8 (set (reg:SI 71 [ <retval> ])
        (reg:SI 59 [ D.5033 ])) 89 {*movsi_internal}
     (nil))
(insn 55 51 58 8 (set (reg/i:SI 0 ax)
        (reg:SI 71 [ <retval> ])) mSector.c:269 89 {*movsi_internal}
     (nil))
(insn 58 55 0 8 (use (reg/i:SI 0 ax)) mSector.c:269 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _alloc_shock (_alloc_shock, funcdef_no=15, decl_uid=4116, cgraph_uid=15)

changing bb of uid 44
  unscanned insn
changing bb of uid 46
  unscanned insn
changing bb of uid 45
  unscanned insn
changing bb of uid 35
  from 2 to 4
changing bb of uid 38
  from 2 to 4
changing bb of uid 47
  unscanned insn
changing bb of uid 35
  from 4 to 5
changing bb of uid 38
  from 4 to 5
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
scanning new insn with uid = 48.
scanning new insn with uid = 49.
scanning new insn with uid = 50.
scanning new insn with uid = 51.


try_optimize_cfg iteration 1

Merging block 3 into block 2...
deleting insn with uid = 4.
changing bb of uid 2
  from 3 to 2
changing bb of uid 3
changing bb of uid 6
  from 3 to 2
changing bb of uid 41
  from 3 to 2
changing bb of uid 8
  from 3 to 2
changing bb of uid 9
  from 3 to 2
changing bb of uid 10
  from 3 to 2
changing bb of uid 11
  from 3 to 2
changing bb of uid 12
  from 3 to 2
changing bb of uid 13
  from 3 to 2
changing bb of uid 14
  from 3 to 2
changing bb of uid 42
  from 3 to 2
changing bb of uid 16
  from 3 to 2
changing bb of uid 48
  from 3 to 2
changing bb of uid 49
  from 3 to 2
changing bb of uid 50
  from 3 to 2
changing bb of uid 51
  from 3 to 2
changing bb of uid 43
  from 3 to 2
changing bb of uid 18
  from 3 to 2
changing bb of uid 19
  from 3 to 2
changing bb of uid 20
  from 3 to 2
changing bb of uid 21
  from 3 to 2
changing bb of uid 22
  from 3 to 2
changing bb of uid 23
  from 3 to 2
changing bb of uid 24
  from 3 to 2
changing bb of uid 25
  from 3 to 2
changing bb of uid 26
  from 3 to 2
changing bb of uid 27
  from 3 to 2
changing bb of uid 28
  from 3 to 2
changing bb of uid 31
  from 3 to 2
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
deleting insn with uid = 46.
changing bb of uid 45
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
deleting insn with uid = 47.
changing bb of uid 35
  from 5 to 2
changing bb of uid 38
  from 5 to 2
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

starting the processing of deferred insns
ending the processing of deferred insns


_alloc_shock

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={2d} r18={1d} r19={1d,1u} r20={1d,14u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r79={2d,2u} 
;;    total ref usage 140{88d,52u,0e} in 31{30 regular + 1 call} insns.
(note 1 0 44 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 44 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 44 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])
        (reg:DI 5 di [ shock ])) mSector.c:271 87 {*movdi_internal_rex64}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 41 2 (set (reg:SI 59 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 conf.nsim+0 S4 A128])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 41 6 8 2 (parallel [
            (set (reg:XF 60 [ D.5039 ])
                (float:XF (reg:SI 59 [ D.5038 ])))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S4 A32]))
        ]) mSector.c:272 250 {*floatsixf2_i387_with_temp}
     (nil))
(insn 8 41 9 2 (set (reg:XF 61 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 176 [0xb0])) [0 conf.f_lvl+16 S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 62 [ D.5039 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 160 [0xa0])) [0 conf.f_lvl+0 S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 63 [ D.5039 ])
        (minus:XF (reg:XF 61 [ D.5039 ])
            (reg:XF 62 [ D.5039 ]))) mSector.c:272 800 {*fop_xf_1_i387}
     (nil))
(insn 11 10 12 2 (set (reg:XF 74)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mSector.c:272 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 12 11 13 2 (set (reg:XF 64 [ D.5039 ])
        (div:XF (reg:XF 63 [ D.5039 ])
            (reg:XF 74))) mSector.c:272 800 {*fop_xf_1_i387}
     (nil))
(insn 13 12 14 2 (set (reg:XF 65 [ D.5039 ])
        (mult:XF (reg:XF 60 [ D.5039 ])
            (reg:XF 64 [ D.5039 ]))) mSector.c:272 799 {*fop_xf_comm_i387}
     (nil))
(insn 14 13 42 2 (set (reg:SI 66 [ D.5038 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 116 [0x74])) [0 conf.Nm_shock+0 S4 A32])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 42 14 16 2 (parallel [
            (set (reg:XF 67 [ D.5039 ])
                (float:XF (reg:SI 66 [ D.5038 ])))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S4 A32]))
        ]) mSector.c:272 250 {*floatsixf2_i387_with_temp}
     (nil))
(insn 16 42 48 2 (set (reg:XF 68 [ D.5039 ])
        (mult:XF (reg:XF 65 [ D.5039 ])
            (reg:XF 67 [ D.5039 ]))) mSector.c:272 799 {*fop_xf_comm_i387}
     (nil))
(insn 48 16 49 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mSector.c:272 -1
     (nil))
(insn 49 48 50 2 (set (reg:HI 79)
        (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0  S2 A16])) mSector.c:272 -1
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg:HI 79)
                (ior:HI (reg:HI 79)
                    (const_int 3072 [0xc00])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:272 -1
     (nil))
(insn 51 50 43 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0  S2 A16])
        (reg:HI 79)) mSector.c:272 -1
     (nil))
(insn 43 51 18 2 (parallel [
            (set (reg:SI 69 [ D.5038 ])
                (fix:SI (reg:XF 68 [ D.5039 ])))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -14 [0xfffffffffffffff2])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S2 A16]))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S4 A32]))
        ]) mSector.c:272 198 {fix_truncsi_i387_with_temp}
     (nil))
(insn 18 43 19 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:272 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (mem/j:SI (reg/f:DI 75) [0 shock_12(D)->Nshock+0 S4 A64])
        (reg:SI 69 [ D.5038 ])) mSector.c:272 89 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:SI 70 [ D.5038 ])
        (mem/j:SI (reg/f:DI 76) [0 shock_12(D)->Nshock+0 S4 A64])) mSector.c:273 89 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (const_int 6 [0x6])) mSector.c:273 89 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 70 [ D.5038 ])) mSector.c:273 89 {*movsi_internal}
     (nil))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:273 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 2 (set (reg/f:DI 71 [ D.5040 ])
        (reg:DI 0 ax)) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 shock+0 S8 A64])) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 shock_12(D)->shock+0 S8 A64])
        (reg/f:DI 71 [ D.5040 ])) mSector.c:273 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 31 2 (set (reg:SI 72 [ D.5038 ])
        (const_int 1 [0x1])) mSector.c:274 89 {*movsi_internal}
     (nil))
(insn 31 28 45 2 (set (reg:SI 73 [ <retval> ])
        (reg:SI 72 [ D.5038 ])) mSector.c:274 89 {*movsi_internal}
     (nil))
(note 45 31 35 2 NOTE_INSN_DELETED)
(insn 35 45 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 73 [ <retval> ])) mSector.c:275 89 {*movsi_internal}
     (nil))
(insn 38 35 0 2 (use (reg/i:SI 0 ax)) mSector.c:275 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _set_cross_timeM1 (_set_cross_timeM1, funcdef_no=16, decl_uid=4120, cgraph_uid=16)

starting the processing of deferred insns
ending the processing of deferred insns


_set_cross_timeM1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={26d,1u} r20={1d,22u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,2u,2e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u,2e} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,2u,2e} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,2u,2e} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,2u,2e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={4d,4u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={4d,4u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={4d,4u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={4d,4u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={4d,4u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 244{117d,117u,10e} in 81{81 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:277 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mSector.c:277 89 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 101 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:279 89 {*movsi_internal}
     (nil))
(jump_insn 101 7 102 2 (set (pc)
        (label_ref 81)) mSector.c:279 -1
     (nil)
 -> 81)
;;  succ:       4 [100.0%] 

(barrier 102 101 83)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 83 102 10 3 119 "" [1 uses])
(note 10 83 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 59 [ D.5041 ])
        (mem/f:DI (reg/f:DI 94) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 3 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 60 [ D.5042 ])
        (sign_extend:DI (reg:SI 95))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:DI 96)
        (reg:DI 60 [ D.5042 ])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 60 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 19 18 20 3 (set (reg:DI 96)
        (reg:DI 97)) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 3 (set (reg:DI 61 [ D.5042 ])
        (reg:DI 96)) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 62 [ D.5041 ])
                (plus:DI (reg/f:DI 59 [ D.5041 ])
                    (reg:DI 61 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 63 [ D.5041 ])
        (mem/f:DI (reg/f:DI 98) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 64 [ D.5042 ])
        (sign_extend:DI (reg:SI 99))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 26 25 27 3 (set (reg:DI 100)
        (reg:DI 64 [ D.5042 ])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (parallel [
            (set (reg:DI 100)
                (ashift:DI (reg:DI 100)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 100)
                    (reg:DI 64 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 30 29 31 3 (set (reg:DI 100)
        (reg:DI 101)) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 31 30 32 3 (set (reg:DI 65 [ D.5042 ])
        (reg:DI 100)) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 3 (parallel [
            (set (reg/f:DI 66 [ D.5041 ])
                (plus:DI (reg/f:DI 63 [ D.5041 ])
                    (reg:DI 65 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 67 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.5041 ])
                (const_int 16 [0x10])) [0 _12->time+0 S8 A128])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 3 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 68 [ D.5041 ])
        (mem/f:DI (reg/f:DI 102) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 69 [ D.5042 ])
        (sign_extend:DI (reg:SI 103))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 3 (set (reg:DI 104)
        (reg:DI 69 [ D.5042 ])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 3 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 104)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 40 39 41 3 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 104)
                    (reg:DI 69 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 41 40 42 3 (parallel [
            (set (reg:DI 105)
                (ashift:DI (reg:DI 104)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 42 41 43 3 (set (reg:DI 104)
        (reg:DI 105)) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 43 42 44 3 (set (reg:DI 70 [ D.5042 ])
        (reg:DI 104)) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 3 (parallel [
            (set (reg/f:DI 71 [ D.5041 ])
                (plus:DI (reg/f:DI 68 [ D.5041 ])
                    (reg:DI 70 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 45 44 46 3 (set (reg:SI 72 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 71 [ D.5041 ])
                (const_int 116 [0x74])) [0 _17->bound+4 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg:DI 73 [ D.5042 ])
        (sign_extend:DI (reg:SI 72 [ D.5044 ]))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 74 [ D.5042 ])
                (ashift:DI (reg:DI 73 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 48 47 49 3 (parallel [
            (set (reg/f:DI 75 [ D.5043 ])
                (plus:DI (reg/f:DI 67 [ D.5043 ])
                    (reg:DI 74 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 49 48 50 3 (set (reg:XF 76 [ D.5045 ])
        (mem:XF (reg/f:DI 75 [ D.5043 ]) [0 *_21+0 S16 A128])) mSector.c:279 131 {*movxf_internal_rex64}
     (nil))
(insn 50 49 51 3 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 3 (set (reg/f:DI 77 [ D.5041 ])
        (mem/f:DI (reg/f:DI 106) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 3 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (set (reg:DI 78 [ D.5042 ])
        (sign_extend:DI (reg:SI 107))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 55 3 (set (reg:DI 108)
        (reg:DI 78 [ D.5042 ])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 108)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 108)
                    (reg:DI 78 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 58 57 59 3 (set (reg:DI 108)
        (reg:DI 109)) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 78 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 59 58 60 3 (set (reg:DI 79 [ D.5042 ])
        (reg:DI 108)) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 3 (parallel [
            (set (reg/f:DI 80 [ D.5041 ])
                (plus:DI (reg/f:DI 77 [ D.5041 ])
                    (reg:DI 79 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 61 60 62 3 (set (reg/f:DI 81 [ D.5043 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80 [ D.5041 ])
                (const_int 16 [0x10])) [0 _26->time+0 S8 A128])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg/f:DI 82 [ D.5041 ])
        (mem/f:DI (reg/f:DI 110) [0 *f_4(D)+0 S8 A64])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 3 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 65 64 66 3 (set (reg:DI 83 [ D.5042 ])
        (sign_extend:DI (reg:SI 111))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 3 (set (reg:DI 112)
        (reg:DI 83 [ D.5042 ])) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 3 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 112)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 68 67 69 3 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 112)
                    (reg:DI 83 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 69 68 70 3 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 112)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 70 69 71 3 (set (reg:DI 112)
        (reg:DI 113)) mSector.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ D.5042 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 71 70 72 3 (set (reg:DI 84 [ D.5042 ])
        (reg:DI 112)) mSector.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 3 (parallel [
            (set (reg/f:DI 85 [ D.5041 ])
                (plus:DI (reg/f:DI 82 [ D.5041 ])
                    (reg:DI 84 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 73 72 74 3 (set (reg:SI 86 [ D.5044 ])
        (mem/j:SI (plus:DI (reg/f:DI 85 [ D.5041 ])
                (const_int 112 [0x70])) [0 _31->bound+0 S4 A128])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 74 73 75 3 (set (reg:DI 87 [ D.5042 ])
        (sign_extend:DI (reg:SI 86 [ D.5044 ]))) mSector.c:279 149 {*extendsidi2_rex64}
     (nil))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 88 [ D.5042 ])
                (ashift:DI (reg:DI 87 [ D.5042 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 513 {*ashldi3_1}
     (nil))
(insn 76 75 77 3 (parallel [
            (set (reg/f:DI 89 [ D.5043 ])
                (plus:DI (reg/f:DI 81 [ D.5043 ])
                    (reg:DI 88 [ D.5042 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 274 {*adddi_1}
     (nil))
(insn 77 76 78 3 (set (reg:XF 90 [ D.5045 ])
        (mem:XF (reg/f:DI 89 [ D.5043 ]) [0 *_35+0 S16 A128])) mSector.c:279 131 {*movxf_internal_rex64}
     (nil))
(insn 78 77 79 3 (set (reg:XF 91 [ D.5045 ])
        (minus:XF (reg:XF 76 [ D.5045 ])
            (reg:XF 90 [ D.5045 ]))) mSector.c:279 800 {*fop_xf_1_i387}
     (nil))
(insn 79 78 80 3 (set (mem/j:XF (plus:DI (reg/f:DI 62 [ D.5041 ])
                (const_int 128 [0x80])) [0 _8->delta_t+0 S16 A128])
        (reg:XF 91 [ D.5045 ])) mSector.c:279 131 {*movxf_internal_rex64}
     (nil))
(insn 80 79 81 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:279 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 81 80 82 4 118 "" [1 uses])
(note 82 81 84 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 4 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:279 89 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mSector.c:279 7 {*cmpsi_1}
     (nil))
(jump_insn 86 85 87 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) mSector.c:279 612 {*jcc_1}
     (nil)
 -> 83)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 87 86 88 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 91 5 (set (reg:SI 92 [ D.5044 ])
        (const_int 1 [0x1])) mSector.c:280 89 {*movsi_internal}
     (nil))
(insn 91 88 95 5 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.5044 ])) mSector.c:280 89 {*movsi_internal}
     (nil))
(insn 95 91 98 5 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) mSector.c:281 89 {*movsi_internal}
     (nil))
(insn 98 95 0 5 (use (reg/i:SI 0 ax)) mSector.c:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _alloc_flight_pos (_alloc_flight_pos, funcdef_no=17, decl_uid=4129, cgraph_uid=17)

starting the processing of deferred insns
ending the processing of deferred insns


_alloc_flight_pos

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={8d,1u} r18={1d} r19={1d} r20={1d,16u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,2u,2e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={4d,4u} r71={1d,1u} r72={1d,1u} r73={1d,1u} 
;;    total ref usage 152{91d,59u,2e} in 32{31 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mSector.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N_f+0 S4 A32])
        (reg:SI 4 si [ N_f ])) mSector.c:283 89 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 conf+0 S8 A64])
        (reg:DI 1 dx [ conf ])) mSector.c:283 87 {*movdi_internal_rex64}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mSector.c:285 89 {*movsi_internal}
     (nil))
(jump_insn 52 8 53 2 (set (pc)
        (label_ref 32)) mSector.c:285 -1
     (nil)
 -> 32)
;;  succ:       4 [100.0%] 

(barrier 53 52 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 34 53 11 3 123 "" [1 uses])
(note 11 34 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 f+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 59 [ D.5046 ])
        (mem/f:DI (reg/f:DI 68) [0 *f_4(D)+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 60 [ D.5047 ])
        (sign_extend:DI (reg:SI 69))) mSector.c:285 149 {*extendsidi2_rex64}
     (nil))
(insn 16 15 17 3 (set (reg:DI 70)
        (reg:DI 60 [ D.5047 ])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 513 {*ashldi3_1}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 60 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 513 {*ashldi3_1}
     (nil))
(insn 20 19 21 3 (set (reg:DI 70)
        (reg:DI 71)) mSector.c:285 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 60 [ D.5047 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 21 20 22 3 (set (reg:DI 61 [ D.5047 ])
        (reg:DI 70)) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 62 [ D.5046 ])
                (plus:DI (reg/f:DI 59 [ D.5046 ])
                    (reg:DI 61 [ D.5047 ])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 274 {*adddi_1}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 conf+0 S8 A64])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:SI 63 [ D.5048 ])
        (mem/j:SI (plus:DI (reg/f:DI 72)
                (const_int 192 [0xc0])) [0 conf_9(D)->t_w+0 S4 A128])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 64 [ D.5048 ])
                (ashift:SI (reg:SI 63 [ D.5048 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 512 {*ashlsi3_1}
     (nil))
(insn 26 25 27 3 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 5 di)
        (reg:SI 64 [ D.5048 ])) mSector.c:285 89 {*movsi_internal}
     (nil))
(call_insn 28 27 29 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f44d29f7600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mSector.c:285 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 3 (set (reg/f:DI 65 [ D.5049 ])
        (reg:DI 0 ax)) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 62 [ D.5046 ])
                (const_int 32 [0x20])) [0 _8->pos+0 S8 A128])
        (reg/f:DI 65 [ D.5049 ])) mSector.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mSector.c:285 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 32 31 33 4 122 "" [1 uses])
(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 4 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mSector.c:285 89 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 73)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N_f+0 S4 A32]))) mSector.c:285 7 {*cmpsi_1}
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) mSector.c:285 612 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 5 (set (reg:SI 66 [ D.5048 ])
        (const_int 1 [0x1])) mSector.c:286 89 {*movsi_internal}
     (nil))
(insn 42 39 46 5 (set (reg:SI 67 [ <retval> ])
        (reg:SI 66 [ D.5048 ])) mSector.c:286 89 {*movsi_internal}
     (nil))
(insn 46 42 49 5 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) mSector.c:287 89 {*movsi_internal}
     (nil))
(insn 49 46 0 5 (use (reg/i:SI 0 ax)) mSector.c:287 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function init_Sector (init_Sector, funcdef_no=18, decl_uid=1896, cgraph_uid=18)

starting the processing of deferred insns
ending the processing of deferred insns


init_Sector

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={11d,3u} r1={11d,2u} r2={10d,1u} r4={15d,6u} r5={19d,10u} r6={1d,2u} r7={1d,15u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,1u} r17={9d} r18={9d} r19={9d} r20={1d,22u} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d,1u} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={2d,2u} r73={2d,2u} r74={2d,3u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={2d,2u} r81={2d,2u} r82={2d,3u} r83={1d,1u} 
;;    total ref usage 558{462d,96u,0e} in 59{50 regular + 9 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mSector.c:289 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])
        (reg:DI 4 si [ Nflight ])) mSector.c:289 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])
        (reg:DI 1 dx [ config ])) mSector.c:289 87 {*movdi_internal_rex64}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])
        (reg:DI 2 cx [ shock ])) mSector.c:289 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])
        (reg:DI 37 r8 [ input_ABM ])) mSector.c:289 87 {*movdi_internal_rex64}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:291 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 63)) mSector.c:291 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f44d24df4c0 *.LC16>)) mSector.c:291 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_boundary") [flags 0x41]  <function_decl 0x7f44d29f7200 get_boundary>) [0 get_boundary S1 A8])
            (const_int 0 [0]))) mSector.c:291 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:292 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 64)) mSector.c:292 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f44d24df558 *.LC17>)) mSector.c:292 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_configuration") [flags 0x41]  <function_decl 0x7f44d29f7300 get_configuration>) [0 get_configuration S1 A8])
            (const_int 0 [0]))) mSector.c:292 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f44d24df5f0 *.LC18>)) mSector.c:294 87 {*movdi_internal_rex64}
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f44d2952600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) mSector.c:294 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:295 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 65)) mSector.c:295 87 {*movdi_internal_rex64}
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("generate_temporary_point") [flags 0x3]  <function_decl 0x7f44d29fcf00 generate_temporary_point>) [0 generate_temporary_point S1 A8])
            (const_int 0 [0]))) mSector.c:295 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 input_ABM+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 66)) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 67)) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_M1") [flags 0x41]  <function_decl 0x7f44d29f7100 get_M1>) [0 get_M1 S1 A8])
            (const_int 0 [0]))) mSector.c:297 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 28 27 29 2 (set (reg:SI 59 [ D.5050 ])
        (reg:SI 0 ax)) mSector.c:297 89 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:297 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 68) [0 *Nflight_5(D)+0 S4 A32])
        (reg:SI 59 [ D.5050 ])) mSector.c:297 89 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:DI 72)
        (reg/f:DI 7 sp)) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 73)
        (reg/f:DI 71)) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:DI 74)
        (const_int 38 [0x26])) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 74)
                (const_int 0 [0]))
            (set (reg:DI 72)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 72)))
            (set (reg:DI 73)
                (plus:DI (ashift:DI (reg:DI 74)
                        (const_int 3 [0x3]))
                    (reg:DI 73)))
            (set (mem:BLK (reg:DI 72) [0  S304 A128])
                (mem:BLK (reg:DI 73) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 74))
        ]) mSector.c:299 901 {*rep_movdi_rex64}
     (nil))
(insn 38 37 39 2 (set (reg:DI 4 si)
        (reg:DI 69)) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg:DI 70)) mSector.c:299 87 {*movdi_internal_rex64}
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("modify_traj_intersect_bound") [flags 0x3]  <function_decl 0x7f44d2a01200 modify_traj_intersect_bound>) [0 modify_traj_intersect_bound S1 A8])
            (const_int 304 [0x130]))) mSector.c:299 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
                (nil)))))
(insn 41 40 42 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 Nflight+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:SI 60 [ D.5050 ])
        (mem:SI (reg/f:DI 75) [0 *Nflight_5(D)+0 S4 A32])) mSector.c:309 89 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 flight+0 S8 A64])) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 1 dx)
        (reg:DI 76)) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (set (reg:SI 4 si)
        (reg:SI 60 [ D.5050 ])) mSector.c:309 89 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg:DI 77)) mSector.c:309 87 {*movdi_internal_rex64}
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_flight_pos") [flags 0x3]  <function_decl 0x7f44d278ca00 _alloc_flight_pos>) [0 _alloc_flight_pos S1 A8])
            (const_int 0 [0]))) mSector.c:309 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 2 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 shock+0 S8 A64])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (reg:DI 80)
        (reg/f:DI 7 sp)) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 81)
        (reg/f:DI 79)) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (reg:DI 82)
        (const_int 38 [0x26])) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 82)
                (const_int 0 [0]))
            (set (reg:DI 80)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 80)))
            (set (reg:DI 81)
                (plus:DI (ashift:DI (reg:DI 82)
                        (const_int 3 [0x3]))
                    (reg:DI 81)))
            (set (mem:BLK (reg:DI 80) [0  S304 A128])
                (mem:BLK (reg:DI 81) [0 *config_1(D)+0 S304 A128]))
            (use (reg:DI 82))
        ]) mSector.c:311 901 {*rep_movdi_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 78)) mSector.c:311 87 {*movdi_internal_rex64}
     (nil))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_alloc_shock") [flags 0x3]  <function_decl 0x7f44d278c800 _alloc_shock>) [0 _alloc_shock S1 A8])
            (const_int 304 [0x130]))) mSector.c:311 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
            (nil))))
(insn 57 56 58 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 config+0 S8 A64])) mSector.c:312 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 83)) mSector.c:312 87 {*movdi_internal_rex64}
     (nil))
(call_insn 59 58 60 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_temp_shock") [flags 0x41]  <function_decl 0x7f44d29f7400 get_temp_shock>) [0 get_temp_shock S1 A8])
            (const_int 0 [0]))) mSector.c:312 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 63 2 (set (reg:SI 61 [ D.5050 ])
        (const_int 1 [0x1])) mSector.c:315 89 {*movsi_internal}
     (nil))
(insn 63 60 67 2 (set (reg:SI 62 [ <retval> ])
        (reg:SI 61 [ D.5050 ])) mSector.c:315 89 {*movsi_internal}
     (nil))
(insn 67 63 70 2 (set (reg/i:SI 0 ax)
        (reg:SI 62 [ <retval> ])) mSector.c:316 89 {*movsi_internal}
     (nil))
(insn 70 67 0 2 (use (reg/i:SI 0 ax)) mSector.c:316 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

