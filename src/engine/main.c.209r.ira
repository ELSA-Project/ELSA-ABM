
;; Function main (main, funcdef_no=2, decl_uid=9697, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best CREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best CREG, allocno GENERAL_REGS
    r84: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r84,l0) best DREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r82,l0) best DREG, allocno GENERAL_REGS
    r81: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r81,l0) best DIREG, allocno GENERAL_REGS
    r80: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r80,l0) best SIREG, allocno GENERAL_REGS
    r79: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r79,l0) best DREG, allocno GENERAL_REGS
    r78: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r78,l0) best CREG, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r72,l0) best AREG, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r70,l0) best SIREG, allocno GENERAL_REGS
    r69: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r69,l0) best DREG, allocno GENERAL_REGS
    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best DIREG, allocno GENERAL_REGS
    r67: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r67,l0) best SIREG, allocno GENERAL_REGS
    r66: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r66,l0) best DREG, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r65,l0) best SIREG, allocno GENERAL_REGS
    r64: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r64,l0) best SIREG, allocno GENERAL_REGS
    r63: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r63,l0) best DIREG, allocno GENERAL_REGS
    r62: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r62,l0) best SIREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r72,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r69,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r66,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r90,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r85,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r84,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r89,l0) costs: AREG:4 DREG:4 CREG:0 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a18(r87,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:0 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a19(r88,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:0 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:12
  a20(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a21(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r82,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r79,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r78,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a33(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a34(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a35(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7

   Insn 107(l0): point = 0
   Insn 104(l0): point = 3
   Insn 103(l0): point = 6
   Insn 102(l0): point = 8
   Insn 99(l0): point = 10
   Insn 95(l0): point = 12
   Insn 92(l0): point = 14
   Insn 84(l0): point = 17
   Insn 83(l0): point = 19
   Insn 82(l0): point = 21
   Insn 81(l0): point = 23
   Insn 80(l0): point = 25
   Insn 79(l0): point = 27
   Insn 78(l0): point = 29
   Insn 77(l0): point = 31
   Insn 76(l0): point = 33
   Insn 75(l0): point = 35
   Insn 74(l0): point = 37
   Insn 73(l0): point = 39
   Insn 72(l0): point = 41
   Insn 71(l0): point = 43
   Insn 70(l0): point = 45
   Insn 69(l0): point = 47
   Insn 68(l0): point = 49
   Insn 67(l0): point = 51
   Insn 66(l0): point = 53
   Insn 65(l0): point = 55
   Insn 64(l0): point = 57
   Insn 63(l0): point = 59
   Insn 62(l0): point = 61
   Insn 61(l0): point = 63
   Insn 60(l0): point = 65
   Insn 59(l0): point = 67
   Insn 58(l0): point = 69
   Insn 57(l0): point = 71
   Insn 56(l0): point = 73
   Insn 55(l0): point = 75
   Insn 54(l0): point = 77
   Insn 53(l0): point = 79
   Insn 52(l0): point = 81
   Insn 51(l0): point = 83
   Insn 50(l0): point = 85
   Insn 49(l0): point = 87
   Insn 48(l0): point = 89
   Insn 47(l0): point = 91
   Insn 46(l0): point = 93
   Insn 45(l0): point = 95
   Insn 44(l0): point = 97
   Insn 43(l0): point = 99
   Insn 42(l0): point = 101
   Insn 41(l0): point = 103
   Insn 40(l0): point = 105
   Insn 39(l0): point = 107
   Insn 38(l0): point = 109
   Insn 37(l0): point = 111
   Insn 36(l0): point = 113
   Insn 35(l0): point = 115
   Insn 90(l0): point = 118
   Insn 89(l0): point = 120
   Insn 87(l0): point = 122
   Insn 112(l0): point = 125
   Insn 31(l0): point = 127
   Insn 30(l0): point = 129
   Insn 29(l0): point = 131
   Insn 28(l0): point = 133
   Insn 27(l0): point = 135
   Insn 26(l0): point = 137
   Insn 25(l0): point = 139
   Insn 24(l0): point = 141
   Insn 23(l0): point = 143
   Insn 22(l0): point = 145
   Insn 21(l0): point = 147
   Insn 20(l0): point = 149
   Insn 19(l0): point = 151
   Insn 18(l0): point = 153
   Insn 17(l0): point = 155
   Insn 16(l0): point = 157
   Insn 15(l0): point = 159
   Insn 14(l0): point = 161
   Insn 13(l0): point = 163
   Insn 12(l0): point = 165
   Insn 11(l0): point = 167
   Insn 10(l0): point = 169
   Insn 9(l0): point = 171
   Insn 8(l0): point = 173
   Insn 5(l0): point = 175
   Insn 3(l0): point = 177
   Insn 2(l0): point = 179
 a0(r72): [11..12]
 a1(r71): [13..14]
 a2(r61): [121..122]
 a3(r94): [22..27]
 a4(r70): [24..29]
 a5(r69): [26..31]
 a6(r68): [36..45]
 a7(r67): [38..47]
 a8(r66): [40..49]
 a9(r93): [42..43]
 a10(r92): [54..59]
 a11(r91): [56..61]
 a12(r90): [58..63]
 a13(r86): [68..83]
 a14(r65): [70..89]
 a15(r85): [72..85]
 a16(r84): [74..87]
 a17(r89): [75..77]
 a18(r87): [75..81]
 a19(r88): [75..79]
 a20(r64): [98..99]
 a21(r83): [100..101]
 a22(r63): [106..113]
 a23(r62): [108..115]
 a24(r82): [110..111]
 a25(r81): [132..141]
 a26(r80): [134..143]
 a27(r79): [136..145]
 a28(r78): [138..147]
 a29(r77): [140..149]
 a30(r76): [152..153]
 a31(r75): [154..155]
 a32(r74): [158..159]
 a33(r73): [160..161]
 a34(r60): [166..167]
 a35(r59): [168..169]
Compressing live ranges: from 182 to 34 - 18%
Ranges after the compression:
 a0(r72): [0..1]
 a1(r71): [2..3]
 a2(r61): [18..19]
 a3(r94): [4..5]
 a4(r70): [4..5]
 a5(r69): [4..5]
 a6(r68): [6..7]
 a7(r67): [6..7]
 a8(r66): [6..7]
 a9(r93): [6..7]
 a10(r92): [8..9]
 a11(r91): [8..9]
 a12(r90): [8..9]
 a13(r86): [10..11]
 a14(r65): [10..11]
 a15(r85): [10..11]
 a16(r84): [10..11]
 a17(r89): [10..11]
 a18(r87): [10..11]
 a19(r88): [10..11]
 a20(r64): [12..13]
 a21(r83): [14..15]
 a22(r63): [16..17]
 a23(r62): [16..17]
 a24(r82): [16..17]
 a25(r81): [20..21]
 a26(r80): [20..21]
 a27(r79): [20..21]
 a28(r78): [20..21]
 a29(r77): [20..21]
 a30(r76): [22..23]
 a31(r75): [24..25]
 a32(r74): [26..27]
 a33(r73): [28..29]
 a34(r60): [30..31]
 a35(r59): [32..33]
  regions=1, blocks=8, points=34
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   35:r59  l0     0   34:r60  l0     0    2:r61  l0     0   23:r62  l0     2
   22:r63  l0     0   20:r64  l0     0   14:r65  l0    38    8:r66  l0     1
    7:r67  l0     4    6:r68  l0     0    5:r69  l0     1    4:r70  l0     2
    1:r71  l0     0    0:r72  l0     0   33:r73  l0     0   32:r74  l0     0
   31:r75  l0     0   30:r76  l0     0   29:r77  l0     5   28:r78  l0     2
   27:r79  l0     1   26:r80  l0     4   25:r81  l0     0   24:r82  l0     1
   21:r83  l0     0   16:r84  l0    40   15:r85  l0    39   13:r86  l0    37
   18:r87  l0     1   19:r88  l0     4   17:r89  l0     0   12:r90  l0     1
   11:r91  l0     2   10:r92  l0     0    9:r93  l0     2    3:r94  l0     0
+++Costs: overall -25, reg -25, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={13d,4u} r1={17d,6u} r2={14d,3u} r4={18d,8u} r5={20d,10u} r6={1d,7u} r7={1d,19u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,6u} r17={25d,2u} r18={10d} r19={10d} r20={1d,44u,1e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={12d,1u} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,2u} r88={2d,2u} r89={2d,3u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 692{541d,150u,1e} in 88{78 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 73 74 75 76 77 78 79 80 81
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -484 [0xfffffffffffffe1c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) main.c:12 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) main.c:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.9753+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) main.c:12 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 5 di)
        (const_int 0 [0])) main.c:13 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7fe0c1fdc500 time>) [0 time S1 A8])
            (const_int 0 [0]))) main.c:13 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 59 [ D.9750 ])
        (reg:DI 0 ax)) main.c:13 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 60 [ D.9751 ])
        (subreg:SI (reg:DI 59 [ D.9750 ]) 0)) main.c:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 59 [ D.9750 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 60 [ D.9751 ])) main.c:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ D.9751 ])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7fe0c1e6f700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) main.c:13 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 argv+0 S8 A64])) main.c:20 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 74)
        (mem/f:DI (plus:DI (reg/f:DI 73)
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_4(D) + 8B]+0 S8 A64])) main.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 input_ABM+0 S8 A64])
        (reg/f:DI 74)) main.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 argv+0 S8 A64])) main.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 76)
        (mem/f:DI (plus:DI (reg/f:DI 75)
                (const_int 16 [0x10])) [0 MEM[(char * *)argv_4(D) + 16B]+0 S8 A64])) main.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -440 [0xfffffffffffffe48])) [0 output_ABM+0 S8 A64])
        (reg/f:DI 76)) main.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 input_ABM+0 S8 A64])) main.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 80)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -472 [0xfffffffffffffe28])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 81)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) main.c:24 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (set (reg:DI 37 r8)
        (reg:DI 77)) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (reg:DI 78)) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (reg:DI 79)) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 79)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg:DI 80)) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 80)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg:DI 81)) main.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 81)
        (nil)))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_Sector") [flags 0x41]  <function_decl 0x7fe0c2194c00 init_Sector>) [0 init_Sector S1 A8])
            (const_int 0 [0]))) main.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 31 30 112 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])
        (const_int 0 [0])) main.c:29 89 {*movsi_internal}
     (nil))
(jump_insn 112 31 113 2 (set (pc)
        (label_ref 85)) main.c:29 650 {jump}
     (nil)
 -> 85)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 113 112 88)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 65 66 67 68 69 70 82 83 84 85 86 87 88 89 90 91 92 93 94
(code_label 88 113 34 3 3 "" [1 uses])
(note 34 88 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg:SI 62 [ Nflight.0 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 Nflight+0 S4 A64])) main.c:31 89 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg/f:DI 63 [ Flight.1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [0 Flight+0 S8 A128])) main.c:31 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 3 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -456 [0xfffffffffffffe38])))
            (clobber (reg:CC 17 flags))
        ]) main.c:31 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 3 (set (reg:DI 1 dx)
        (reg:DI 82)) main.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 4 si)
        (reg:SI 62 [ Nflight.0 ])) main.c:31 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ Nflight.0 ])
        (nil)))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (reg/f:DI 63 [ Flight.1 ])) main.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ Flight.1 ])
        (nil)))
(call_insn 41 40 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("copy_flight") [flags 0x41]  <function_decl 0x7fe0c219f900 copy_flight>) [0 copy_flight S1 A8])
            (const_int 0 [0]))) main.c:31 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 42 41 43 3 (set (reg:SI 83)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])) main.c:32 89 {*movsi_internal}
     (nil))
(insn 43 42 44 3 (parallel [
            (set (reg:SI 64 [ D.9752 ])
                (plus:SI (reg:SI 83)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) main.c:32 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 44 43 45 3 (set (reg:SI 4 si)
        (reg:SI 64 [ D.9752 ])) main.c:32 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 64 [ D.9752 ])
        (nil)))
(insn 45 44 46 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe0c1e08428 *.LC0>)) main.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) main.c:32 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe0c20edf00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) main.c:32 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 48 47 49 3 (set (reg:SI 65 [ Nflight.2 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 Nflight+0 S4 A64])) main.c:33 89 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 shock+0 S4 A128])) main.c:33 89 {*movsi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [0 shock+8 S8 A64])) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -456 [0xfffffffffffffe38])))
            (clobber (reg:CC 17 flags))
        ]) main.c:33 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 3 (set (reg:DI 87)
        (reg/f:DI 7 sp)) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 3 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) main.c:33 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 3 (set (reg:DI 89)
        (const_int 38 [0x26])) main.c:33 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg:DI 89)
                (const_int 0 [0]))
            (set (reg:DI 87)
                (plus:DI (ashift:DI (reg:DI 89)
                        (const_int 3 [0x3]))
                    (reg:DI 87)))
            (set (reg:DI 88)
                (plus:DI (ashift:DI (reg:DI 89)
                        (const_int 3 [0x3]))
                    (reg:DI 88)))
            (set (mem:BLK (reg:DI 87) [0  S304 A128])
                (mem/c:BLK (reg:DI 88) [0 config+0 S304 A128]))
            (use (reg:DI 89))
        ]) main.c:33 901 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 89)
        (expr_list:REG_UNUSED (reg:DI 88)
            (expr_list:REG_UNUSED (reg:DI 87)
                (nil)))))
(insn 56 55 57 3 (set (reg:SI 1 dx)
        (reg:SI 84)) main.c:33 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 57 56 58 3 (set (reg:DI 2 cx)
        (reg:DI 85)) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 58 57 59 3 (set (reg:SI 4 si)
        (reg:SI 65 [ Nflight.2 ])) main.c:33 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ Nflight.2 ])
        (nil)))
(insn 59 58 60 3 (set (reg:DI 5 di)
        (reg:DI 86)) main.c:33 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 60 59 61 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ABM") [flags 0x41]  <function_decl 0x7fe0c219fb00 ABM>) [0 ABM S1 A8])
            (const_int 304 [0x130]))) main.c:33 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (expr_list:REG_DEAD (use (mem:BLK (reg/f:DI 7 sp) [0  S304 A128]))
                        (nil)))))))
(insn 61 60 62 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])) main.c:35 89 {*movsi_internal}
     (nil))
(insn 62 61 63 3 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -440 [0xfffffffffffffe48])) [0 output_ABM+0 S8 A64])) main.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) main.c:35 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 3 (set (reg:SI 1 dx)
        (reg:SI 90)) main.c:35 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 65 64 66 3 (set (reg:DI 4 si)
        (reg:DI 91)) main.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 66 65 67 3 (set (reg:DI 5 di)
        (reg:DI 92)) main.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 67 66 68 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("add_nsim_output") [flags 0x41]  <function_decl 0x7fe0c2194500 add_nsim_output>) [0 add_nsim_output S1 A8])
            (const_int 0 [0]))) main.c:35 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 68 67 69 3 (set (reg/f:DI 66 [ Flight.3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [0 Flight+0 S8 A128])) main.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 3 (set (reg:SI 67 [ Nflight.4 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 Nflight+0 S4 A64])) main.c:36 89 {*movsi_internal}
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 68 [ flight.5 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 flight+0 S8 A64])) main.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) main.c:36 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 3 (set (reg:DI 2 cx)
        (reg:DI 93)) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 73 72 74 3 (set (reg:DI 1 dx)
        (reg/f:DI 66 [ Flight.3 ])) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ Flight.3 ])
        (nil)))
(insn 74 73 75 3 (set (reg:SI 4 si)
        (reg:SI 67 [ Nflight.4 ])) main.c:36 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ Nflight.4 ])
        (nil)))
(insn 75 74 76 3 (set (reg:DI 5 di)
        (reg/f:DI 68 [ flight.5 ])) main.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ flight.5 ])
        (nil)))
(call_insn 76 75 77 3 (call (mem:QI (symbol_ref:DI ("save_m3") [flags 0x41]  <function_decl 0x7fe0c219fc00 save_m3>) [0 save_m3 S1 A8])
        (const_int 0 [0])) main.c:36 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 77 76 78 3 (set (reg/f:DI 69 [ Flight.6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [0 Flight+0 S8 A128])) main.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 3 (set (reg:SI 70 [ Nflight.7 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 Nflight+0 S4 A64])) main.c:38 89 {*movsi_internal}
     (nil))
(insn 79 78 80 3 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -456 [0xfffffffffffffe38])))
            (clobber (reg:CC 17 flags))
        ]) main.c:38 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 79 81 3 (set (reg:DI 1 dx)
        (reg/f:DI 69 [ Flight.6 ])) main.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ Flight.6 ])
        (nil)))
(insn 81 80 82 3 (set (reg:SI 4 si)
        (reg:SI 70 [ Nflight.7 ])) main.c:38 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 70 [ Nflight.7 ])
        (nil)))
(insn 82 81 83 3 (set (reg:DI 5 di)
        (reg:DI 94)) main.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 83 82 84 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("del_flight") [flags 0x41]  <function_decl 0x7fe0c219fa00 del_flight>) [0 del_flight S1 A8])
            (const_int 0 [0]))) main.c:38 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 84 83 85 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) main.c:29 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61
(code_label 85 84 86 4 2 "" [1 uses])
(note 86 85 87 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 89 4 (set (reg:SI 61 [ D.9752 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 config.nsim+0 S4 A128])) main.c:29 89 {*movsi_internal}
     (nil))
(insn 89 87 90 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 61 [ D.9752 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -468 [0xfffffffffffffe2c])) [0 i+0 S4 A32]))) main.c:29 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.9752 ])
        (nil)))
(jump_insn 90 89 91 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) main.c:29 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 88)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 71 72
(note 91 90 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 95 5 (set (reg:SI 71 [ D.9752 ])
        (const_int 0 [0])) main.c:44 89 {*movsi_internal}
     (nil))
(insn 95 92 99 5 (set (reg:SI 72 [ <retval> ])
        (reg:SI 71 [ D.9752 ])) main.c:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 71 [ D.9752 ])
        (nil)))
(insn 99 95 102 5 (set (reg/i:SI 0 ax)
        (reg:SI 72 [ <retval> ])) main.c:46 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 72 [ <retval> ])
        (nil)))
(insn 102 99 103 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.9753+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) main.c:46 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 103 102 110 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) main.c:46 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 106)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 110 103 104 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 104 110 105 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe0c1dfbd00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) main.c:46 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 105 104 106)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 106 105 111 7 5 "" [1 uses])
(note 111 106 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 107 111 0 7 (use (reg/i:SI 0 ax)) main.c:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function py_iter_sim (py_iter_sim, funcdef_no=3, decl_uid=9713, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r73: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r73,l0) best SIREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r69,l0) best DREG, allocno GENERAL_REGS
    r68: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r68,l0) best CREG, allocno GENERAL_REGS
    r67: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r67,l0) best AREG, allocno GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r66,l0) best AREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r67,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r66,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r69,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r68,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 45(l0): point = 0
   Insn 42(l0): point = 2
   Insn 38(l0): point = 4
   Insn 35(l0): point = 6
   Insn 34(l0): point = 8
   Insn 33(l0): point = 10
   Insn 32(l0): point = 12
   Insn 31(l0): point = 14
   Insn 30(l0): point = 16
   Insn 29(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 15(l0): point = 46
   Insn 14(l0): point = 48
   Insn 13(l0): point = 50
   Insn 12(l0): point = 52
   Insn 11(l0): point = 54
   Insn 10(l0): point = 56
   Insn 9(l0): point = 58
   Insn 8(l0): point = 60
   Insn 7(l0): point = 62
   Insn 3(l0): point = 64
   Insn 2(l0): point = 66
 a0(r67): [3..4]
 a1(r66): [5..6]
 a2(r73): [21..22]
 a3(r62): [25..32]
 a4(r65): [25..26]
 a5(r64): [27..28]
 a6(r63): [29..30]
 a7(r72): [33..34]
 a8(r71): [37..38]
 a9(r61): [37..40]
 a10(r60): [41..42]
 a11(r59): [43..44]
 a12(r70): [51..58]
 a13(r69): [55..60]
 a14(r68): [57..62]
Compressing live ranges: from 69 to 22 - 31%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r66): [2..3]
 a2(r73): [4..5]
 a3(r62): [6..11]
 a4(r65): [6..7]
 a5(r64): [8..9]
 a6(r63): [10..11]
 a7(r72): [12..13]
 a8(r71): [14..15]
 a9(r61): [14..15]
 a10(r60): [16..17]
 a11(r59): [18..19]
 a12(r70): [20..21]
 a13(r69): [20..21]
 a14(r68): [20..21]
  regions=1, blocks=3, points=22
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   11:r59  l0     0   10:r60  l0     0    9:r61  l0     1    3:r62  l0     1
    6:r63  l0     0    5:r64  l0     0    4:r65  l0     0    1:r66  l0     0
    0:r67  l0     0   14:r68  l0     2   13:r69  l0     1   12:r70  l0     0
    8:r71  l0     0    7:r72  l0     0    2:r73  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


py_iter_sim

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={7d,5u} r1={5d,1u} r2={5d,1u} r4={6d,3u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={6d} r18={3d} r19={3d} r20={1d,12u,1e} r21={5d,1u} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} 
;;    total ref usage 231{180d,50u,1e} in 34{31 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 self+0 S8 A64])
        (reg:DI 5 di [ self ])) main.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 args+0 S8 A64])
        (reg:DI 4 si [ args ])) main.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 68)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) main.c:52 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) main.c:52 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 args+0 S8 A64])) main.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 2 cx)
        (reg:DI 68)) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 69)) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe0c1e08e40 *.LC1>)) main.c:52 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 70)) main.c:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) main.c:52 91 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x7fe0c1d5e300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) main.c:52 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(insn 16 15 17 2 (set (reg:QI 59 [ x.8 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 x+0 S1 A16])) main.c:53 91 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 60 [ D.9758 ])
        (sign_extend:DI (reg:QI 59 [ x.8 ]))) main.c:53 151 {extendqidi2}
     (expr_list:REG_DEAD (reg:QI 59 [ x.8 ])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 61 [ D.9759 ])
        (reg:DI 60 [ D.9758 ])) main.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.9758 ])
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (reg/f:DI 71) [0 *argv_5(D)+0 S8 A64])
        (reg/f:DI 61 [ D.9759 ])) main.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (expr_list:REG_DEAD (reg/f:DI 61 [ D.9759 ])
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 62 [ D.9760 ])
                (plus:DI (reg/f:DI 72)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) main.c:54 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 23 22 24 2 (set (reg:QI 63 [ y.9 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7])) [0 y+0 S1 A8])) main.c:54 91 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 64 [ D.9758 ])
        (sign_extend:DI (reg:QI 63 [ y.9 ]))) main.c:54 151 {extendqidi2}
     (expr_list:REG_DEAD (reg:QI 63 [ y.9 ])
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 65 [ D.9759 ])
        (reg:DI 64 [ D.9758 ])) main.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64 [ D.9758 ])
        (nil)))
(insn 26 25 27 2 (set (mem/f:DI (reg/f:DI 62 [ D.9760 ]) [0 *_6+0 S8 A64])
        (reg/f:DI 65 [ D.9759 ])) main.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.9759 ])
        (expr_list:REG_DEAD (reg/f:DI 62 [ D.9760 ])
            (nil))))
(insn 27 26 28 2 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 argv+0 S8 A64])) main.c:55 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg:DI 73)) main.c:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) main.c:55 89 {*movsi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("main") [flags 0x3]  <function_decl 0x7fe0c1dfb100 main>) [0 main S1 A8])
            (const_int 0 [0]))) main.c:55 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S8 A64])) main.c:56 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fe0c1e08ed8 *.LC2>)) main.c:56 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) main.c:56 91 {*movqi_internal}
     (nil))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x7fe0c1d5e600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) main.c:56 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 35 34 38 2 (set (reg/f:DI 66 [ D.9761 ])
        (reg:DI 0 ax)) main.c:56 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 35 42 2 (set (reg:DI 67 [ <retval> ])
        (reg/f:DI 66 [ D.9761 ])) main.c:56 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.9761 ])
        (nil)))
(insn 42 38 45 2 (set (reg/i:DI 0 ax)
        (reg:DI 67 [ <retval> ])) main.c:57 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67 [ <retval> ])
        (nil)))
(insn 45 42 0 2 (use (reg/i:DI 0 ax)) main.c:57 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function initElsaABM (initElsaABM, funcdef_no=4, decl_uid=9719, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 5(l0): point = 10
Compressing live ranges: from 13 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


initElsaABM

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 37[r8]
;;  ref usage 	r0={2d} r1={3d,1u} r2={3d,1u} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 81{68d,13u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) main.c:73 89 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("ElsaABM_methods") [flags 0x2]  <var_decl 0x7fe0c1df4da8 ElsaABM_methods>)) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fe0c1e1d390 *.LC5>)) main.c:73 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x7fe0c1d63100 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) main.c:73 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

