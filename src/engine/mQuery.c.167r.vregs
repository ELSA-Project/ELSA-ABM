
;; Function _convert_time (_convert_time, funcdef_no=2, decl_uid=3111, cgraph_uid=2)

(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
        (reg:DI 5 di [ c ])) mQuery.c:20 87 {*movdi_internal_rex64}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:24 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:24 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 87)
        (reg:SI 0 ax)) mQuery.c:24 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32])
        (reg:SI 87)) mQuery.c:24 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:25 89 {*movsi_internal}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 16)) mQuery.c:25 650 {jump}
     (nil)
 -> 16)
;;  succ:       5

(barrier 13 12 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 23 13 14 4 3 "" [1 uses])
(note 14 23 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 16 15 17 5 2 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:25 89 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:DI 59 [ D.3671 ])
        (sign_extend:DI (reg:SI 88))) mQuery.c:25 149 {*extendsidi2_rex64}
     (nil))
(insn 20 19 21 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:25 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/f:DI 60 [ D.3672 ])
                (plus:DI (reg:DI 59 [ D.3671 ])
                    (reg/f:DI 89)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:25 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 59 [ D.3671 ]))
        (nil)))
(insn 22 21 24 5 (set (reg:QI 61 [ D.3673 ])
        (mem:QI (reg/f:DI 60 [ D.3672 ]) [0 *_8+0 S1 A8])) mQuery.c:25 91 {*movqi_internal}
     (nil))
(insn 24 22 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:25 5 {*cmpqi_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) mQuery.c:25 612 {*jcc_1}
     (nil)
 -> 23)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 273 {*addsi_1}
     (nil))
(insn 28 27 29 6 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:26 89 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (reg:DI 62 [ D.3671 ])
        (sign_extend:DI (reg:SI 90))) mQuery.c:26 149 {*extendsidi2_rex64}
     (nil))
(insn 30 29 31 6 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:26 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 63 [ D.3674 ])
                (plus:DI (reg:DI 62 [ D.3671 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:26 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 62 [ D.3671 ]))
        (nil)))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.3674 ])) mQuery.c:26 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:26 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 6 (set (reg:SI 92)
        (reg:SI 0 ax)) mQuery.c:26 89 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32])
        (reg:SI 92)) mQuery.c:26 89 {*movsi_internal}
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 40)) mQuery.c:27 650 {jump}
     (nil)
 -> 40)
;;  succ:       8

(barrier 37 36 47)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 47 37 38 7 5 "" [1 uses])
(note 38 47 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 40 39 41 8 4 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:27 89 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:DI 64 [ D.3671 ])
        (sign_extend:DI (reg:SI 93))) mQuery.c:27 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 8 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:DI 65 [ D.3672 ])
                (plus:DI (reg:DI 64 [ D.3671 ])
                    (reg/f:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:27 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 64 [ D.3671 ]))
        (nil)))
(insn 46 45 48 8 (set (reg:QI 66 [ D.3673 ])
        (mem:QI (reg/f:DI 65 [ D.3672 ]) [0 *_16+0 S1 A8])) mQuery.c:27 91 {*movqi_internal}
     (nil))
(insn 48 46 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:27 5 {*cmpqi_1}
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) mQuery.c:27 612 {*jcc_1}
     (nil)
 -> 47)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 273 {*addsi_1}
     (nil))
(insn 52 51 53 9 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:28 89 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:DI 67 [ D.3671 ])
        (sign_extend:DI (reg:SI 95))) mQuery.c:28 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:28 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg/f:DI 68 [ D.3674 ])
                (plus:DI (reg:DI 67 [ D.3671 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:28 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 67 [ D.3671 ]))
        (nil)))
(insn 56 55 57 9 (set (reg:DI 5 di)
        (reg/f:DI 68 [ D.3674 ])) mQuery.c:28 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:28 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 9 (set (reg:SI 97)
        (reg:SI 0 ax)) mQuery.c:28 89 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32])
        (reg:SI 97)) mQuery.c:28 89 {*movsi_internal}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (label_ref 64)) mQuery.c:29 650 {jump}
     (nil)
 -> 64)
;;  succ:       11

(barrier 61 60 71)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 71 61 62 10 7 "" [1 uses])
(note 62 71 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 64 63 65 11 6 "" [1 uses])
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:29 89 {*movsi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:DI 69 [ D.3671 ])
        (sign_extend:DI (reg:SI 98))) mQuery.c:29 149 {*extendsidi2_rex64}
     (nil))
(insn 68 67 69 11 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:29 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 11 (parallel [
            (set (reg/f:DI 70 [ D.3672 ])
                (plus:DI (reg:DI 69 [ D.3671 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:29 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 69 [ D.3671 ]))
        (nil)))
(insn 70 69 72 11 (set (reg:QI 71 [ D.3673 ])
        (mem:QI (reg/f:DI 70 [ D.3672 ]) [0 *_24+0 S1 A8])) mQuery.c:29 91 {*movqi_internal}
     (nil))
(insn 72 70 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3673 ])
            (const_int 58 [0x3a]))) mQuery.c:29 5 {*cmpqi_1}
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mQuery.c:29 612 {*jcc_1}
     (nil)
 -> 71)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 273 {*addsi_1}
     (nil))
(insn 76 75 77 12 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mQuery.c:30 89 {*movsi_internal}
     (nil))
(insn 77 76 78 12 (set (reg:DI 72 [ D.3671 ])
        (sign_extend:DI (reg:SI 100))) mQuery.c:30 149 {*extendsidi2_rex64}
     (nil))
(insn 78 77 79 12 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])) mQuery.c:30 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg/f:DI 73 [ D.3674 ])
                (plus:DI (reg:DI 72 [ D.3671 ])
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:30 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 c+0 S8 A64])
            (reg:DI 72 [ D.3671 ]))
        (nil)))
(insn 80 79 81 12 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3674 ])) mQuery.c:30 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 81 80 82 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:30 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 12 (set (reg:SI 102)
        (reg:SI 0 ax)) mQuery.c:30 89 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32])
        (reg:SI 102)) mQuery.c:30 89 {*movsi_internal}
     (nil))
(insn 84 83 85 12 (set (reg:DF 74 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 H+0 S4 A32]))) mQuery.c:32 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 85 84 86 12 (set (reg:DF 103)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) mQuery.c:32 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 86 85 87 12 (set (reg:DF 75 [ D.3675 ])
        (mult:DF (reg:DF 74 [ D.3675 ])
            (reg:DF 103))) mQuery.c:32 778 {*fop_df_comm_sse}
     (nil))
(insn 87 86 88 12 (set (reg:DF 76 [ D.3675 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 m+0 S4 A32]))) mQuery.c:32 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 88 87 89 12 (set (reg:DF 104)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) mQuery.c:32 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 89 88 90 12 (set (reg:DF 77 [ D.3675 ])
        (mult:DF (reg:DF 76 [ D.3675 ])
            (reg:DF 104))) mQuery.c:32 778 {*fop_df_comm_sse}
     (nil))
(insn 90 89 91 12 (set (reg:DF 78 [ D.3675 ])
        (plus:DF (reg:DF 75 [ D.3675 ])
            (reg:DF 77 [ D.3675 ]))) mQuery.c:32 778 {*fop_df_comm_sse}
     (nil))
(insn 91 90 92 12 (set (reg:XF 79 [ D.3676 ])
        (float_extend:XF (reg:DF 78 [ D.3675 ]))) mQuery.c:32 162 {*extenddfxf2_i387}
     (nil))
(insn 92 91 93 12 (set (reg:XF 80 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 s+0 S4 A32]))) mQuery.c:32 256 {*floatsixf2_i387}
     (nil))
(insn 93 92 94 12 (set (reg:XF 81 [ D.3676 ])
        (plus:XF (reg:XF 79 [ D.3676 ])
            (reg:XF 80 [ D.3676 ]))) mQuery.c:32 799 {*fop_xf_comm_i387}
     (nil))
(insn 94 93 95 12 (set (reg:XF 82 [ D.3676 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 f+0 S4 A32]))) mQuery.c:32 256 {*floatsixf2_i387}
     (nil))
(insn 95 94 96 12 (set (reg:XF 105)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mQuery.c:32 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 96 95 97 12 (set (reg:XF 83 [ D.3676 ])
        (div:XF (reg:XF 82 [ D.3676 ])
            (reg:XF 105))) mQuery.c:32 800 {*fop_xf_1_i387}
     (nil))
(insn 97 96 98 12 (set (reg:XF 106)
        (plus:XF (reg:XF 81 [ D.3676 ])
            (reg:XF 83 [ D.3676 ]))) mQuery.c:32 799 {*fop_xf_comm_i387}
     (nil))
(insn 98 97 99 12 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])
        (reg:XF 106)) mQuery.c:32 131 {*movxf_internal_rex64}
     (nil))
(insn 99 98 102 12 (set (reg:XF 84 [ D.3676 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 time+0 S16 A128])) mQuery.c:34 131 {*movxf_internal_rex64}
     (nil))
(insn 102 99 106 12 (set (reg:XF 85 [ <retval> ])
        (reg:XF 84 [ D.3676 ])) mQuery.c:34 131 {*movxf_internal_rex64}
     (nil))
(insn 106 102 109 12 (set (reg/i:XF 8 st)
        (reg:XF 85 [ <retval> ])) mQuery.c:35 131 {*movxf_internal_rex64}
     (nil))
(insn 109 106 0 12 (use (reg/i:XF 8 st)) mQuery.c:35 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _calculate_velocity (_calculate_velocity, funcdef_no=3, decl_uid=3130, cgraph_uid=3)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
        (reg:DI 5 di [ flight ])) mQuery.c:37 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 Nflight+0 S4 A32])
        (reg:SI 4 si [ Nflight ])) mQuery.c:37 89 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:40 89 {*movsi_internal}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 192)) mQuery.c:40 650 {jump}
     (nil)
 -> 192)
;;  succ:       13

(barrier 9 8 194)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 194 9 10 4 16 "" [1 uses])
(note 10 194 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:41 89 {*movsi_internal}
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (label_ref 173)) mQuery.c:41 650 {jump}
     (nil)
 -> 173)
;;  succ:       11

(barrier 13 12 187)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
(code_label 187 13 14 5 15 "" [1 uses])
(note 14 187 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 16 15 17 5 (set (reg:DI 64 [ D.3678 ])
        (sign_extend:DI (reg:SI 134))) mQuery.c:42 149 {*extendsidi2_rex64}
     (nil))
(insn 17 16 18 5 (set (reg:DI 135)
        (reg:DI 64 [ D.3678 ])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 135)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 135)
                    (reg:DI 64 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 21 20 22 5 (set (reg:DI 135)
        (reg:DI 136)) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 65 [ D.3678 ])
        (reg:DI 135)) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 66 [ D.3679 ])
                (plus:DI (reg:DI 65 [ D.3678 ])
                    (reg/f:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 65 [ D.3678 ]))
        (nil)))
(insn 25 24 26 5 (set (reg/f:DI 67 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.3679 ])
                (const_int 16 [0x10])) [0 _14->time+0 S8 A128])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 5 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 68 [ D.3682 ])
        (sign_extend:DI (reg:SI 138))) mQuery.c:42 149 {*extendsidi2_rex64}
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 69 [ D.3682 ])
                (plus:DI (reg:DI 68 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 70 [ D.3682 ])
                (ashift:DI (reg:DI 69 [ D.3682 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 71 [ D.3681 ])
                (plus:DI (reg/f:DI 67 [ D.3681 ])
                    (reg:DI 70 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (nil))
(insn 31 30 32 5 (set (reg:XF 72 [ D.3683 ])
        (mem:XF (reg/f:DI 71 [ D.3681 ]) [0 *_19+0 S16 A128])) mQuery.c:42 131 {*movxf_internal_rex64}
     (nil))
(insn 32 31 33 5 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 73 [ D.3678 ])
        (sign_extend:DI (reg:SI 139))) mQuery.c:42 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:DI 140)
        (reg:DI 73 [ D.3678 ])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 140)
                (ashift:DI (reg:DI 140)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg:DI 140)
                    (reg:DI 73 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 141)
                (ashift:DI (reg:DI 140)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 38 37 39 5 (set (reg:DI 140)
        (reg:DI 141)) mQuery.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 5 (set (reg:DI 74 [ D.3678 ])
        (reg:DI 140)) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 75 [ D.3679 ])
                (plus:DI (reg:DI 74 [ D.3678 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 74 [ D.3678 ]))
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 76 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 75 [ D.3679 ])
                (const_int 16 [0x10])) [0 _23->time+0 S8 A128])) mQuery.c:42 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:42 89 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 77 [ D.3678 ])
        (sign_extend:DI (reg:SI 143))) mQuery.c:42 149 {*extendsidi2_rex64}
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 78 [ D.3678 ])
                (ashift:DI (reg:DI 77 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 513 {*ashldi3_1}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 79 [ D.3681 ])
                (plus:DI (reg/f:DI 76 [ D.3681 ])
                    (reg:DI 78 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:42 274 {*adddi_1}
     (nil))
(insn 47 46 48 5 (set (reg:XF 80 [ D.3683 ])
        (mem:XF (reg/f:DI 79 [ D.3681 ]) [0 *_27+0 S16 A128])) mQuery.c:42 131 {*movxf_internal_rex64}
     (nil))
(insn 48 47 49 5 (set (reg:XF 144)
        (minus:XF (reg:XF 72 [ D.3683 ])
            (reg:XF 80 [ D.3683 ]))) mQuery.c:42 800 {*fop_xf_1_i387}
     (nil))
(insn 49 48 50 5 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])
        (reg:XF 144)) mQuery.c:42 131 {*movxf_internal_rex64}
     (nil))
(insn 50 49 51 5 (set (reg:XF 145)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 5 (set (reg:XF 146)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0000000000000000208166817117216851329430937767028809e-3 [0x0.83126e978d4fep-9])
        (nil)))
(insn 52 51 53 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 145)
            (reg:XF 146))) mQuery.c:43 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 53 52 211 5 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 214)
            (pc))) mQuery.c:43 612 {*jcc_1}
     (nil)
 -> 214)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 211 53 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 54 211 55 6 (set (pc)
        (label_ref 115)) mQuery.c:43 650 {jump}
     (nil)
 -> 115)
;;  succ:       9

(barrier 55 54 214)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 214 55 57 8 18 "" [1 uses])
(note 57 214 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:DI 81 [ D.3678 ])
        (sign_extend:DI (reg:SI 147))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 60 59 61 8 (set (reg:DI 148)
        (reg:DI 81 [ D.3678 ])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:DI 148)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 148)
                    (reg:DI 81 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 63 62 64 8 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 64 63 65 8 (set (reg:DI 148)
        (reg:DI 149)) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 81 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 65 64 66 8 (set (reg:DI 82 [ D.3678 ])
        (reg:DI 148)) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 8 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 83 [ D.3679 ])
                (plus:DI (reg:DI 82 [ D.3678 ])
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 82 [ D.3678 ]))
        (nil)))
(insn 68 67 69 8 (set (reg/f:DI 84 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 83 [ D.3679 ])
                (const_int 24 [0x18])) [0 _32->vel+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 8 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:DI 85 [ D.3678 ])
        (sign_extend:DI (reg:SI 151))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 86 [ D.3678 ])
                (ashift:DI (reg:DI 85 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg/f:DI 87 [ D.3681 ])
                (plus:DI (reg/f:DI 84 [ D.3681 ])
                    (reg:DI 86 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (nil))
(insn 73 72 74 8 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:DI 88 [ D.3678 ])
        (sign_extend:DI (reg:SI 152))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 75 74 76 8 (set (reg:DI 153)
        (reg:DI 88 [ D.3678 ])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:DI 153)
                (ashift:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg:DI 153)
                    (reg:DI 88 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 78 77 79 8 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 153)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 79 78 80 8 (set (reg:DI 153)
        (reg:DI 154)) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 80 79 81 8 (set (reg:DI 89 [ D.3678 ])
        (reg:DI 153)) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 8 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 8 (parallel [
            (set (reg/f:DI 90 [ D.3679 ])
                (plus:DI (reg:DI 89 [ D.3678 ])
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 89 [ D.3678 ]))
        (nil)))
(insn 83 82 84 8 (set (reg/f:DI 91 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90 [ D.3679 ])
                (const_int 8 [0x8])) [0 _39->nvp+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 8 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 85 84 86 8 (set (reg:DI 92 [ D.3682 ])
        (sign_extend:DI (reg:SI 156))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 8 (parallel [
            (set (reg:DI 93 [ D.3682 ])
                (plus:DI (reg:DI 92 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (nil))
(insn 87 86 88 8 (parallel [
            (set (reg:DI 94 [ D.3682 ])
                (ashift:DI (reg:DI 93 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 88 87 89 8 (parallel [
            (set (reg/f:DI 95 [ D.3684 ])
                (plus:DI (reg/f:DI 91 [ D.3684 ])
                    (reg:DI 94 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (nil))
(insn 89 88 90 8 (set (reg/f:DI 96 [ D.3681 ])
        (mem/f:DI (reg/f:DI 95 [ D.3684 ]) [0 *_44+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 8 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 91 90 92 8 (set (reg:DI 97 [ D.3678 ])
        (sign_extend:DI (reg:SI 157))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 92 91 93 8 (set (reg:DI 158)
        (reg:DI 97 [ D.3678 ])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 93 92 94 8 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 158)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 158)
                    (reg:DI 97 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 95 94 96 8 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 158)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 96 95 97 8 (set (reg:DI 158)
        (reg:DI 159)) mQuery.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 97 96 98 8 (set (reg:DI 98 [ D.3678 ])
        (reg:DI 158)) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 8 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 8 (parallel [
            (set (reg/f:DI 99 [ D.3679 ])
                (plus:DI (reg:DI 98 [ D.3678 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 98 [ D.3678 ]))
        (nil)))
(insn 100 99 101 8 (set (reg/f:DI 100 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 99 [ D.3679 ])
                (const_int 8 [0x8])) [0 _48->nvp+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 8 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:43 89 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg:DI 101 [ D.3678 ])
        (sign_extend:DI (reg:SI 161))) mQuery.c:43 149 {*extendsidi2_rex64}
     (nil))
(insn 103 102 104 8 (parallel [
            (set (reg:DI 102 [ D.3678 ])
                (ashift:DI (reg:DI 101 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 513 {*ashldi3_1}
     (nil))
(insn 104 103 105 8 (parallel [
            (set (reg/f:DI 103 [ D.3684 ])
                (plus:DI (reg/f:DI 100 [ D.3684 ])
                    (reg:DI 102 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:43 274 {*adddi_1}
     (nil))
(insn 105 104 106 8 (set (reg/f:DI 104 [ D.3681 ])
        (mem/f:DI (reg/f:DI 103 [ D.3684 ]) [0 *_52+0 S8 A64])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 106 105 107 8 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.3681 ])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 8 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.3681 ])) mQuery.c:43 87 {*movdi_internal_rex64}
     (nil))
(call_insn 108 107 109 8 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:43 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 109 108 110 8 (set (reg:XF 105 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 110 109 111 8 (set (reg:XF 162)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 t+0 S16 A128])) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(insn 111 110 112 8 (set (reg:XF 106 [ D.3683 ])
        (div:XF (reg:XF 105 [ D.3683 ])
            (reg:XF 162))) mQuery.c:43 800 {*fop_xf_1_i387}
     (nil))
(insn 112 111 113 8 (set (mem:XF (reg/f:DI 87 [ D.3681 ]) [0 *_36+0 S16 A128])
        (reg:XF 106 [ D.3683 ])) mQuery.c:43 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 113 112 114 8 (set (pc)
        (label_ref 170)) 650 {jump}
     (nil)
 -> 170)
;;  succ:       10

(barrier 114 113 115)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 115 114 116 9 12 "" [1 uses])
(note 116 115 117 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 9 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 118 117 119 9 (set (reg:DI 107 [ D.3678 ])
        (sign_extend:DI (reg:SI 163))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 119 118 120 9 (set (reg:DI 164)
        (reg:DI 107 [ D.3678 ])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 9 (parallel [
            (set (reg:DI 164)
                (ashift:DI (reg:DI 164)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 121 120 122 9 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 164)
                    (reg:DI 107 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 122 121 123 9 (parallel [
            (set (reg:DI 165)
                (ashift:DI (reg:DI 164)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 123 122 124 9 (set (reg:DI 164)
        (reg:DI 165)) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 124 123 125 9 (set (reg:DI 108 [ D.3678 ])
        (reg:DI 164)) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 125 124 126 9 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 9 (parallel [
            (set (reg/f:DI 109 [ D.3679 ])
                (plus:DI (reg:DI 108 [ D.3678 ])
                    (reg/f:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 108 [ D.3678 ]))
        (nil)))
(insn 127 126 128 9 (set (reg/f:DI 110 [ D.3681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 109 [ D.3679 ])
                (const_int 24 [0x18])) [0 _58->vel+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 9 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 129 128 130 9 (set (reg:DI 111 [ D.3678 ])
        (sign_extend:DI (reg:SI 167))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 130 129 131 9 (parallel [
            (set (reg:DI 112 [ D.3678 ])
                (ashift:DI (reg:DI 111 [ D.3678 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 131 130 132 9 (parallel [
            (set (reg/f:DI 113 [ D.3681 ])
                (plus:DI (reg/f:DI 110 [ D.3681 ])
                    (reg:DI 112 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (nil))
(insn 132 131 133 9 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 133 132 134 9 (set (reg:DI 114 [ D.3678 ])
        (sign_extend:DI (reg:SI 168))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 134 133 135 9 (set (reg:DI 169)
        (reg:DI 114 [ D.3678 ])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 135 134 136 9 (parallel [
            (set (reg:DI 169)
                (ashift:DI (reg:DI 169)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 136 135 137 9 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg:DI 169)
                    (reg:DI 114 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 137 136 138 9 (parallel [
            (set (reg:DI 170)
                (ashift:DI (reg:DI 169)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 138 137 139 9 (set (reg:DI 169)
        (reg:DI 170)) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 114 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 139 138 140 9 (set (reg:DI 115 [ D.3678 ])
        (reg:DI 169)) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 140 139 141 9 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 9 (parallel [
            (set (reg/f:DI 116 [ D.3679 ])
                (plus:DI (reg:DI 115 [ D.3678 ])
                    (reg/f:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 115 [ D.3678 ]))
        (nil)))
(insn 142 141 143 9 (set (reg/f:DI 117 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 116 [ D.3679 ])
                (const_int 8 [0x8])) [0 _65->nvp+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 9 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 144 143 145 9 (set (reg:DI 118 [ D.3682 ])
        (sign_extend:DI (reg:SI 172))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 145 144 146 9 (parallel [
            (set (reg:DI 119 [ D.3682 ])
                (plus:DI (reg:DI 118 [ D.3682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (nil))
(insn 146 145 147 9 (parallel [
            (set (reg:DI 120 [ D.3682 ])
                (ashift:DI (reg:DI 119 [ D.3682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 147 146 148 9 (parallel [
            (set (reg/f:DI 121 [ D.3684 ])
                (plus:DI (reg/f:DI 117 [ D.3684 ])
                    (reg:DI 120 [ D.3682 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (nil))
(insn 148 147 149 9 (set (reg/f:DI 122 [ D.3681 ])
        (mem/f:DI (reg/f:DI 121 [ D.3684 ]) [0 *_70+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 9 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 150 149 151 9 (set (reg:DI 123 [ D.3678 ])
        (sign_extend:DI (reg:SI 173))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 151 150 152 9 (set (reg:DI 174)
        (reg:DI 123 [ D.3678 ])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 9 (parallel [
            (set (reg:DI 174)
                (ashift:DI (reg:DI 174)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 153 152 154 9 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg:DI 174)
                    (reg:DI 123 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 154 153 155 9 (parallel [
            (set (reg:DI 175)
                (ashift:DI (reg:DI 174)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 155 154 156 9 (set (reg:DI 174)
        (reg:DI 175)) mQuery.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 123 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 156 155 157 9 (set (reg:DI 124 [ D.3678 ])
        (reg:DI 174)) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 9 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 9 (parallel [
            (set (reg/f:DI 125 [ D.3679 ])
                (plus:DI (reg:DI 124 [ D.3678 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 124 [ D.3678 ]))
        (nil)))
(insn 159 158 160 9 (set (reg/f:DI 126 [ D.3684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 125 [ D.3679 ])
                (const_int 8 [0x8])) [0 _74->nvp+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 9 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) mQuery.c:44 89 {*movsi_internal}
     (nil))
(insn 161 160 162 9 (set (reg:DI 127 [ D.3678 ])
        (sign_extend:DI (reg:SI 177))) mQuery.c:44 149 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 9 (parallel [
            (set (reg:DI 128 [ D.3678 ])
                (ashift:DI (reg:DI 127 [ D.3678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 513 {*ashldi3_1}
     (nil))
(insn 163 162 164 9 (parallel [
            (set (reg/f:DI 129 [ D.3684 ])
                (plus:DI (reg/f:DI 126 [ D.3684 ])
                    (reg:DI 128 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:44 274 {*adddi_1}
     (nil))
(insn 164 163 165 9 (set (reg/f:DI 130 [ D.3681 ])
        (mem/f:DI (reg/f:DI 129 [ D.3684 ]) [0 *_78+0 S8 A64])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 165 164 166 9 (set (reg:DI 4 si)
        (reg/f:DI 122 [ D.3681 ])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 166 165 167 9 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.3681 ])) mQuery.c:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 167 166 168 9 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x41]  <function_decl 0x7f87349e8a00 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mQuery.c:44 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 168 167 169 9 (set (reg:XF 131 [ D.3683 ])
        (reg:XF 8 st)) mQuery.c:44 131 {*movxf_internal_rex64}
     (nil))
(insn 169 168 170 9 (set (mem:XF (reg/f:DI 113 [ D.3681 ]) [0 *_62+0 S16 A128])
        (reg:XF 131 [ D.3683 ])) mQuery.c:44 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 170 169 171 10 14 "" [1 uses])
(note 171 170 172 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              10 (FALLTHRU,DFS_BACK)
(code_label 173 172 174 11 11 "" [1 uses])
(note 174 173 175 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 11 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:41 89 {*movsi_internal}
     (nil))
(insn 176 175 177 11 (set (reg:DI 59 [ D.3678 ])
        (sign_extend:DI (reg:SI 178))) mQuery.c:41 149 {*extendsidi2_rex64}
     (nil))
(insn 177 176 178 11 (set (reg:DI 179)
        (reg:DI 59 [ D.3678 ])) mQuery.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 11 (parallel [
            (set (reg:DI 179)
                (ashift:DI (reg:DI 179)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 513 {*ashldi3_1}
     (nil))
(insn 179 178 180 11 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 179)
                    (reg:DI 59 [ D.3678 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 180 179 181 11 (parallel [
            (set (reg:DI 180)
                (ashift:DI (reg:DI 179)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 513 {*ashldi3_1}
     (nil))
(insn 181 180 182 11 (set (reg:DI 179)
        (reg:DI 180)) mQuery.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3678 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 182 181 183 11 (set (reg:DI 60 [ D.3678 ])
        (reg:DI 179)) mQuery.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 183 182 184 11 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])) mQuery.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 184 183 185 11 (parallel [
            (set (reg/f:DI 61 [ D.3679 ])
                (plus:DI (reg:DI 60 [ D.3678 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 flight+0 S8 A64])
            (reg:DI 60 [ D.3678 ]))
        (nil)))
(insn 185 184 186 11 (set (reg:SI 62 [ D.3680 ])
        (mem/j:SI (plus:DI (reg/f:DI 61 [ D.3679 ])
                (const_int 4 [0x4])) [0 _9->n_nvp+0 S4 A32])) mQuery.c:41 89 {*movsi_internal}
     (nil))
(insn 186 185 188 11 (parallel [
            (set (reg:SI 63 [ D.3680 ])
                (plus:SI (reg:SI 62 [ D.3680 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:41 273 {*addsi_1}
     (nil))
(insn 188 186 189 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.3680 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32]))) mQuery.c:41 7 {*cmpsi_1}
     (nil))
(jump_insn 189 188 190 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) mQuery.c:41 612 {*jcc_1}
     (nil)
 -> 187)
;;  succ:       5
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 190 189 191 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:40 273 {*addsi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              12 (FALLTHRU,DFS_BACK)
(code_label 192 191 193 13 10 "" [1 uses])
(note 193 192 195 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 195 193 196 13 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) mQuery.c:40 89 {*movsi_internal}
     (nil))
(insn 196 195 197 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 182)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 Nflight+0 S4 A32]))) mQuery.c:40 7 {*cmpsi_1}
     (nil))
(jump_insn 197 196 198 13 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) mQuery.c:40 612 {*jcc_1}
     (nil)
 -> 194)
;;  succ:       4
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
(note 198 197 199 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 202 14 (set (reg:SI 132 [ D.3680 ])
        (const_int 1 [0x1])) mQuery.c:47 89 {*movsi_internal}
     (nil))
(insn 202 199 206 14 (set (reg:SI 133 [ <retval> ])
        (reg:SI 132 [ D.3680 ])) mQuery.c:47 89 {*movsi_internal}
     (nil))
(insn 206 202 209 14 (set (reg/i:SI 0 ax)
        (reg:SI 133 [ <retval> ])) mQuery.c:48 89 {*movsi_internal}
     (nil))
(insn 209 206 0 14 (use (reg/i:SI 0 ax)) mQuery.c:48 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_M1 (get_M1, funcdef_no=4, decl_uid=1760, cgraph_uid=4)

(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 m1_file+0 S8 A64])
        (reg:DI 5 di [ m1_file ])) mQuery.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])
        (reg:DI 4 si [ flight ])) mQuery.c:50 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3695+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:50 966 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 m1_file+0 S8 A64])) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 181)) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:54 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 182)
        (reg:DI 0 ax)) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 182)) mQuery.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:55 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:55 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8734751e40 *.LC6>)) mQuery.c:55 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:55 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 21 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:58 274 {*adddi_1}
     (nil))
(insn 23 22 24 5 (set (reg:DI 1 dx)
        (reg:DI 183)) mQuery.c:58 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 5 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:58 89 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg:DI 184)) mQuery.c:58 87 {*movdi_internal_rex64}
     (nil))
(call_insn 26 25 27 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:58 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:60 274 {*adddi_1}
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg:DI 185)) mQuery.c:60 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:60 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 5 (set (reg:SI 186)
        (reg:SI 0 ax)) mQuery.c:60 89 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])
        (reg:SI 186)) mQuery.c:60 89 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:64 89 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 59 [ D.3685 ])
        (sign_extend:DI (reg:SI 187))) mQuery.c:64 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:DI 188)
        (reg:DI 59 [ D.3685 ])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 188)
                (ashift:DI (reg:DI 188)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 513 {*ashldi3_1}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 188)
                    (reg:DI 59 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 189)
                (ashift:DI (reg:DI 188)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:64 513 {*ashldi3_1}
     (nil))
(insn 38 37 39 5 (set (reg:DI 188)
        (reg:DI 189)) mQuery.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 59 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 39 38 40 5 (set (reg:DI 60 [ D.3685 ])
        (reg:DI 188)) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 60 [ D.3685 ])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(call_insn 41 40 42 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f8734961b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mQuery.c:64 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 5 (set (reg/f:DI 190)
        (reg:DI 0 ax)) mQuery.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_NOALIAS (reg/f:DI 190)
        (nil)))
(insn 43 42 44 5 (set (reg/f:DI 61 [ D.3686 ])
        (reg/f:DI 190)) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (mem/f:DI (reg/f:DI 191) [0 *flight_16(D)+0 S8 A64])
        (reg/f:DI 61 [ D.3686 ])) mQuery.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:66 89 {*movsi_internal}
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (label_ref 509)) mQuery.c:66 650 {jump}
     (nil)
 -> 509)
;;  succ:       49

(barrier 48 47 511)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       49
(code_label 511 48 49 6 49 "" [1 uses])
(note 49 511 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:67 274 {*adddi_1}
     (nil))
(insn 52 51 53 6 (set (reg:DI 1 dx)
        (reg:DI 192)) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 6 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:67 89 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg:DI 193)) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(call_insn 55 54 56 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:67 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 56 55 57 6 (set (reg/f:DI 62 [ D.3687 ])
        (reg:DI 0 ax)) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3687 ])
            (const_int 0 [0]))) mQuery.c:67 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mQuery.c:67 612 {*jcc_1}
     (nil)
 -> 62)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8734751ed8 *.LC7>)) mQuery.c:67 87 {*movdi_internal_rex64}
     (nil))
(call_insn 61 60 62 7 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:67 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 62 61 63 8 23 "" [1 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 8 (set (reg/f:DI 63 [ D.3688 ])
        (mem/f:DI (reg/f:DI 194) [0 *flight_16(D)+0 S8 A64])) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 8 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:69 89 {*movsi_internal}
     (nil))
(insn 67 66 68 8 (set (reg:DI 64 [ D.3685 ])
        (sign_extend:DI (reg:SI 195))) mQuery.c:69 149 {*extendsidi2_rex64}
     (nil))
(insn 68 67 69 8 (set (reg:DI 196)
        (reg:DI 64 [ D.3685 ])) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:DI 196)
                (ashift:DI (reg:DI 196)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 513 {*ashldi3_1}
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 196)
                    (reg:DI 64 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 196)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 513 {*ashldi3_1}
     (nil))
(insn 72 71 73 8 (set (reg:DI 196)
        (reg:DI 197)) mQuery.c:69 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 64 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 73 72 74 8 (set (reg:DI 65 [ D.3685 ])
        (reg:DI 196)) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 8 (parallel [
            (set (reg/f:DI 66 [ D.3688 ])
                (plus:DI (reg/f:DI 63 [ D.3688 ])
                    (reg:DI 65 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 274 {*adddi_1}
     (nil))
(insn 75 74 76 8 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:69 274 {*adddi_1}
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (reg:DI 198)) mQuery.c:69 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 77 76 78 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:69 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 8 (set (reg:SI 67 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:69 89 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (mem/j:SI (reg/f:DI 66 [ D.3688 ]) [0 _22->ID+0 S4 A128])
        (reg:SI 67 [ D.3689 ])) mQuery.c:69 89 {*movsi_internal}
     (nil))
(insn 80 79 81 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) mQuery.c:70 89 {*movsi_internal}
     (nil))
(jump_insn 81 80 82 8 (set (pc)
        (label_ref 85)) mQuery.c:70 650 {jump}
     (nil)
 -> 85)
;;  succ:       10

(barrier 82 81 90)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 90 82 83 9 25 "" [1 uses])
(note 83 90 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:70 273 {*addsi_1}
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU,DFS_BACK)
(code_label 85 84 86 10 24 "" [1 uses])
(note 86 85 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 10 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:70 89 {*movsi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 200))) mQuery.c:70 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 91 10 (set (reg:QI 68 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 199))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:70 91 {*movqi_internal}
     (nil))
(insn 91 89 92 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:70 5 {*cmpqi_1}
     (nil))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) mQuery.c:70 612 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       9
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 11 (set (reg/f:DI 69 [ D.3688 ])
        (mem/f:DI (reg/f:DI 201) [0 *flight_16(D)+0 S8 A64])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 11 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 97 96 98 11 (set (reg:DI 70 [ D.3685 ])
        (sign_extend:DI (reg:SI 202))) mQuery.c:72 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 11 (set (reg:DI 203)
        (reg:DI 70 [ D.3685 ])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg:DI 203)
                (ashift:DI (reg:DI 203)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 513 {*ashldi3_1}
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg:DI 203)
                    (reg:DI 70 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 101 100 102 11 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 203)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 513 {*ashldi3_1}
     (nil))
(insn 102 101 103 11 (set (reg:DI 203)
        (reg:DI 204)) mQuery.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 70 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 103 102 104 11 (set (reg:DI 71 [ D.3685 ])
        (reg:DI 203)) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg/f:DI 72 [ D.3688 ])
                (plus:DI (reg/f:DI 69 [ D.3688 ])
                    (reg:DI 71 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (nil))
(insn 105 104 106 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 273 {*addsi_1}
     (nil))
(insn 106 105 107 11 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (nil))
(insn 107 106 108 11 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 108 107 109 11 (set (reg:DI 206)
        (sign_extend:DI (reg:SI 207))) mQuery.c:72 149 {*extendsidi2_rex64}
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg/f:DI 73 [ D.3687 ])
                (plus:DI (reg:DI 205)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:72 274 {*adddi_1}
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.3687 ])) mQuery.c:72 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 111 110 112 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f8734a6aa00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) mQuery.c:72 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 11 (set (reg:SI 74 [ D.3689 ])
        (reg:SI 0 ax)) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 113 112 114 11 (set (mem/j:SI (plus:DI (reg/f:DI 72 [ D.3688 ])
                (const_int 4 [0x4])) [0 _30->n_nvp+0 S4 A32])
        (reg:SI 74 [ D.3689 ])) mQuery.c:72 89 {*movsi_internal}
     (nil))
(insn 114 113 115 11 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 115 114 116 11 (set (reg/f:DI 75 [ D.3688 ])
        (mem/f:DI (reg/f:DI 208) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 11 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 117 116 118 11 (set (reg:DI 76 [ D.3685 ])
        (sign_extend:DI (reg:SI 209))) mQuery.c:74 149 {*extendsidi2_rex64}
     (nil))
(insn 118 117 119 11 (set (reg:DI 210)
        (reg:DI 76 [ D.3685 ])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 11 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 210)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 120 119 121 11 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg:DI 210)
                    (reg:DI 76 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 121 120 122 11 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 122 121 123 11 (set (reg:DI 210)
        (reg:DI 211)) mQuery.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 76 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 123 122 124 11 (set (reg:DI 77 [ D.3685 ])
        (reg:DI 210)) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 11 (parallel [
            (set (reg/f:DI 78 [ D.3688 ])
                (plus:DI (reg/f:DI 75 [ D.3688 ])
                    (reg:DI 77 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (nil))
(insn 125 124 126 11 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 11 (set (reg/f:DI 79 [ D.3688 ])
        (mem/f:DI (reg/f:DI 212) [0 *flight_16(D)+0 S8 A64])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 11 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 128 127 129 11 (set (reg:DI 80 [ D.3685 ])
        (sign_extend:DI (reg:SI 213))) mQuery.c:74 149 {*extendsidi2_rex64}
     (nil))
(insn 129 128 130 11 (set (reg:DI 214)
        (reg:DI 80 [ D.3685 ])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 11 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 214)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 131 130 132 11 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 214)
                    (reg:DI 80 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 132 131 133 11 (parallel [
            (set (reg:DI 215)
                (ashift:DI (reg:DI 214)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 513 {*ashldi3_1}
     (nil))
(insn 133 132 134 11 (set (reg:DI 214)
        (reg:DI 215)) mQuery.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 80 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 134 133 135 11 (set (reg:DI 81 [ D.3685 ])
        (reg:DI 214)) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 135 134 136 11 (parallel [
            (set (reg/f:DI 82 [ D.3688 ])
                (plus:DI (reg/f:DI 79 [ D.3688 ])
                    (reg:DI 81 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:74 274 {*adddi_1}
     (nil))
(insn 136 135 137 11 (set (reg:SI 83 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 82 [ D.3688 ])
                (const_int 4 [0x4])) [0 _41->n_nvp+0 S4 A32])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 137 136 138 11 (set (reg:SI 4 si)
        (const_int 4 [0x4])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(insn 138 137 139 11 (set (reg:SI 5 di)
        (reg:SI 83 [ D.3689 ])) mQuery.c:74 89 {*movsi_internal}
     (nil))
(call_insn 139 138 140 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:74 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 140 139 141 11 (set (reg/f:DI 84 [ D.3691 ])
        (reg:DI 0 ax)) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 78 [ D.3688 ])
                (const_int 8 [0x8])) [0 _37->nvp+0 S8 A64])
        (reg/f:DI 84 [ D.3691 ])) mQuery.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 142 141 143 11 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 11 (set (reg/f:DI 85 [ D.3688 ])
        (mem/f:DI (reg/f:DI 216) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 144 143 145 11 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(insn 145 144 146 11 (set (reg:DI 86 [ D.3685 ])
        (sign_extend:DI (reg:SI 217))) mQuery.c:75 149 {*extendsidi2_rex64}
     (nil))
(insn 146 145 147 11 (set (reg:DI 218)
        (reg:DI 86 [ D.3685 ])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 11 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 218)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 148 147 149 11 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 218)
                    (reg:DI 86 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 149 148 150 11 (parallel [
            (set (reg:DI 219)
                (ashift:DI (reg:DI 218)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 150 149 151 11 (set (reg:DI 218)
        (reg:DI 219)) mQuery.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 86 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 151 150 152 11 (set (reg:DI 87 [ D.3685 ])
        (reg:DI 218)) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 11 (parallel [
            (set (reg/f:DI 88 [ D.3688 ])
                (plus:DI (reg/f:DI 85 [ D.3688 ])
                    (reg:DI 87 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (nil))
(insn 153 152 154 11 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 154 153 155 11 (set (reg/f:DI 89 [ D.3688 ])
        (mem/f:DI (reg/f:DI 220) [0 *flight_16(D)+0 S8 A64])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 156 11 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(insn 156 155 157 11 (set (reg:DI 90 [ D.3685 ])
        (sign_extend:DI (reg:SI 221))) mQuery.c:75 149 {*extendsidi2_rex64}
     (nil))
(insn 157 156 158 11 (set (reg:DI 222)
        (reg:DI 90 [ D.3685 ])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 11 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 222)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 159 158 160 11 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg:DI 222)
                    (reg:DI 90 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 160 159 161 11 (parallel [
            (set (reg:DI 223)
                (ashift:DI (reg:DI 222)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 513 {*ashldi3_1}
     (nil))
(insn 161 160 162 11 (set (reg:DI 222)
        (reg:DI 223)) mQuery.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 90 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 162 161 163 11 (set (reg:DI 91 [ D.3685 ])
        (reg:DI 222)) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 163 162 164 11 (parallel [
            (set (reg/f:DI 92 [ D.3688 ])
                (plus:DI (reg/f:DI 89 [ D.3688 ])
                    (reg:DI 91 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:75 274 {*adddi_1}
     (nil))
(insn 164 163 165 11 (set (reg:SI 93 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 92 [ D.3688 ])
                (const_int 4 [0x4])) [0 _51->n_nvp+0 S4 A32])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(insn 165 164 166 11 (set (reg:SI 5 di)
        (reg:SI 93 [ D.3689 ])) mQuery.c:75 89 {*movsi_internal}
     (nil))
(call_insn 166 165 167 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:75 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 167 166 168 11 (set (reg/f:DI 94 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 168 167 169 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 88 [ D.3688 ])
                (const_int 16 [0x10])) [0 _47->time+0 S8 A128])
        (reg/f:DI 94 [ D.3692 ])) mQuery.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 11 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 170 169 171 11 (set (reg/f:DI 95 [ D.3688 ])
        (mem/f:DI (reg/f:DI 224) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 171 170 172 11 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(insn 172 171 173 11 (set (reg:DI 96 [ D.3685 ])
        (sign_extend:DI (reg:SI 225))) mQuery.c:76 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 11 (set (reg:DI 226)
        (reg:DI 96 [ D.3685 ])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 174 173 175 11 (parallel [
            (set (reg:DI 226)
                (ashift:DI (reg:DI 226)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 175 174 176 11 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 226)
                    (reg:DI 96 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 176 175 177 11 (parallel [
            (set (reg:DI 227)
                (ashift:DI (reg:DI 226)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 177 176 178 11 (set (reg:DI 226)
        (reg:DI 227)) mQuery.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 178 177 179 11 (set (reg:DI 97 [ D.3685 ])
        (reg:DI 226)) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 179 178 180 11 (parallel [
            (set (reg/f:DI 98 [ D.3688 ])
                (plus:DI (reg/f:DI 95 [ D.3688 ])
                    (reg:DI 97 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (nil))
(insn 180 179 181 11 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 181 180 182 11 (set (reg/f:DI 99 [ D.3688 ])
        (mem/f:DI (reg/f:DI 228) [0 *flight_16(D)+0 S8 A64])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 182 181 183 11 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(insn 183 182 184 11 (set (reg:DI 100 [ D.3685 ])
        (sign_extend:DI (reg:SI 229))) mQuery.c:76 149 {*extendsidi2_rex64}
     (nil))
(insn 184 183 185 11 (set (reg:DI 230)
        (reg:DI 100 [ D.3685 ])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 185 184 186 11 (parallel [
            (set (reg:DI 230)
                (ashift:DI (reg:DI 230)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 186 185 187 11 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg:DI 230)
                    (reg:DI 100 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 187 186 188 11 (parallel [
            (set (reg:DI 231)
                (ashift:DI (reg:DI 230)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 513 {*ashldi3_1}
     (nil))
(insn 188 187 189 11 (set (reg:DI 230)
        (reg:DI 231)) mQuery.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 189 188 190 11 (set (reg:DI 101 [ D.3685 ])
        (reg:DI 230)) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 190 189 191 11 (parallel [
            (set (reg/f:DI 102 [ D.3688 ])
                (plus:DI (reg/f:DI 99 [ D.3688 ])
                    (reg:DI 101 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 274 {*adddi_1}
     (nil))
(insn 191 190 192 11 (set (reg:SI 103 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 102 [ D.3688 ])
                (const_int 4 [0x4])) [0 _61->n_nvp+0 S4 A32])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(insn 192 191 193 11 (parallel [
            (set (reg:SI 104 [ D.3689 ])
                (plus:SI (reg:SI 103 [ D.3689 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:76 273 {*addsi_1}
     (nil))
(insn 193 192 194 11 (set (reg:SI 5 di)
        (reg:SI 104 [ D.3689 ])) mQuery.c:76 89 {*movsi_internal}
     (nil))
(call_insn 194 193 195 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_vec") [flags 0x41]  <function_decl 0x7f87349e8700 falloc_vec>) [0 falloc_vec S1 A8])
            (const_int 0 [0]))) mQuery.c:76 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 195 194 196 11 (set (reg/f:DI 105 [ D.3692 ])
        (reg:DI 0 ax)) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 196 195 197 11 (set (mem/f/j:DI (plus:DI (reg/f:DI 98 [ D.3688 ])
                (const_int 24 [0x18])) [0 _57->vel+0 S8 A64])
        (reg/f:DI 105 [ D.3692 ])) mQuery.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 197 196 198 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
        (const_int 0 [0])) mQuery.c:78 89 {*movsi_internal}
     (nil))
(jump_insn 198 197 199 11 (set (pc)
        (label_ref 490)) mQuery.c:78 650 {jump}
     (nil)
 -> 490)
;;  succ:       47

(barrier 199 198 504)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       47
(code_label 504 199 200 12 48 "" [1 uses])
(note 200 504 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 273 {*addsi_1}
     (nil))
(jump_insn 202 201 203 12 (set (pc)
        (label_ref 206)) mQuery.c:79 650 {jump}
     (nil)
 -> 206)
;;  succ:       14

(barrier 203 202 223)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 223 203 204 13 29 "" [1 uses])
(note 204 223 205 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:79 273 {*addsi_1}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13 (FALLTHRU,DFS_BACK)
(code_label 206 205 207 14 27 "" [1 uses])
(note 207 206 208 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 14 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 209 208 210 14 (set (reg:DI 232)
        (sign_extend:DI (reg:SI 233))) mQuery.c:79 149 {*extendsidi2_rex64}
     (nil))
(insn 210 209 211 14 (set (reg:QI 111 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 232))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (nil))
(insn 211 210 212 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 111 [ D.3690 ])
            (const_int 9 [0x9]))) mQuery.c:79 5 {*cmpqi_1}
     (nil))
(jump_insn 212 211 213 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       15 (FALLTHRU)
;;              17

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 213 212 214 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 15 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 215 214 216 15 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 235))) mQuery.c:79 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 15 (set (reg:QI 112 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 234))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (nil))
(insn 217 216 218 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:79 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 218 217 219 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 219 218 220 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 16 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:79 89 {*movsi_internal}
     (nil))
(insn 221 220 222 16 (set (reg:DI 236)
        (sign_extend:DI (reg:SI 237))) mQuery.c:79 149 {*extendsidi2_rex64}
     (nil))
(insn 222 221 224 16 (set (reg:QI 113 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 236))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:79 91 {*movqi_internal}
     (nil))
(insn 224 222 225 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:79 5 {*cmpqi_1}
     (nil))
(jump_insn 225 224 226 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) mQuery.c:79 612 {*jcc_1}
     (nil)
 -> 223)
;;  succ:       13
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15
;;              16 (FALLTHRU)
(code_label 226 225 227 17 28 "" [2 uses])
(note 227 226 228 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 17 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 89 {*movsi_internal}
     (nil))
(insn 229 228 230 17 (set (reg:DI 238)
        (sign_extend:DI (reg:SI 239))) mQuery.c:80 149 {*extendsidi2_rex64}
     (nil))
(insn 230 229 231 17 (set (reg:QI 114 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 238))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 91 {*movqi_internal}
     (nil))
(insn 231 230 232 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:80 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 232 231 233 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) mQuery.c:80 612 {*jcc_1}
     (nil)
 -> 239)
;;  succ:       19
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 233 232 234 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 18 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:80 89 {*movsi_internal}
     (nil))
(insn 235 234 236 18 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 241))) mQuery.c:80 149 {*extendsidi2_rex64}
     (nil))
(insn 236 235 237 18 (set (reg:QI 115 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 240))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:80 91 {*movqi_internal}
     (nil))
(insn 237 236 238 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:80 5 {*cmpqi_1}
     (nil))
(jump_insn 238 237 239 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) mQuery.c:80 612 {*jcc_1}
     (nil)
 -> 243)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 239 238 240 19 30 "" [1 uses])
(note 240 239 241 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f873475f000 *.LC8>)) mQuery.c:80 87 {*movdi_internal_rex64}
     (nil))
(call_insn 242 241 243 19 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:80 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              19 (FALLTHRU)
(code_label 243 242 244 20 31 "" [1 uses])
(note 244 243 245 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 20 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 246 245 247 20 (set (reg/f:DI 116 [ D.3688 ])
        (mem/f:DI (reg/f:DI 242) [0 *flight_16(D)+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 247 246 248 20 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 248 247 249 20 (set (reg:DI 117 [ D.3685 ])
        (sign_extend:DI (reg:SI 243))) mQuery.c:81 149 {*extendsidi2_rex64}
     (nil))
(insn 249 248 250 20 (set (reg:DI 244)
        (reg:DI 117 [ D.3685 ])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 20 (parallel [
            (set (reg:DI 244)
                (ashift:DI (reg:DI 244)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (nil))
(insn 251 250 252 20 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 244)
                    (reg:DI 117 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 252 251 253 20 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 244)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (nil))
(insn 253 252 254 20 (set (reg:DI 244)
        (reg:DI 245)) mQuery.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 117 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 254 253 255 20 (set (reg:DI 118 [ D.3685 ])
        (reg:DI 244)) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 255 254 256 20 (parallel [
            (set (reg/f:DI 119 [ D.3688 ])
                (plus:DI (reg/f:DI 116 [ D.3688 ])
                    (reg:DI 118 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (nil))
(insn 256 255 257 20 (set (reg/f:DI 120 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 119 [ D.3688 ])
                (const_int 8 [0x8])) [0 _81->nvp+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 257 256 258 20 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 258 257 259 20 (set (reg:DI 121 [ D.3685 ])
        (sign_extend:DI (reg:SI 246))) mQuery.c:81 149 {*extendsidi2_rex64}
     (nil))
(insn 259 258 260 20 (parallel [
            (set (reg:DI 122 [ D.3685 ])
                (ashift:DI (reg:DI 121 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 513 {*ashldi3_1}
     (nil))
(insn 260 259 261 20 (parallel [
            (set (reg/f:DI 123 [ D.3691 ])
                (plus:DI (reg/f:DI 120 [ D.3691 ])
                    (reg:DI 122 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (nil))
(insn 261 260 262 20 (set (reg/f:DI 124 [ D.3692 ])
        (mem/f:DI (reg/f:DI 123 [ D.3691 ]) [0 *_85+0 S8 A64])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 262 261 263 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 273 {*addsi_1}
     (nil))
(insn 263 262 264 20 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (nil))
(insn 264 263 265 20 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:81 89 {*movsi_internal}
     (nil))
(insn 265 264 266 20 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) mQuery.c:81 149 {*extendsidi2_rex64}
     (nil))
(insn 266 265 267 20 (parallel [
            (set (reg/f:DI 125 [ D.3687 ])
                (plus:DI (reg:DI 247)
                    (reg:DI 248)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:81 274 {*adddi_1}
     (nil))
(insn 267 266 268 20 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.3687 ])) mQuery.c:81 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 268 267 269 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:81 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 269 268 270 20 (set (reg:DF 126 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:81 133 {*movdf_internal_rex64}
     (nil))
(insn 270 269 271 20 (set (reg:XF 127 [ D.3694 ])
        (float_extend:XF (reg:DF 126 [ D.3693 ]))) mQuery.c:81 162 {*extenddfxf2_i387}
     (nil))
(insn 271 270 272 20 (set (mem:XF (reg/f:DI 124 [ D.3692 ]) [0 *_86+0 S16 A128])
        (reg:XF 127 [ D.3694 ])) mQuery.c:81 131 {*movxf_internal_rex64}
     (nil))
(insn 272 271 273 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 273 {*addsi_1}
     (nil))
(jump_insn 273 272 274 20 (set (pc)
        (label_ref 277)) mQuery.c:83 650 {jump}
     (nil)
 -> 277)
;;  succ:       22

(barrier 274 273 294)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 294 274 275 21 34 "" [1 uses])
(note 275 294 276 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:83 273 {*addsi_1}
     (nil))
;;  succ:       22 (FALLTHRU,DFS_BACK)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
;;              21 (FALLTHRU,DFS_BACK)
(code_label 277 276 278 22 32 "" [1 uses])
(note 278 277 279 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 22 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 280 279 281 22 (set (reg:DI 250)
        (sign_extend:DI (reg:SI 251))) mQuery.c:83 149 {*extendsidi2_rex64}
     (nil))
(insn 281 280 282 22 (set (reg:QI 128 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 250))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (nil))
(insn 282 281 283 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:83 5 {*cmpqi_1}
     (nil))
(jump_insn 283 282 284 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       23 (FALLTHRU)
;;              25

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 284 283 285 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 23 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 286 285 287 23 (set (reg:DI 252)
        (sign_extend:DI (reg:SI 253))) mQuery.c:83 149 {*extendsidi2_rex64}
     (nil))
(insn 287 286 288 23 (set (reg:QI 129 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 252))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (nil))
(insn 288 287 289 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:83 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 289 288 290 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       24 (FALLTHRU)
;;              25

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 290 289 291 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 24 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:83 89 {*movsi_internal}
     (nil))
(insn 292 291 293 24 (set (reg:DI 254)
        (sign_extend:DI (reg:SI 255))) mQuery.c:83 149 {*extendsidi2_rex64}
     (nil))
(insn 293 292 295 24 (set (reg:QI 130 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 254))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:83 91 {*movqi_internal}
     (nil))
(insn 295 293 296 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:83 5 {*cmpqi_1}
     (nil))
(jump_insn 296 295 297 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) mQuery.c:83 612 {*jcc_1}
     (nil)
 -> 294)
;;  succ:       21
;;              25 (FALLTHRU)

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              23
;;              24 (FALLTHRU)
(code_label 297 296 298 25 33 "" [2 uses])
(note 298 297 299 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 25 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:84 89 {*movsi_internal}
     (nil))
(insn 300 299 301 25 (set (reg:DI 256)
        (sign_extend:DI (reg:SI 257))) mQuery.c:84 149 {*extendsidi2_rex64}
     (nil))
(insn 301 300 302 25 (set (reg:QI 131 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 256))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:84 91 {*movqi_internal}
     (nil))
(insn 302 301 303 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 131 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:84 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 303 302 304 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) mQuery.c:84 612 {*jcc_1}
     (nil)
 -> 307)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 304 303 305 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f873475f098 *.LC9>)) mQuery.c:84 87 {*movdi_internal_rex64}
     (nil))
(call_insn 306 305 307 26 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:84 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              26 (FALLTHRU)
(code_label 307 306 308 27 35 "" [1 uses])
(note 308 307 309 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 27 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 310 309 311 27 (set (reg/f:DI 132 [ D.3688 ])
        (mem/f:DI (reg/f:DI 258) [0 *flight_16(D)+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 311 310 312 27 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 312 311 313 27 (set (reg:DI 133 [ D.3685 ])
        (sign_extend:DI (reg:SI 259))) mQuery.c:85 149 {*extendsidi2_rex64}
     (nil))
(insn 313 312 314 27 (set (reg:DI 260)
        (reg:DI 133 [ D.3685 ])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 314 313 315 27 (parallel [
            (set (reg:DI 260)
                (ashift:DI (reg:DI 260)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (nil))
(insn 315 314 316 27 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg:DI 260)
                    (reg:DI 133 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 316 315 317 27 (parallel [
            (set (reg:DI 261)
                (ashift:DI (reg:DI 260)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (nil))
(insn 317 316 318 27 (set (reg:DI 260)
        (reg:DI 261)) mQuery.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 318 317 319 27 (set (reg:DI 134 [ D.3685 ])
        (reg:DI 260)) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 319 318 320 27 (parallel [
            (set (reg/f:DI 135 [ D.3688 ])
                (plus:DI (reg/f:DI 132 [ D.3688 ])
                    (reg:DI 134 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (nil))
(insn 320 319 321 27 (set (reg/f:DI 136 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 135 [ D.3688 ])
                (const_int 8 [0x8])) [0 _100->nvp+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 321 320 322 27 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 322 321 323 27 (set (reg:DI 137 [ D.3685 ])
        (sign_extend:DI (reg:SI 262))) mQuery.c:85 149 {*extendsidi2_rex64}
     (nil))
(insn 323 322 324 27 (parallel [
            (set (reg:DI 138 [ D.3685 ])
                (ashift:DI (reg:DI 137 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 513 {*ashldi3_1}
     (nil))
(insn 324 323 325 27 (parallel [
            (set (reg/f:DI 139 [ D.3691 ])
                (plus:DI (reg/f:DI 136 [ D.3691 ])
                    (reg:DI 138 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (nil))
(insn 325 324 326 27 (set (reg/f:DI 140 [ D.3692 ])
        (mem/f:DI (reg/f:DI 139 [ D.3691 ]) [0 *_104+0 S8 A64])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(insn 326 325 327 27 (parallel [
            (set (reg/f:DI 141 [ D.3692 ])
                (plus:DI (reg/f:DI 140 [ D.3692 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (nil))
(insn 327 326 328 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 273 {*addsi_1}
     (nil))
(insn 328 327 329 27 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (nil))
(insn 329 328 330 27 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:85 89 {*movsi_internal}
     (nil))
(insn 330 329 331 27 (set (reg:DI 264)
        (sign_extend:DI (reg:SI 265))) mQuery.c:85 149 {*extendsidi2_rex64}
     (nil))
(insn 331 330 332 27 (parallel [
            (set (reg/f:DI 142 [ D.3687 ])
                (plus:DI (reg:DI 263)
                    (reg:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:85 274 {*adddi_1}
     (nil))
(insn 332 331 333 27 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.3687 ])) mQuery.c:85 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 333 332 334 27 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:85 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 334 333 335 27 (set (reg:DF 143 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:85 133 {*movdf_internal_rex64}
     (nil))
(insn 335 334 336 27 (set (reg:XF 144 [ D.3694 ])
        (float_extend:XF (reg:DF 143 [ D.3693 ]))) mQuery.c:85 162 {*extenddfxf2_i387}
     (nil))
(insn 336 335 337 27 (set (mem:XF (reg/f:DI 141 [ D.3692 ]) [0 *_106+0 S16 A128])
        (reg:XF 144 [ D.3694 ])) mQuery.c:85 131 {*movxf_internal_rex64}
     (nil))
(insn 337 336 338 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 273 {*addsi_1}
     (nil))
(jump_insn 338 337 339 27 (set (pc)
        (label_ref 342)) mQuery.c:87 650 {jump}
     (nil)
 -> 342)
;;  succ:       29

(barrier 339 338 359)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
(code_label 359 339 340 28 38 "" [1 uses])
(note 340 359 341 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:87 273 {*addsi_1}
     (nil))
;;  succ:       29 (FALLTHRU,DFS_BACK)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
;;              28 (FALLTHRU,DFS_BACK)
(code_label 342 341 343 29 36 "" [1 uses])
(note 343 342 344 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 29 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 345 344 346 29 (set (reg:DI 266)
        (sign_extend:DI (reg:SI 267))) mQuery.c:87 149 {*extendsidi2_rex64}
     (nil))
(insn 346 345 347 29 (set (reg:QI 145 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 266))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (nil))
(insn 347 346 348 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:87 5 {*cmpqi_1}
     (nil))
(jump_insn 348 347 349 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 362)
;;  succ:       30 (FALLTHRU)
;;              32

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 349 348 350 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 30 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 351 350 352 30 (set (reg:DI 268)
        (sign_extend:DI (reg:SI 269))) mQuery.c:87 149 {*extendsidi2_rex64}
     (nil))
(insn 352 351 353 30 (set (reg:QI 146 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 268))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (nil))
(insn 353 352 354 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:87 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 354 353 355 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 362)
;;  succ:       31 (FALLTHRU)
;;              32

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 355 354 356 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 31 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:87 89 {*movsi_internal}
     (nil))
(insn 357 356 358 31 (set (reg:DI 270)
        (sign_extend:DI (reg:SI 271))) mQuery.c:87 149 {*extendsidi2_rex64}
     (nil))
(insn 358 357 360 31 (set (reg:QI 147 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 270))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:87 91 {*movqi_internal}
     (nil))
(insn 360 358 361 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.3690 ])
            (const_int 10 [0xa]))) mQuery.c:87 5 {*cmpqi_1}
     (nil))
(jump_insn 361 360 362 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) mQuery.c:87 612 {*jcc_1}
     (nil)
 -> 359)
;;  succ:       28
;;              32 (FALLTHRU)

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
;;              30
;;              31 (FALLTHRU)
(code_label 362 361 363 32 37 "" [2 uses])
(note 363 362 364 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 32 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:88 89 {*movsi_internal}
     (nil))
(insn 365 364 366 32 (set (reg:DI 272)
        (sign_extend:DI (reg:SI 273))) mQuery.c:88 149 {*extendsidi2_rex64}
     (nil))
(insn 366 365 367 32 (set (reg:QI 148 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 272))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:88 91 {*movqi_internal}
     (nil))
(insn 367 366 368 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:88 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 368 367 369 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) mQuery.c:88 612 {*jcc_1}
     (nil)
 -> 372)
;;  succ:       33 (FALLTHRU)
;;              34

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 369 368 370 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f873475f130 *.LC10>)) mQuery.c:88 87 {*movdi_internal_rex64}
     (nil))
(call_insn 371 370 372 33 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:88 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       34 (FALLTHRU)

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
;;              33 (FALLTHRU)
(code_label 372 371 373 34 39 "" [1 uses])
(note 373 372 374 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 34 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 375 374 376 34 (set (reg/f:DI 149 [ D.3688 ])
        (mem/f:DI (reg/f:DI 274) [0 *flight_16(D)+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 376 375 377 34 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 377 376 378 34 (set (reg:DI 150 [ D.3685 ])
        (sign_extend:DI (reg:SI 275))) mQuery.c:89 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 379 34 (set (reg:DI 276)
        (reg:DI 150 [ D.3685 ])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 379 378 380 34 (parallel [
            (set (reg:DI 276)
                (ashift:DI (reg:DI 276)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (nil))
(insn 380 379 381 34 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg:DI 276)
                    (reg:DI 150 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 381 380 382 34 (parallel [
            (set (reg:DI 277)
                (ashift:DI (reg:DI 276)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (nil))
(insn 382 381 383 34 (set (reg:DI 276)
        (reg:DI 277)) mQuery.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 150 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 383 382 384 34 (set (reg:DI 151 [ D.3685 ])
        (reg:DI 276)) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 384 383 385 34 (parallel [
            (set (reg/f:DI 152 [ D.3688 ])
                (plus:DI (reg/f:DI 149 [ D.3688 ])
                    (reg:DI 151 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (nil))
(insn 385 384 386 34 (set (reg/f:DI 153 [ D.3691 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 152 [ D.3688 ])
                (const_int 8 [0x8])) [0 _120->nvp+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 386 385 387 34 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 387 386 388 34 (set (reg:DI 154 [ D.3685 ])
        (sign_extend:DI (reg:SI 278))) mQuery.c:89 149 {*extendsidi2_rex64}
     (nil))
(insn 388 387 389 34 (parallel [
            (set (reg:DI 155 [ D.3685 ])
                (ashift:DI (reg:DI 154 [ D.3685 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 513 {*ashldi3_1}
     (nil))
(insn 389 388 390 34 (parallel [
            (set (reg/f:DI 156 [ D.3691 ])
                (plus:DI (reg/f:DI 153 [ D.3691 ])
                    (reg:DI 155 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (nil))
(insn 390 389 391 34 (set (reg/f:DI 157 [ D.3692 ])
        (mem/f:DI (reg/f:DI 156 [ D.3691 ]) [0 *_124+0 S8 A64])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 391 390 392 34 (parallel [
            (set (reg/f:DI 158 [ D.3692 ])
                (plus:DI (reg/f:DI 157 [ D.3692 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (nil))
(insn 392 391 393 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 273 {*addsi_1}
     (nil))
(insn 393 392 394 34 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (nil))
(insn 394 393 395 34 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:89 89 {*movsi_internal}
     (nil))
(insn 395 394 396 34 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 281))) mQuery.c:89 149 {*extendsidi2_rex64}
     (nil))
(insn 396 395 397 34 (parallel [
            (set (reg/f:DI 159 [ D.3687 ])
                (plus:DI (reg:DI 279)
                    (reg:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:89 274 {*adddi_1}
     (nil))
(insn 397 396 398 34 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.3687 ])) mQuery.c:89 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 398 397 399 34 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:89 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 399 398 400 34 (set (reg:DF 160 [ D.3693 ])
        (reg:DF 21 xmm0)) mQuery.c:89 133 {*movdf_internal_rex64}
     (nil))
(insn 400 399 401 34 (set (reg:XF 161 [ D.3694 ])
        (float_extend:XF (reg:DF 160 [ D.3693 ]))) mQuery.c:89 162 {*extenddfxf2_i387}
     (nil))
(insn 401 400 402 34 (set (mem:XF (reg/f:DI 158 [ D.3692 ]) [0 *_126+0 S16 A128])
        (reg:XF 161 [ D.3694 ])) mQuery.c:89 131 {*movxf_internal_rex64}
     (nil))
(insn 402 401 403 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 273 {*addsi_1}
     (nil))
(jump_insn 403 402 404 34 (set (pc)
        (label_ref 407)) mQuery.c:92 650 {jump}
     (nil)
 -> 407)
;;  succ:       36

(barrier 404 403 418)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 418 404 405 35 42 "" [1 uses])
(note 405 418 406 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:92 273 {*addsi_1}
     (nil))
;;  succ:       36 (FALLTHRU,DFS_BACK)

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       34
;;              35 (FALLTHRU,DFS_BACK)
(code_label 407 406 408 36 40 "" [1 uses])
(note 408 407 409 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 36 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 89 {*movsi_internal}
     (nil))
(insn 410 409 411 36 (set (reg:DI 282)
        (sign_extend:DI (reg:SI 283))) mQuery.c:92 149 {*extendsidi2_rex64}
     (nil))
(insn 411 410 412 36 (set (reg:QI 162 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 282))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 91 {*movqi_internal}
     (nil))
(insn 412 411 413 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.3690 ])
            (const_int 44 [0x2c]))) mQuery.c:92 5 {*cmpqi_1}
     (nil))
(jump_insn 413 412 414 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) mQuery.c:92 612 {*jcc_1}
     (nil)
 -> 421)
;;  succ:       37 (FALLTHRU)
;;              38

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 414 413 415 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 37 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:92 89 {*movsi_internal}
     (nil))
(insn 416 415 417 37 (set (reg:DI 284)
        (sign_extend:DI (reg:SI 285))) mQuery.c:92 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 419 37 (set (reg:QI 163 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 284))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:92 91 {*movqi_internal}
     (nil))
(insn 419 417 420 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:92 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 420 419 421 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 418)
            (pc))) mQuery.c:92 612 {*jcc_1}
     (nil)
 -> 418)
;;  succ:       35
;;              38 (FALLTHRU)

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
;;              37 (FALLTHRU)
(code_label 421 420 422 38 41 "" [1 uses])
(note 422 421 423 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 38 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:93 89 {*movsi_internal}
     (nil))
(insn 424 423 425 38 (set (reg:DI 286)
        (sign_extend:DI (reg:SI 287))) mQuery.c:93 149 {*extendsidi2_rex64}
     (nil))
(insn 425 424 426 38 (set (reg:QI 164 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 286))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:93 91 {*movqi_internal}
     (nil))
(insn 426 425 427 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 164 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:93 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 427 426 428 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) mQuery.c:93 612 {*jcc_1}
     (nil)
 -> 431)
;;  succ:       39 (FALLTHRU)
;;              40

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 (FALLTHRU)
(note 428 427 429 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f873475f1c8 *.LC11>)) mQuery.c:93 87 {*movdi_internal_rex64}
     (nil))
(call_insn 430 429 431 39 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:93 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 (FALLTHRU)

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       38
;;              39 (FALLTHRU)
(code_label 431 430 432 40 43 "" [1 uses])
(note 432 431 433 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 273 {*addsi_1}
     (nil))
(jump_insn 434 433 435 40 (set (pc)
        (label_ref 438)) mQuery.c:94 650 {jump}
     (nil)
 -> 438)
;;  succ:       42

(barrier 435 434 449)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
(code_label 449 435 436 41 46 "" [1 uses])
(note 436 449 437 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 41 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:94 273 {*addsi_1}
     (nil))
;;  succ:       42 (FALLTHRU,DFS_BACK)

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
;;              41 (FALLTHRU,DFS_BACK)
(code_label 438 437 439 42 44 "" [1 uses])
(note 439 438 440 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 42 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 89 {*movsi_internal}
     (nil))
(insn 441 440 442 42 (set (reg:DI 288)
        (sign_extend:DI (reg:SI 289))) mQuery.c:94 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 42 (set (reg:QI 165 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 288))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 91 {*movqi_internal}
     (nil))
(insn 443 442 444 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.3690 ])
            (const_int 32 [0x20]))) mQuery.c:94 5 {*cmpqi_1}
     (nil))
(jump_insn 444 443 445 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) mQuery.c:94 612 {*jcc_1}
     (nil)
 -> 452)
;;  succ:       43 (FALLTHRU)
;;              44

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 (FALLTHRU)
(note 445 444 446 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 43 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:94 89 {*movsi_internal}
     (nil))
(insn 447 446 448 43 (set (reg:DI 290)
        (sign_extend:DI (reg:SI 291))) mQuery.c:94 149 {*extendsidi2_rex64}
     (nil))
(insn 448 447 450 43 (set (reg:QI 166 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 290))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:94 91 {*movqi_internal}
     (nil))
(insn 450 448 451 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:94 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 451 450 452 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) mQuery.c:94 612 {*jcc_1}
     (nil)
 -> 449)
;;  succ:       41
;;              44 (FALLTHRU)

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       42
;;              43 (FALLTHRU)
(code_label 452 451 453 44 45 "" [1 uses])
(note 453 452 454 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 44 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:95 89 {*movsi_internal}
     (nil))
(insn 455 454 456 44 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 293))) mQuery.c:95 149 {*extendsidi2_rex64}
     (nil))
(insn 456 455 457 44 (set (reg:QI 167 [ D.3690 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 292))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:95 91 {*movqi_internal}
     (nil))
(insn 457 456 458 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.3690 ])
            (const_int 0 [0]))) mQuery.c:95 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 458 457 459 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) mQuery.c:95 612 {*jcc_1}
     (nil)
 -> 462)
;;  succ:       45 (FALLTHRU)
;;              46

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 459 458 460 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f873475f260 *.LC12>)) mQuery.c:95 87 {*movdi_internal_rex64}
     (nil))
(call_insn 461 460 462 45 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:95 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 (FALLTHRU)

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
;;              45 (FALLTHRU)
(code_label 462 461 463 46 47 "" [1 uses])
(note 463 462 464 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 46 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 465 464 466 46 (set (reg/f:DI 168 [ D.3688 ])
        (mem/f:DI (reg/f:DI 294) [0 *flight_16(D)+0 S8 A64])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 466 465 467 46 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 467 466 468 46 (set (reg:DI 169 [ D.3685 ])
        (sign_extend:DI (reg:SI 295))) mQuery.c:96 149 {*extendsidi2_rex64}
     (nil))
(insn 468 467 469 46 (set (reg:DI 296)
        (reg:DI 169 [ D.3685 ])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 469 468 470 46 (parallel [
            (set (reg:DI 296)
                (ashift:DI (reg:DI 296)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (nil))
(insn 470 469 471 46 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 296)
                    (reg:DI 169 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 471 470 472 46 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 296)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (nil))
(insn 472 471 473 46 (set (reg:DI 296)
        (reg:DI 297)) mQuery.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 169 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 473 472 474 46 (set (reg:DI 170 [ D.3685 ])
        (reg:DI 296)) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 474 473 475 46 (parallel [
            (set (reg/f:DI 171 [ D.3688 ])
                (plus:DI (reg/f:DI 168 [ D.3688 ])
                    (reg:DI 170 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (nil))
(insn 475 474 476 46 (set (reg/f:DI 172 [ D.3692 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 171 [ D.3688 ])
                (const_int 16 [0x10])) [0 _144->time+0 S8 A128])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 476 475 477 46 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 477 476 478 46 (set (reg:DI 173 [ D.3685 ])
        (sign_extend:DI (reg:SI 298))) mQuery.c:96 149 {*extendsidi2_rex64}
     (nil))
(insn 478 477 479 46 (parallel [
            (set (reg:DI 174 [ D.3685 ])
                (ashift:DI (reg:DI 173 [ D.3685 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 513 {*ashldi3_1}
     (nil))
(insn 479 478 480 46 (parallel [
            (set (reg/f:DI 175 [ D.3692 ])
                (plus:DI (reg/f:DI 172 [ D.3692 ])
                    (reg:DI 174 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (nil))
(insn 480 479 481 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 273 {*addsi_1}
     (nil))
(insn 481 480 482 46 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (nil))
(insn 482 481 483 46 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 j+0 S4 A32])) mQuery.c:96 89 {*movsi_internal}
     (nil))
(insn 483 482 484 46 (set (reg:DI 300)
        (sign_extend:DI (reg:SI 301))) mQuery.c:96 149 {*extendsidi2_rex64}
     (nil))
(insn 484 483 485 46 (parallel [
            (set (reg/f:DI 176 [ D.3687 ])
                (plus:DI (reg:DI 299)
                    (reg:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:96 274 {*adddi_1}
     (nil))
(insn 485 484 486 46 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.3687 ])) mQuery.c:96 87 {*movdi_internal_rex64}
     (nil))
(call_insn 486 485 487 46 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_convert_time") [flags 0x3]  <function_decl 0x7f87346baf00 _convert_time>) [0 _convert_time S1 A8])
            (const_int 0 [0]))) mQuery.c:96 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 46 (set (reg:XF 177 [ D.3694 ])
        (reg:XF 8 st)) mQuery.c:96 131 {*movxf_internal_rex64}
     (nil))
(insn 488 487 489 46 (set (mem:XF (reg/f:DI 175 [ D.3692 ]) [0 *_148+0 S16 A128])
        (reg:XF 177 [ D.3694 ])) mQuery.c:96 131 {*movxf_internal_rex64}
     (nil))
(insn 489 488 490 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 273 {*addsi_1}
     (nil))
;;  succ:       47 (FALLTHRU,DFS_BACK)

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              46 (FALLTHRU,DFS_BACK)
(code_label 490 489 491 47 26 "" [1 uses])
(note 491 490 492 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 47 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 493 492 494 47 (set (reg/f:DI 106 [ D.3688 ])
        (mem/f:DI (reg/f:DI 302) [0 *flight_16(D)+0 S8 A64])) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 494 493 495 47 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:78 89 {*movsi_internal}
     (nil))
(insn 495 494 496 47 (set (reg:DI 107 [ D.3685 ])
        (sign_extend:DI (reg:SI 303))) mQuery.c:78 149 {*extendsidi2_rex64}
     (nil))
(insn 496 495 497 47 (set (reg:DI 304)
        (reg:DI 107 [ D.3685 ])) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 497 496 498 47 (parallel [
            (set (reg:DI 304)
                (ashift:DI (reg:DI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 513 {*ashldi3_1}
     (nil))
(insn 498 497 499 47 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 304)
                    (reg:DI 107 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 499 498 500 47 (parallel [
            (set (reg:DI 305)
                (ashift:DI (reg:DI 304)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 513 {*ashldi3_1}
     (nil))
(insn 500 499 501 47 (set (reg:DI 304)
        (reg:DI 305)) mQuery.c:78 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 107 [ D.3685 ])
            (const_int 160 [0xa0]))
        (nil)))
(insn 501 500 502 47 (set (reg:DI 108 [ D.3685 ])
        (reg:DI 304)) mQuery.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 502 501 503 47 (parallel [
            (set (reg/f:DI 109 [ D.3688 ])
                (plus:DI (reg/f:DI 106 [ D.3688 ])
                    (reg:DI 108 [ D.3685 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:78 274 {*adddi_1}
     (nil))
(insn 503 502 505 47 (set (reg:SI 110 [ D.3689 ])
        (mem/j:SI (plus:DI (reg/f:DI 109 [ D.3688 ])
                (const_int 4 [0x4])) [0 _69->n_nvp+0 S4 A32])) mQuery.c:78 89 {*movsi_internal}
     (nil))
(insn 505 503 506 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110 [ D.3689 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 h+0 S4 A32]))) mQuery.c:78 7 {*cmpsi_1}
     (nil))
(jump_insn 506 505 507 47 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) mQuery.c:78 612 {*jcc_1}
     (nil)
 -> 504)
;;  succ:       12
;;              48 (FALLTHRU)

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
(note 507 506 508 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:66 273 {*addsi_1}
     (nil))
;;  succ:       49 (FALLTHRU,DFS_BACK)

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              48 (FALLTHRU,DFS_BACK)
(code_label 509 508 510 49 22 "" [1 uses])
(note 510 509 512 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 512 510 513 49 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 i+0 S4 A32])) mQuery.c:66 89 {*movsi_internal}
     (nil))
(insn 513 512 514 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 306)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32]))) mQuery.c:66 7 {*cmpsi_1}
     (nil))
(jump_insn 514 513 515 49 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) mQuery.c:66 612 {*jcc_1}
     (nil)
 -> 511)
;;  succ:       6
;;              50 (FALLTHRU)

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
(note 515 514 516 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 50 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 flight+0 S8 A64])) mQuery.c:100 87 {*movdi_internal_rex64}
     (nil))
(insn 517 516 518 50 (set (reg/f:DI 178 [ D.3688 ])
        (mem/f:DI (reg/f:DI 307) [0 *flight_16(D)+0 S8 A64])) mQuery.c:100 87 {*movdi_internal_rex64}
     (nil))
(insn 518 517 519 50 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:100 89 {*movsi_internal}
     (nil))
(insn 519 518 520 50 (set (reg:SI 4 si)
        (reg:SI 308)) mQuery.c:100 89 {*movsi_internal}
     (nil))
(insn 520 519 521 50 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.3688 ])) mQuery.c:100 87 {*movdi_internal_rex64}
     (nil))
(call_insn 521 520 522 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_calculate_velocity") [flags 0x3]  <function_decl 0x7f87346c5000 _calculate_velocity>) [0 _calculate_velocity S1 A8])
            (const_int 0 [0]))) mQuery.c:100 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 522 521 525 50 (set (reg:SI 179 [ D.3689 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 Nflight+0 S4 A32])) mQuery.c:107 89 {*movsi_internal}
     (nil))
(insn 525 522 529 50 (set (reg:SI 180 [ <retval> ])
        (reg:SI 179 [ D.3689 ])) mQuery.c:107 89 {*movsi_internal}
     (nil))
(insn 529 525 532 50 (set (reg/i:SI 0 ax)
        (reg:SI 180 [ <retval> ])) mQuery.c:108 89 {*movsi_internal}
     (nil))
(insn 532 529 533 50 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3695+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:108 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 533 532 540 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) mQuery.c:108 612 {*jcc_1}
     (nil)
 -> 536)
;;  succ:       54
;;              53 (FALLTHRU)

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
(note 540 533 534 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn 534 540 535 53 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:108 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 535 534 536)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       50
(code_label 536 535 541 54 51 "" [1 uses])
(note 541 536 537 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 537 541 0 54 (use (reg/i:SI 0 ax)) mQuery.c:108 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function _find_value_string (_find_value_string, funcdef_no=5, decl_uid=3177, cgraph_uid=5)

(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:112 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
        (reg:DI 4 si [ label ])) mQuery.c:112 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:112 966 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (reg:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50040 [0xffffffffffff3c88])) [0 config_file+0 S8 A64])) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 75)) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:114 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 76)
        (reg:DI 0 ax)) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 76)) mQuery.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:115 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:115 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8734780000 *.LC13>)) mQuery.c:115 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:115 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 53 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
        (const_int 0 [0])) mQuery.c:120 89 {*movsi_internal}
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 26)) mQuery.c:120 650 {jump}
     (nil)
 -> 26)
;;  succ:       7

(barrier 23 22 33)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 33 23 24 6 55 "" [1 uses])
(note 24 33 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 26 25 27 7 54 "" [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:120 89 {*movsi_internal}
     (nil))
(insn 29 28 30 7 (set (reg:DI 59 [ D.3706 ])
        (sign_extend:DI (reg:SI 77))) mQuery.c:120 149 {*extendsidi2_rex64}
     (nil))
(insn 30 29 31 7 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg/f:DI 60 [ D.3707 ])
                (plus:DI (reg:DI 59 [ D.3706 ])
                    (reg/f:DI 78)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:120 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])
            (reg:DI 59 [ D.3706 ]))
        (nil)))
(insn 32 31 34 7 (set (reg:QI 61 [ D.3708 ])
        (mem:QI (reg/f:DI 60 [ D.3707 ]) [0 *_8+0 S1 A8])) mQuery.c:120 91 {*movqi_internal}
     (nil))
(insn 34 32 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:120 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:120 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 36 38 8 (set (pc)
        (label_ref 114)) mQuery.c:122 650 {jump}
     (nil)
 -> 114)
;;  succ:       21

(barrier 38 37 123)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 123 38 39 9 64 "" [1 uses])
(note 39 123 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:QI 63 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 41 40 42 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:123 5 {*cmpqi_1}
     (nil))
(jump_insn 42 41 43 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 51)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 10 (set (reg:QI 64 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 45 44 46 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3708 ])
            (const_int 10 [0xa]))) mQuery.c:123 5 {*cmpqi_1}
     (nil))
(jump_insn 46 45 47 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 51)
;;  succ:       12
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 47 46 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 11 (set (reg:QI 65 [ D.3708 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -50016 [0xffffffffffff3ca0])) [0 c+0 S1 A128])) mQuery.c:123 91 {*movqi_internal}
     (nil))
(insn 49 48 50 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.3708 ])
            (const_int 32 [0x20]))) mQuery.c:123 5 {*cmpqi_1}
     (nil))
(jump_insn 50 49 51 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) mQuery.c:123 612 {*jcc_1}
     (nil)
 -> 55)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10
;;              11 (FALLTHRU)
(code_label 51 50 52 12 57 "" [2 uses])
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 53 52 54 12 (set (pc)
        (label_ref 114)) mQuery.c:123 650 {jump}
     (nil)
 -> 114)
;;  succ:       21 (DFS_BACK)

(barrier 54 53 55)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 55 54 56 13 58 "" [1 uses])
(note 56 55 57 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(jump_insn 58 57 59 13 (set (pc)
        (label_ref 62)) mQuery.c:124 650 {jump}
     (nil)
 -> 62)
;;  succ:       15

(barrier 59 58 73)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 73 59 60 14 61 "" [1 uses])
(note 60 73 61 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:124 273 {*addsi_1}
     (nil))
;;  succ:       15 (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              14 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 15 59 "" [1 uses])
(note 63 62 64 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 15 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(insn 65 64 66 15 (set (reg:DI 79)
        (sign_extend:DI (reg:SI 80))) mQuery.c:124 149 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 15 (set (reg:QI 66 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 79))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 91 {*movqi_internal}
     (nil))
(insn 67 66 68 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 66 [ D.3708 ])
            (const_int 35 [0x23]))) mQuery.c:124 5 {*cmpqi_1}
     (nil))
(jump_insn 68 67 69 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) mQuery.c:124 612 {*jcc_1}
     (nil)
 -> 76)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 69 68 70 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 16 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:124 89 {*movsi_internal}
     (nil))
(insn 71 70 72 16 (set (reg:DI 81)
        (sign_extend:DI (reg:SI 82))) mQuery.c:124 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 74 16 (set (reg:QI 67 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 81))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:124 91 {*movqi_internal}
     (nil))
(insn 74 72 75 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 67 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:124 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 75 74 76 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) mQuery.c:124 612 {*jcc_1}
     (nil)
 -> 73)
;;  succ:       14
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 76 75 77 17 60 "" [1 uses])
(note 77 76 78 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 17 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:125 89 {*movsi_internal}
     (nil))
(insn 79 78 80 17 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 84))) mQuery.c:125 149 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 17 (set (reg:QI 68 [ D.3708 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 83))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:125 91 {*movqi_internal}
     (nil))
(insn 81 80 82 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.3708 ])
            (const_int 0 [0]))) mQuery.c:125 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 82 81 83 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) mQuery.c:125 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 83 82 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8734780098 *.LC14>)) mQuery.c:125 87 {*movdi_internal_rex64}
     (nil))
(call_insn 85 84 86 18 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:125 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 86 85 87 19 62 "" [1 uses])
(note 87 86 88 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 19 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 lsize+0 S4 A32])) mQuery.c:126 89 {*movsi_internal}
     (nil))
(insn 89 88 90 19 (set (reg:DI 69 [ D.3709 ])
        (sign_extend:DI (reg:SI 85))) mQuery.c:126 149 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 273 {*addsi_1}
     (nil))
(insn 91 90 92 19 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 274 {*adddi_1}
     (nil))
(insn 92 91 93 19 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:126 89 {*movsi_internal}
     (nil))
(insn 93 92 94 19 (set (reg:DI 87)
        (sign_extend:DI (reg:SI 88))) mQuery.c:126 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 95 19 (parallel [
            (set (reg/f:DI 70 [ D.3707 ])
                (plus:DI (reg:DI 86)
                    (reg:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:126 274 {*adddi_1}
     (nil))
(insn 95 94 96 19 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 19 (set (reg:DI 1 dx)
        (reg:DI 69 [ D.3709 ])) mQuery.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 19 (set (reg:DI 4 si)
        (reg:DI 89)) mQuery.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 19 (set (reg:DI 5 di)
        (reg/f:DI 70 [ D.3707 ])) mQuery.c:126 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 99 98 100 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f8734935700 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) mQuery.c:126 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 100 99 101 19 (set (reg:SI 71 [ D.3710 ])
        (reg:SI 0 ax)) mQuery.c:126 89 {*movsi_internal}
     (nil))
(insn 101 100 102 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.3710 ])
            (const_int 0 [0]))) mQuery.c:126 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 102 101 103 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:126 612 {*jcc_1}
     (nil)
 -> 114)
;;  succ:       20 (FALLTHRU)
;;              21 (DFS_BACK)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 103 102 104 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 20 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 20 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:127 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:127 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 20 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:128 274 {*adddi_1}
     (nil))
(insn 108 107 109 20 (set (reg:DI 5 di)
        (reg:DI 91)) mQuery.c:128 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 109 108 110 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:128 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 111 20 (set (reg:DF 72 [ D.3711 ])
        (reg:DF 21 xmm0)) mQuery.c:128 133 {*movdf_internal_rex64}
     (nil))
(insn 111 110 112 20 (set (reg:XF 73 [ D.3712 ])
        (float_extend:XF (reg:DF 72 [ D.3711 ]))) mQuery.c:128 162 {*extenddfxf2_i387}
     (nil))
(jump_insn 112 111 113 20 (set (pc)
        (label_ref 138)) 650 {jump}
     (nil)
 -> 138)
;;  succ:       23

(barrier 113 112 114)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              12 (DFS_BACK)
;;              19 (DFS_BACK)
(code_label 114 113 115 21 56 "" [3 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 21 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 21 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:122 274 {*adddi_1}
     (nil))
(insn 118 117 119 21 (set (reg:DI 1 dx)
        (reg:DI 92)) mQuery.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 21 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:122 89 {*movsi_internal}
     (nil))
(insn 120 119 121 21 (set (reg:DI 5 di)
        (reg:DI 93)) mQuery.c:122 87 {*movdi_internal_rex64}
     (nil))
(call_insn 121 120 122 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:122 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 122 121 124 21 (set (reg/f:DI 62 [ D.3707 ])
        (reg:DI 0 ax)) mQuery.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 124 122 125 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.3707 ])
            (const_int 0 [0]))) mQuery.c:122 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 125 124 126 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) mQuery.c:122 612 {*jcc_1}
     (nil)
 -> 123)
;;  succ:       9
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 22 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 22 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:132 87 {*movdi_internal_rex64}
     (nil))
(call_insn 129 128 130 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:132 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 130 129 131 22 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50048 [0xffffffffffff3c80])) [0 label+0 S8 A64])) mQuery.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 22 (set (reg:DI 4 si)
        (reg:DI 95)) mQuery.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8734780130 *.LC15>)) mQuery.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:133 91 {*movqi_internal}
     (nil))
(call_insn 134 133 135 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8734941f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mQuery.c:133 663 {*call_value}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 135 134 136 22 (set (reg:SI 5 di)
        (const_int 0 [0])) mQuery.c:134 89 {*movsi_internal}
     (nil))
(call_insn 136 135 137 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8734955f00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mQuery.c:134 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 137 136 138)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
(code_label 138 137 139 23 63 "" [1 uses])
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 144 23 (set (reg:XF 74 [ <retval> ])
        (reg:XF 73 [ D.3712 ])) mQuery.c:128 131 {*movxf_internal_rex64}
     (nil))
(insn 144 140 147 23 (set (reg/i:XF 8 st)
        (reg:XF 74 [ <retval> ])) mQuery.c:136 131 {*movxf_internal_rex64}
     (nil))
(insn 147 144 148 23 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3713+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:136 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 148 147 155 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) mQuery.c:136 612 {*jcc_1}
     (nil)
 -> 151)
;;  succ:       26
;;              25 (FALLTHRU)

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
(note 155 148 149 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn 149 155 150 25 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:136 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 150 149 151)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 151 150 156 26 65 "" [1 uses])
(note 156 151 152 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 152 156 0 26 (use (reg/i:XF 8 st)) mQuery.c:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_configuration (get_configuration, funcdef_no=6, decl_uid=1766, cgraph_uid=6)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])
        (reg:DI 5 di [ config_file ])) mQuery.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:137 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f873478a5f0 *.LC16>)) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:139 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:XF 59 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:139 131 {*movxf_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j:XF (plus:DI (reg/f:DI 87)
                (const_int 16 [0x10])) [0 config_3(D)->max_ang+0 S16 A128])
        (reg:XF 59 [ D.3717 ])) mQuery.c:139 131 {*movxf_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f873478a688 *.LC17>)) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 88)) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:140 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:XF 60 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:140 131 {*movxf_internal_rex64}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 61 [ D.3718 ])
                (fix:SI (reg:XF 60 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:140 191 {*fix_truncsi_i387_1}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (mem/j:SI (plus:DI (reg/f:DI 89)
                (const_int 32 [0x20])) [0 config_3(D)->nsim+0 S4 A128])
        (reg:SI 61 [ D.3718 ])) mQuery.c:140 89 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f873478a720 *.LC18>)) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 90)) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(call_insn 25 24 26 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:141 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:XF 62 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:141 131 {*movxf_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (mem/j:XF (plus:DI (reg/f:DI 91)
                (const_int 64 [0x40])) [0 config_3(D)->direct_thr+0 S16 A128])
        (reg:XF 62 [ D.3717 ])) mQuery.c:141 131 {*movxf_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f873478a7b8 *.LC19>)) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 92)) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(call_insn 32 31 33 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:142 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg:XF 63 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:142 131 {*movxf_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (mem/j:XF (plus:DI (reg/f:DI 93)
                (const_int 80 [0x50])) [0 config_3(D)->xdelay+0 S16 A128])
        (reg:XF 63 [ D.3717 ])) mQuery.c:142 131 {*movxf_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f873478a850 *.LC20>)) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 94)) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(call_insn 39 38 40 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:143 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 40 39 41 2 (set (reg:XF 64 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:143 131 {*movxf_internal_rex64}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (mem/j:XF (plus:DI (reg/f:DI 95)
                (const_int 96 [0x60])) [0 config_3(D)->pdelay+0 S16 A128])
        (reg:XF 64 [ D.3717 ])) mQuery.c:143 131 {*movxf_internal_rex64}
     (nil))
(insn 43 42 44 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f873478a8e8 *.LC21>)) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 96)) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 47 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:144 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 47 46 48 2 (set (reg:XF 65 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:144 131 {*movxf_internal_rex64}
     (nil))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 66 [ D.3718 ])
                (fix:SI (reg:XF 65 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:144 191 {*fix_truncsi_i387_1}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 112 [0x70])) [0 config_3(D)->laplacian_vel+0 S4 A128])
        (reg:SI 66 [ D.3718 ])) mQuery.c:144 89 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f873478a980 *.LC22>)) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (reg:DI 5 di)
        (reg:DI 98)) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(call_insn 54 53 55 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:145 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 55 54 56 2 (set (reg:XF 67 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:145 131 {*movxf_internal_rex64}
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg:SI 68 [ D.3718 ])
                (fix:SI (reg:XF 67 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:145 191 {*fix_truncsi_i387_1}
     (nil))
(insn 57 56 58 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 116 [0x74])) [0 config_3(D)->Nm_shock+0 S4 A32])
        (reg:SI 68 [ D.3718 ])) mQuery.c:145 89 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f873478aa18 *.LC23>)) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (reg:DI 5 di)
        (reg:DI 100)) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:146 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 2 (set (reg:XF 69 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:146 131 {*movxf_internal_rex64}
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (mem/j:XF (plus:DI (reg/f:DI 101)
                (const_int 144 [0x90])) [0 config_3(D)->radius+0 S16 A128])
        (reg:XF 69 [ D.3717 ])) mQuery.c:146 131 {*movxf_internal_rex64}
     (nil))
(insn 66 65 67 2 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f873478aab0 *.LC24>)) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 2 (set (reg:DI 5 di)
        (reg:DI 102)) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(call_insn 69 68 70 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:147 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 70 69 71 2 (set (reg:XF 70 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:147 131 {*movxf_internal_rex64}
     (nil))
(insn 71 70 72 2 (parallel [
            (set (reg:SI 71 [ D.3718 ])
                (fix:SI (reg:XF 70 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:147 191 {*fix_truncsi_i387_1}
     (nil))
(insn 72 71 73 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 192 [0xc0])) [0 config_3(D)->t_w+0 S4 A128])
        (reg:SI 71 [ D.3718 ])) mQuery.c:147 89 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f873478ab48 *.LC25>)) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 104)) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(call_insn 77 76 78 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:148 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 2 (set (reg:XF 72 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:148 131 {*movxf_internal_rex64}
     (nil))
(insn 79 78 80 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 2 (set (mem/j:XF (plus:DI (reg/f:DI 105)
                (const_int 208 [0xd0])) [0 config_3(D)->t_i+0 S16 A128])
        (reg:XF 72 [ D.3717 ])) mQuery.c:148 131 {*movxf_internal_rex64}
     (nil))
(insn 81 80 82 2 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f873478abe0 *.LC26>)) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(call_insn 84 83 85 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:149 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 2 (set (reg:XF 73 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:149 131 {*movxf_internal_rex64}
     (nil))
(insn 86 85 87 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 2 (set (mem/j:XF (plus:DI (reg/f:DI 107)
                (const_int 224 [0xe0])) [0 config_3(D)->t_r+0 S16 A128])
        (reg:XF 73 [ D.3717 ])) mQuery.c:149 131 {*movxf_internal_rex64}
     (nil))
(insn 88 87 89 2 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f873478ac78 *.LC27>)) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 2 (set (reg:DI 5 di)
        (reg:DI 108)) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(call_insn 91 90 92 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:150 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 2 (set (reg:XF 74 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:150 131 {*movxf_internal_rex64}
     (nil))
(insn 93 92 94 2 (parallel [
            (set (reg:SI 75 [ D.3718 ])
                (fix:SI (reg:XF 74 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:150 191 {*fix_truncsi_i387_1}
     (nil))
(insn 94 93 95 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:150 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 2 (set (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 240 [0xf0])) [0 config_3(D)->shortest_path+0 S4 A128])
        (reg:SI 75 [ D.3718 ])) mQuery.c:150 89 {*movsi_internal}
     (nil))
(insn 96 95 97 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f873478ad10 *.LC28>)) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 2 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(call_insn 99 98 100 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:151 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 2 (set (reg:XF 76 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:151 131 {*movxf_internal_rex64}
     (nil))
(insn 101 100 102 2 (parallel [
            (set (reg:SI 77 [ D.3718 ])
                (fix:SI (reg:XF 76 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:151 191 {*fix_truncsi_i387_1}
     (nil))
(insn 102 101 103 2 (set (reg:XF 78 [ D.3717 ])
        (float:XF (reg:SI 77 [ D.3718 ]))) mQuery.c:151 212 {*floatsixf2_1}
     (nil))
(insn 103 102 104 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 2 (set (mem/j:XF (plus:DI (reg/f:DI 111)
                (const_int 256 [0x100])) [0 config_3(D)->d_thr+0 S16 A128])
        (reg:XF 78 [ D.3717 ])) mQuery.c:151 131 {*movxf_internal_rex64}
     (nil))
(insn 105 104 106 2 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 106 105 107 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f873478ada8 *.LC29>)) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 2 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(call_insn 108 107 109 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:152 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 109 108 110 2 (set (reg:XF 79 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:152 131 {*movxf_internal_rex64}
     (nil))
(insn 110 109 111 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 2 (set (mem/j:XF (plus:DI (reg/f:DI 113)
                (const_int 160 [0xa0])) [0 config_3(D)->f_lvl+0 S16 A128])
        (reg:XF 79 [ D.3717 ])) mQuery.c:152 131 {*movxf_internal_rex64}
     (nil))
(insn 112 111 113 2 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 113 112 114 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f873478ae40 *.LC30>)) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 114 113 115 2 (set (reg:DI 5 di)
        (reg:DI 114)) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(call_insn 115 114 116 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:153 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 2 (set (reg:XF 80 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:153 131 {*movxf_internal_rex64}
     (nil))
(insn 117 116 118 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 118 117 119 2 (set (mem/j:XF (plus:DI (reg/f:DI 115)
                (const_int 176 [0xb0])) [0 config_3(D)->f_lvl+16 S16 A128])
        (reg:XF 80 [ D.3717 ])) mQuery.c:153 131 {*movxf_internal_rex64}
     (nil))
(insn 119 118 120 2 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f873478aed8 *.LC31>)) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 121 120 122 2 (set (reg:DI 5 di)
        (reg:DI 116)) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(call_insn 122 121 123 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:154 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 123 122 124 2 (set (reg:XF 81 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:154 131 {*movxf_internal_rex64}
     (nil))
(insn 124 123 125 2 (parallel [
            (set (reg:SI 82 [ D.3718 ])
                (fix:SI (reg:XF 81 [ D.3717 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:154 191 {*fix_truncsi_i387_1}
     (nil))
(insn 125 124 126 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 126 125 127 2 (set (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 272 [0x110])) [0 config_3(D)->geom+0 S4 A128])
        (reg:SI 82 [ D.3718 ])) mQuery.c:154 89 {*movsi_internal}
     (nil))
(insn 127 126 128 2 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 config_file+0 S8 A64])) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8734794000 *.LC32>)) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 2 (set (reg:DI 5 di)
        (reg:DI 118)) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(call_insn 130 129 131 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_find_value_string") [flags 0x3]  <function_decl 0x7f87346c5200 _find_value_string>) [0 _find_value_string S1 A8])
            (const_int 0 [0]))) mQuery.c:155 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 131 130 132 2 (set (reg:XF 83 [ D.3717 ])
        (reg:XF 8 st)) mQuery.c:155 131 {*movxf_internal_rex64}
     (nil))
(insn 132 131 133 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 config+0 S8 A64])) mQuery.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 2 (set (mem/j:XF (plus:DI (reg/f:DI 119)
                (const_int 288 [0x120])) [0 config_3(D)->sig_V+0 S16 A128])
        (reg:XF 83 [ D.3717 ])) mQuery.c:155 131 {*movxf_internal_rex64}
     (nil))
(insn 134 133 137 2 (set (reg:SI 84 [ D.3718 ])
        (const_int 1 [0x1])) mQuery.c:156 89 {*movsi_internal}
     (nil))
(insn 137 134 141 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ D.3718 ])) mQuery.c:156 89 {*movsi_internal}
     (nil))
(insn 141 137 144 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) mQuery.c:157 89 {*movsi_internal}
     (nil))
(insn 144 141 0 2 (use (reg/i:SI 0 ax)) mQuery.c:157 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_boundary (get_boundary, funcdef_no=7, decl_uid=1763, cgraph_uid=7)

(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])
        (reg:DI 5 di [ bound_file ])) mQuery.c:159 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])
        (reg:DI 4 si [ config ])) mQuery.c:159 87 {*movdi_internal_rex64}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3745+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:159 966 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 106)) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:160 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 107)
        (reg:DI 0 ax)) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 107)) mQuery.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:162 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) mQuery.c:162 612 {*jcc_1}
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8734794980 *.LC33>)) mQuery.c:162 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:162 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 19 18 20 5 70 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
        (const_int 0 [0])) mQuery.c:165 89 {*movsi_internal}
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 26)) mQuery.c:165 650 {jump}
     (nil)
 -> 26)
;;  succ:       7

(barrier 23 22 35)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 35 23 24 6 72 "" [1 uses])
(note 24 35 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 26 25 27 7 71 "" [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:165 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:165 274 {*adddi_1}
     (nil))
(insn 30 29 31 7 (set (reg:DI 1 dx)
        (reg:DI 108)) mQuery.c:165 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 7 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:165 89 {*movsi_internal}
     (nil))
(insn 32 31 33 7 (set (reg:DI 5 di)
        (reg:DI 109)) mQuery.c:165 87 {*movdi_internal_rex64}
     (nil))
(call_insn 33 32 34 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:165 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 36 7 (set (reg/f:DI 59 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:165 87 {*movdi_internal_rex64}
     (nil))
(insn 36 34 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:165 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) mQuery.c:165 612 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 8 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:167 89 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (mem/j:SI (reg/f:DI 110) [0 config_9(D)->Nbound+0 S4 A128])
        (reg:SI 111)) mQuery.c:167 89 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:168 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:168 87 {*movdi_internal_rex64}
     (nil))
(call_insn 44 43 45 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:168 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 8 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 bound_file+0 S8 A64])) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 8 (set (reg:DI 5 di)
        (reg:DI 113)) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(call_insn 48 47 49 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:170 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 8 (set (reg:DI 114)
        (reg:DI 0 ax)) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])
        (reg:DI 114)) mQuery.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 8 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32])) mQuery.c:172 89 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:172 89 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:SI 5 di)
        (reg:SI 115)) mQuery.c:172 89 {*movsi_internal}
     (nil))
(call_insn 54 53 55 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:172 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 55 54 56 8 (set (reg/f:DI 60 [ D.3737 ])
        (reg:DI 0 ax)) mQuery.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])
        (reg/f:DI 60 [ D.3737 ])) mQuery.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(jump_insn 59 58 60 8 (set (pc)
        (label_ref 115)) mQuery.c:173 650 {jump}
     (nil)
 -> 115)
;;  succ:       14

(barrier 60 59 127)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 127 60 61 9 78 "" [1 uses])
(note 61 127 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 62 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 9 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:174 89 {*movsi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:DI 63 [ D.3738 ])
        (sign_extend:DI (reg:SI 118))) mQuery.c:174 149 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 64 [ D.3738 ])
                (ashift:DI (reg:DI 63 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 513 {*ashldi3_1}
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg/f:DI 65 [ D.3737 ])
                (plus:DI (reg/f:DI 62 [ D.3737 ])
                    (reg:DI 64 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 274 {*adddi_1}
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 66 [ D.3739 ])
        (mem/f:DI (reg/f:DI 65 [ D.3737 ]) [0 *_17+0 S8 A64])) mQuery.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:174 274 {*adddi_1}
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 119)) mQuery.c:174 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 71 70 72 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:174 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 9 (set (reg:DF 67 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:174 133 {*movdf_internal_rex64}
     (nil))
(insn 73 72 74 9 (set (reg:XF 68 [ D.3741 ])
        (float_extend:XF (reg:DF 67 [ D.3740 ]))) mQuery.c:174 162 {*extenddfxf2_i387}
     (nil))
(insn 74 73 75 9 (set (mem:XF (reg/f:DI 66 [ D.3739 ]) [0 *_18+0 S16 A128])
        (reg:XF 68 [ D.3741 ])) mQuery.c:174 131 {*movxf_internal_rex64}
     (nil))
(insn 75 74 76 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(jump_insn 76 75 77 9 (set (pc)
        (label_ref 80)) mQuery.c:175 650 {jump}
     (nil)
 -> 80)
;;  succ:       11

(barrier 77 76 91)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 91 77 78 10 76 "" [1 uses])
(note 78 91 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:175 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 80 79 81 11 74 "" [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (reg:DI 120)
        (sign_extend:DI (reg:SI 121))) mQuery.c:175 149 {*extendsidi2_rex64}
     (nil))
(insn 84 83 85 11 (set (reg:QI 69 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 120))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 91 {*movqi_internal}
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3742 ])
            (const_int 9 [0x9]))) mQuery.c:175 5 {*cmpqi_1}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:175 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:175 89 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (set (reg:DI 122)
        (sign_extend:DI (reg:SI 123))) mQuery.c:175 149 {*extendsidi2_rex64}
     (nil))
(insn 90 89 92 12 (set (reg:QI 70 [ D.3742 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 122))
                (const_int -50016 [0xffffffffffff3ca0])) [0 c S1 A8])) mQuery.c:175 91 {*movqi_internal}
     (nil))
(insn 92 90 93 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3742 ])
            (const_int 32 [0x20]))) mQuery.c:175 5 {*cmpqi_1}
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) mQuery.c:175 612 {*jcc_1}
     (nil)
 -> 91)
;;  succ:       10
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 94 93 95 13 75 "" [1 uses])
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 13 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 13 (set (reg/f:DI 71 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 124)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 13 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:176 89 {*movsi_internal}
     (nil))
(insn 99 98 100 13 (set (reg:DI 72 [ D.3738 ])
        (sign_extend:DI (reg:SI 125))) mQuery.c:176 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 13 (parallel [
            (set (reg:DI 73 [ D.3738 ])
                (ashift:DI (reg:DI 72 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 513 {*ashldi3_1}
     (nil))
(insn 101 100 102 13 (parallel [
            (set (reg/f:DI 74 [ D.3737 ])
                (plus:DI (reg/f:DI 71 [ D.3737 ])
                    (reg:DI 73 [ D.3738 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (nil))
(insn 102 101 103 13 (set (reg/f:DI 75 [ D.3739 ])
        (mem/f:DI (reg/f:DI 74 [ D.3737 ]) [0 *_28+0 S8 A64])) mQuery.c:176 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 13 (parallel [
            (set (reg/f:DI 76 [ D.3739 ])
                (plus:DI (reg/f:DI 75 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (nil))
(insn 104 103 105 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 273 {*addsi_1}
     (nil))
(insn 105 104 106 13 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (nil))
(insn 106 105 107 13 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50028 [0xffffffffffff3c94])) [0 j+0 S4 A32])) mQuery.c:176 89 {*movsi_internal}
     (nil))
(insn 107 106 108 13 (set (reg:DI 127)
        (sign_extend:DI (reg:SI 128))) mQuery.c:176 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg/f:DI 77 [ D.3736 ])
                (plus:DI (reg:DI 126)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:176 274 {*adddi_1}
     (nil))
(insn 109 108 110 13 (set (reg:DI 5 di)
        (reg/f:DI 77 [ D.3736 ])) mQuery.c:176 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 110 109 111 13 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:176 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 111 110 112 13 (set (reg:DF 78 [ D.3740 ])
        (reg:DF 21 xmm0)) mQuery.c:176 133 {*movdf_internal_rex64}
     (nil))
(insn 112 111 113 13 (set (reg:XF 79 [ D.3741 ])
        (float_extend:XF (reg:DF 78 [ D.3740 ]))) mQuery.c:176 162 {*extenddfxf2_i387}
     (nil))
(insn 113 112 114 13 (set (mem:XF (reg/f:DI 76 [ D.3739 ]) [0 *_30+0 S16 A128])
        (reg:XF 79 [ D.3741 ])) mQuery.c:176 131 {*movxf_internal_rex64}
     (nil))
(insn 114 113 115 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 273 {*addsi_1}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              13 (FALLTHRU,DFS_BACK)
(code_label 115 114 116 14 73 "" [1 uses])
(note 116 115 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 14 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:173 87 {*movdi_internal_rex64}
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:173 274 {*adddi_1}
     (nil))
(insn 119 118 120 14 (set (reg:DI 1 dx)
        (reg:DI 129)) mQuery.c:173 87 {*movdi_internal_rex64}
     (nil))
(insn 120 119 121 14 (set (reg:SI 4 si)
        (const_int 50000 [0xc350])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(insn 121 120 122 14 (set (reg:DI 5 di)
        (reg:DI 130)) mQuery.c:173 87 {*movdi_internal_rex64}
     (nil))
(call_insn 122 121 123 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:173 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 123 122 124 14 (set (reg/f:DI 61 [ D.3736 ])
        (reg:DI 0 ax)) mQuery.c:173 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3736 ])
            (const_int 0 [0]))) mQuery.c:173 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) mQuery.c:173 612 {*jcc_1}
     (nil)
 -> 131)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 126 125 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 126 129 15 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 i+0 S4 A32])) mQuery.c:173 89 {*movsi_internal}
     (nil))
(insn 129 128 130 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 131)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50036 [0xffffffffffff3c8c])) [0 Nbound+0 S4 A32]))) mQuery.c:173 7 {*cmpsi_1}
     (nil))
(jump_insn 130 129 131 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) mQuery.c:173 612 {*jcc_1}
     (nil)
 -> 127)
;;  succ:       9
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
(code_label 131 130 132 16 77 "" [1 uses])
(note 132 131 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 16 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 rstream+0 S8 A64])) mQuery.c:179 87 {*movdi_internal_rex64}
     (nil))
(insn 134 133 135 16 (set (reg:DI 5 di)
        (reg:DI 132)) mQuery.c:179 87 {*movdi_internal_rex64}
     (nil))
(call_insn 135 134 136 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:179 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 16 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 137 136 138 16 (set (reg/f:DI 80 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 138 137 139 16 (set (reg/f:DI 81 [ D.3739 ])
        (mem/f:DI (reg/f:DI 80 [ D.3737 ]) [0 *_36+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 139 138 140 16 (set (reg:XF 82 [ D.3741 ])
        (mem:XF (reg/f:DI 81 [ D.3739 ]) [0 *_37+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (nil))
(insn 140 139 141 16 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 141 140 142 16 (set (reg/f:DI 83 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 134)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 142 141 143 16 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 16 (set (reg:SI 84 [ D.3743 ])
        (mem/j:SI (reg/f:DI 135) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 89 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (set (reg:DI 85 [ D.3738 ])
        (sign_extend:DI (reg:SI 84 [ D.3743 ]))) mQuery.c:181 149 {*extendsidi2_rex64}
     (nil))
(insn 145 144 146 16 (parallel [
            (set (reg:DI 86 [ D.3738 ])
                (ashift:DI (reg:DI 85 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 513 {*ashldi3_1}
     (nil))
(insn 146 145 147 16 (parallel [
            (set (reg:DI 87 [ D.3744 ])
                (plus:DI (reg:DI 86 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 147 146 148 16 (parallel [
            (set (reg/f:DI 88 [ D.3737 ])
                (plus:DI (reg/f:DI 83 [ D.3737 ])
                    (reg:DI 87 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 148 147 149 16 (set (reg/f:DI 89 [ D.3739 ])
        (mem/f:DI (reg/f:DI 88 [ D.3737 ]) [0 *_44+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 16 (set (reg:XF 90 [ D.3741 ])
        (mem:XF (reg/f:DI 89 [ D.3739 ]) [0 *_45+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (nil))
(insn 150 149 151 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 151 150 201 16 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 201 151 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 152 201 153 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 82 [ D.3741 ])
            (reg:XF 90 [ D.3741 ]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 153 152 154 17 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              18 (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
(note 154 153 155 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 18 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 156 155 157 18 (set (reg/f:DI 91 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 136)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 18 (set (reg/f:DI 92 [ D.3739 ])
        (mem/f:DI (reg/f:DI 91 [ D.3737 ]) [0 *_47+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 158 157 159 18 (parallel [
            (set (reg/f:DI 93 [ D.3739 ])
                (plus:DI (reg/f:DI 92 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 159 158 160 18 (set (reg:XF 94 [ D.3741 ])
        (mem:XF (reg/f:DI 93 [ D.3739 ]) [0 *_49+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (nil))
(insn 160 159 161 18 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 161 160 162 18 (set (reg/f:DI 95 [ D.3737 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 137)
                (const_int 8 [0x8])) [0 config_9(D)->bound+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 162 161 163 18 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 config+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 163 162 164 18 (set (reg:SI 96 [ D.3743 ])
        (mem/j:SI (reg/f:DI 138) [0 config_9(D)->Nbound+0 S4 A128])) mQuery.c:181 89 {*movsi_internal}
     (nil))
(insn 164 163 165 18 (set (reg:DI 97 [ D.3738 ])
        (sign_extend:DI (reg:SI 96 [ D.3743 ]))) mQuery.c:181 149 {*extendsidi2_rex64}
     (nil))
(insn 165 164 166 18 (parallel [
            (set (reg:DI 98 [ D.3738 ])
                (ashift:DI (reg:DI 97 [ D.3738 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 513 {*ashldi3_1}
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg:DI 99 [ D.3744 ])
                (plus:DI (reg:DI 98 [ D.3738 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 167 166 168 18 (parallel [
            (set (reg/f:DI 100 [ D.3737 ])
                (plus:DI (reg/f:DI 95 [ D.3737 ])
                    (reg:DI 99 [ D.3744 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 168 167 169 18 (set (reg/f:DI 101 [ D.3739 ])
        (mem/f:DI (reg/f:DI 100 [ D.3737 ]) [0 *_56+0 S8 A64])) mQuery.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 18 (parallel [
            (set (reg/f:DI 102 [ D.3739 ])
                (plus:DI (reg/f:DI 101 [ D.3739 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:181 274 {*adddi_1}
     (nil))
(insn 170 169 171 18 (set (reg:XF 103 [ D.3741 ])
        (mem:XF (reg/f:DI 102 [ D.3739 ]) [0 *_58+0 S16 A128])) mQuery.c:181 131 {*movxf_internal_rex64}
     (nil))
(insn 171 170 172 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 172 171 202 18 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 202 172 173 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 173 202 174 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94 [ D.3741 ])
            (reg:XF 103 [ D.3741 ]))) mQuery.c:181 64 {*cmpiuxf_i387}
     (nil))
(jump_insn 174 173 203 19 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) mQuery.c:181 612 {*jcc_1}
     (nil)
 -> 178)
;;  succ:       22
;;              20 (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
(note 203 174 175 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 175 203 176 20 (set (pc)
        (label_ref 182)) mQuery.c:181 650 {jump}
     (nil)
 -> 182)
;;  succ:       23

(barrier 176 175 178)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              19
;;              16
;;              18
(code_label 178 176 179 22 79 "" [4 uses])
(note 179 178 180 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8734794a18 *.LC34>)) mQuery.c:182 87 {*movdi_internal_rex64}
     (nil))
(call_insn 181 180 182 22 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:182 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              20
(code_label 182 181 183 23 80 "" [1 uses])
(note 183 182 184 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 187 23 (set (reg:SI 104 [ D.3743 ])
        (const_int 1 [0x1])) mQuery.c:184 89 {*movsi_internal}
     (nil))
(insn 187 184 191 23 (set (reg:SI 105 [ <retval> ])
        (reg:SI 104 [ D.3743 ])) mQuery.c:184 89 {*movsi_internal}
     (nil))
(insn 191 187 194 23 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) mQuery.c:185 89 {*movsi_internal}
     (nil))
(insn 194 191 195 23 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3745+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:185 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 195 194 206 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) mQuery.c:185 612 {*jcc_1}
     (nil)
 -> 198)
;;  succ:       27
;;              26 (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
(note 206 195 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(call_insn 196 206 197 26 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:185 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 197 196 198)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 198 197 207 27 83 "" [1 uses])
(note 207 198 199 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 199 207 0 27 (use (reg/i:SI 0 ax)) mQuery.c:185 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function get_temp_shock (get_temp_shock, funcdef_no=8, decl_uid=1768, cgraph_uid=8)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])
        (reg:DI 5 di [ conf ])) mQuery.c:187 87 {*movdi_internal_rex64}
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3756+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:187 966 {stack_tls_protect_set_di}
     (nil))
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:189 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 84)
        (reg:DI 0 ax)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 84)) mQuery.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
            (const_int 0 [0]))) mQuery.c:190 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) mQuery.c:190 612 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f87347b0558 *.LC36>)) mQuery.c:190 87 {*movdi_internal_rex64}
     (nil))
(call_insn 16 15 17 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:190 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 17 16 18 5 87 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
        (const_int 0 [0])) mQuery.c:194 89 {*movsi_internal}
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (label_ref 24)) mQuery.c:194 650 {jump}
     (nil)
 -> 24)
;;  succ:       7

(barrier 21 20 33)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 33 21 22 6 89 "" [1 uses])
(note 22 33 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 24 23 25 7 88 "" [1 uses])
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 7 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:194 274 {*adddi_1}
     (nil))
(insn 28 27 29 7 (set (reg:DI 1 dx)
        (reg:DI 85)) mQuery.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 7 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:194 89 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:DI 5 di)
        (reg:DI 86)) mQuery.c:194 87 {*movdi_internal_rex64}
     (nil))
(call_insn 31 30 32 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:194 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 32 31 34 7 (set (reg/f:DI 59 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 34 32 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:194 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) mQuery.c:194 612 {*jcc_1}
     (nil)
 -> 33)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:195 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 8 (set (reg:DI 5 di)
        (reg:DI 87)) mQuery.c:195 87 {*movdi_internal_rex64}
     (nil))
(call_insn 39 38 40 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:195 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:197 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 8 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:197 89 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (mem/j:SI (plus:DI (reg/f:DI 88)
                (const_int 128 [0x80])) [0 conf_8(D)->n_point_shock+0 S4 A128])
        (reg:SI 89)) mQuery.c:197 89 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32])) mQuery.c:198 89 {*movsi_internal}
     (nil))
(insn 44 43 45 8 (set (reg:SI 4 si)
        (const_int 2 [0x2])) mQuery.c:198 89 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:SI 5 di)
        (reg:SI 90)) mQuery.c:198 89 {*movsi_internal}
     (nil))
(call_insn 46 45 47 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("falloc_matrix") [flags 0x41]  <function_decl 0x7f87349e8600 falloc_matrix>) [0 falloc_matrix S1 A8])
            (const_int 0 [0]))) mQuery.c:198 663 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 47 46 48 8 (set (reg/f:DI 60 [ D.3749 ])
        (reg:DI 0 ax)) mQuery.c:198 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 8 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:198 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])
        (reg/f:DI 60 [ D.3749 ])) mQuery.c:198 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8734751da8 *.LC5>)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f87347b04c0 *.LC35>)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(call_insn 52 51 53 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f8734a3fe00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mQuery.c:200 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 53 52 54 8 (set (reg:DI 92)
        (reg:DI 0 ax)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])
        (reg:DI 92)) mQuery.c:200 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (label_ref 128)) mQuery.c:201 650 {jump}
     (nil)
 -> 128)
;;  succ:       17

(barrier 57 56 140)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 140 57 58 9 96 "" [1 uses])
(note 58 140 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 62 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 9 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:202 89 {*movsi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 63 [ D.3750 ])
        (sign_extend:DI (reg:SI 94))) mQuery.c:202 149 {*extendsidi2_rex64}
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 64 [ D.3750 ])
                (ashift:DI (reg:DI 63 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 513 {*ashldi3_1}
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg/f:DI 65 [ D.3749 ])
                (plus:DI (reg/f:DI 62 [ D.3749 ])
                    (reg:DI 64 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 274 {*adddi_1}
     (nil))
(insn 65 64 66 9 (set (reg/f:DI 66 [ D.3751 ])
        (mem/f:DI (reg/f:DI 65 [ D.3749 ]) [0 *_16+0 S8 A64])) mQuery.c:202 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:202 274 {*adddi_1}
     (nil))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg:DI 95)) mQuery.c:202 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 68 67 69 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:202 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 9 (set (reg:DF 67 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:202 133 {*movdf_internal_rex64}
     (nil))
(insn 70 69 71 9 (set (reg:XF 68 [ D.3753 ])
        (float_extend:XF (reg:DF 67 [ D.3752 ]))) mQuery.c:202 162 {*extenddfxf2_i387}
     (nil))
(insn 71 70 72 9 (set (mem:XF (reg/f:DI 66 [ D.3751 ]) [0 *_17+0 S16 A128])
        (reg:XF 68 [ D.3753 ])) mQuery.c:202 131 {*movxf_internal_rex64}
     (nil))
(insn 72 71 73 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (label_ref 77)) mQuery.c:203 650 {jump}
     (nil)
 -> 77)
;;  succ:       11

(barrier 74 73 94)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 94 74 75 10 93 "" [1 uses])
(note 75 94 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:203 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 77 76 78 11 91 "" [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (set (reg:DI 96)
        (sign_extend:DI (reg:SI 97))) mQuery.c:203 149 {*extendsidi2_rex64}
     (nil))
(insn 81 80 82 11 (set (reg:QI 69 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 96))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (nil))
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.3754 ])
            (const_int 9 [0x9]))) mQuery.c:203 5 {*cmpqi_1}
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 97)
;;  succ:       12 (FALLTHRU)
;;              14

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 99))) mQuery.c:203 149 {*extendsidi2_rex64}
     (nil))
(insn 87 86 88 12 (set (reg:QI 70 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 98))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 70 [ D.3754 ])
            (const_int 32 [0x20]))) mQuery.c:203 5 {*cmpqi_1}
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 97)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:203 89 {*movsi_internal}
     (nil))
(insn 92 91 93 13 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 101))) mQuery.c:203 149 {*extendsidi2_rex64}
     (nil))
(insn 93 92 95 13 (set (reg:QI 71 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 100))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:203 91 {*movqi_internal}
     (nil))
(insn 95 93 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:203 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) mQuery.c:203 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       10
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12
;;              13 (FALLTHRU)
(code_label 97 96 98 14 92 "" [2 uses])
(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 14 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:204 89 {*movsi_internal}
     (nil))
(insn 100 99 101 14 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) mQuery.c:204 149 {*extendsidi2_rex64}
     (nil))
(insn 101 100 102 14 (set (reg:QI 72 [ D.3754 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 102))
                (const_int -512 [0xfffffffffffffe00])) [0 c S1 A8])) mQuery.c:204 91 {*movqi_internal}
     (nil))
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 72 [ D.3754 ])
            (const_int 0 [0]))) mQuery.c:204 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) mQuery.c:204 612 {*jcc_1}
     (nil)
 -> 107)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f87347b05f0 *.LC37>)) mQuery.c:204 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 15 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x41]  <function_decl 0x7f87349e8900 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mQuery.c:204 656 {*call}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15 (FALLTHRU)
(code_label 107 106 108 16 94 "" [1 uses])
(note 108 107 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 16 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -552 [0xfffffffffffffdd8])) [0 conf+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (nil))
(insn 110 109 111 16 (set (reg/f:DI 73 [ D.3749 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 104)
                (const_int 120 [0x78])) [0 conf_8(D)->point_shock+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 16 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:205 89 {*movsi_internal}
     (nil))
(insn 112 111 113 16 (set (reg:DI 74 [ D.3750 ])
        (sign_extend:DI (reg:SI 105))) mQuery.c:205 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 16 (parallel [
            (set (reg:DI 75 [ D.3750 ])
                (ashift:DI (reg:DI 74 [ D.3750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 513 {*ashldi3_1}
     (nil))
(insn 114 113 115 16 (parallel [
            (set (reg/f:DI 76 [ D.3749 ])
                (plus:DI (reg/f:DI 73 [ D.3749 ])
                    (reg:DI 75 [ D.3750 ])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (nil))
(insn 115 114 116 16 (set (reg/f:DI 77 [ D.3751 ])
        (mem/f:DI (reg/f:DI 76 [ D.3749 ]) [0 *_29+0 S8 A64])) mQuery.c:205 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 16 (parallel [
            (set (reg/f:DI 78 [ D.3751 ])
                (plus:DI (reg/f:DI 77 [ D.3751 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (nil))
(insn 117 116 118 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 273 {*addsi_1}
     (nil))
(insn 118 117 119 16 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (nil))
(insn 119 118 120 16 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -528 [0xfffffffffffffdf0])) [0 j+0 S4 A32])) mQuery.c:205 89 {*movsi_internal}
     (nil))
(insn 120 119 121 16 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 108))) mQuery.c:205 149 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 16 (parallel [
            (set (reg/f:DI 79 [ D.3748 ])
                (plus:DI (reg:DI 106)
                    (reg:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:205 274 {*adddi_1}
     (nil))
(insn 122 121 123 16 (set (reg:DI 5 di)
        (reg/f:DI 79 [ D.3748 ])) mQuery.c:205 87 {*movdi_internal_rex64}
     (nil))
(call_insn/i 123 122 124 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f8734a6a900 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) mQuery.c:205 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 16 (set (reg:DF 80 [ D.3752 ])
        (reg:DF 21 xmm0)) mQuery.c:205 133 {*movdf_internal_rex64}
     (nil))
(insn 125 124 126 16 (set (reg:XF 81 [ D.3753 ])
        (float_extend:XF (reg:DF 80 [ D.3752 ]))) mQuery.c:205 162 {*extenddfxf2_i387}
     (nil))
(insn 126 125 127 16 (set (mem:XF (reg/f:DI 78 [ D.3751 ]) [0 *_31+0 S16 A128])
        (reg:XF 81 [ D.3753 ])) mQuery.c:205 131 {*movxf_internal_rex64}
     (nil))
(insn 127 126 128 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 273 {*addsi_1}
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              16 (FALLTHRU,DFS_BACK)
(code_label 128 127 129 17 90 "" [1 uses])
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:201 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:201 274 {*adddi_1}
     (nil))
(insn 132 131 133 17 (set (reg:DI 1 dx)
        (reg:DI 109)) mQuery.c:201 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 17 (set (reg:SI 4 si)
        (const_int 500 [0x1f4])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(insn 134 133 135 17 (set (reg:DI 5 di)
        (reg:DI 110)) mQuery.c:201 87 {*movdi_internal_rex64}
     (nil))
(call_insn 135 134 136 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8734a56f00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) mQuery.c:201 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 136 135 137 17 (set (reg/f:DI 61 [ D.3748 ])
        (reg:DI 0 ax)) mQuery.c:201 87 {*movdi_internal_rex64}
     (nil))
(insn 137 136 138 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3748 ])
            (const_int 0 [0]))) mQuery.c:201 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 138 137 139 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) mQuery.c:201 612 {*jcc_1}
     (nil)
 -> 144)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 139 138 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 18 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -532 [0xfffffffffffffdec])) [0 i+0 S4 A32])) mQuery.c:201 89 {*movsi_internal}
     (nil))
(insn 142 141 143 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -524 [0xfffffffffffffdf4])) [0 N+0 S4 A32]))) mQuery.c:201 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) mQuery.c:201 612 {*jcc_1}
     (nil)
 -> 140)
;;  succ:       9
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 144 143 145 19 95 "" [1 uses])
(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 19 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 rstream+0 S8 A64])) mQuery.c:207 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 19 (set (reg:DI 5 di)
        (reg:DI 112)) mQuery.c:207 87 {*movdi_internal_rex64}
     (nil))
(call_insn 148 147 149 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f8734a3fb00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) mQuery.c:207 663 {*call_value}
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 149 148 152 19 (set (reg:SI 82 [ D.3755 ])
        (const_int 1 [0x1])) mQuery.c:208 89 {*movsi_internal}
     (nil))
(insn 152 149 156 19 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ D.3755 ])) mQuery.c:208 89 {*movsi_internal}
     (nil))
(insn 156 152 159 19 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) mQuery.c:210 89 {*movsi_internal}
     (nil))
(insn 159 156 160 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3756+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:210 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 160 159 167 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) mQuery.c:210 612 {*jcc_1}
     (nil)
 -> 163)
;;  succ:       23
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
(note 167 160 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 161 167 162 22 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:210 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 162 161 163)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 163 162 168 23 98 "" [1 uses])
(note 168 163 164 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 164 168 0 23 (use (reg/i:SI 0 ax)) mQuery.c:210 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function add_nsim_output (add_nsim_output, funcdef_no=9, decl_uid=1772, cgraph_uid=9)

(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
        (reg:DI 5 di [ file_out ])) mQuery.c:212 87 {*movdi_internal_rex64}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
        (reg:DI 4 si [ file_in ])) mQuery.c:212 87 {*movdi_internal_rex64}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 n+0 S4 A32])
        (reg:SI 1 dx [ n ])) mQuery.c:212 89 {*movsi_internal}
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.3765+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:212 966 {stack_tls_protect_set_di}
     (nil))
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mQuery.c:214 89 {*movsi_internal}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 14)) mQuery.c:214 650 {jump}
     (nil)
 -> 14)
;;  succ:       5

(barrier 11 10 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 21 11 12 4 101 "" [1 uses])
(note 12 21 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 14 13 15 5 100 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:SI 78)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:214 89 {*movsi_internal}
     (nil))
(insn 17 16 18 5 (set (reg:DI 59 [ D.3760 ])
        (sign_extend:DI (reg:SI 78))) mQuery.c:214 149 {*extendsidi2_rex64}
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg/f:DI 60 [ D.3761 ])
                (plus:DI (reg:DI 59 [ D.3760 ])
                    (reg/f:DI 79)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:214 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 59 [ D.3760 ]))
        (nil)))
(insn 20 19 22 5 (set (reg:QI 61 [ D.3762 ])
        (mem:QI (reg/f:DI 60 [ D.3761 ]) [0 *_7+0 S1 A8])) mQuery.c:214 91 {*movqi_internal}
     (nil))
(insn 22 20 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.3762 ])
            (const_int 0 [0]))) mQuery.c:214 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mQuery.c:214 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 25 24 26 6 (set (pc)
        (label_ref 29)) mQuery.c:215 650 {jump}
     (nil)
 -> 29)
;;  succ:       8

(barrier 26 25 36)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 36 26 27 7 103 "" [1 uses])
(note 27 36 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 29 28 30 8 102 "" [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32])) mQuery.c:215 89 {*movsi_internal}
     (nil))
(insn 32 31 33 8 (set (reg:DI 62 [ D.3760 ])
        (sign_extend:DI (reg:SI 80))) mQuery.c:215 149 {*extendsidi2_rex64}
     (nil))
(insn 33 32 34 8 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:215 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 8 (parallel [
            (set (reg/f:DI 63 [ D.3761 ])
                (plus:DI (reg:DI 62 [ D.3760 ])
                    (reg/f:DI 81)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:215 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 62 [ D.3760 ]))
        (nil)))
(insn 35 34 37 8 (set (reg:QI 64 [ D.3762 ])
        (mem:QI (reg/f:DI 63 [ D.3761 ]) [0 *_11+0 S1 A8])) mQuery.c:215 91 {*movqi_internal}
     (nil))
(insn 37 35 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3762 ])
            (const_int 46 [0x2e]))) mQuery.c:215 5 {*cmpqi_1}
     (nil))
(jump_insn 38 37 39 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) mQuery.c:215 612 {*jcc_1}
     (nil)
 -> 36)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 n+0 S4 A32])) mQuery.c:218 89 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:218 274 {*adddi_1}
     (nil))
(insn 42 41 43 9 (set (reg:SI 1 dx)
        (reg:SI 82)) mQuery.c:218 89 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f87347bcab0 *.LC38>)) mQuery.c:218 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 9 (set (reg:DI 5 di)
        (reg:DI 83)) mQuery.c:218 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) mQuery.c:218 91 {*movqi_internal}
     (nil))
(call_insn 46 45 47 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f8734943f00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) mQuery.c:218 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 47 46 48 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(jump_insn 48 47 49 9 (set (pc)
        (label_ref 62)) mQuery.c:220 650 {jump}
     (nil)
 -> 62)
;;  succ:       11

(barrier 49 48 64)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 64 49 50 10 105 "" [1 uses])
(note 50 64 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 52 51 53 10 (set (reg:DI 65 [ D.3760 ])
        (sign_extend:DI (reg:SI 84))) mQuery.c:220 149 {*extendsidi2_rex64}
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:220 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 10 (parallel [
            (set (reg/f:DI 66 [ D.3761 ])
                (plus:DI (reg:DI 65 [ D.3760 ])
                    (reg/f:DI 85)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 65 [ D.3760 ]))
        (nil)))
(insn 55 54 56 10 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 56 55 57 10 (set (reg:DI 67 [ D.3760 ])
        (sign_extend:DI (reg:SI 86))) mQuery.c:220 149 {*extendsidi2_rex64}
     (nil))
(insn 57 56 58 10 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])) mQuery.c:220 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg/f:DI 68 [ D.3761 ])
                (plus:DI (reg:DI 67 [ D.3760 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 file_in+0 S8 A64])
            (reg:DI 67 [ D.3760 ]))
        (nil)))
(insn 59 58 60 10 (set (reg:QI 69 [ D.3762 ])
        (mem:QI (reg/f:DI 68 [ D.3761 ]) [0 *_20+0 S1 A8])) mQuery.c:220 91 {*movqi_internal}
     (nil))
(insn 60 59 61 10 (set (mem:QI (reg/f:DI 66 [ D.3761 ]) [0 *_18+0 S1 A8])
        (reg:QI 69 [ D.3762 ])) mQuery.c:220 91 {*movqi_internal}
     (nil))
(insn 61 60 62 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:220 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 11 104 "" [1 uses])
(note 63 62 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 11 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:220 89 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 i+0 S4 A32]))) mQuery.c:220 7 {*cmpsi_1}
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) mQuery.c:220 612 {*jcc_1}
     (nil)
 -> 64)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 j+0 S4 A32])) mQuery.c:221 89 {*movsi_internal}
     (nil))
(insn 70 69 71 12 (set (reg:DI 70 [ D.3760 ])
        (sign_extend:DI (reg:SI 89))) mQuery.c:221 149 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 12 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:221 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg/f:DI 71 [ D.3761 ])
                (plus:DI (reg:DI 70 [ D.3760 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:221 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 70 [ D.3760 ]))
        (nil)))
(insn 73 72 80 12 (set (mem:QI (reg/f:DI 71 [ D.3761 ]) [0 *_24+0 S1 A8])
        (const_int 0 [0])) mQuery.c:221 91 {*movqi_internal}
     (nil))
(insn 80 73 74 12 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 74 80 75 12 (set (reg:DI 95)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 12 (set (reg:DI 94)
        (reg:DI 91)) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 12 (set (reg:QI 96)
        (const_int 0 [0])) mQuery.c:223 91 {*movqi_internal}
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg:DI 92)
                (unspec:DI [
                        (mem:BLK (reg:DI 94) [0  A8])
                        (reg:QI 96)
                        (const_int 1 [0x1])
                        (reg:DI 95)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 94))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 925 {*strlenqi_1}
     (nil))
(insn 78 77 79 12 (set (reg:DI 93)
        (not:DI (reg:DI 92))) mQuery.c:223 496 {*one_cmpldi2_1}
     (nil))
(insn 79 78 81 12 (parallel [
            (set (reg:DI 72 [ D.3763 ])
                (plus:DI (reg:DI 93)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 274 {*adddi_1}
     (nil))
(insn 81 79 82 12 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:223 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg/f:DI 73 [ D.3761 ])
                (plus:DI (reg:DI 72 [ D.3763 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:223 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 72 [ D.3763 ]))
        (nil)))
(insn 83 82 84 12 (set (mem:HI (reg/f:DI 73 [ D.3761 ]) [0 MEM[(void *)_26]+0 S2 A8])
        (const_int 95 [0x5f])) mQuery.c:223 90 {*movhi_internal}
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:224 274 {*adddi_1}
     (nil))
(insn 85 84 86 12 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:224 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 12 (set (reg:DI 4 si)
        (reg:DI 98)) mQuery.c:224 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 12 (set (reg:DI 5 di)
        (reg:DI 99)) mQuery.c:224 87 {*movdi_internal_rex64}
     (nil))
(call_insn 88 87 95 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f8734939900 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) mQuery.c:224 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 95 88 89 12 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 89 95 90 12 (set (reg:DI 104)
        (const_int -1 [0xffffffffffffffff])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 12 (set (reg:DI 103)
        (reg:DI 100)) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 12 (set (reg:QI 105)
        (const_int 0 [0])) mQuery.c:225 91 {*movqi_internal}
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 101)
                (unspec:DI [
                        (mem:BLK (reg:DI 103) [0  A8])
                        (reg:QI 105)
                        (const_int 1 [0x1])
                        (reg:DI 104)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 103))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 925 {*strlenqi_1}
     (nil))
(insn 93 92 94 12 (set (reg:DI 102)
        (not:DI (reg:DI 101))) mQuery.c:225 496 {*one_cmpldi2_1}
     (nil))
(insn 94 93 96 12 (parallel [
            (set (reg:DI 74 [ D.3763 ])
                (plus:DI (reg:DI 102)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 274 {*adddi_1}
     (nil))
(insn 96 94 97 12 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])) mQuery.c:225 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 12 (parallel [
            (set (reg/f:DI 75 [ D.3761 ])
                (plus:DI (reg:DI 74 [ D.3763 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) mQuery.c:225 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 file_out+0 S8 A64])
            (reg:DI 74 [ D.3763 ]))
        (nil)))
(insn 98 97 99 12 (set (mem:SI (reg/f:DI 75 [ D.3761 ]) [0 MEM[(void *)_28]+0 S4 A8])
        (const_int 1952539694 [0x7461642e])) mQuery.c:225 89 {*movsi_internal}
     (nil))
(insn 99 98 100 12 (set (mem:QI (plus:DI (reg/f:DI 75 [ D.3761 ])
                (const_int 4 [0x4])) [0 MEM[(void *)_28]+4 S1 A8])
        (const_int 0 [0])) mQuery.c:225 91 {*movqi_internal}
     (nil))
(insn 100 99 103 12 (set (reg:SI 76 [ D.3764 ])
        (const_int 1 [0x1])) mQuery.c:227 89 {*movsi_internal}
     (nil))
(insn 103 100 107 12 (set (reg:SI 77 [ <retval> ])
        (reg:SI 76 [ D.3764 ])) mQuery.c:227 89 {*movsi_internal}
     (nil))
(insn 107 103 110 12 (set (reg/i:SI 0 ax)
        (reg:SI 77 [ <retval> ])) mQuery.c:229 89 {*movsi_internal}
     (nil))
(insn 110 107 111 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.3765+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) mQuery.c:229 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 111 110 118 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) mQuery.c:229 612 {*jcc_1}
     (nil)
 -> 114)
;;  succ:       16
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
(note 118 111 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 112 118 113 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8734735500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) mQuery.c:229 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      

(barrier 113 112 114)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 114 113 119 16 107 "" [1 uses])
(note 119 114 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 119 0 16 (use (reg/i:SI 0 ax)) mQuery.c:229 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

