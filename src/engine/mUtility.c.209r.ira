
;; Function falloc_matrix (falloc_matrix, funcdef_no=2, decl_uid=1723, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r78,l0) best AREG, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r72,l0) best AREG, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r72,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r78,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a13(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a17(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a21(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 77(l0): point = 0
   Insn 74(l0): point = 2
   Insn 70(l0): point = 4
   Insn 67(l0): point = 6
   Insn 55(l0): point = 9
   Insn 54(l0): point = 11
   Insn 53(l0): point = 13
   Insn 52(l0): point = 15
   Insn 51(l0): point = 17
   Insn 49(l0): point = 20
   Insn 48(l0): point = 22
   Insn 47(l0): point = 24
   Insn 46(l0): point = 26
   Insn 45(l0): point = 28
   Insn 44(l0): point = 30
   Insn 43(l0): point = 32
   Insn 42(l0): point = 34
   Insn 41(l0): point = 36
   Insn 40(l0): point = 38
   Insn 39(l0): point = 40
   Insn 38(l0): point = 42
   Insn 37(l0): point = 44
   Insn 36(l0): point = 46
   Insn 35(l0): point = 48
   Insn 34(l0): point = 50
   Insn 33(l0): point = 52
   Insn 32(l0): point = 54
   Insn 31(l0): point = 56
   Insn 30(l0): point = 58
   Insn 29(l0): point = 60
   Insn 65(l0): point = 63
   Insn 64(l0): point = 65
   Insn 63(l0): point = 67
   Insn 59(l0): point = 70
   Insn 80(l0): point = 73
   Insn 25(l0): point = 75
   Insn 21(l0): point = 78
   Insn 20(l0): point = 80
   Insn 19(l0): point = 82
   Insn 18(l0): point = 84
   Insn 17(l0): point = 86
   Insn 15(l0): point = 89
   Insn 14(l0): point = 91
   Insn 13(l0): point = 93
   Insn 12(l0): point = 95
   Insn 11(l0): point = 97
   Insn 10(l0): point = 99
   Insn 9(l0): point = 101
   Insn 8(l0): point = 103
   Insn 7(l0): point = 105
   Insn 3(l0): point = 107
   Insn 2(l0): point = 109
 a0(r72): [3..4]
 a1(r71): [5..6]
 a2(r81): [66..67]
 a3(r70): [23..24]
 a4(r69): [25..26]
 a5(r80): [27..28]
 a6(r68): [27..30]
 a7(r67): [31..32]
 a8(r79): [33..34]
 a9(r63): [37..52]
 a10(r66): [37..38]
 a11(r78): [39..40]
 a12(r65): [45..46]
 a13(r64): [47..48]
 a14(r77): [49..50]
 a15(r76): [53..54]
 a16(r62): [53..56]
 a17(r61): [57..58]
 a18(r75): [59..60]
 a19(r74): [94..95]
 a20(r60): [100..101]
 a21(r59): [102..103]
 a22(r73): [104..105]
Compressing live ranges: from 112 to 40 - 35%
Ranges after the compression:
 a0(r72): [0..1]
 a1(r71): [2..3]
 a2(r81): [30..31]
 a3(r70): [4..5]
 a4(r69): [6..7]
 a5(r80): [8..9]
 a6(r68): [8..9]
 a7(r67): [10..11]
 a8(r79): [12..13]
 a9(r63): [14..23]
 a10(r66): [14..15]
 a11(r78): [16..17]
 a12(r65): [18..19]
 a13(r64): [20..21]
 a14(r77): [22..23]
 a15(r76): [24..25]
 a16(r62): [24..25]
 a17(r61): [26..27]
 a18(r75): [28..29]
 a19(r74): [32..33]
 a20(r60): [34..35]
 a21(r59): [36..37]
 a22(r73): [38..39]
  regions=1, blocks=10, points=40
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
   21:r59  l0     0   20:r60  l0     0   17:r61  l0     0   16:r62  l0     1
    9:r63  l0     3   13:r64  l0     0   12:r65  l0     0   10:r66  l0     0
    7:r67  l0     0    6:r68  l0     1    4:r69  l0     0    3:r70  l0     0
    1:r71  l0     0    0:r72  l0     0   22:r73  l0     0   19:r74  l0     0
   18:r75  l0     0   15:r76  l0     0   14:r77  l0     0   11:r78  l0     0
    8:r79  l0     0    5:r80  l0     0    2:r81  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


falloc_matrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,6u} r1={7d} r2={7d} r4={7d,1u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={16d,3u} r18={6d} r19={6d} r20={1d,25u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u,1e} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} 
;;    total ref usage 426{325d,97u,4e} in 52{46 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 73 74
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])
        (reg:SI 5 di [ n ])) mUtility.c:16 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ n ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 m+0 S4 A32])
        (reg:SI 4 si [ m ])) mUtility.c:16 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ m ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32])) mUtility.c:20 89 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 59 [ D.5066 ])
        (sign_extend:DI (reg:SI 73))) mUtility.c:20 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 60 [ D.5066 ])
                (ashift:DI (reg:DI 59 [ D.5066 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:20 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5066 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.5066 ])) mUtility.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5066 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f4452db8b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mUtility.c:20 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 74)
        (reg:DI 0 ax)) mUtility.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 74)
            (nil))))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
        (reg/f:DI 74)) mUtility.c:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
            (const_int 0 [0]))) mUtility.c:21 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) mUtility.c:21 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4452c81ab0 *.LC0>)) mUtility.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mUtility.c:21 91 {*movqi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4452d98f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mUtility.c:21 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 20 19 21 3 (set (reg:SI 5 di)
        (const_int 0 [0])) mUtility.c:21 89 {*movsi_internal}
     (nil))
(call_insn 21 20 22 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f4452dacf00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mUtility.c:21 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 23 22 24 4 2 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 80 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:22 89 {*movsi_internal}
     (nil))
(jump_insn 80 25 81 4 (set (pc)
        (label_ref 60)) mUtility.c:22 650 {jump}
     (nil)
 -> 60)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 81 80 62)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 63 64 65 66 67 68 69 70 75 76 77 78 79 80
(code_label 62 81 28 5 5 "" [1 uses])
(note 28 62 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:23 89 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 61 [ D.5066 ])
        (sign_extend:DI (reg:SI 75))) mUtility.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 62 [ D.5066 ])
                (ashift:DI (reg:DI 61 [ D.5066 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.5066 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 5 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 63 [ D.5067 ])
                (plus:DI (reg:DI 62 [ D.5066 ])
                    (reg/f:DI 76)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:23 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_DEAD (reg:DI 62 [ D.5066 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
                        (reg:DI 62 [ D.5066 ]))
                    (nil))))))
(insn 34 33 35 5 (set (reg:SI 77)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 m+0 S4 A32])) mUtility.c:23 89 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 64 [ D.5066 ])
        (sign_extend:DI (reg:SI 77))) mUtility.c:23 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 77)
        (nil)))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 65 [ D.5066 ])
                (ashift:DI (reg:DI 64 [ D.5066 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.5066 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg:DI 65 [ D.5066 ])) mUtility.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65 [ D.5066 ])
        (nil)))
(call_insn 38 37 39 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f4452db8b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mUtility.c:23 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 5 (set (reg/f:DI 78)
        (reg:DI 0 ax)) mUtility.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 78)
            (nil))))
(insn 40 39 41 5 (set (reg/f:DI 66 [ D.5068 ])
        (reg/f:DI 78)) mUtility.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 41 40 42 5 (set (mem/f:DI (reg/f:DI 63 [ D.5067 ]) [0 *_9+0 S8 A64])
        (reg/f:DI 66 [ D.5068 ])) mUtility.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5068 ])
        (expr_list:REG_DEAD (reg/f:DI 63 [ D.5067 ])
            (nil))))
(insn 42 41 43 5 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:24 89 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 67 [ D.5066 ])
        (sign_extend:DI (reg:SI 79))) mUtility.c:24 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 68 [ D.5066 ])
                (ashift:DI (reg:DI 67 [ D.5066 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:24 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 67 [ D.5066 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 5 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 69 [ D.5067 ])
                (plus:DI (reg:DI 68 [ D.5066 ])
                    (reg/f:DI 80)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:24 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_DEAD (reg:DI 68 [ D.5066 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
                        (reg:DI 68 [ D.5066 ]))
                    (nil))))))
(insn 47 46 48 5 (set (reg/f:DI 70 [ D.5069 ])
        (mem/f:DI (reg/f:DI 69 [ D.5067 ]) [0 *_16+0 S8 A64])) mUtility.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.5067 ])
        (nil)))
(insn 48 47 49 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 70 [ D.5069 ])
            (const_int 0 [0]))) mUtility.c:24 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5069 ])
        (nil)))
(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) mUtility.c:24 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4452c81ab0 *.LC0>)) mUtility.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) mUtility.c:24 91 {*movqi_internal}
     (nil))
(call_insn 53 52 54 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4452d98f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mUtility.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 54 53 55 6 (set (reg:SI 5 di)
        (const_int 0 [0])) mUtility.c:24 89 {*movsi_internal}
     (nil))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f4452dacf00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mUtility.c:24 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 56 55 57)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 57 56 58 7 4 "" [1 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:22 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 81
(code_label 60 59 61 8 3 "" [1 uses])
(note 61 60 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 61 64 8 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:22 89 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 81)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 n+0 S4 A32]))) mUtility.c:22 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mUtility.c:22 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 62)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 71 72
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 70 9 (set (reg/f:DI 71 [ D.5067 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:26 87 {*movdi_internal_rex64}
     (nil))
(insn 70 67 74 9 (set (reg:DI 72 [ <retval> ])
        (reg/f:DI 71 [ D.5067 ])) mUtility.c:26 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5067 ])
        (nil)))
(insn 74 70 77 9 (set (reg/i:DI 0 ax)
        (reg:DI 72 [ <retval> ])) mUtility.c:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72 [ <retval> ])
        (nil)))
(insn 77 74 0 9 (use (reg/i:DI 0 ax)) mUtility.c:27 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function falloc_vec (falloc_vec, funcdef_no=3, decl_uid=1725, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r64,l0) best AREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r64,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 34(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 16(l0): point = 17
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 6(l0): point = 36
   Insn 2(l0): point = 38
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r64): [25..26]
 a3(r60): [31..32]
 a4(r59): [33..34]
 a5(r63): [35..36]
Compressing live ranges: from 41 to 12 - 29%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r64): [4..5]
 a3(r60): [6..7]
 a4(r59): [8..9]
 a5(r63): [10..11]
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r59  l0     0    3:r60  l0     0    1:r61  l0     0    0:r62  l0     0
    5:r63  l0     0    2:r64  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


falloc_vec

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,9u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 202{164d,38u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 63 64
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 5 di [ i ])) mUtility.c:29 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ i ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:31 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 59 [ D.5071 ])
        (sign_extend:DI (reg:SI 63))) mUtility.c:31 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 60 [ D.5071 ])
                (ashift:DI (reg:DI 59 [ D.5071 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:31 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5071 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.5071 ])) mUtility.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5071 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f4452db8b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mUtility.c:31 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) mUtility.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 64)
            (nil))))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
        (reg/f:DI 64)) mUtility.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
            (const_int 0 [0]))) mUtility.c:32 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) mUtility.c:32 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4452c81ab0 *.LC0>)) mUtility.c:32 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mUtility.c:32 91 {*movqi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4452d98f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mUtility.c:32 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 19 18 20 3 (set (reg:SI 5 di)
        (const_int 0 [0])) mUtility.c:32 89 {*movsi_internal}
     (nil))
(call_insn 20 19 21 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f4452dacf00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mUtility.c:32 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 21 20 22)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 61 62
(code_label 22 21 23 4 8 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 4 (set (reg/f:DI 61 [ D.5072 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 27 24 31 4 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 61 [ D.5072 ])) mUtility.c:34 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5072 ])
        (nil)))
(insn 31 27 34 4 (set (reg/i:DI 0 ax)
        (reg:DI 62 [ <retval> ])) mUtility.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62 [ <retval> ])
        (nil)))
(insn 34 31 0 4 (use (reg/i:DI 0 ax)) mUtility.c:35 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function ialloc_vec (ialloc_vec, funcdef_no=4, decl_uid=1727, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r64,l0) best AREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r64,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 34(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 16(l0): point = 17
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 6(l0): point = 36
   Insn 2(l0): point = 38
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r64): [25..26]
 a3(r60): [31..32]
 a4(r59): [33..34]
 a5(r63): [35..36]
Compressing live ranges: from 41 to 12 - 29%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r64): [4..5]
 a3(r60): [6..7]
 a4(r59): [8..9]
 a5(r63): [10..11]
  regions=1, blocks=5, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r59  l0     0    3:r60  l0     0    1:r61  l0     0    0:r62  l0     0
    5:r63  l0     0    2:r64  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


ialloc_vec

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,9u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 202{164d,38u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 63 64
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 5 di [ i ])) mUtility.c:36 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ i ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:38 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 59 [ D.5073 ])
        (sign_extend:DI (reg:SI 63))) mUtility.c:38 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 60 [ D.5073 ])
                (ashift:DI (reg:DI 59 [ D.5073 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:38 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5073 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.5073 ])) mUtility.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5073 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f4452db8b00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mUtility.c:38 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) mUtility.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 64)
            (nil))))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
        (reg/f:DI 64)) mUtility.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
            (const_int 0 [0]))) mUtility.c:39 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) mUtility.c:39 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4452c81ab0 *.LC0>)) mUtility.c:39 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) mUtility.c:39 91 {*movqi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4452d98f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mUtility.c:39 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 19 18 20 3 (set (reg:SI 5 di)
        (const_int 0 [0])) mUtility.c:39 89 {*movsi_internal}
     (nil))
(call_insn 20 19 21 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f4452dacf00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mUtility.c:39 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 21 20 22)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 61 62
(code_label 22 21 23 4 11 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 4 (set (reg/f:DI 61 [ D.5074 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:41 87 {*movdi_internal_rex64}
     (nil))
(insn 27 24 31 4 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 61 [ D.5074 ])) mUtility.c:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5074 ])
        (nil)))
(insn 31 27 34 4 (set (reg/i:DI 0 ax)
        (reg:DI 62 [ <retval> ])) mUtility.c:42 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62 [ <retval> ])
        (nil)))
(insn 34 31 0 4 (use (reg/i:DI 0 ax)) mUtility.c:42 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function BuG (BuG, funcdef_no=5, decl_uid=1729, cgraph_uid=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 1 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r59: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r59,l0) best SIREG, allocno GENERAL_REGS

  a0(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r59): [11..12]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r59): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r59  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


BuG

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} 
;;    total ref usage 129{112d,17u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 s+0 S8 A64])
        (reg:DI 5 di [ s ])) mUtility.c:43 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 59)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 s+0 S8 A64])) mUtility.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (reg:DI 59)) mUtility.c:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 59)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f4452ca3ed8 *.LC1>)) mUtility.c:44 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) mUtility.c:44 91 {*movqi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4452d98f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) mUtility.c:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (const_int 0 [0])) mUtility.c:45 89 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f4452dacf00 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mUtility.c:45 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 13 12 0)

;; Function rad (rad, funcdef_no=6, decl_uid=1734, cgraph_uid=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r61,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r61,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r60,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r63,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 19(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r61): [3..4]
 a1(r60): [5..6]
 a2(r64): [7..8]
 a3(r59): [7..10]
 a4(r63): [11..12]
 a5(r62): [11..14]
Compressing live ranges: from 17 to 8 - 47%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r60): [2..3]
 a2(r64): [4..5]
 a3(r59): [4..5]
 a4(r63): [6..7]
 a5(r62): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r59  l0     9    1:r60  l0     8    0:r61  l0     8    5:r62  l0     9
    4:r63  l0     8    2:r64  l0     8
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rad

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 6[bp] 8[st]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r8={1d,2u} r16={1d,2u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 42{26d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 8 [st] 59 60 61 62 63 64
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:XF 62)
        (mem/c:XF (reg/f:DI 16 argp) [0 degi+0 S16 A128])) mUtility.c:48 131 {*movxf_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:XF 63)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mUtility.c:48 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 7 6 8 2 (set (reg:XF 59 [ D.5076 ])
        (div:XF (reg:XF 62)
            (reg:XF 63))) mUtility.c:48 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 63)
        (expr_list:REG_DEAD (reg:XF 62)
            (nil))))
(insn 8 7 9 2 (set (reg:XF 64)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S16 A128])) mUtility.c:48 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 9 8 12 2 (set (reg:XF 60 [ D.5076 ])
        (mult:XF (reg:XF 59 [ D.5076 ])
            (reg:XF 64))) mUtility.c:48 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 64)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5076 ])
            (nil))))
(insn 12 9 16 2 (set (reg:XF 61 [ <retval> ])
        (reg:XF 60 [ D.5076 ])) mUtility.c:48 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5076 ])
        (nil)))
(insn 16 12 19 2 (set (reg/i:XF 8 st)
        (reg:XF 61 [ <retval> ])) mUtility.c:49 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ <retval> ])
        (nil)))
(insn 19 16 0 2 (use (reg/i:XF 8 st)) mUtility.c:49 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function deg (deg, funcdef_no=7, decl_uid=1806, cgraph_uid=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r61,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r61,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r60,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r63,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 19(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r61): [3..4]
 a1(r60): [5..6]
 a2(r64): [7..8]
 a3(r59): [7..10]
 a4(r63): [11..12]
 a5(r62): [11..14]
Compressing live ranges: from 17 to 8 - 47%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r60): [2..3]
 a2(r64): [4..5]
 a3(r59): [4..5]
 a4(r63): [6..7]
 a5(r62): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r59  l0     9    1:r60  l0     8    0:r61  l0     8    5:r62  l0     9
    4:r63  l0     8    2:r64  l0     8
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


deg

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 6[bp] 8[st]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r8={1d,2u} r16={1d,2u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 42{26d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 8 [st] 59 60 61 62 63 64
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:XF 62)
        (mem/c:XF (reg/f:DI 16 argp) [0 radi+0 S16 A128])) mUtility.c:51 131 {*movxf_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:XF 63)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S16 A128])) mUtility.c:51 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 7 6 8 2 (set (reg:XF 59 [ D.5077 ])
        (mult:XF (reg:XF 62)
            (reg:XF 63))) mUtility.c:51 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 63)
        (expr_list:REG_DEAD (reg:XF 62)
            (nil))))
(insn 8 7 9 2 (set (reg:XF 64)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S16 A128])) mUtility.c:51 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 9 8 12 2 (set (reg:XF 60 [ D.5077 ])
        (div:XF (reg:XF 59 [ D.5077 ])
            (reg:XF 64))) mUtility.c:51 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 64)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5077 ])
            (nil))))
(insn 12 9 16 2 (set (reg:XF 61 [ <retval> ])
        (reg:XF 60 [ D.5077 ])) mUtility.c:51 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5077 ])
        (nil)))
(insn 16 12 19 2 (set (reg/i:XF 8 st)
        (reg:XF 61 [ <retval> ])) mUtility.c:52 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ <retval> ])
        (nil)))
(insn 19 16 0 2 (use (reg/i:XF 8 st)) mUtility.c:52 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _to_sphere (_to_sphere, funcdef_no=8, decl_uid=3918, cgraph_uid=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a3 (r71,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a5 (r69,l0) best NO_REGS, allocno NO_REGS
    r68: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r68,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a9 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a13 (r64,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r63: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a14 (r63,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a15 (r62,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r61: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a16 (r61,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r71,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r70,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r69,l0) costs: AREG:23 DREG:23 CREG:23 BREG:23 SIREG:23 DIREG:23 AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:20 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a6(r68,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:23 FP_SECOND_REG:23 FLOAT_REGS:23 SSE_FIRST_REG:1 SSE_REGS:2 FP_TOP_SSE_REGS:44 FP_SECOND_SSE_REGS:44 FLOAT_SSE_REGS:44 FLOAT_INT_REGS:40 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:44 ALL_REGS:131072 MEM:16
  a7(r67,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a8(r78,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r66,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a10(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r64,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a14(r63,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a15(r62,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a16(r61,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a17(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 47(l0): point = 0
   Insn 44(l0): point = 2
   Insn 40(l0): point = 4
   Insn 37(l0): point = 6
   Insn 36(l0): point = 8
   Insn 35(l0): point = 10
   Insn 34(l0): point = 12
   Insn 33(l0): point = 14
   Insn 32(l0): point = 16
   Insn 31(l0): point = 18
   Insn 30(l0): point = 20
   Insn 29(l0): point = 22
   Insn 28(l0): point = 24
   Insn 27(l0): point = 26
   Insn 26(l0): point = 28
   Insn 25(l0): point = 30
   Insn 24(l0): point = 32
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 21(l0): point = 38
   Insn 20(l0): point = 40
   Insn 19(l0): point = 42
   Insn 18(l0): point = 44
   Insn 17(l0): point = 46
   Insn 16(l0): point = 48
   Insn 15(l0): point = 50
   Insn 14(l0): point = 52
   Insn 13(l0): point = 54
   Insn 12(l0): point = 56
   Insn 11(l0): point = 58
   Insn 10(l0): point = 60
   Insn 9(l0): point = 62
   Insn 8(l0): point = 64
   Insn 7(l0): point = 66
   Insn 3(l0): point = 68
   Insn 2(l0): point = 70
 a0(r73): [3..4]
 a1(r72): [5..6]
 a2(r79): [9..10]
 a3(r71): [9..12]
 a4(r70): [17..18]
 a5(r69): [19..20]
 a6(r68): [25..26]
 a7(r67): [27..28]
 a8(r78): [29..30]
 a9(r66): [29..32]
 a10(r65): [33..34]
 a11(r77): [35..36]
 a12(r59): [39..64]
 a13(r64): [39..40]
 a14(r63): [45..46]
 a15(r62 [0]): [51..54]
 a15(r62 [1]): [51..54]
 a16(r61 [0]): [53..58]
 a16(r61 [1]): [53..58]
 a17(r76): [55..56]
 a18(r60): [59..60]
 a19(r75): [61..62]
 a20(r74): [65..66]
Compressing live ranges: from 73 to 34 - 46%
Ranges after the compression:
 a0(r73): [0..1]
 a1(r72): [2..3]
 a2(r79): [4..5]
 a3(r71): [4..5]
 a4(r70): [6..7]
 a5(r69): [8..9]
 a6(r68): [10..11]
 a7(r67): [12..13]
 a8(r78): [14..15]
 a9(r66): [14..15]
 a10(r65): [16..17]
 a11(r77): [18..19]
 a12(r59): [20..31]
 a13(r64): [20..21]
 a14(r63): [22..23]
 a15(r62 [0]): [24..25]
 a15(r62 [1]): [24..25]
 a16(r61 [0]): [24..27]
 a16(r61 [1]): [24..27]
 a17(r76): [26..27]
 a18(r60): [28..29]
 a19(r75): [30..31]
 a20(r74): [32..33]
  regions=1, blocks=3, points=34
    allocnos=21 (big 2), copies=0, conflicts=0, ranges=23
Disposition:
   12:r59  l0    41   18:r60  l0     0   16:r61  l0     2   15:r62  l0     0
   14:r63  l0     8   13:r64  l0     8   10:r65  l0     0    9:r66  l0     9
    7:r67  l0     8    6:r68  l0    21    5:r69  l0   mem    4:r70  l0     8
    3:r71  l0     8    1:r72  l0     0    0:r73  l0     0   20:r74  l0     0
   19:r75  l0     0   17:r76  l0     0   11:r77  l0     0    8:r78  l0     8
    2:r79  l0     0
+++Costs: overall 18, reg -1, mem 19, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_to_sphere

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 21[xmm0]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={5d,1u} r5={5d,1u} r6={1d,2u} r7={1d,14u} r8={4d,3u} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={7d} r18={4d} r19={4d} r20={1d,10u,3e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} 
;;    total ref usage 281{221d,57u,3e} in 36{32 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
        (reg:DI 5 di [ x ])) mUtility.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 y+0 S8 A64])
        (reg:DI 4 si [ y ])) mUtility.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ y ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 y+0 S8 A64])) mUtility.c:62 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 59 [ D.5078 ])
                (plus:DI (reg/f:DI 74)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:62 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 y+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:62 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 60 [ D.5078 ])
                (plus:DI (reg/f:DI 75)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:62 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 11 10 12 2 (set (reg:XF 61 [ D.5079 ])
        (mem:XF (reg/f:DI 60 [ D.5078 ]) [0 *_4+0 S16 A128])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.5078 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:62 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:XF 62 [ D.5079 ])
        (mem:XF (reg/f:DI 76) [0 *x_3(D)+0 S16 A128])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 14 13 15 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 61 [ D.5079 ])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5079 ])
        (nil)))
(insn 15 14 16 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 62 [ D.5079 ])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5079 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("atan2l") [flags 0x41]  <function_decl 0x7f4452d42500 atan2l>) [0 __builtin_atan2l S1 A8])
            (const_int 32 [0x20]))) mUtility.c:62 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 17 16 18 2 (set (reg:XF 63 [ D.5079 ])
        (reg:XF 8 st)) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 18 17 19 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 63 [ D.5079 ])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 63 [ D.5079 ])
        (nil)))
(call_insn 19 18 20 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("deg") [flags 0x3]  <function_decl 0x7f4452e41600 deg>) [0 deg S1 A8])
            (const_int 16 [0x10]))) mUtility.c:62 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 20 19 21 2 (set (reg:XF 64 [ D.5079 ])
        (reg:XF 8 st)) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 21 20 22 2 (set (mem:XF (reg/f:DI 59 [ D.5078 ]) [0 *_2+0 S16 A128])
        (reg:XF 64 [ D.5079 ])) mUtility.c:62 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5079 ])
        (expr_list:REG_DEAD (reg/f:DI 59 [ D.5078 ])
            (nil))))
(insn 22 21 23 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])) mUtility.c:63 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 65 [ D.5078 ])
                (plus:DI (reg/f:DI 77)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:63 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 x+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 24 23 25 2 (set (reg:XF 66 [ D.5079 ])
        (mem:XF (reg/f:DI 65 [ D.5078 ]) [0 *_9+0 S16 A128])) mUtility.c:63 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.5078 ])
        (nil)))
(insn 25 24 26 2 (set (reg:XF 78)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:63 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 26 25 27 2 (set (reg:XF 67 [ D.5079 ])
        (div:XF (reg:XF 66 [ D.5079 ])
            (reg:XF 78))) mUtility.c:63 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 78)
        (expr_list:REG_DEAD (reg:XF 66 [ D.5079 ])
            (nil))))
(insn 27 26 28 2 (parallel [
            (set (reg:DF 68 [ D.5080 ])
                (float_truncate:DF (reg:XF 67 [ D.5079 ])))
            (clobber (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0  S8 A64]))
        ]) mUtility.c:63 170 {*truncxfdf2_mixed}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5079 ])
        (nil)))
(insn 28 27 29 2 (set (reg:DF 21 xmm0)
        (reg:DF 68 [ D.5080 ])) mUtility.c:63 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 68 [ D.5080 ])
        (nil)))
(call_insn 29 28 30 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("asin") [flags 0x41]  <function_decl 0x7f4452d40300 asin>) [0 __builtin_asin S1 A8])
            (const_int 0 [0]))) mUtility.c:63 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 30 29 31 2 (set (reg:DF 69 [ D.5080 ])
        (reg:DF 21 xmm0)) mUtility.c:63 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 31 30 32 2 (set (reg:XF 70 [ D.5079 ])
        (float_extend:XF (reg:DF 69 [ D.5080 ]))) mUtility.c:63 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 69 [ D.5080 ])
        (nil)))
(insn 32 31 33 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 70 [ D.5079 ])) mUtility.c:63 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 70 [ D.5079 ])
        (nil)))
(call_insn 33 32 34 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("deg") [flags 0x3]  <function_decl 0x7f4452e41600 deg>) [0 deg S1 A8])
            (const_int 16 [0x10]))) mUtility.c:63 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 34 33 35 2 (set (reg:XF 71 [ D.5079 ])
        (reg:XF 8 st)) mUtility.c:63 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 35 34 36 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 y+0 S8 A64])) mUtility.c:63 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (mem:XF (reg/f:DI 79) [0 *y_1(D)+0 S16 A128])
        (reg:XF 71 [ D.5079 ])) mUtility.c:63 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (expr_list:REG_DEAD (reg:XF 71 [ D.5079 ])
            (nil))))
(insn 37 36 40 2 (set (reg:SI 72 [ D.5081 ])
        (const_int 1 [0x1])) mUtility.c:65 89 {*movsi_internal}
     (nil))
(insn 40 37 44 2 (set (reg:SI 73 [ <retval> ])
        (reg:SI 72 [ D.5081 ])) mUtility.c:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 72 [ D.5081 ])
        (nil)))
(insn 44 40 47 2 (set (reg/i:SI 0 ax)
        (reg:SI 73 [ <retval> ])) mUtility.c:66 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 73 [ <retval> ])
        (nil)))
(insn 47 44 0 2 (use (reg/i:SI 0 ax)) mUtility.c:66 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _to_cart (_to_cart, funcdef_no=9, decl_uid=3922, cgraph_uid=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a5 (r81,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r80: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a6 (r80,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a7 (r79,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a12 (r76,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r75: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a14 (r75,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a15 (r74,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a19 (r71,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r70: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a20 (r70,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a21 (r69,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a26 (r66,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r65: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a28 (r65,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a29 (r64,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a33 (r61,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a34 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a35 (r59,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS

  a0(r84,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r82,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r95,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r81,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r80,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r79,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r77,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a12(r76,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r75,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a15(r74,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a16(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r91,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r70,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a21(r69,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a22(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r67,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a26(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r65,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a29(r64,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a30(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r86,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r60,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a35(r59,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a36(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 75(l0): point = 0
   Insn 72(l0): point = 2
   Insn 68(l0): point = 4
   Insn 65(l0): point = 6
   Insn 64(l0): point = 8
   Insn 63(l0): point = 10
   Insn 62(l0): point = 12
   Insn 61(l0): point = 14
   Insn 60(l0): point = 16
   Insn 59(l0): point = 18
   Insn 58(l0): point = 20
   Insn 57(l0): point = 22
   Insn 56(l0): point = 24
   Insn 55(l0): point = 26
   Insn 54(l0): point = 28
   Insn 53(l0): point = 30
   Insn 52(l0): point = 32
   Insn 51(l0): point = 34
   Insn 50(l0): point = 36
   Insn 49(l0): point = 38
   Insn 48(l0): point = 40
   Insn 47(l0): point = 42
   Insn 46(l0): point = 44
   Insn 45(l0): point = 46
   Insn 44(l0): point = 48
   Insn 43(l0): point = 50
   Insn 42(l0): point = 52
   Insn 41(l0): point = 54
   Insn 40(l0): point = 56
   Insn 39(l0): point = 58
   Insn 38(l0): point = 60
   Insn 37(l0): point = 62
   Insn 36(l0): point = 64
   Insn 35(l0): point = 66
   Insn 34(l0): point = 68
   Insn 33(l0): point = 70
   Insn 32(l0): point = 72
   Insn 31(l0): point = 74
   Insn 30(l0): point = 76
   Insn 29(l0): point = 78
   Insn 28(l0): point = 80
   Insn 27(l0): point = 82
   Insn 26(l0): point = 84
   Insn 25(l0): point = 86
   Insn 24(l0): point = 88
   Insn 23(l0): point = 90
   Insn 22(l0): point = 92
   Insn 21(l0): point = 94
   Insn 20(l0): point = 96
   Insn 19(l0): point = 98
   Insn 18(l0): point = 100
   Insn 17(l0): point = 102
   Insn 16(l0): point = 104
   Insn 15(l0): point = 106
   Insn 14(l0): point = 108
   Insn 13(l0): point = 110
   Insn 12(l0): point = 112
   Insn 11(l0): point = 114
   Insn 10(l0): point = 116
   Insn 9(l0): point = 118
   Insn 8(l0): point = 120
   Insn 7(l0): point = 122
   Insn 3(l0): point = 124
   Insn 2(l0): point = 126
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r78): [9..30]
 a3(r82): [9..10]
 a4(r95): [11..12]
 a5(r81): [11..14]
 a6(r80): [19..20]
 a7(r79 [0]): [25..26]
 a7(r79 [1]): [25..26]
 a8(r94): [27..28]
 a9(r93): [31..32]
 a10(r68): [35..76]
 a11(r77): [35..36]
 a12(r76): [37..38]
 a13(r72): [37..56]
 a14(r75): [43..44]
 a15(r74 [0]): [49..50]
 a15(r74 [1]): [49..50]
 a16(r73): [51..52]
 a17(r92): [53..54]
 a18(r91): [57..58]
 a19(r71): [57..60]
 a20(r70): [65..66]
 a21(r69 [0]): [71..72]
 a21(r69 [1]): [71..72]
 a22(r90): [73..74]
 a23(r89): [77..78]
 a24(r88): [81..82]
 a25(r67): [81..84]
 a26(r66): [85..86]
 a27(r62): [85..104]
 a28(r65): [91..92]
 a29(r64 [0]): [97..98]
 a29(r64 [1]): [97..98]
 a30(r63): [99..100]
 a31(r87): [101..102]
 a32(r86): [105..106]
 a33(r61): [105..108]
 a34(r60): [113..114]
 a35(r59 [0]): [119..120]
 a35(r59 [1]): [119..120]
 a36(r85): [121..122]
Compressing live ranges: from 129 to 58 - 44%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r78): [4..13]
 a3(r82): [4..5]
 a4(r95): [6..7]
 a5(r81): [6..7]
 a6(r80): [8..9]
 a7(r79 [0]): [10..11]
 a7(r79 [1]): [10..11]
 a8(r94): [12..13]
 a9(r93): [14..15]
 a10(r68): [16..35]
 a11(r77): [16..17]
 a12(r76): [18..19]
 a13(r72): [18..27]
 a14(r75): [20..21]
 a15(r74 [0]): [22..23]
 a15(r74 [1]): [22..23]
 a16(r73): [24..25]
 a17(r92): [26..27]
 a18(r91): [28..29]
 a19(r71): [28..29]
 a20(r70): [30..31]
 a21(r69 [0]): [32..33]
 a21(r69 [1]): [32..33]
 a22(r90): [34..35]
 a23(r89): [36..37]
 a24(r88): [38..39]
 a25(r67): [38..39]
 a26(r66): [40..41]
 a27(r62): [40..49]
 a28(r65): [42..43]
 a29(r64 [0]): [44..45]
 a29(r64 [1]): [44..45]
 a30(r63): [46..47]
 a31(r87): [48..49]
 a32(r86): [50..51]
 a33(r61): [50..51]
 a34(r60): [52..53]
 a35(r59 [0]): [54..55]
 a35(r59 [1]): [54..55]
 a36(r85): [56..57]
  regions=1, blocks=3, points=58
    allocnos=37 (big 5), copies=0, conflicts=0, ranges=42
Disposition:
   35:r59  l0     0   34:r60  l0     8   33:r61  l0     8   27:r62  l0   mem
   30:r63  l0     0   29:r64  l0     0   28:r65  l0     8   26:r66  l0     8
   25:r67  l0     8   10:r68  l0     3   21:r69  l0     0   20:r70  l0     8
   19:r71  l0     8   13:r72  l0   mem   16:r73  l0     0   15:r74  l0     0
   14:r75  l0     8   12:r76  l0     8   11:r77  l0     8    2:r78  l0     3
    7:r79  l0     0    6:r80  l0     8    5:r81  l0     8    3:r82  l0     8
    1:r83  l0     0    0:r84  l0     0   36:r85  l0     0   32:r86  l0     9
   31:r87  l0     0   24:r88  l0     0   23:r89  l0     0   22:r90  l0     0
   18:r91  l0     9   17:r92  l0     0    9:r93  l0     0    8:r94  l0     0
    4:r95  l0     9
+++Costs: overall 29, reg -11, mem 40, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_to_cart

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={12d,2u} r1={11d} r2={11d} r4={11d,1u} r5={11d,1u} r6={1d,2u} r7={1d,32u} r8={10d,10u} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,1u} r17={14d} r18={10d} r19={10d} r20={1d,12u,4e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 603{501d,98u,4e} in 64{54 regular + 10 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])
        (reg:DI 4 si [ A ])) mUtility.c:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ A ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:XF 59 [ D.5083 ])
        (mem:XF (reg/f:DI 85) [0 *a_1(D)+0 S16 A128])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 9 8 10 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 59 [ D.5083 ])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5083 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:71 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 11 10 12 2 (set (reg:XF 60 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 12 11 13 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 60 [ D.5083 ])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5083 ])
        (nil)))
(call_insn/u 13 12 14 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:71 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 14 13 15 2 (set (reg:XF 61 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 15 14 16 2 (set (reg:XF 86)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 16 15 17 2 (set (reg:XF 62 [ D.5083 ])
        (mult:XF (reg:XF 61 [ D.5083 ])
            (reg:XF 86))) mUtility.c:71 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 86)
        (expr_list:REG_DEAD (reg:XF 61 [ D.5083 ])
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 63 [ D.5084 ])
                (plus:DI (reg/f:DI 87)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:71 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 19 18 20 2 (set (reg:XF 64 [ D.5083 ])
        (mem:XF (reg/f:DI 63 [ D.5084 ]) [0 *_6+0 S16 A128])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5084 ])
        (nil)))
(insn 20 19 21 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 64 [ D.5083 ])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5083 ])
        (nil)))
(call_insn 21 20 22 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:71 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 22 21 23 2 (set (reg:XF 65 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 23 22 24 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 65 [ D.5083 ])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5083 ])
        (nil)))
(call_insn/u 24 23 25 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:71 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 25 24 26 2 (set (reg:XF 66 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 26 25 27 2 (set (reg:XF 67 [ D.5083 ])
        (mult:XF (reg:XF 62 [ D.5083 ])
            (reg:XF 66 [ D.5083 ]))) mUtility.c:71 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5083 ])
        (expr_list:REG_DEAD (reg:XF 62 [ D.5083 ])
            (nil))))
(insn 27 26 28 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])) mUtility.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (mem:XF (reg/f:DI 88) [0 *A_11(D)+0 S16 A128])
        (reg:XF 67 [ D.5083 ])) mUtility.c:71 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg:XF 67 [ D.5083 ])
            (nil))))
(insn 29 28 30 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])) mUtility.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (parallel [
            (set (reg/f:DI 68 [ D.5084 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 31 30 32 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:XF 69 [ D.5083 ])
        (mem:XF (reg/f:DI 90) [0 *a_1(D)+0 S16 A128])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 33 32 34 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 69 [ D.5083 ])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5083 ])
        (nil)))
(call_insn 34 33 35 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:72 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 35 34 36 2 (set (reg:XF 70 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 36 35 37 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 70 [ D.5083 ])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 70 [ D.5083 ])
        (nil)))
(call_insn/u 37 36 38 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:72 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 38 37 39 2 (set (reg:XF 71 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 39 38 40 2 (set (reg:XF 91)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 40 39 41 2 (set (reg:XF 72 [ D.5083 ])
        (mult:XF (reg:XF 71 [ D.5083 ])
            (reg:XF 91))) mUtility.c:72 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 91)
        (expr_list:REG_DEAD (reg:XF 71 [ D.5083 ])
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 73 [ D.5084 ])
                (plus:DI (reg/f:DI 92)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:72 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 43 42 44 2 (set (reg:XF 74 [ D.5083 ])
        (mem:XF (reg/f:DI 73 [ D.5084 ]) [0 *_17+0 S16 A128])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.5084 ])
        (nil)))
(insn 44 43 45 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 74 [ D.5083 ])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 74 [ D.5083 ])
        (nil)))
(call_insn 45 44 46 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:72 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 46 45 47 2 (set (reg:XF 75 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 47 46 48 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 75 [ D.5083 ])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5083 ])
        (nil)))
(call_insn/u 48 47 49 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:72 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 49 48 50 2 (set (reg:XF 76 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 50 49 51 2 (set (reg:XF 77 [ D.5083 ])
        (mult:XF (reg:XF 72 [ D.5083 ])
            (reg:XF 76 [ D.5083 ]))) mUtility.c:72 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5083 ])
        (expr_list:REG_DEAD (reg:XF 72 [ D.5083 ])
            (nil))))
(insn 51 50 52 2 (set (mem:XF (reg/f:DI 68 [ D.5084 ]) [0 *_12+0 S16 A128])
        (reg:XF 77 [ D.5083 ])) mUtility.c:72 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5083 ])
        (expr_list:REG_DEAD (reg/f:DI 68 [ D.5084 ])
            (nil))))
(insn 52 51 53 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])) mUtility.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg/f:DI 78 [ D.5084 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:73 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 54 53 55 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:XF 79 [ D.5083 ])
        (mem:XF (reg/f:DI 94) [0 *a_1(D)+0 S16 A128])) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 56 55 57 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 79 [ D.5083 ])) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5083 ])
        (nil)))
(call_insn 57 56 58 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:73 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 58 57 59 2 (set (reg:XF 80 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 59 58 60 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 80 [ D.5083 ])) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 80 [ D.5083 ])
        (nil)))
(call_insn/u 60 59 61 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:73 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 61 60 62 2 (set (reg:XF 81 [ D.5083 ])
        (reg:XF 8 st)) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 62 61 63 2 (set (reg:XF 95)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 63 62 64 2 (set (reg:XF 82 [ D.5083 ])
        (mult:XF (reg:XF 81 [ D.5083 ])
            (reg:XF 95))) mUtility.c:73 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 95)
        (expr_list:REG_DEAD (reg:XF 81 [ D.5083 ])
            (nil))))
(insn 64 63 65 2 (set (mem:XF (reg/f:DI 78 [ D.5084 ]) [0 *_22+0 S16 A128])
        (reg:XF 82 [ D.5083 ])) mUtility.c:73 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 82 [ D.5083 ])
        (expr_list:REG_DEAD (reg/f:DI 78 [ D.5084 ])
            (nil))))
(insn 65 64 68 2 (set (reg:SI 83 [ D.5085 ])
        (const_int 1 [0x1])) mUtility.c:75 89 {*movsi_internal}
     (nil))
(insn 68 65 72 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ D.5085 ])) mUtility.c:75 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.5085 ])
        (nil)))
(insn 72 68 75 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) mUtility.c:76 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 75 72 0 2 (use (reg/i:SI 0 ax)) mUtility.c:76 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function mean (mean, funcdef_no=10, decl_uid=1809, cgraph_uid=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a13 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r65,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r65,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r64,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r72,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r69,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a6(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r70,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16

   Insn 42(l0): point = 0
   Insn 39(l0): point = 2
   Insn 35(l0): point = 4
   Insn 32(l0): point = 6
   Insn 31(l0): point = 8
   Insn 30(l0): point = 10
   Insn 22(l0): point = 13
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 19(l0): point = 19
   Insn 18(l0): point = 21
   Insn 17(l0): point = 23
   Insn 16(l0): point = 25
   Insn 15(l0): point = 27
   Insn 14(l0): point = 29
   Insn 13(l0): point = 31
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 26(l0): point = 38
   Insn 45(l0): point = 41
   Insn 9(l0): point = 43
   Insn 8(l0): point = 45
   Insn 7(l0): point = 47
   Insn 3(l0): point = 49
   Insn 2(l0): point = 51
 a0(r65): [3..4]
 a1(r64): [5..6]
 a2(r63): [7..10]
 a3(r72): [7..8]
 a4(r71): [37..38]
 a5(r69): [16..17]
 a6(r62): [18..21]
 a7(r70): [18..19]
 a8(r61): [22..23]
 a9(r68): [24..25]
 a10(r60): [24..27]
 a11(r59): [28..29]
 a12(r67): [30..31]
 a13(r66 [0]): [44..45]
 a13(r66 [1]): [44..45]
Compressing live ranges: from 54 to 22 - 40%
Ranges after the compression:
 a0(r65): [0..1]
 a1(r64): [2..3]
 a2(r63): [4..5]
 a3(r72): [4..5]
 a4(r71): [18..19]
 a5(r69): [6..7]
 a6(r62): [8..9]
 a7(r70): [8..9]
 a8(r61): [10..11]
 a9(r68): [12..13]
 a10(r60): [12..13]
 a11(r59): [14..15]
 a12(r67): [16..17]
 a13(r66 [0]): [20..21]
 a13(r66 [1]): [20..21]
  regions=1, blocks=6, points=22
    allocnos=14 (big 1), copies=0, conflicts=0, ranges=15
Disposition:
   11:r59  l0     0   10:r60  l0     1    8:r61  l0     0    6:r62  l0     8
    2:r63  l0     8    1:r64  l0     8    0:r65  l0     8   13:r66  l0     0
   12:r67  l0     0    9:r68  l0     0    5:r69  l0     8    7:r70  l0     9
    4:r71  l0     0    3:r72  l0     9
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mean

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r8={1d,2u} r16={1d,4u} r17={4d,1u} r20={1d,19u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} 
;;    total ref usage 92{38d,52u,2e} in 25{25 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S8 A64])
        (reg:DI 5 di [ x ])) mUtility.c:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mUtility.c:78 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:81 89 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:XF 66)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mUtility.c:81 131 {*movxf_internal_rex64}
     (nil))
(insn 9 8 45 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sum+0 S16 A128])
        (reg:XF 66)) mUtility.c:81 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66)
        (nil)))
(jump_insn 45 9 46 2 (set (pc)
        (label_ref 23)) mUtility.c:81 650 {jump}
     (nil)
 -> 23)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 25)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 67 68 69 70
(code_label 25 46 12 3 24 "" [1 uses])
(note 12 25 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 67)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:81 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 59 [ D.5086 ])
        (sign_extend:DI (reg:SI 67))) mUtility.c:81 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg:DI 60 [ D.5086 ])
                (ashift:DI (reg:DI 59 [ D.5086 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:81 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5086 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 3 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S8 A64])) mUtility.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg/f:DI 61 [ D.5087 ])
                (plus:DI (reg:DI 60 [ D.5086 ])
                    (reg/f:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:81 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (expr_list:REG_DEAD (reg:DI 60 [ D.5086 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S8 A64])
                        (reg:DI 60 [ D.5086 ]))
                    (nil))))))
(insn 18 17 19 3 (set (reg:XF 62 [ D.5088 ])
        (mem:XF (reg/f:DI 61 [ D.5087 ]) [0 *_9+0 S16 A128])) mUtility.c:81 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5087 ])
        (nil)))
(insn 19 18 20 3 (set (reg:XF 70)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sum+0 S16 A128])) mUtility.c:81 131 {*movxf_internal_rex64}
     (nil))
(insn 20 19 21 3 (set (reg:XF 69)
        (plus:XF (reg:XF 70)
            (reg:XF 62 [ D.5088 ]))) mUtility.c:81 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 70)
        (expr_list:REG_DEAD (reg:XF 62 [ D.5088 ])
            (nil))))
(insn 21 20 22 3 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sum+0 S16 A128])
        (reg:XF 69)) mUtility.c:81 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 69)
        (nil)))
(insn 22 21 23 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:81 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 71
(code_label 23 22 24 4 23 "" [1 uses])
(note 24 23 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 27 4 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:81 89 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 71)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 N+0 S4 A32]))) mUtility.c:81 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) mUtility.c:81 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 25)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 8 [st] 63 64 65 72
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:XF 63 [ D.5088 ])
        (float:XF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 N+0 S4 A32]))) mUtility.c:82 256 {*floatsixf2_i387}
     (nil))
(insn 31 30 32 5 (set (reg:XF 72)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 sum+0 S16 A128])) mUtility.c:82 131 {*movxf_internal_rex64}
     (nil))
(insn 32 31 35 5 (set (reg:XF 64 [ D.5088 ])
        (div:XF (reg:XF 72)
            (reg:XF 63 [ D.5088 ]))) mUtility.c:82 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 72)
        (expr_list:REG_DEAD (reg:XF 63 [ D.5088 ])
            (nil))))
(insn 35 32 39 5 (set (reg:XF 65 [ <retval> ])
        (reg:XF 64 [ D.5088 ])) mUtility.c:82 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5088 ])
        (nil)))
(insn 39 35 42 5 (set (reg/i:XF 8 st)
        (reg:XF 65 [ <retval> ])) mUtility.c:83 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65 [ <retval> ])
        (nil)))
(insn 42 39 0 5 (use (reg/i:XF 8 st)) mUtility.c:83 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function angle_betw_0pi (angle_betw_0pi, funcdef_no=11, decl_uid=3935, cgraph_uid=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 92.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r136: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a2 (r136,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r135: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r135,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r134: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r134,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a25 (r127,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r125,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r124: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r124,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r123: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r123,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r122: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r122,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r121: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r121,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r120: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r120,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r115,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r110,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r105,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r104: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a1 (r104,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a22 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a59 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a66 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a67 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a65 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a72 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a73 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r104,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r136,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a3(r135,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r134,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r103,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r98,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r100,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r97,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r92,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r96,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r91,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r90,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r127,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a26(r89,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a27(r88,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r87,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r126,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a30(r125,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r86,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r85,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r124,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r123,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r122,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r121,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r120,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a38(r84,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r83,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r82,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a43(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a44(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r79,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r77,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a48(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a49(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a50(r115,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a51(r76,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r75,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r73,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a56(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a57(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a58(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r70,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a60(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a61(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r110,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a64(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a66(r67,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a67(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a68(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a69(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a70(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a71(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a72(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a73(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a74(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a75(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a76(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a77(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 103(l0): point = 0
   Insn 100(l0): point = 2
   Insn 96(l0): point = 4
   Insn 93(l0): point = 6
   Insn 92(l0): point = 8
   Insn 91(l0): point = 10
   Insn 90(l0): point = 12
   Insn 89(l0): point = 14
   Insn 88(l0): point = 16
   Insn 87(l0): point = 18
   Insn 86(l0): point = 20
   Insn 85(l0): point = 22
   Insn 84(l0): point = 24
   Insn 83(l0): point = 26
   Insn 82(l0): point = 28
   Insn 81(l0): point = 30
   Insn 80(l0): point = 32
   Insn 79(l0): point = 34
   Insn 78(l0): point = 36
   Insn 77(l0): point = 38
   Insn 76(l0): point = 40
   Insn 75(l0): point = 42
   Insn 74(l0): point = 44
   Insn 73(l0): point = 46
   Insn 72(l0): point = 48
   Insn 71(l0): point = 50
   Insn 70(l0): point = 52
   Insn 69(l0): point = 54
   Insn 68(l0): point = 56
   Insn 67(l0): point = 58
   Insn 66(l0): point = 60
   Insn 65(l0): point = 62
   Insn 64(l0): point = 64
   Insn 63(l0): point = 66
   Insn 62(l0): point = 68
   Insn 61(l0): point = 70
   Insn 60(l0): point = 72
   Insn 59(l0): point = 74
   Insn 58(l0): point = 76
   Insn 57(l0): point = 78
   Insn 56(l0): point = 80
   Insn 55(l0): point = 82
   Insn 54(l0): point = 84
   Insn 53(l0): point = 86
   Insn 52(l0): point = 88
   Insn 51(l0): point = 90
   Insn 50(l0): point = 92
   Insn 49(l0): point = 94
   Insn 48(l0): point = 96
   Insn 47(l0): point = 98
   Insn 46(l0): point = 100
   Insn 45(l0): point = 102
   Insn 44(l0): point = 104
   Insn 43(l0): point = 106
   Insn 42(l0): point = 108
   Insn 41(l0): point = 110
   Insn 40(l0): point = 112
   Insn 39(l0): point = 114
   Insn 38(l0): point = 116
   Insn 37(l0): point = 118
   Insn 36(l0): point = 120
   Insn 35(l0): point = 122
   Insn 34(l0): point = 124
   Insn 33(l0): point = 126
   Insn 32(l0): point = 128
   Insn 31(l0): point = 130
   Insn 30(l0): point = 132
   Insn 29(l0): point = 134
   Insn 28(l0): point = 136
   Insn 27(l0): point = 138
   Insn 26(l0): point = 140
   Insn 25(l0): point = 142
   Insn 24(l0): point = 144
   Insn 23(l0): point = 146
   Insn 22(l0): point = 148
   Insn 21(l0): point = 150
   Insn 20(l0): point = 152
   Insn 19(l0): point = 154
   Insn 18(l0): point = 156
   Insn 17(l0): point = 158
   Insn 16(l0): point = 160
   Insn 15(l0): point = 162
   Insn 14(l0): point = 164
   Insn 13(l0): point = 166
   Insn 12(l0): point = 168
   Insn 11(l0): point = 170
   Insn 10(l0): point = 172
   Insn 9(l0): point = 174
   Insn 8(l0): point = 176
   Insn 7(l0): point = 178
   Insn 3(l0): point = 180
   Insn 2(l0): point = 182
 a0(r105): [3..4]
 a1(r104): [5..6]
 a2(r136 [0]): [11..12]
 a2(r136 [1]): [11..12]
 a3(r135 [0]): [15..16]
 a3(r135 [1]): [15..16]
 a4(r134): [19..20]
 a5(r103): [21..22]
 a6(r98): [21..36]
 a7(r102): [23..24]
 a8(r100): [23..30]
 a9(r101): [25..26]
 a10(r133): [27..28]
 a11(r99): [31..32]
 a12(r132): [33..34]
 a13(r97): [37..38]
 a14(r92): [37..52]
 a15(r96): [39..40]
 a16(r94): [39..46]
 a17(r95): [41..42]
 a18(r131): [43..44]
 a19(r93): [47..48]
 a20(r130): [49..50]
 a21(r91): [53..54]
 a22(r90): [53..58]
 a23(r129): [55..56]
 a24(r128): [59..60]
 a25(r127): [63..64]
 a26(r89): [69..70]
 a27(r88): [71..72]
 a28(r87): [71..78]
 a29(r126): [73..74]
 a30(r125): [73..76]
 a31(r86): [79..80]
 a32(r85): [79..86]
 a33(r124): [81..82]
 a34(r123): [81..84]
 a35(r122): [87..88]
 a36(r121): [87..90]
 a37(r120): [93..94]
 a38(r84): [95..96]
 a39(r80): [95..108]
 a40(r83): [97..98]
 a41(r82): [97..102]
 a42(r119): [99..100]
 a43(r81): [103..104]
 a44(r118): [105..106]
 a45(r79): [109..110]
 a46(r77): [109..116]
 a47(r78): [111..112]
 a48(r117): [113..114]
 a49(r116): [117..118]
 a50(r115): [121..122]
 a51(r76): [123..124]
 a52(r72): [123..136]
 a53(r75): [125..126]
 a54(r73): [125..132]
 a55(r74): [127..128]
 a56(r114): [129..130]
 a57(r113): [133..134]
 a58(r71): [137..138]
 a59(r70): [137..142]
 a60(r112): [139..140]
 a61(r69): [143..144]
 a62(r111): [145..146]
 a63(r110): [149..150]
 a64(r68): [151..152]
 a65(r63): [151..166]
 a66(r67): [153..154]
 a67(r65): [153..160]
 a68(r66): [155..156]
 a69(r109): [157..158]
 a70(r64): [161..162]
 a71(r108): [163..164]
 a72(r62): [167..168]
 a73(r60): [167..174]
 a74(r61): [169..170]
 a75(r107): [171..172]
 a76(r59): [175..176]
 a77(r106): [177..178]
Compressing live ranges: from 185 to 118 - 63%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [2..3]
 a2(r136 [0]): [4..5]
 a2(r136 [1]): [4..5]
 a3(r135 [0]): [6..7]
 a3(r135 [1]): [6..7]
 a4(r134): [8..9]
 a5(r103): [10..11]
 a6(r98): [10..21]
 a7(r102): [12..13]
 a8(r100): [12..17]
 a9(r101): [14..15]
 a10(r133): [16..17]
 a11(r99): [18..19]
 a12(r132): [20..21]
 a13(r97): [22..23]
 a14(r92): [22..33]
 a15(r96): [24..25]
 a16(r94): [24..29]
 a17(r95): [26..27]
 a18(r131): [28..29]
 a19(r93): [30..31]
 a20(r130): [32..33]
 a21(r91): [34..35]
 a22(r90): [34..37]
 a23(r129): [36..37]
 a24(r128): [38..39]
 a25(r127): [40..41]
 a26(r89): [42..43]
 a27(r88): [44..45]
 a28(r87): [44..47]
 a29(r126): [46..47]
 a30(r125): [46..47]
 a31(r86): [48..49]
 a32(r85): [48..51]
 a33(r124): [50..51]
 a34(r123): [50..51]
 a35(r122): [52..53]
 a36(r121): [52..53]
 a37(r120): [54..55]
 a38(r84): [56..57]
 a39(r80): [56..65]
 a40(r83): [58..59]
 a41(r82): [58..61]
 a42(r119): [60..61]
 a43(r81): [62..63]
 a44(r118): [64..65]
 a45(r79): [66..67]
 a46(r77): [66..71]
 a47(r78): [68..69]
 a48(r117): [70..71]
 a49(r116): [72..73]
 a50(r115): [74..75]
 a51(r76): [76..77]
 a52(r72): [76..85]
 a53(r75): [78..79]
 a54(r73): [78..83]
 a55(r74): [80..81]
 a56(r114): [82..83]
 a57(r113): [84..85]
 a58(r71): [86..87]
 a59(r70): [86..89]
 a60(r112): [88..89]
 a61(r69): [90..91]
 a62(r111): [92..93]
 a63(r110): [94..95]
 a64(r68): [96..97]
 a65(r63): [96..107]
 a66(r67): [98..99]
 a67(r65): [98..103]
 a68(r66): [100..101]
 a69(r109): [102..103]
 a70(r64): [104..105]
 a71(r108): [106..107]
 a72(r62): [108..109]
 a73(r60): [108..113]
 a74(r61): [110..111]
 a75(r107): [112..113]
 a76(r59): [114..115]
 a77(r106): [116..117]
  regions=1, blocks=3, points=118
    allocnos=78 (big 2), copies=0, conflicts=0, ranges=80
Disposition:
   76:r59  l0     0   73:r60  l0     9   74:r61  l0     0   72:r62  l0     8
   65:r63  l0     9   70:r64  l0     0   67:r65  l0    10   68:r66  l0     0
   66:r67  l0     8   64:r68  l0     8   61:r69  l0     0   59:r70  l0     9
   58:r71  l0     8   52:r72  l0     9   54:r73  l0    10   55:r74  l0     0
   53:r75  l0     8   51:r76  l0     8   46:r77  l0     9   47:r78  l0     0
   45:r79  l0     8   39:r80  l0     9   43:r81  l0     0   41:r82  l0    10
   40:r83  l0     8   38:r84  l0     8   32:r85  l0     9   31:r86  l0     8
   28:r87  l0     9   27:r88  l0     8   26:r89  l0     8   22:r90  l0     9
   21:r91  l0     8   14:r92  l0     9   19:r93  l0     0   16:r94  l0    10
   17:r95  l0     0   15:r96  l0     8   13:r97  l0     8    6:r98  l0     9
   11:r99  l0     0    8:r100 l0    10    9:r101 l0     0    7:r102 l0     8
    5:r103 l0     8    1:r104 l0     8    0:r105 l0     8   77:r106 l0     0
   75:r107 l0     0   71:r108 l0     0   69:r109 l0     0   63:r110 l0     8
   62:r111 l0     0   60:r112 l0     0   57:r113 l0     0   56:r114 l0     0
   50:r115 l0     8   49:r116 l0     0   48:r117 l0     0   44:r118 l0     0
   42:r119 l0     0   37:r120 l0     8   36:r121 l0     9   35:r122 l0     8
   34:r123 l0    10   33:r124 l0     8   30:r125 l0    10   29:r126 l0     8
   25:r127 l0     8   24:r128 l0     0   23:r129 l0     0   20:r130 l0     0
   18:r131 l0     0   12:r132 l0     0   10:r133 l0     0    4:r134 l0     8
    3:r135 l0     0    2:r136 l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


angle_betw_0pi

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,10u} r8={3d,4u} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={14d} r18={2d} r19={2d} r20={1d,35u,12e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 342{198d,132u,12e} in 92{90 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:85 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:87 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 59 [ D.5089 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:87 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 9 8 10 2 (set (reg:XF 60 [ D.5090 ])
        (mem:XF (reg/f:DI 59 [ D.5089 ]) [0 *_2+0 S16 A128])) mUtility.c:87 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.5089 ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:87 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 61 [ D.5089 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:87 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 12 11 13 2 (set (reg:XF 62 [ D.5090 ])
        (mem:XF (reg/f:DI 61 [ D.5089 ]) [0 *_5+0 S16 A128])) mUtility.c:87 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5089 ])
        (nil)))
(insn 13 12 14 2 (set (reg:XF 63 [ D.5090 ])
        (mult:XF (reg:XF 60 [ D.5090 ])
            (reg:XF 62 [ D.5090 ]))) mUtility.c:87 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5090 ])
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:87 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 64 [ D.5089 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:87 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 16 15 17 2 (set (reg:XF 65 [ D.5090 ])
        (mem:XF (reg/f:DI 64 [ D.5089 ]) [0 *_8+0 S16 A128])) mUtility.c:87 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.5089 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:87 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 66 [ D.5089 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:87 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 19 18 20 2 (set (reg:XF 67 [ D.5090 ])
        (mem:XF (reg/f:DI 66 [ D.5089 ]) [0 *_10+0 S16 A128])) mUtility.c:87 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5089 ])
        (nil)))
(insn 20 19 21 2 (set (reg:XF 68 [ D.5090 ])
        (mult:XF (reg:XF 65 [ D.5090 ])
            (reg:XF 67 [ D.5090 ]))) mUtility.c:87 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5090 ])
            (nil))))
(insn 21 20 22 2 (set (reg:XF 110)
        (minus:XF (reg:XF 63 [ D.5090 ])
            (reg:XF 68 [ D.5090 ]))) mUtility.c:87 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 68 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 63 [ D.5090 ])
            (nil))))
(insn 22 21 23 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cross_x+0 S16 A128])
        (reg:XF 110)) mUtility.c:87 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 110)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:88 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 69 [ D.5089 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:88 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 25 24 26 2 (set (reg:XF 70 [ D.5090 ])
        (mem:XF (reg/f:DI 69 [ D.5089 ]) [0 *_14+0 S16 A128])) mUtility.c:88 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.5089 ])
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:88 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:XF 71 [ D.5090 ])
        (mem:XF (reg/f:DI 112) [0 *b_4(D)+0 S16 A128])) mUtility.c:88 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(insn 28 27 29 2 (set (reg:XF 72 [ D.5090 ])
        (mult:XF (reg:XF 70 [ D.5090 ])
            (reg:XF 71 [ D.5090 ]))) mUtility.c:88 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5090 ])
            (nil))))
(insn 29 28 30 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:88 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:XF 73 [ D.5090 ])
        (mem:XF (reg/f:DI 113) [0 *a_1(D)+0 S16 A128])) mUtility.c:88 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 31 30 32 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:88 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 74 [ D.5089 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:88 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 33 32 34 2 (set (reg:XF 75 [ D.5090 ])
        (mem:XF (reg/f:DI 74 [ D.5089 ]) [0 *_19+0 S16 A128])) mUtility.c:88 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.5089 ])
        (nil)))
(insn 34 33 35 2 (set (reg:XF 76 [ D.5090 ])
        (mult:XF (reg:XF 73 [ D.5090 ])
            (reg:XF 75 [ D.5090 ]))) mUtility.c:88 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 73 [ D.5090 ])
            (nil))))
(insn 35 34 36 2 (set (reg:XF 115)
        (minus:XF (reg:XF 72 [ D.5090 ])
            (reg:XF 76 [ D.5090 ]))) mUtility.c:88 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 72 [ D.5090 ])
            (nil))))
(insn 36 35 37 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 cross_y+0 S16 A128])
        (reg:XF 115)) mUtility.c:88 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 115)
        (nil)))
(insn 37 36 38 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 2 (set (reg:XF 77 [ D.5090 ])
        (mem:XF (reg/f:DI 116) [0 *a_1(D)+0 S16 A128])) mUtility.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 39 38 40 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:DI 78 [ D.5089 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 41 40 42 2 (set (reg:XF 79 [ D.5090 ])
        (mem:XF (reg/f:DI 78 [ D.5089 ]) [0 *_24+0 S16 A128])) mUtility.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ D.5089 ])
        (nil)))
(insn 42 41 43 2 (set (reg:XF 80 [ D.5090 ])
        (mult:XF (reg:XF 77 [ D.5090 ])
            (reg:XF 79 [ D.5090 ]))) mUtility.c:89 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 77 [ D.5090 ])
            (nil))))
(insn 43 42 44 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg/f:DI 81 [ D.5089 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:89 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 45 44 46 2 (set (reg:XF 82 [ D.5090 ])
        (mem:XF (reg/f:DI 81 [ D.5089 ]) [0 *_27+0 S16 A128])) mUtility.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81 [ D.5089 ])
        (nil)))
(insn 46 45 47 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:89 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 2 (set (reg:XF 83 [ D.5090 ])
        (mem:XF (reg/f:DI 119) [0 *b_4(D)+0 S16 A128])) mUtility.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 48 47 49 2 (set (reg:XF 84 [ D.5090 ])
        (mult:XF (reg:XF 82 [ D.5090 ])
            (reg:XF 83 [ D.5090 ]))) mUtility.c:89 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 83 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 82 [ D.5090 ])
            (nil))))
(insn 49 48 50 2 (set (reg:XF 120)
        (minus:XF (reg:XF 80 [ D.5090 ])
            (reg:XF 84 [ D.5090 ]))) mUtility.c:89 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 84 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 80 [ D.5090 ])
            (nil))))
(insn 50 49 51 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 cross_z+0 S16 A128])
        (reg:XF 120)) mUtility.c:89 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 120)
        (nil)))
(insn 51 50 52 2 (set (reg:XF 121)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cross_x+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:XF 122)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cross_x+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (reg:XF 85 [ D.5090 ])
        (mult:XF (reg:XF 121)
            (reg:XF 122))) mUtility.c:91 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 122)
        (expr_list:REG_DEAD (reg:XF 121)
            (nil))))
(insn 54 53 55 2 (set (reg:XF 123)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 cross_y+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 cross_y+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 56 55 57 2 (set (reg:XF 86 [ D.5090 ])
        (mult:XF (reg:XF 123)
            (reg:XF 124))) mUtility.c:91 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 124)
        (expr_list:REG_DEAD (reg:XF 123)
            (nil))))
(insn 57 56 58 2 (set (reg:XF 87 [ D.5090 ])
        (plus:XF (reg:XF 85 [ D.5090 ])
            (reg:XF 86 [ D.5090 ]))) mUtility.c:91 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 86 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 85 [ D.5090 ])
            (nil))))
(insn 58 57 59 2 (set (reg:XF 125)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 cross_z+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (reg:XF 126)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 cross_z+0 S16 A128])) mUtility.c:91 131 {*movxf_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:XF 88 [ D.5090 ])
        (mult:XF (reg:XF 125)
            (reg:XF 126))) mUtility.c:91 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 126)
        (expr_list:REG_DEAD (reg:XF 125)
            (nil))))
(insn 61 60 62 2 (set (reg:XF 89 [ D.5090 ])
        (plus:XF (reg:XF 87 [ D.5090 ])
            (reg:XF 88 [ D.5090 ]))) mUtility.c:91 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 87 [ D.5090 ])
            (nil))))
(insn 62 61 63 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 89 [ D.5090 ])) mUtility.c:91 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5090 ])
        (nil)))
(call_insn 63 62 64 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sqrtl") [flags 0x41]  <function_decl 0x7f4452d75400 sqrtl>) [0 __builtin_sqrtl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:91 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 64 63 65 2 (set (reg:XF 127)
        (reg:XF 8 st)) mUtility.c:91 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 65 64 66 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 fcross+0 S16 A128])
        (reg:XF 127)) mUtility.c:91 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 127)
        (nil)))
(insn 66 65 67 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (reg:XF 90 [ D.5090 ])
        (mem:XF (reg/f:DI 128) [0 *a_1(D)+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(insn 68 67 69 2 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 2 (set (reg:XF 91 [ D.5090 ])
        (mem:XF (reg/f:DI 129) [0 *b_4(D)+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(insn 70 69 71 2 (set (reg:XF 92 [ D.5090 ])
        (mult:XF (reg:XF 90 [ D.5090 ])
            (reg:XF 91 [ D.5090 ]))) mUtility.c:92 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 91 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 90 [ D.5090 ])
            (nil))))
(insn 71 70 72 2 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 2 (parallel [
            (set (reg/f:DI 93 [ D.5089 ])
                (plus:DI (reg/f:DI 130)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:92 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 73 72 74 2 (set (reg:XF 94 [ D.5090 ])
        (mem:XF (reg/f:DI 93 [ D.5089 ]) [0 *_41+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.5089 ])
        (nil)))
(insn 74 73 75 2 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 2 (parallel [
            (set (reg/f:DI 95 [ D.5089 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:92 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 76 75 77 2 (set (reg:XF 96 [ D.5090 ])
        (mem:XF (reg/f:DI 95 [ D.5089 ]) [0 *_43+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.5089 ])
        (nil)))
(insn 77 76 78 2 (set (reg:XF 97 [ D.5090 ])
        (mult:XF (reg:XF 94 [ D.5090 ])
            (reg:XF 96 [ D.5090 ]))) mUtility.c:92 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 96 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 94 [ D.5090 ])
            (nil))))
(insn 78 77 79 2 (set (reg:XF 98 [ D.5090 ])
        (plus:XF (reg:XF 92 [ D.5090 ])
            (reg:XF 97 [ D.5090 ]))) mUtility.c:92 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 97 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 92 [ D.5090 ])
            (nil))))
(insn 79 78 80 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 2 (parallel [
            (set (reg/f:DI 99 [ D.5089 ])
                (plus:DI (reg/f:DI 132)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:92 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -88 [0xffffffffffffffa8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 81 80 82 2 (set (reg:XF 100 [ D.5090 ])
        (mem:XF (reg/f:DI 99 [ D.5089 ]) [0 *_47+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.5089 ])
        (nil)))
(insn 82 81 83 2 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])) mUtility.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (parallel [
            (set (reg/f:DI 101 [ D.5089 ])
                (plus:DI (reg/f:DI 133)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:92 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 b+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 84 83 85 2 (set (reg:XF 102 [ D.5090 ])
        (mem:XF (reg/f:DI 101 [ D.5089 ]) [0 *_49+0 S16 A128])) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.5089 ])
        (nil)))
(insn 85 84 86 2 (set (reg:XF 103 [ D.5090 ])
        (mult:XF (reg:XF 100 [ D.5090 ])
            (reg:XF 102 [ D.5090 ]))) mUtility.c:92 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 102 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 100 [ D.5090 ])
            (nil))))
(insn 86 85 87 2 (set (reg:XF 134)
        (plus:XF (reg:XF 98 [ D.5090 ])
            (reg:XF 103 [ D.5090 ]))) mUtility.c:92 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 103 [ D.5090 ])
        (expr_list:REG_DEAD (reg:XF 98 [ D.5090 ])
            (nil))))
(insn 87 86 88 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 fdot+0 S16 A128])
        (reg:XF 134)) mUtility.c:92 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 134)
        (nil)))
(insn 88 87 89 2 (set (reg:XF 135)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 fdot+0 S16 A128])) mUtility.c:94 131 {*movxf_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 135)) mUtility.c:94 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 135)
        (nil)))
(insn 90 89 91 2 (set (reg:XF 136)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 fcross+0 S16 A128])) mUtility.c:94 131 {*movxf_internal_rex64}
     (nil))
(insn 91 90 92 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 136)) mUtility.c:94 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 136)
        (nil)))
(call_insn 92 91 93 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("atan2l") [flags 0x41]  <function_decl 0x7f4452d42500 atan2l>) [0 __builtin_atan2l S1 A8])
            (const_int 32 [0x20]))) mUtility.c:94 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 93 92 96 2 (set (reg:XF 104 [ D.5090 ])
        (reg:XF 8 st)) mUtility.c:94 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 96 93 100 2 (set (reg:XF 105 [ <retval> ])
        (reg:XF 104 [ D.5090 ])) mUtility.c:94 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 104 [ D.5090 ])
        (nil)))
(insn 100 96 103 2 (set (reg/i:XF 8 st)
        (reg:XF 105 [ <retval> ])) mUtility.c:95 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 105 [ <retval> ])
        (nil)))
(insn 103 100 0 2 (use (reg/i:XF 8 st)) mUtility.c:95 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function haversine_distance (haversine_distance, funcdef_no=12, decl_uid=1732, cgraph_uid=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 110.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r118,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r117: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a11 (r117,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r116: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a16 (r116,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r115: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a19 (r115,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r114: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a20 (r114,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r113: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a23 (r113,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r112: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a24 (r112,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r111: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a26 (r111,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r110: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a29 (r110,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r109: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a30 (r109,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r108: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a35 (r108,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r107: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a38 (r107,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r106: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a39 (r106,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r105: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a42 (r105,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r104: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a43 (r104,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a44 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a47 (r100,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a51 (r98,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a55 (r96,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a58 (r94,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r92,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r91: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a1 (r91,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r90: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a4 (r90,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r89: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a5 (r89,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a8 (r87,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a14 (r84,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a17 (r82,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r81: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a18 (r81,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a21 (r79,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r78: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a22 (r78,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r77: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a9 (r77,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a27 (r75,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r74: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a28 (r74,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a33 (r71,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a36 (r69,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r68: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a37 (r68,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a40 (r66,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r65: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a41 (r65,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a48 (r64,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a52 (r62,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a56 (r60,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r59: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a59 (r59,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS

  a0(r92,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r91,l0) costs: AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r118,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a3(r119,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r90,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r89,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a6(r73,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r88,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r87,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r77,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a10(r86,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a11(r117,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a12(r85,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r84,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r83,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r116,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a17(r82,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r81,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r115,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a20(r114,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a21(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r78,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r113,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a24(r112,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a25(r76,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a26(r111,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a27(r75,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r110,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a30(r109,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a31(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r70,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r108,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a36(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a38(r107,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a39(r106,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a40(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r65,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r105,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a43(r104,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a44(r101,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a45(r103,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r100,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a48(r64,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a49(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a50(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a51(r98,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a52(r62,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a53(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a54(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a55(r96,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a56(r60,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a57(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a58(r94,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a59(r59,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a60(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 125(l0): point = 0
   Insn 122(l0): point = 2
   Insn 118(l0): point = 4
   Insn 115(l0): point = 6
   Insn 114(l0): point = 8
   Insn 113(l0): point = 10
   Insn 112(l0): point = 12
   Insn 111(l0): point = 14
   Insn 110(l0): point = 16
   Insn 109(l0): point = 18
   Insn 108(l0): point = 20
   Insn 107(l0): point = 22
   Insn 106(l0): point = 24
   Insn 105(l0): point = 26
   Insn 104(l0): point = 28
   Insn 103(l0): point = 30
   Insn 102(l0): point = 32
   Insn 101(l0): point = 34
   Insn 100(l0): point = 36
   Insn 99(l0): point = 38
   Insn 98(l0): point = 40
   Insn 97(l0): point = 42
   Insn 96(l0): point = 44
   Insn 95(l0): point = 46
   Insn 94(l0): point = 48
   Insn 93(l0): point = 50
   Insn 92(l0): point = 52
   Insn 91(l0): point = 54
   Insn 90(l0): point = 56
   Insn 89(l0): point = 58
   Insn 88(l0): point = 60
   Insn 87(l0): point = 62
   Insn 86(l0): point = 64
   Insn 85(l0): point = 66
   Insn 84(l0): point = 68
   Insn 83(l0): point = 70
   Insn 82(l0): point = 72
   Insn 81(l0): point = 74
   Insn 80(l0): point = 76
   Insn 79(l0): point = 78
   Insn 78(l0): point = 80
   Insn 77(l0): point = 82
   Insn 76(l0): point = 84
   Insn 75(l0): point = 86
   Insn 74(l0): point = 88
   Insn 73(l0): point = 90
   Insn 72(l0): point = 92
   Insn 71(l0): point = 94
   Insn 70(l0): point = 96
   Insn 69(l0): point = 98
   Insn 68(l0): point = 100
   Insn 67(l0): point = 102
   Insn 66(l0): point = 104
   Insn 65(l0): point = 106
   Insn 64(l0): point = 108
   Insn 63(l0): point = 110
   Insn 62(l0): point = 112
   Insn 61(l0): point = 114
   Insn 60(l0): point = 116
   Insn 59(l0): point = 118
   Insn 58(l0): point = 120
   Insn 57(l0): point = 122
   Insn 56(l0): point = 124
   Insn 55(l0): point = 126
   Insn 54(l0): point = 128
   Insn 53(l0): point = 130
   Insn 52(l0): point = 132
   Insn 51(l0): point = 134
   Insn 50(l0): point = 136
   Insn 49(l0): point = 138
   Insn 48(l0): point = 140
   Insn 47(l0): point = 142
   Insn 46(l0): point = 144
   Insn 45(l0): point = 146
   Insn 44(l0): point = 148
   Insn 43(l0): point = 150
   Insn 42(l0): point = 152
   Insn 41(l0): point = 154
   Insn 40(l0): point = 156
   Insn 39(l0): point = 158
   Insn 38(l0): point = 160
   Insn 37(l0): point = 162
   Insn 36(l0): point = 164
   Insn 35(l0): point = 166
   Insn 34(l0): point = 168
   Insn 33(l0): point = 170
   Insn 32(l0): point = 172
   Insn 31(l0): point = 174
   Insn 30(l0): point = 176
   Insn 29(l0): point = 178
   Insn 28(l0): point = 180
   Insn 27(l0): point = 182
   Insn 26(l0): point = 184
   Insn 25(l0): point = 186
   Insn 24(l0): point = 188
   Insn 23(l0): point = 190
   Insn 22(l0): point = 192
   Insn 21(l0): point = 194
   Insn 20(l0): point = 196
   Insn 19(l0): point = 198
   Insn 18(l0): point = 200
   Insn 17(l0): point = 202
   Insn 16(l0): point = 204
   Insn 15(l0): point = 206
   Insn 14(l0): point = 208
   Insn 13(l0): point = 210
   Insn 12(l0): point = 212
   Insn 11(l0): point = 214
   Insn 10(l0): point = 216
   Insn 9(l0): point = 218
   Insn 8(l0): point = 220
   Insn 7(l0): point = 222
   Insn 3(l0): point = 224
   Insn 2(l0): point = 226
 a0(r92): [3..4]
 a1(r91 [0]): [5..6]
 a1(r91 [1]): [5..6]
 a2(r118): [9..10]
 a3(r119): [11..12]
 a4(r90): [11..14]
 a5(r89): [19..22]
 a6(r73): [21..116]
 a7(r88): [27..28]
 a8(r87): [29..30]
 a9(r77): [29..88]
 a10(r86): [35..40]
 a11(r117 [0]): [37..38]
 a11(r117 [1]): [37..38]
 a12(r85): [41..42]
 a13(r80): [41..70]
 a14(r84): [43..44]
 a15(r83): [43..52]
 a16(r116 [0]): [49..50]
 a16(r116 [1]): [49..50]
 a17(r82): [53..54]
 a18(r81): [53..62]
 a19(r115 [0]): [59..60]
 a19(r115 [1]): [59..60]
 a20(r114 [0]): [67..68]
 a20(r114 [1]): [67..68]
 a21(r79): [71..72]
 a22(r78): [71..80]
 a23(r113 [0]): [77..78]
 a23(r113 [1]): [77..78]
 a24(r112 [0]): [85..86]
 a24(r112 [1]): [85..86]
 a25(r76): [93..98]
 a26(r111 [0]): [95..96]
 a26(r111 [1]): [95..96]
 a27(r75): [99..100]
 a28(r74): [99..108]
 a29(r110 [0]): [105..106]
 a29(r110 [1]): [105..106]
 a30(r109 [0]): [113..114]
 a30(r109 [1]): [113..114]
 a31(r72): [117..118]
 a32(r67): [117..146]
 a33(r71): [119..120]
 a34(r70): [119..128]
 a35(r108 [0]): [125..126]
 a35(r108 [1]): [125..126]
 a36(r69): [129..130]
 a37(r68): [129..138]
 a38(r107 [0]): [135..136]
 a38(r107 [1]): [135..136]
 a39(r106 [0]): [143..144]
 a39(r106 [1]): [143..144]
 a40(r66): [147..148]
 a41(r65): [147..156]
 a42(r105 [0]): [153..154]
 a42(r105 [1]): [153..154]
 a43(r104 [0]): [161..162]
 a43(r104 [1]): [161..162]
 a44(r101): [165..166]
 a45(r103): [167..168]
 a46(r102): [167..170]
 a47(r100): [173..174]
 a48(r64 [0]): [179..180]
 a48(r64 [1]): [179..180]
 a49(r63): [181..182]
 a50(r99): [183..184]
 a51(r98): [187..188]
 a52(r62 [0]): [193..194]
 a52(r62 [1]): [193..194]
 a53(r61): [195..196]
 a54(r97): [197..198]
 a55(r96): [201..202]
 a56(r60 [0]): [207..208]
 a56(r60 [1]): [207..208]
 a57(r95): [209..210]
 a58(r94): [213..214]
 a59(r59 [0]): [219..220]
 a59(r59 [1]): [219..220]
 a60(r93): [221..222]
Compressing live ranges: from 229 to 92 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91 [0]): [2..3]
 a1(r91 [1]): [2..3]
 a2(r118): [4..5]
 a3(r119): [6..7]
 a4(r90): [6..7]
 a5(r89): [8..9]
 a6(r73): [8..41]
 a7(r88): [10..11]
 a8(r87): [12..13]
 a9(r77): [12..33]
 a10(r86): [14..15]
 a11(r117 [0]): [14..15]
 a11(r117 [1]): [14..15]
 a12(r85): [16..17]
 a13(r80): [16..27]
 a14(r84): [18..19]
 a15(r83): [18..21]
 a16(r116 [0]): [20..21]
 a16(r116 [1]): [20..21]
 a17(r82): [22..23]
 a18(r81): [22..25]
 a19(r115 [0]): [24..25]
 a19(r115 [1]): [24..25]
 a20(r114 [0]): [26..27]
 a20(r114 [1]): [26..27]
 a21(r79): [28..29]
 a22(r78): [28..31]
 a23(r113 [0]): [30..31]
 a23(r113 [1]): [30..31]
 a24(r112 [0]): [32..33]
 a24(r112 [1]): [32..33]
 a25(r76): [34..35]
 a26(r111 [0]): [34..35]
 a26(r111 [1]): [34..35]
 a27(r75): [36..37]
 a28(r74): [36..39]
 a29(r110 [0]): [38..39]
 a29(r110 [1]): [38..39]
 a30(r109 [0]): [40..41]
 a30(r109 [1]): [40..41]
 a31(r72): [42..43]
 a32(r67): [42..53]
 a33(r71): [44..45]
 a34(r70): [44..47]
 a35(r108 [0]): [46..47]
 a35(r108 [1]): [46..47]
 a36(r69): [48..49]
 a37(r68): [48..51]
 a38(r107 [0]): [50..51]
 a38(r107 [1]): [50..51]
 a39(r106 [0]): [52..53]
 a39(r106 [1]): [52..53]
 a40(r66): [54..55]
 a41(r65): [54..57]
 a42(r105 [0]): [56..57]
 a42(r105 [1]): [56..57]
 a43(r104 [0]): [58..59]
 a43(r104 [1]): [58..59]
 a44(r101): [60..61]
 a45(r103): [62..63]
 a46(r102): [62..63]
 a47(r100): [64..65]
 a48(r64 [0]): [66..67]
 a48(r64 [1]): [66..67]
 a49(r63): [68..69]
 a50(r99): [70..71]
 a51(r98): [72..73]
 a52(r62 [0]): [74..75]
 a52(r62 [1]): [74..75]
 a53(r61): [76..77]
 a54(r97): [78..79]
 a55(r96): [80..81]
 a56(r60 [0]): [82..83]
 a56(r60 [1]): [82..83]
 a57(r95): [84..85]
 a58(r94): [86..87]
 a59(r59 [0]): [88..89]
 a59(r59 [1]): [88..89]
 a60(r93): [90..91]
  regions=1, blocks=3, points=92
    allocnos=61 (big 19), copies=0, conflicts=0, ranges=80
Disposition:
   59:r59  l0     0   56:r60  l0     0   53:r61  l0     0   52:r62  l0     0
   49:r63  l0     0   48:r64  l0     0   41:r65  l0   mem   40:r66  l0     8
   32:r67  l0   mem   37:r68  l0   mem   36:r69  l0     8   34:r70  l0   mem
   33:r71  l0     8   31:r72  l0     8    6:r73  l0   mem   28:r74  l0   mem
   27:r75  l0     8   25:r76  l0     8    9:r77  l0   mem   22:r78  l0   mem
   21:r79  l0     8   13:r80  l0   mem   18:r81  l0   mem   17:r82  l0     8
   15:r83  l0   mem   14:r84  l0     8   12:r85  l0     8   10:r86  l0     8
    8:r87  l0     8    7:r88  l0     8    5:r89  l0     8    4:r90  l0     8
    1:r91  l0     0    0:r92  l0     8   60:r93  l0     0   58:r94  l0     8
   57:r95  l0     0   55:r96  l0     8   54:r97  l0     0   51:r98  l0     8
   50:r99  l0     0   47:r100 l0     8   44:r101 l0     8   46:r102 l0     9
   45:r103 l0     8   43:r104 l0     0   42:r105 l0     0   39:r106 l0     0
   38:r107 l0     0   35:r108 l0     0   30:r109 l0     0   29:r110 l0     0
   26:r111 l0     0   24:r112 l0     0   23:r113 l0     0   20:r114 l0     0
   19:r115 l0     0   16:r116 l0     0   11:r117 l0     0    2:r118 l0     8
    3:r119 l0     9
+++Costs: overall 201, reg -15, mem 216, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


haversine_distance

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={21d} r1={21d} r2={21d} r4={21d,1u} r5={21d,1u} r6={1d,2u} r7={1d,68u} r8={21d,22u} r9={20d} r10={20d} r11={20d} r12={20d} r13={20d} r14={20d} r15={20d} r16={1d,1u} r17={22d} r18={20d} r19={20d} r20={1d,29u,2e} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={21d} r38={21d} r39={20d} r40={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 1150{963d,185u,2e} in 114{94 regular + 20 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 p1+0 S8 A64])
        (reg:DI 5 di [ p1 ])) mUtility.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p1 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 p2+0 S8 A64])
        (reg:DI 4 si [ p2 ])) mUtility.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ p2 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 p1+0 S8 A64])) mUtility.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:XF 59 [ D.5091 ])
        (mem:XF (reg/f:DI 93) [0 *p1_1(D)+0 S16 A128])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 9 8 10 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 59 [ D.5091 ])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5091 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:99 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 11 10 12 2 (set (reg:XF 94)
        (reg:XF 8 st)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 12 11 13 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 phi1+0 S16 A128])
        (reg:XF 94)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 94)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 p2+0 S8 A64])) mUtility.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:XF 60 [ D.5091 ])
        (mem:XF (reg/f:DI 95) [0 *p2_4(D)+0 S16 A128])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 15 14 16 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 60 [ D.5091 ])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5091 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:99 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 17 16 18 2 (set (reg:XF 96)
        (reg:XF 8 st)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 18 17 19 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])
        (reg:XF 96)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 96)
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 p1+0 S8 A64])) mUtility.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 61 [ D.5092 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:99 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 p1+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 21 20 22 2 (set (reg:XF 62 [ D.5091 ])
        (mem:XF (reg/f:DI 61 [ D.5092 ]) [0 *_7+0 S16 A128])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5092 ])
        (nil)))
(insn 22 21 23 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 62 [ D.5091 ])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5091 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:99 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 24 23 25 2 (set (reg:XF 98)
        (reg:XF 8 st)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 25 24 26 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 lam1+0 S16 A128])
        (reg:XF 98)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 98)
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 p2+0 S8 A64])) mUtility.c:99 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 63 [ D.5092 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:99 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -112 [0xffffffffffffff90])) [0 p2+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 28 27 29 2 (set (reg:XF 64 [ D.5091 ])
        (mem:XF (reg/f:DI 63 [ D.5092 ]) [0 *_10+0 S16 A128])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5092 ])
        (nil)))
(insn 29 28 30 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 64 [ D.5091 ])) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5091 ])
        (nil)))
(call_insn 30 29 31 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("rad") [flags 0x3]  <function_decl 0x7f4452e3c500 rad>) [0 rad S1 A8])
            (const_int 16 [0x10]))) mUtility.c:99 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 31 30 32 2 (set (reg:XF 100)
        (reg:XF 8 st)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 32 31 33 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 lam2+0 S16 A128])
        (reg:XF 100)) mUtility.c:99 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 100)
        (nil)))
(insn 33 32 34 2 (set (reg:XF 102)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 lam1+0 S16 A128])) mUtility.c:103 131 {*movxf_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:XF 103)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 lam2+0 S16 A128])) mUtility.c:103 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:XF 101)
        (minus:XF (reg:XF 102)
            (reg:XF 103))) mUtility.c:103 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 103)
        (expr_list:REG_DEAD (reg:XF 102)
            (nil))))
(insn 36 35 37 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 d_lam+0 S16 A128])
        (reg:XF 101)) mUtility.c:103 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 101)
        (nil)))
(insn 37 36 38 2 (set (reg:XF 104)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 phi1+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 38 37 39 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 104)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 104)
        (nil)))
(call_insn/u 39 38 40 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 40 39 41 2 (set (reg:XF 65 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 41 40 42 2 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 105)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 105)
        (nil)))
(call_insn/u 43 42 44 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 44 43 45 2 (set (reg:XF 66 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 45 44 46 2 (set (reg:XF 67 [ D.5091 ])
        (mult:XF (reg:XF 65 [ D.5091 ])
            (reg:XF 66 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5091 ])
            (nil))))
(insn 46 45 47 2 (set (reg:XF 106)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 phi1+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 47 46 48 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 106)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 106)
        (nil)))
(call_insn/u 48 47 49 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 49 48 50 2 (set (reg:XF 68 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 50 49 51 2 (set (reg:XF 107)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 107)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 107)
        (nil)))
(call_insn/u 52 51 53 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 53 52 54 2 (set (reg:XF 69 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 54 53 55 2 (set (reg:XF 70 [ D.5091 ])
        (mult:XF (reg:XF 68 [ D.5091 ])
            (reg:XF 69 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 68 [ D.5091 ])
            (nil))))
(insn 55 54 56 2 (set (reg:XF 108)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 d_lam+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 56 55 57 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 108)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 108)
        (nil)))
(call_insn/u 57 56 58 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 58 57 59 2 (set (reg:XF 71 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 59 58 60 2 (set (reg:XF 72 [ D.5091 ])
        (mult:XF (reg:XF 70 [ D.5091 ])
            (reg:XF 71 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5091 ])
            (nil))))
(insn 60 59 61 2 (set (reg:XF 73 [ D.5091 ])
        (plus:XF (reg:XF 67 [ D.5091 ])
            (reg:XF 72 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 67 [ D.5091 ])
            (nil))))
(insn 61 60 62 2 (set (reg:XF 109)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 62 61 63 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 109)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 109)
        (nil)))
(call_insn/u 63 62 64 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 64 63 65 2 (set (reg:XF 74 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 65 64 66 2 (set (reg:XF 110)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 d_lam+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 66 65 67 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 110)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 110)
        (nil)))
(call_insn/u 67 66 68 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 68 67 69 2 (set (reg:XF 75 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 69 68 70 2 (set (reg:XF 76 [ D.5091 ])
        (mult:XF (reg:XF 74 [ D.5091 ])
            (reg:XF 75 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5091 ])
            (nil))))
(insn 70 69 71 2 (set (reg:XF 111)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 71 70 72 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 111)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 111)
        (nil)))
(insn 72 71 73 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 76 [ D.5091 ])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5091 ])
        (nil)))
(call_insn 73 72 74 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 74 73 75 2 (set (reg:XF 77 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 75 74 76 2 (set (reg:XF 112)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 phi1+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 76 75 77 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 112)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 112)
        (nil)))
(call_insn/u 77 76 78 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 78 77 79 2 (set (reg:XF 78 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 79 78 80 2 (set (reg:XF 113)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 80 79 81 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 113)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 113)
        (nil)))
(call_insn/u 81 80 82 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 82 81 83 2 (set (reg:XF 79 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 83 82 84 2 (set (reg:XF 80 [ D.5091 ])
        (mult:XF (reg:XF 78 [ D.5091 ])
            (reg:XF 79 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 78 [ D.5091 ])
            (nil))))
(insn 84 83 85 2 (set (reg:XF 114)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 phi1+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 85 84 86 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 114)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 114)
        (nil)))
(call_insn/u 86 85 87 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 87 86 88 2 (set (reg:XF 81 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 88 87 89 2 (set (reg:XF 115)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 phi2+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 115)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 115)
        (nil)))
(call_insn/u 90 89 91 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 91 90 92 2 (set (reg:XF 82 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 92 91 93 2 (set (reg:XF 83 [ D.5091 ])
        (mult:XF (reg:XF 81 [ D.5091 ])
            (reg:XF 82 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 82 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 81 [ D.5091 ])
            (nil))))
(insn 93 92 94 2 (set (reg:XF 116)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 d_lam+0 S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 94 93 95 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 116)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 116)
        (nil)))
(call_insn/u 95 94 96 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 96 95 97 2 (set (reg:XF 84 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 97 96 98 2 (set (reg:XF 85 [ D.5091 ])
        (mult:XF (reg:XF 83 [ D.5091 ])
            (reg:XF 84 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 84 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 83 [ D.5091 ])
            (nil))))
(insn 98 97 99 2 (set (reg:XF 86 [ D.5091 ])
        (minus:XF (reg:XF 80 [ D.5091 ])
            (reg:XF 85 [ D.5091 ]))) mUtility.c:104 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 85 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 80 [ D.5091 ])
            (nil))))
(insn 99 98 100 2 (set (reg:XF 117)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (nil))
(insn 100 99 101 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 117)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 117)
        (nil)))
(insn 101 100 102 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 86 [ D.5091 ])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 86 [ D.5091 ])
        (nil)))
(call_insn 102 101 103 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 103 102 104 2 (set (reg:XF 87 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 104 103 105 2 (set (reg:XF 88 [ D.5091 ])
        (plus:XF (reg:XF 77 [ D.5091 ])
            (reg:XF 87 [ D.5091 ]))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 87 [ D.5091 ])
        (expr_list:REG_DEAD (reg:XF 77 [ D.5091 ])
            (nil))))
(insn 105 104 106 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 88 [ D.5091 ])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5091 ])
        (nil)))
(call_insn 106 105 107 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sqrtl") [flags 0x41]  <function_decl 0x7f4452d75400 sqrtl>) [0 __builtin_sqrtl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 107 106 108 2 (set (reg:XF 89 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 108 107 109 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 73 [ D.5091 ])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5091 ])
        (nil)))
(insn 109 108 110 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 89 [ D.5091 ])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5091 ])
        (nil)))
(call_insn 110 109 111 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("atan2l") [flags 0x41]  <function_decl 0x7f4452d42500 atan2l>) [0 __builtin_atan2l S1 A8])
            (const_int 32 [0x20]))) mUtility.c:104 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 111 110 112 2 (set (reg:XF 90 [ D.5091 ])
        (reg:XF 8 st)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 112 111 113 2 (set (reg:XF 119)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 113 112 114 2 (set (reg:XF 118)
        (mult:XF (reg:XF 90 [ D.5091 ])
            (reg:XF 119))) mUtility.c:104 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 119)
        (expr_list:REG_DEAD (reg:XF 90 [ D.5091 ])
            (nil))))
(insn 114 113 115 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])
        (reg:XF 118)) mUtility.c:104 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 118)
        (nil)))
(insn 115 114 118 2 (set (reg:XF 91 [ D.5091 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S16 A128])) mUtility.c:105 131 {*movxf_internal_rex64}
     (nil))
(insn 118 115 122 2 (set (reg:XF 92 [ <retval> ])
        (reg:XF 91 [ D.5091 ])) mUtility.c:105 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 91 [ D.5091 ])
        (nil)))
(insn 122 118 125 2 (set (reg/i:XF 8 st)
        (reg:XF 92 [ <retval> ])) mUtility.c:112 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 92 [ <retval> ])
        (nil)))
(insn 125 122 0 2 (use (reg/i:XF 8 st)) mUtility.c:112 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _norm (_norm, funcdef_no=13, decl_uid=3953, cgraph_uid=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r75,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r74: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a1 (r74,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r75,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r74,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r73,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a3(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r69,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r63,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r59,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 39(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 27(l0): point = 10
   Insn 26(l0): point = 12
   Insn 25(l0): point = 14
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 22(l0): point = 20
   Insn 21(l0): point = 22
   Insn 20(l0): point = 24
   Insn 19(l0): point = 26
   Insn 18(l0): point = 28
   Insn 17(l0): point = 30
   Insn 16(l0): point = 32
   Insn 15(l0): point = 34
   Insn 14(l0): point = 36
   Insn 13(l0): point = 38
   Insn 12(l0): point = 40
   Insn 11(l0): point = 42
   Insn 10(l0): point = 44
   Insn 9(l0): point = 46
   Insn 8(l0): point = 48
   Insn 7(l0): point = 50
   Insn 6(l0): point = 52
   Insn 2(l0): point = 54
 a0(r75): [3..4]
 a1(r74): [5..6]
 a2(r73): [11..12]
 a3(r72): [13..14]
 a4(r67): [13..28]
 a5(r71): [15..16]
 a6(r69): [15..22]
 a7(r70): [17..18]
 a8(r81): [19..20]
 a9(r68): [23..24]
 a10(r80): [25..26]
 a11(r66): [29..30]
 a12(r61): [29..44]
 a13(r65): [31..32]
 a14(r63): [31..38]
 a15(r64): [33..34]
 a16(r79): [35..36]
 a17(r62): [39..40]
 a18(r78): [41..42]
 a19(r60): [45..46]
 a20(r59): [45..50]
 a21(r77): [47..48]
 a22(r76): [51..52]
Compressing live ranges: from 57 to 36 - 63%
Ranges after the compression:
 a0(r75): [0..1]
 a1(r74): [2..3]
 a2(r73): [4..5]
 a3(r72): [6..7]
 a4(r67): [6..17]
 a5(r71): [8..9]
 a6(r69): [8..13]
 a7(r70): [10..11]
 a8(r81): [12..13]
 a9(r68): [14..15]
 a10(r80): [16..17]
 a11(r66): [18..19]
 a12(r61): [18..29]
 a13(r65): [20..21]
 a14(r63): [20..25]
 a15(r64): [22..23]
 a16(r79): [24..25]
 a17(r62): [26..27]
 a18(r78): [28..29]
 a19(r60): [30..31]
 a20(r59): [30..33]
 a21(r77): [32..33]
 a22(r76): [34..35]
  regions=1, blocks=3, points=36
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
   20:r59  l0     9   19:r60  l0     8   12:r61  l0     9   17:r62  l0     0
   14:r63  l0    10   15:r64  l0     0   13:r65  l0     8   11:r66  l0     8
    4:r67  l0     9    9:r68  l0     0    6:r69  l0    10    7:r70  l0     0
    5:r71  l0     8    3:r72  l0     8    2:r73  l0     8    1:r74  l0     8
    0:r75  l0     8   22:r76  l0     0   21:r77  l0     0   18:r78  l0     0
   16:r79  l0     0   10:r80  l0     0    8:r81  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_norm

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d,1u} r6={1d,2u} r7={1d,5u} r8={2d,3u} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={5d} r18={1d} r19={1d} r20={1d,9u,4e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} 
;;    total ref usage 139{91d,44u,4e} in 28{27 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:114 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:XF 59 [ D.5093 ])
        (mem:XF (reg/f:DI 76) [0 *a_1(D)+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 60 [ D.5093 ])
        (mem:XF (reg/f:DI 77) [0 *a_1(D)+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 10 9 11 2 (set (reg:XF 61 [ D.5093 ])
        (mult:XF (reg:XF 59 [ D.5093 ])
            (reg:XF 60 [ D.5093 ]))) mUtility.c:115 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5093 ])
        (expr_list:REG_DEAD (reg:XF 59 [ D.5093 ])
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 62 [ D.5094 ])
                (plus:DI (reg/f:DI 78)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 13 12 14 2 (set (reg:XF 63 [ D.5093 ])
        (mem:XF (reg/f:DI 62 [ D.5094 ]) [0 *_5+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5094 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 64 [ D.5094 ])
                (plus:DI (reg/f:DI 79)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 16 15 17 2 (set (reg:XF 65 [ D.5093 ])
        (mem:XF (reg/f:DI 64 [ D.5094 ]) [0 *_7+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.5094 ])
        (nil)))
(insn 17 16 18 2 (set (reg:XF 66 [ D.5093 ])
        (mult:XF (reg:XF 63 [ D.5093 ])
            (reg:XF 65 [ D.5093 ]))) mUtility.c:115 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5093 ])
        (expr_list:REG_DEAD (reg:XF 63 [ D.5093 ])
            (nil))))
(insn 18 17 19 2 (set (reg:XF 67 [ D.5093 ])
        (plus:XF (reg:XF 61 [ D.5093 ])
            (reg:XF 66 [ D.5093 ]))) mUtility.c:115 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5093 ])
        (expr_list:REG_DEAD (reg:XF 61 [ D.5093 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 68 [ D.5094 ])
                (plus:DI (reg/f:DI 80)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 21 20 22 2 (set (reg:XF 69 [ D.5093 ])
        (mem:XF (reg/f:DI 68 [ D.5094 ]) [0 *_11+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.5094 ])
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 70 [ D.5094 ])
                (plus:DI (reg/f:DI 81)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 24 23 25 2 (set (reg:XF 71 [ D.5093 ])
        (mem:XF (reg/f:DI 70 [ D.5094 ]) [0 *_13+0 S16 A128])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5094 ])
        (nil)))
(insn 25 24 26 2 (set (reg:XF 72 [ D.5093 ])
        (mult:XF (reg:XF 69 [ D.5093 ])
            (reg:XF 71 [ D.5093 ]))) mUtility.c:115 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5093 ])
        (expr_list:REG_DEAD (reg:XF 69 [ D.5093 ])
            (nil))))
(insn 26 25 27 2 (set (reg:XF 73 [ D.5093 ])
        (plus:XF (reg:XF 67 [ D.5093 ])
            (reg:XF 72 [ D.5093 ]))) mUtility.c:115 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5093 ])
        (expr_list:REG_DEAD (reg:XF 67 [ D.5093 ])
            (nil))))
(insn 27 26 28 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 73 [ D.5093 ])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5093 ])
        (nil)))
(call_insn 28 27 29 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sqrtl") [flags 0x41]  <function_decl 0x7f4452d75400 sqrtl>) [0 __builtin_sqrtl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:115 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 29 28 32 2 (set (reg:XF 74 [ D.5093 ])
        (reg:XF 8 st)) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 32 29 36 2 (set (reg:XF 75 [ <retval> ])
        (reg:XF 74 [ D.5093 ])) mUtility.c:115 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 74 [ D.5093 ])
        (nil)))
(insn 36 32 39 2 (set (reg/i:XF 8 st)
        (reg:XF 75 [ <retval> ])) mUtility.c:116 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 75 [ <retval> ])
        (nil)))
(insn 39 36 0 2 (use (reg/i:XF 8 st)) mUtility.c:116 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _cross_prod (_cross_prod, funcdef_no=14, decl_uid=3958, cgraph_uid=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r127: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r127,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r124,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r120,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a21 (r118,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r99,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a24 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r99,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r127,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r98,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r95,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a11(r124,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r91,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a18(r120,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r90,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r118,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a22(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r89,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a25(r88,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r84,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r86,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a30(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r83,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r81,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a35(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a36(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r79,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a40(r78,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r77,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r75,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a44(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a46(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a47(r73,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r72,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a49(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a50(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a51(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a52(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a53(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a54(r69,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a55(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r67,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a60(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a61(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a64(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a66(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a67(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a68(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 94(l0): point = 0
   Insn 91(l0): point = 2
   Insn 87(l0): point = 4
   Insn 84(l0): point = 6
   Insn 83(l0): point = 8
   Insn 82(l0): point = 10
   Insn 81(l0): point = 12
   Insn 80(l0): point = 14
   Insn 79(l0): point = 16
   Insn 78(l0): point = 18
   Insn 77(l0): point = 20
   Insn 76(l0): point = 22
   Insn 75(l0): point = 24
   Insn 74(l0): point = 26
   Insn 73(l0): point = 28
   Insn 72(l0): point = 30
   Insn 71(l0): point = 32
   Insn 70(l0): point = 34
   Insn 69(l0): point = 36
   Insn 68(l0): point = 38
   Insn 67(l0): point = 40
   Insn 66(l0): point = 42
   Insn 65(l0): point = 44
   Insn 64(l0): point = 46
   Insn 63(l0): point = 48
   Insn 62(l0): point = 50
   Insn 61(l0): point = 52
   Insn 60(l0): point = 54
   Insn 59(l0): point = 56
   Insn 58(l0): point = 58
   Insn 57(l0): point = 60
   Insn 56(l0): point = 62
   Insn 55(l0): point = 64
   Insn 54(l0): point = 66
   Insn 53(l0): point = 68
   Insn 52(l0): point = 70
   Insn 51(l0): point = 72
   Insn 50(l0): point = 74
   Insn 49(l0): point = 76
   Insn 48(l0): point = 78
   Insn 47(l0): point = 80
   Insn 46(l0): point = 82
   Insn 45(l0): point = 84
   Insn 44(l0): point = 86
   Insn 43(l0): point = 88
   Insn 42(l0): point = 90
   Insn 41(l0): point = 92
   Insn 40(l0): point = 94
   Insn 39(l0): point = 96
   Insn 38(l0): point = 98
   Insn 37(l0): point = 100
   Insn 36(l0): point = 102
   Insn 35(l0): point = 104
   Insn 34(l0): point = 106
   Insn 33(l0): point = 108
   Insn 32(l0): point = 110
   Insn 31(l0): point = 112
   Insn 30(l0): point = 114
   Insn 29(l0): point = 116
   Insn 28(l0): point = 118
   Insn 27(l0): point = 120
   Insn 26(l0): point = 122
   Insn 25(l0): point = 124
   Insn 24(l0): point = 126
   Insn 23(l0): point = 128
   Insn 22(l0): point = 130
   Insn 21(l0): point = 132
   Insn 20(l0): point = 134
   Insn 19(l0): point = 136
   Insn 18(l0): point = 138
   Insn 17(l0): point = 140
   Insn 16(l0): point = 142
   Insn 15(l0): point = 144
   Insn 14(l0): point = 146
   Insn 13(l0): point = 148
   Insn 12(l0): point = 150
   Insn 11(l0): point = 152
   Insn 10(l0): point = 154
   Insn 9(l0): point = 156
   Insn 8(l0): point = 158
   Insn 4(l0): point = 160
   Insn 3(l0): point = 162
   Insn 2(l0): point = 164
 a0(r101): [3..4]
 a1(r100): [5..6]
 a2(r96): [9..20]
 a3(r99): [9..10]
 a4(r127): [11..12]
 a5(r98): [11..14]
 a6(r97): [15..16]
 a7(r126): [17..18]
 a8(r125): [21..22]
 a9(r92): [25..36]
 a10(r95): [25..26]
 a11(r124): [27..28]
 a12(r94): [27..30]
 a13(r93): [31..32]
 a14(r123): [33..34]
 a15(r122): [37..38]
 a16(r121): [41..42]
 a17(r91): [41..44]
 a18(r120): [45..46]
 a19(r90): [45..48]
 a20(r119): [49..50]
 a21(r118): [53..54]
 a22(r117): [59..60]
 a23(r80): [63..90]
 a24(r89): [63..64]
 a25(r88): [65..66]
 a26(r84): [65..78]
 a27(r87): [67..68]
 a28(r86): [67..72]
 a29(r116): [69..70]
 a30(r85): [73..74]
 a31(r115): [75..76]
 a32(r83): [79..80]
 a33(r81): [79..86]
 a34(r82): [81..82]
 a35(r114): [83..84]
 a36(r113): [87..88]
 a37(r112): [91..92]
 a38(r70): [95..122]
 a39(r79): [95..96]
 a40(r78): [97..98]
 a41(r74): [97..110]
 a42(r77): [99..100]
 a43(r75): [99..106]
 a44(r76): [101..102]
 a45(r111): [103..104]
 a46(r110): [107..108]
 a47(r73): [111..112]
 a48(r72): [111..116]
 a49(r109): [113..114]
 a50(r71): [117..118]
 a51(r108): [119..120]
 a52(r107): [123..124]
 a53(r106): [127..128]
 a54(r69): [127..130]
 a55(r68): [131..132]
 a56(r63): [131..146]
 a57(r67): [133..134]
 a58(r65): [133..140]
 a59(r66): [135..136]
 a60(r105): [137..138]
 a61(r64): [141..142]
 a62(r104): [143..144]
 a63(r62): [147..148]
 a64(r60): [147..154]
 a65(r61): [149..150]
 a66(r103): [151..152]
 a67(r59): [155..156]
 a68(r102): [157..158]
Compressing live ranges: from 167 to 102 - 61%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [2..3]
 a2(r96): [4..11]
 a3(r99): [4..5]
 a4(r127): [6..7]
 a5(r98): [6..7]
 a6(r97): [8..9]
 a7(r126): [10..11]
 a8(r125): [12..13]
 a9(r92): [14..21]
 a10(r95): [14..15]
 a11(r124): [16..17]
 a12(r94): [16..17]
 a13(r93): [18..19]
 a14(r123): [20..21]
 a15(r122): [22..23]
 a16(r121): [24..25]
 a17(r91): [24..25]
 a18(r120): [26..27]
 a19(r90): [26..27]
 a20(r119): [28..29]
 a21(r118): [30..31]
 a22(r117): [32..33]
 a23(r80): [34..53]
 a24(r89): [34..35]
 a25(r88): [36..37]
 a26(r84): [36..45]
 a27(r87): [38..39]
 a28(r86): [38..41]
 a29(r116): [40..41]
 a30(r85): [42..43]
 a31(r115): [44..45]
 a32(r83): [46..47]
 a33(r81): [46..51]
 a34(r82): [48..49]
 a35(r114): [50..51]
 a36(r113): [52..53]
 a37(r112): [54..55]
 a38(r70): [56..75]
 a39(r79): [56..57]
 a40(r78): [58..59]
 a41(r74): [58..67]
 a42(r77): [60..61]
 a43(r75): [60..65]
 a44(r76): [62..63]
 a45(r111): [64..65]
 a46(r110): [66..67]
 a47(r73): [68..69]
 a48(r72): [68..71]
 a49(r109): [70..71]
 a50(r71): [72..73]
 a51(r108): [74..75]
 a52(r107): [76..77]
 a53(r106): [78..79]
 a54(r69): [78..79]
 a55(r68): [80..81]
 a56(r63): [80..91]
 a57(r67): [82..83]
 a58(r65): [82..87]
 a59(r66): [84..85]
 a60(r105): [86..87]
 a61(r64): [88..89]
 a62(r104): [90..91]
 a63(r62): [92..93]
 a64(r60): [92..97]
 a65(r61): [94..95]
 a66(r103): [96..97]
 a67(r59): [98..99]
 a68(r102): [100..101]
  regions=1, blocks=3, points=102
    allocnos=69 (big 0), copies=0, conflicts=0, ranges=69
Disposition:
   67:r59  l0     0   64:r60  l0     9   65:r61  l0     0   63:r62  l0     8
   56:r63  l0     9   61:r64  l0     0   58:r65  l0    10   59:r66  l0     0
   57:r67  l0     8   55:r68  l0     8   54:r69  l0     8   38:r70  l0     1
   50:r71  l0     0   48:r72  l0     9   47:r73  l0     8   41:r74  l0     9
   43:r75  l0    10   44:r76  l0     0   42:r77  l0     8   40:r78  l0     8
   39:r79  l0     8   23:r80  l0     1   33:r81  l0     9   34:r82  l0     0
   32:r83  l0     8   26:r84  l0     9   30:r85  l0     0   28:r86  l0    10
   27:r87  l0     8   25:r88  l0     8   24:r89  l0     8   19:r90  l0     9
   17:r91  l0     8    9:r92  l0     0   13:r93  l0     1   12:r94  l0     9
   10:r95  l0     8    2:r96  l0     0    6:r97  l0     1    5:r98  l0     9
    3:r99  l0     8    1:r100 l0     0    0:r101 l0     0   68:r102 l0     0
   66:r103 l0     0   62:r104 l0     0   60:r105 l0     0   53:r106 l0     0
   52:r107 l0     0   51:r108 l0     0   49:r109 l0     0   46:r110 l0     0
   45:r111 l0     0   37:r112 l0     0   36:r113 l0     0   35:r114 l0     0
   31:r115 l0     0   29:r116 l0     0   22:r117 l0     0   21:r118 l0     8
   20:r119 l0     0   18:r120 l0     8   16:r121 l0     0   15:r122 l0     0
   14:r123 l0     1   11:r124 l0     8    8:r125 l0     0    7:r126 l0     1
    4:r127 l0     8
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_cross_prod

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d,1u} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={15d} r18={1d} r19={1d} r20={1d,31u,14e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 275{148d,113u,14e} in 83{82 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
        (reg:DI 5 di [ B ])) mUtility.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ B ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])
        (reg:DI 4 si [ C ])) mUtility.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ C ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
        (reg:DI 1 dx [ A ])) mUtility.c:118 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ A ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:DI 59 [ D.5095 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:120 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 10 9 11 2 (set (reg:XF 60 [ D.5096 ])
        (mem:XF (reg/f:DI 59 [ D.5095 ]) [0 *_2+0 S16 A128])) mUtility.c:120 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.5095 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 61 [ D.5095 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:120 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 13 12 14 2 (set (reg:XF 62 [ D.5096 ])
        (mem:XF (reg/f:DI 61 [ D.5095 ]) [0 *_5+0 S16 A128])) mUtility.c:120 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5095 ])
        (nil)))
(insn 14 13 15 2 (set (reg:XF 63 [ D.5096 ])
        (mult:XF (reg:XF 60 [ D.5096 ])
            (reg:XF 62 [ D.5096 ]))) mUtility.c:120 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5096 ])
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 64 [ D.5095 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:120 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 17 16 18 2 (set (reg:XF 65 [ D.5096 ])
        (mem:XF (reg/f:DI 64 [ D.5095 ]) [0 *_8+0 S16 A128])) mUtility.c:120 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.5095 ])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 66 [ D.5095 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:120 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 20 19 21 2 (set (reg:XF 67 [ D.5096 ])
        (mem:XF (reg/f:DI 66 [ D.5095 ]) [0 *_10+0 S16 A128])) mUtility.c:120 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5095 ])
        (nil)))
(insn 21 20 22 2 (set (reg:XF 68 [ D.5096 ])
        (mult:XF (reg:XF 65 [ D.5096 ])
            (reg:XF 67 [ D.5096 ]))) mUtility.c:120 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5096 ])
            (nil))))
(insn 22 21 23 2 (set (reg:XF 69 [ D.5096 ])
        (minus:XF (reg:XF 63 [ D.5096 ])
            (reg:XF 68 [ D.5096 ]))) mUtility.c:120 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 68 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 63 [ D.5096 ])
            (nil))))
(insn 23 22 24 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:120 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (mem:XF (reg/f:DI 106) [0 *A_14(D)+0 S16 A128])
        (reg:XF 69 [ D.5096 ])) mUtility.c:120 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_DEAD (reg:XF 69 [ D.5096 ])
            (nil))))
(insn 25 24 26 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 70 [ D.5095 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:121 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 27 26 28 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 71 [ D.5095 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:121 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 29 28 30 2 (set (reg:XF 72 [ D.5096 ])
        (mem:XF (reg/f:DI 71 [ D.5095 ]) [0 *_16+0 S16 A128])) mUtility.c:121 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5095 ])
        (nil)))
(insn 30 29 31 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg:XF 73 [ D.5096 ])
        (mem:XF (reg/f:DI 109) [0 *C_4(D)+0 S16 A128])) mUtility.c:121 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 32 31 33 2 (set (reg:XF 74 [ D.5096 ])
        (mult:XF (reg:XF 72 [ D.5096 ])
            (reg:XF 73 [ D.5096 ]))) mUtility.c:121 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 72 [ D.5096 ])
            (nil))))
(insn 33 32 34 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:XF 75 [ D.5096 ])
        (mem:XF (reg/f:DI 110) [0 *B_1(D)+0 S16 A128])) mUtility.c:121 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(insn 35 34 36 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg/f:DI 76 [ D.5095 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:121 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 37 36 38 2 (set (reg:XF 77 [ D.5096 ])
        (mem:XF (reg/f:DI 76 [ D.5095 ]) [0 *_21+0 S16 A128])) mUtility.c:121 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.5095 ])
        (nil)))
(insn 38 37 39 2 (set (reg:XF 78 [ D.5096 ])
        (mult:XF (reg:XF 75 [ D.5096 ])
            (reg:XF 77 [ D.5096 ]))) mUtility.c:121 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 75 [ D.5096 ])
            (nil))))
(insn 39 38 40 2 (set (reg:XF 79 [ D.5096 ])
        (minus:XF (reg:XF 74 [ D.5096 ])
            (reg:XF 78 [ D.5096 ]))) mUtility.c:121 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 78 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5096 ])
            (nil))))
(insn 40 39 41 2 (set (mem:XF (reg/f:DI 70 [ D.5095 ]) [0 *_15+0 S16 A128])
        (reg:XF 79 [ D.5096 ])) mUtility.c:121 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5096 ])
        (expr_list:REG_DEAD (reg/f:DI 70 [ D.5095 ])
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 80 [ D.5095 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:122 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 43 42 44 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg:XF 81 [ D.5096 ])
        (mem:XF (reg/f:DI 113) [0 *B_1(D)+0 S16 A128])) mUtility.c:122 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 45 44 46 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (parallel [
            (set (reg/f:DI 82 [ D.5095 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:122 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 47 46 48 2 (set (reg:XF 83 [ D.5096 ])
        (mem:XF (reg/f:DI 82 [ D.5095 ]) [0 *_27+0 S16 A128])) mUtility.c:122 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.5095 ])
        (nil)))
(insn 48 47 49 2 (set (reg:XF 84 [ D.5096 ])
        (mult:XF (reg:XF 81 [ D.5096 ])
            (reg:XF 83 [ D.5096 ]))) mUtility.c:122 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 83 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 81 [ D.5096 ])
            (nil))))
(insn 49 48 50 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) mUtility.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg/f:DI 85 [ D.5095 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:122 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 51 50 52 2 (set (reg:XF 86 [ D.5096 ])
        (mem:XF (reg/f:DI 85 [ D.5095 ]) [0 *_30+0 S16 A128])) mUtility.c:122 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.5095 ])
        (nil)))
(insn 52 51 53 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 C+0 S8 A64])) mUtility.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (reg:XF 87 [ D.5096 ])
        (mem:XF (reg/f:DI 116) [0 *C_4(D)+0 S16 A128])) mUtility.c:122 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 54 53 55 2 (set (reg:XF 88 [ D.5096 ])
        (mult:XF (reg:XF 86 [ D.5096 ])
            (reg:XF 87 [ D.5096 ]))) mUtility.c:122 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 87 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 86 [ D.5096 ])
            (nil))))
(insn 55 54 56 2 (set (reg:XF 89 [ D.5096 ])
        (minus:XF (reg:XF 84 [ D.5096 ])
            (reg:XF 88 [ D.5096 ]))) mUtility.c:122 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5096 ])
        (expr_list:REG_DEAD (reg:XF 84 [ D.5096 ])
            (nil))))
(insn 56 55 57 2 (set (mem:XF (reg/f:DI 80 [ D.5095 ]) [0 *_25+0 S16 A128])
        (reg:XF 89 [ D.5096 ])) mUtility.c:122 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5096 ])
        (expr_list:REG_DEAD (reg/f:DI 80 [ D.5095 ])
            (nil))))
(insn 57 56 58 2 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:124 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 117)) mUtility.c:124 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 59 58 60 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_norm") [flags 0x3]  <function_decl 0x7f4452bcd000 _norm>) [0 _norm S1 A8])
            (const_int 0 [0]))) mUtility.c:124 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 61 2 (set (reg:XF 118)
        (reg:XF 8 st)) mUtility.c:124 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 61 60 62 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 N+0 S16 A128])
        (reg:XF 118)) mUtility.c:124 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 118)
        (nil)))
(insn 62 61 63 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 2 (set (reg:XF 90 [ D.5096 ])
        (mem:XF (reg/f:DI 119) [0 *A_14(D)+0 S16 A128])) mUtility.c:125 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 64 63 65 2 (set (reg:XF 120)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 N+0 S16 A128])) mUtility.c:125 131 {*movxf_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (reg:XF 91 [ D.5096 ])
        (div:XF (reg:XF 90 [ D.5096 ])
            (reg:XF 120))) mUtility.c:125 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 120)
        (expr_list:REG_DEAD (reg:XF 90 [ D.5096 ])
            (nil))))
(insn 66 65 67 2 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (mem:XF (reg/f:DI 121) [0 *A_14(D)+0 S16 A128])
        (reg:XF 91 [ D.5096 ])) mUtility.c:125 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (expr_list:REG_DEAD (reg:XF 91 [ D.5096 ])
            (nil))))
(insn 68 67 69 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 2 (parallel [
            (set (reg/f:DI 92 [ D.5095 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:126 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 70 69 71 2 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 2 (parallel [
            (set (reg/f:DI 93 [ D.5095 ])
                (plus:DI (reg/f:DI 123)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:126 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 72 71 73 2 (set (reg:XF 94 [ D.5096 ])
        (mem:XF (reg/f:DI 93 [ D.5095 ]) [0 *_39+0 S16 A128])) mUtility.c:126 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.5095 ])
        (nil)))
(insn 73 72 74 2 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 N+0 S16 A128])) mUtility.c:126 131 {*movxf_internal_rex64}
     (nil))
(insn 74 73 75 2 (set (reg:XF 95 [ D.5096 ])
        (div:XF (reg:XF 94 [ D.5096 ])
            (reg:XF 124))) mUtility.c:126 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 124)
        (expr_list:REG_DEAD (reg:XF 94 [ D.5096 ])
            (nil))))
(insn 75 74 76 2 (set (mem:XF (reg/f:DI 92 [ D.5095 ]) [0 *_38+0 S16 A128])
        (reg:XF 95 [ D.5096 ])) mUtility.c:126 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 95 [ D.5096 ])
        (expr_list:REG_DEAD (reg/f:DI 92 [ D.5095 ])
            (nil))))
(insn 76 75 77 2 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 2 (parallel [
            (set (reg/f:DI 96 [ D.5095 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:127 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 125)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 78 77 79 2 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])) mUtility.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 2 (parallel [
            (set (reg/f:DI 97 [ D.5095 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:127 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 80 79 81 2 (set (reg:XF 98 [ D.5096 ])
        (mem:XF (reg/f:DI 97 [ D.5095 ]) [0 *_43+0 S16 A128])) mUtility.c:127 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.5095 ])
        (nil)))
(insn 81 80 82 2 (set (reg:XF 127)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 N+0 S16 A128])) mUtility.c:127 131 {*movxf_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (reg:XF 99 [ D.5096 ])
        (div:XF (reg:XF 98 [ D.5096 ])
            (reg:XF 127))) mUtility.c:127 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 127)
        (expr_list:REG_DEAD (reg:XF 98 [ D.5096 ])
            (nil))))
(insn 83 82 84 2 (set (mem:XF (reg/f:DI 96 [ D.5095 ]) [0 *_42+0 S16 A128])
        (reg:XF 99 [ D.5096 ])) mUtility.c:127 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 99 [ D.5096 ])
        (expr_list:REG_DEAD (reg/f:DI 96 [ D.5095 ])
            (nil))))
(insn 84 83 87 2 (set (reg:SI 100 [ D.5097 ])
        (const_int 1 [0x1])) mUtility.c:129 89 {*movsi_internal}
     (nil))
(insn 87 84 91 2 (set (reg:SI 101 [ <retval> ])
        (reg:SI 100 [ D.5097 ])) mUtility.c:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.5097 ])
        (nil)))
(insn 91 87 94 2 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) mUtility.c:130 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ <retval> ])
        (nil)))
(insn 94 91 0 2 (use (reg/i:SI 0 ax)) mUtility.c:130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _dot (_dot, funcdef_no=15, decl_uid=3963, cgraph_uid=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r74,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r74,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r73,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r69,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a11(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r63,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r59,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 37(l0): point = 0
   Insn 34(l0): point = 2
   Insn 30(l0): point = 4
   Insn 27(l0): point = 6
   Insn 26(l0): point = 8
   Insn 25(l0): point = 10
   Insn 24(l0): point = 12
   Insn 23(l0): point = 14
   Insn 22(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 18(l0): point = 24
   Insn 17(l0): point = 26
   Insn 16(l0): point = 28
   Insn 15(l0): point = 30
   Insn 14(l0): point = 32
   Insn 13(l0): point = 34
   Insn 12(l0): point = 36
   Insn 11(l0): point = 38
   Insn 10(l0): point = 40
   Insn 9(l0): point = 42
   Insn 8(l0): point = 44
   Insn 7(l0): point = 46
   Insn 3(l0): point = 48
   Insn 2(l0): point = 50
 a0(r74): [3..4]
 a1(r73): [5..6]
 a2(r72): [7..8]
 a3(r67): [7..22]
 a4(r71): [9..10]
 a5(r69): [9..16]
 a6(r70): [11..12]
 a7(r80): [13..14]
 a8(r68): [17..18]
 a9(r79): [19..20]
 a10(r66): [23..24]
 a11(r61): [23..38]
 a12(r65): [25..26]
 a13(r63): [25..32]
 a14(r64): [27..28]
 a15(r78): [29..30]
 a16(r62): [33..34]
 a17(r77): [35..36]
 a18(r60): [39..40]
 a19(r59): [39..44]
 a20(r76): [41..42]
 a21(r75): [45..46]
Compressing live ranges: from 53 to 34 - 64%
Ranges after the compression:
 a0(r74): [0..1]
 a1(r73): [2..3]
 a2(r72): [4..5]
 a3(r67): [4..15]
 a4(r71): [6..7]
 a5(r69): [6..11]
 a6(r70): [8..9]
 a7(r80): [10..11]
 a8(r68): [12..13]
 a9(r79): [14..15]
 a10(r66): [16..17]
 a11(r61): [16..27]
 a12(r65): [18..19]
 a13(r63): [18..23]
 a14(r64): [20..21]
 a15(r78): [22..23]
 a16(r62): [24..25]
 a17(r77): [26..27]
 a18(r60): [28..29]
 a19(r59): [28..31]
 a20(r76): [30..31]
 a21(r75): [32..33]
  regions=1, blocks=3, points=34
    allocnos=22 (big 0), copies=0, conflicts=0, ranges=22
Disposition:
   19:r59  l0     9   18:r60  l0     8   11:r61  l0     9   16:r62  l0     0
   13:r63  l0    10   14:r64  l0     0   12:r65  l0     8   10:r66  l0     8
    3:r67  l0     9    8:r68  l0     0    5:r69  l0    10    6:r70  l0     0
    4:r71  l0     8    2:r72  l0     8    1:r73  l0     8    0:r74  l0     8
   21:r75  l0     0   20:r76  l0     0   17:r77  l0     0   15:r78  l0     0
    9:r79  l0     0    7:r80  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_dot

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r8={1d,2u} r16={1d,1u} r17={4d} r20={1d,10u,4e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} 
;;    total ref usage 91{46d,41u,4e} in 26{26 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 8 [st] 17 [flags] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:XF 59 [ D.5098 ])
        (mem:XF (reg/f:DI 75) [0 *a_1(D)+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 60 [ D.5098 ])
        (mem:XF (reg/f:DI 76) [0 *b_3(D)+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 11 10 12 2 (set (reg:XF 61 [ D.5098 ])
        (mult:XF (reg:XF 59 [ D.5098 ])
            (reg:XF 60 [ D.5098 ]))) mUtility.c:133 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5098 ])
        (expr_list:REG_DEAD (reg:XF 59 [ D.5098 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 62 [ D.5099 ])
                (plus:DI (reg/f:DI 77)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:133 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 14 13 15 2 (set (reg:XF 63 [ D.5098 ])
        (mem:XF (reg/f:DI 62 [ D.5099 ]) [0 *_6+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5099 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 64 [ D.5099 ])
                (plus:DI (reg/f:DI 78)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:133 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 17 16 18 2 (set (reg:XF 65 [ D.5098 ])
        (mem:XF (reg/f:DI 64 [ D.5099 ]) [0 *_8+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.5099 ])
        (nil)))
(insn 18 17 19 2 (set (reg:XF 66 [ D.5098 ])
        (mult:XF (reg:XF 63 [ D.5098 ])
            (reg:XF 65 [ D.5098 ]))) mUtility.c:133 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5098 ])
        (expr_list:REG_DEAD (reg:XF 63 [ D.5098 ])
            (nil))))
(insn 19 18 20 2 (set (reg:XF 67 [ D.5098 ])
        (plus:XF (reg:XF 61 [ D.5098 ])
            (reg:XF 66 [ D.5098 ]))) mUtility.c:133 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5098 ])
        (expr_list:REG_DEAD (reg:XF 61 [ D.5098 ])
            (nil))))
(insn 20 19 21 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 68 [ D.5099 ])
                (plus:DI (reg/f:DI 79)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:133 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 22 21 23 2 (set (reg:XF 69 [ D.5098 ])
        (mem:XF (reg/f:DI 68 [ D.5099 ]) [0 *_12+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.5099 ])
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 70 [ D.5099 ])
                (plus:DI (reg/f:DI 80)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:133 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 25 24 26 2 (set (reg:XF 71 [ D.5098 ])
        (mem:XF (reg/f:DI 70 [ D.5099 ]) [0 *_14+0 S16 A128])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5099 ])
        (nil)))
(insn 26 25 27 2 (set (reg:XF 72 [ D.5098 ])
        (mult:XF (reg:XF 69 [ D.5098 ])
            (reg:XF 71 [ D.5098 ]))) mUtility.c:133 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5098 ])
        (expr_list:REG_DEAD (reg:XF 69 [ D.5098 ])
            (nil))))
(insn 27 26 30 2 (set (reg:XF 73 [ D.5098 ])
        (plus:XF (reg:XF 67 [ D.5098 ])
            (reg:XF 72 [ D.5098 ]))) mUtility.c:133 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5098 ])
        (expr_list:REG_DEAD (reg:XF 67 [ D.5098 ])
            (nil))))
(insn 30 27 34 2 (set (reg:XF 74 [ <retval> ])
        (reg:XF 73 [ D.5098 ])) mUtility.c:133 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5098 ])
        (nil)))
(insn 34 30 37 2 (set (reg/i:XF 8 st)
        (reg:XF 74 [ <retval> ])) mUtility.c:134 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 74 [ <retval> ])
        (nil)))
(insn 37 34 0 2 (use (reg/i:XF 8 st)) mUtility.c:134 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function q_sort (q_sort, funcdef_no=16, decl_uid=1738, cgraph_uid=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r131,l0) best DREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r128,l0) best DREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r106,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a64 (r98,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r131,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r128,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a17(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a21(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a27(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a30(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a34(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a35(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a36(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a37(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a38(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a41(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a42(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a43(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a44(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a45(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a46(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a47(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a48(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a49(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a50(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a51(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a52(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a53(r68,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r106,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a56(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a57(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a58(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a59(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a60(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a61(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a62(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a64(r98,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a65(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a66(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a67(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a68(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a69(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a70(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a71(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a72(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 125(l0): point = 1
   Insn 124(l0): point = 3
   Insn 123(l0): point = 5
   Insn 122(l0): point = 7
   Insn 121(l0): point = 9
   Insn 120(l0): point = 11
   Insn 119(l0): point = 13
   Insn 118(l0): point = 15
   Insn 117(l0): point = 17
   Insn 116(l0): point = 19
   Insn 115(l0): point = 21
   Insn 114(l0): point = 23
   Insn 113(l0): point = 25
   Insn 112(l0): point = 27
   Insn 111(l0): point = 29
   Insn 110(l0): point = 31
   Insn 109(l0): point = 33
   Insn 108(l0): point = 35
   Insn 107(l0): point = 37
   Insn 106(l0): point = 39
   Insn 105(l0): point = 41
   Insn 104(l0): point = 43
   Insn 103(l0): point = 45
   Insn 102(l0): point = 47
   Insn 101(l0): point = 49
   Insn 100(l0): point = 51
   Insn 99(l0): point = 53
   Insn 98(l0): point = 55
   Insn 97(l0): point = 57
   Insn 96(l0): point = 59
   Insn 95(l0): point = 61
   Insn 94(l0): point = 63
   Insn 93(l0): point = 65
   Insn 92(l0): point = 67
   Insn 91(l0): point = 69
   Insn 90(l0): point = 71
   Insn 89(l0): point = 73
   Insn 88(l0): point = 75
   Insn 87(l0): point = 77
   Insn 86(l0): point = 79
   Insn 85(l0): point = 81
   Insn 41(l0): point = 84
   Insn 40(l0): point = 86
   Insn 39(l0): point = 88
   Insn 38(l0): point = 90
   Insn 37(l0): point = 92
   Insn 36(l0): point = 94
   Insn 35(l0): point = 96
   Insn 34(l0): point = 98
   Insn 33(l0): point = 100
   Insn 32(l0): point = 102
   Insn 83(l0): point = 105
   Insn 82(l0): point = 107
   Insn 81(l0): point = 109
   Insn 77(l0): point = 112
   Insn 76(l0): point = 114
   Insn 75(l0): point = 116
   Insn 74(l0): point = 118
   Insn 73(l0): point = 120
   Insn 72(l0): point = 122
   Insn 71(l0): point = 124
   Insn 70(l0): point = 126
   Insn 69(l0): point = 128
   Insn 68(l0): point = 130
   Insn 67(l0): point = 132
   Insn 66(l0): point = 134
   Insn 65(l0): point = 136
   Insn 64(l0): point = 138
   Insn 63(l0): point = 140
   Insn 62(l0): point = 142
   Insn 61(l0): point = 144
   Insn 60(l0): point = 146
   Insn 59(l0): point = 148
   Insn 58(l0): point = 150
   Insn 57(l0): point = 152
   Insn 56(l0): point = 154
   Insn 55(l0): point = 156
   Insn 54(l0): point = 158
   Insn 53(l0): point = 160
   Insn 52(l0): point = 162
   Insn 51(l0): point = 164
   Insn 136(l0): point = 167
   Insn 46(l0): point = 169
   Insn 133(l0): point = 172
   Insn 28(l0): point = 174
   Insn 27(l0): point = 176
   Insn 26(l0): point = 178
   Insn 25(l0): point = 180
   Insn 24(l0): point = 182
   Insn 20(l0): point = 184
   Insn 19(l0): point = 186
   Insn 18(l0): point = 188
   Insn 17(l0): point = 190
   Insn 16(l0): point = 192
   Insn 15(l0): point = 194
   Insn 14(l0): point = 196
   Insn 13(l0): point = 198
   Insn 11(l0): point = 201
   Insn 10(l0): point = 203
   Insn 9(l0): point = 205
   Insn 8(l0): point = 207
   Insn 4(l0): point = 209
   Insn 3(l0): point = 211
   Insn 2(l0): point = 213
 a0(r133): [4..9]
 a1(r132): [6..11]
 a2(r131): [8..13]
 a3(r130): [18..23]
 a4(r129): [20..25]
 a5(r128): [22..27]
 a6(r94): [30..33]
 a7(r127): [30..31]
 a8(r126): [34..35]
 a9(r93): [34..37]
 a10(r92): [38..39]
 a11(r125): [40..41]
 a12(r87): [44..59]
 a13(r91): [44..45]
 a14(r90): [46..47]
 a15(r124): [48..49]
 a16(r89): [48..51]
 a17(r88): [52..53]
 a18(r123): [54..55]
 a19(r122): [60..61]
 a20(r86): [60..63]
 a21(r85): [64..65]
 a22(r121): [66..67]
 a23(r120): [70..71]
 a24(r84): [72..73]
 a25(r119): [74..75]
 a26(r83): [74..77]
 a27(r82): [78..79]
 a28(r118): [80..81]
 a29(r117): [108..109]
 a30(r81): [113..116]
 a31(r116): [113..114]
 a32(r115): [117..118]
 a33(r80): [117..120]
 a34(r79): [121..122]
 a35(r114): [123..124]
 a36(r74): [127..142]
 a37(r78): [127..128]
 a38(r77): [129..130]
 a39(r113): [131..132]
 a40(r76): [131..134]
 a41(r75): [135..136]
 a42(r112): [137..138]
 a43(r111): [143..144]
 a44(r73): [143..146]
 a45(r72): [147..148]
 a46(r110): [149..150]
 a47(r109): [153..154]
 a48(r71): [155..156]
 a49(r108): [157..158]
 a50(r70): [157..160]
 a51(r69): [161..162]
 a52(r107): [163..164]
 a53(r68): [87..90]
 a54(r106): [87..88]
 a55(r67): [91..92]
 a56(r66): [93..94]
 a57(r105): [95..96]
 a58(r65): [95..98]
 a59(r64): [99..100]
 a60(r104): [101..102]
 a61(r103): [175..176]
 a62(r101): [179..180]
 a63(r102): [181..182]
 a64(r98 [0]): [185..186]
 a64(r98 [1]): [185..186]
 a65(r63): [187..188]
 a66(r62): [189..190]
 a67(r97): [191..192]
 a68(r61): [191..194]
 a69(r60): [195..196]
 a70(r96): [197..198]
 a71(r59): [204..205]
 a72(r95): [206..207]
Compressing live ranges: from 216 to 108 - 50%
Ranges after the compression:
 a0(r133): [0..1]
 a1(r132): [0..1]
 a2(r131): [0..1]
 a3(r130): [2..3]
 a4(r129): [2..3]
 a5(r128): [2..3]
 a6(r94): [4..5]
 a7(r127): [4..5]
 a8(r126): [6..7]
 a9(r93): [6..7]
 a10(r92): [8..9]
 a11(r125): [10..11]
 a12(r87): [12..21]
 a13(r91): [12..13]
 a14(r90): [14..15]
 a15(r124): [16..17]
 a16(r89): [16..17]
 a17(r88): [18..19]
 a18(r123): [20..21]
 a19(r122): [22..23]
 a20(r86): [22..23]
 a21(r85): [24..25]
 a22(r121): [26..27]
 a23(r120): [28..29]
 a24(r84): [30..31]
 a25(r119): [32..33]
 a26(r83): [32..33]
 a27(r82): [34..35]
 a28(r118): [36..37]
 a29(r117): [50..51]
 a30(r81): [52..53]
 a31(r116): [52..53]
 a32(r115): [54..55]
 a33(r80): [54..55]
 a34(r79): [56..57]
 a35(r114): [58..59]
 a36(r74): [60..69]
 a37(r78): [60..61]
 a38(r77): [62..63]
 a39(r113): [64..65]
 a40(r76): [64..65]
 a41(r75): [66..67]
 a42(r112): [68..69]
 a43(r111): [70..71]
 a44(r73): [70..71]
 a45(r72): [72..73]
 a46(r110): [74..75]
 a47(r109): [76..77]
 a48(r71): [78..79]
 a49(r108): [80..81]
 a50(r70): [80..81]
 a51(r69): [82..83]
 a52(r107): [84..85]
 a53(r68): [38..39]
 a54(r106): [38..39]
 a55(r67): [40..41]
 a56(r66): [42..43]
 a57(r105): [44..45]
 a58(r65): [44..45]
 a59(r64): [46..47]
 a60(r104): [48..49]
 a61(r103): [86..87]
 a62(r101): [88..89]
 a63(r102): [90..91]
 a64(r98 [0]): [92..93]
 a64(r98 [1]): [92..93]
 a65(r63): [94..95]
 a66(r62): [96..97]
 a67(r97): [98..99]
 a68(r61): [98..99]
 a69(r60): [100..101]
 a70(r96): [102..103]
 a71(r59): [104..105]
 a72(r95): [106..107]
  regions=1, blocks=10, points=108
    allocnos=73 (big 1), copies=0, conflicts=0, ranges=74
Disposition:
   71:r59  l0     0   69:r60  l0     0   68:r61  l0     1   66:r62  l0     0
   65:r63  l0     0   59:r64  l0     0   58:r65  l0     1   56:r66  l0     0
   55:r67  l0     0   53:r68  l0     8   51:r69  l0     0   50:r70  l0     1
   48:r71  l0     0   45:r72  l0     0   44:r73  l0     1   36:r74  l0     1
   41:r75  l0     0   40:r76  l0     2   38:r77  l0     0   37:r78  l0     0
   34:r79  l0     0   33:r80  l0     1   30:r81  l0     1   27:r82  l0     0
   26:r83  l0     1   24:r84  l0     0   21:r85  l0     0   20:r86  l0     1
   12:r87  l0     1   17:r88  l0     0   16:r89  l0     2   14:r90  l0     0
   13:r91  l0     0   10:r92  l0     0    9:r93  l0     1    6:r94  l0     1
   72:r95  l0     0   70:r96  l0     0   67:r97  l0     0   64:r98  l0     0
   62:r101 l0     0   63:r102 l0     0   61:r103 l0     0   60:r104 l0     0
   57:r105 l0     0   54:r106 l0     9   52:r107 l0     0   49:r108 l0     0
   47:r109 l0     0   46:r110 l0     0   43:r111 l0     0   42:r112 l0     0
   39:r113 l0     0   35:r114 l0     0   32:r115 l0     0   31:r116 l0     0
   29:r117 l0     0   28:r118 l0     0   25:r119 l0     0   23:r120 l0     0
   22:r121 l0     0   19:r122 l0     0   18:r123 l0     0   15:r124 l0     0
   11:r125 l0     0    8:r126 l0     0    7:r127 l0     0    5:r128 l0     1
    4:r129 l0     2    3:r130 l0     0    2:r131 l0     1    1:r132 l0     2
    0:r133 l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


q_sort

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={5d,3u} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={30d,3u} r18={2d} r19={2d} r20={1d,58u,12e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u,1e} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u,1e} r71={1d,1u} r72={1d,1u} r73={1d,1u,1e} r74={1d,1u} r75={1d,1u} r76={1d,1u,1e} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u,1e} r81={1d,1u} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u,1e} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} 
;;    total ref usage 407{214d,171u,22e} in 104{102 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 95
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
        (reg:DI 5 di [ arr ])) mUtility.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ arr ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])
        (reg:SI 4 si [ beg ])) mUtility.c:137 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ beg ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 end+0 S4 A32])
        (reg:SI 1 dx [ end ])) mUtility.c:137 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:139 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 59 [ D.5100 ])
                (plus:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:139 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 10 9 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.5100 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 end+0 S4 A32]))) mUtility.c:139 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5100 ])
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 128)
            (pc))) mUtility.c:139 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 128)
;;  succ:       3 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 96 97 98 101 102 103
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:140 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 60 [ D.5101 ])
        (sign_extend:DI (reg:SI 96))) mUtility.c:140 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg:DI 61 [ D.5101 ])
                (ashift:DI (reg:DI 60 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:140 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 3 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:140 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg/f:DI 62 [ D.5102 ])
                (plus:DI (reg:DI 61 [ D.5101 ])
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:140 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_DEAD (reg:DI 61 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 61 [ D.5101 ]))
                    (nil))))))
(insn 18 17 19 3 (set (reg/f:DI 63 [ D.5103 ])
        (mem/f:DI (reg/f:DI 62 [ D.5102 ]) [0 *_9+0 S8 A64])) mUtility.c:140 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5102 ])
        (nil)))
(insn 19 18 20 3 (set (reg:XF 98)
        (mem:XF (reg/f:DI 63 [ D.5103 ]) [0 *_10+0 S16 A128])) mUtility.c:140 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5103 ])
        (nil)))
(insn 20 19 24 3 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 piv+0 S16 A128])
        (reg:XF 98)) mUtility.c:140 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 98)
        (nil)))
(insn 24 20 25 3 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:141 89 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg:SI 102)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:141 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 26 25 27 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])
        (reg:SI 101)) mUtility.c:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 27 26 28 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 end+0 S4 A32])) mUtility.c:141 89 {*movsi_internal}
     (nil))
(insn 28 27 133 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])
        (reg:SI 103)) mUtility.c:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(jump_insn 133 28 134 3 (set (pc)
        (label_ref 78)) mUtility.c:142 650 {jump}
     (nil)
 -> 78)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 134 133 80)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66 67 68 104 105 106
(code_label 80 134 31 4 41 "" [1 uses])
(note 31 80 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:143 89 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 64 [ D.5101 ])
        (sign_extend:DI (reg:SI 104))) mUtility.c:143 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 65 [ D.5101 ])
                (ashift:DI (reg:DI 64 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:143 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 4 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 66 [ D.5102 ])
                (plus:DI (reg:DI 65 [ D.5101 ])
                    (reg/f:DI 105)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:143 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_DEAD (reg:DI 65 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 65 [ D.5101 ]))
                    (nil))))))
(insn 37 36 38 4 (set (reg/f:DI 67 [ D.5103 ])
        (mem/f:DI (reg/f:DI 66 [ D.5102 ]) [0 *_16+0 S8 A64])) mUtility.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5102 ])
        (nil)))
(insn 38 37 39 4 (set (reg:XF 68 [ D.5104 ])
        (mem:XF (reg/f:DI 67 [ D.5103 ]) [0 *_17+0 S16 A128])) mUtility.c:143 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.5103 ])
        (nil)))
(insn 39 38 40 4 (set (reg:XF 106)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 piv+0 S16 A128])) mUtility.c:143 131 {*movxf_internal_rex64}
     (nil))
(insn 40 39 41 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 106)
            (reg:XF 68 [ D.5104 ]))) mUtility.c:143 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 106)
        (expr_list:REG_DEAD (reg:XF 68 [ D.5104 ])
            (nil))))
(jump_insn 41 40 45 4 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 135)
            (pc))) mUtility.c:143 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 135)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 45 41 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 136 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:144 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 136 46 137 5 (set (pc)
        (label_ref 78)) 650 {jump}
     (nil)
 -> 78)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 137 136 135)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71 72 73 74 75 76 77 78 79 80 81 107 108 109 110 111 112 113 114 115 116
(code_label 135 137 50 6 43 "" [1 uses])
(note 50 135 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:146 89 {*movsi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:DI 69 [ D.5101 ])
        (sign_extend:DI (reg:SI 107))) mUtility.c:146 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 53 52 54 6 (parallel [
            (set (reg:DI 70 [ D.5101 ])
                (ashift:DI (reg:DI 69 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:146 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 6 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg/f:DI 71 [ D.5102 ])
                (plus:DI (reg:DI 70 [ D.5101 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:146 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_DEAD (reg:DI 70 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 70 [ D.5101 ]))
                    (nil))))))
(insn 56 55 57 6 (set (reg/f:DI 109)
        (mem/f:DI (reg/f:DI 71 [ D.5102 ]) [0 *_22+0 S8 A64])) mUtility.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5102 ])
        (nil)))
(insn 57 56 58 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp+0 S8 A64])
        (reg/f:DI 109)) mUtility.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 58 57 59 6 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:147 89 {*movsi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:DI 72 [ D.5101 ])
        (sign_extend:DI (reg:SI 110))) mUtility.c:147 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 73 [ D.5101 ])
                (ashift:DI (reg:DI 72 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 72 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/f:DI 74 [ D.5102 ])
                (plus:DI (reg:DI 73 [ D.5101 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_DEAD (reg:DI 73 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 73 [ D.5101 ]))
                    (nil))))))
(insn 63 62 64 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:147 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 6 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])) mUtility.c:147 89 {*movsi_internal}
     (nil))
(insn 65 64 66 6 (set (reg:DI 75 [ D.5101 ])
        (sign_extend:DI (reg:SI 112))) mUtility.c:147 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 66 65 67 6 (parallel [
            (set (reg:DI 76 [ D.5101 ])
                (ashift:DI (reg:DI 75 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 75 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 67 66 68 6 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 6 (parallel [
            (set (reg/f:DI 77 [ D.5102 ])
                (plus:DI (reg:DI 76 [ D.5101 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_DEAD (reg:DI 76 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 76 [ D.5101 ]))
                    (nil))))))
(insn 69 68 70 6 (set (reg/f:DI 78 [ D.5103 ])
        (mem/f:DI (reg/f:DI 77 [ D.5102 ]) [0 *_30+0 S8 A64])) mUtility.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77 [ D.5102 ])
        (nil)))
(insn 70 69 71 6 (set (mem/f:DI (reg/f:DI 74 [ D.5102 ]) [0 *_26+0 S8 A64])
        (reg/f:DI 78 [ D.5103 ])) mUtility.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ D.5103 ])
        (expr_list:REG_DEAD (reg/f:DI 74 [ D.5102 ])
            (nil))))
(insn 71 70 72 6 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])) mUtility.c:148 89 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg:DI 79 [ D.5101 ])
        (sign_extend:DI (reg:SI 114))) mUtility.c:148 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 80 [ D.5101 ])
                (ashift:DI (reg:DI 79 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:148 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 79 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 6 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg/f:DI 81 [ D.5102 ])
                (plus:DI (reg:DI 80 [ D.5101 ])
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:148 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (expr_list:REG_DEAD (reg:DI 80 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 80 [ D.5101 ]))
                    (nil))))))
(insn 76 75 77 6 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp+0 S8 A64])) mUtility.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 77 76 78 6 (set (mem/f:DI (reg/f:DI 81 [ D.5102 ]) [0 *_34+0 S8 A64])
        (reg/f:DI 116)) mUtility.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (expr_list:REG_DEAD (reg/f:DI 81 [ D.5102 ])
            (nil))))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 117
(code_label 78 77 79 7 38 "" [2 uses])
(note 79 78 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 79 82 7 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:142 89 {*movsi_internal}
     (nil))
(insn 82 81 83 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 117)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32]))) mUtility.c:142 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(jump_insn 83 82 84 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) mUtility.c:142 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 80)
;;  succ:       4
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 84 85 86 87 88 89 90 91 92 93 94 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
(note 84 83 85 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 8 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:151 89 {*movsi_internal}
     (nil))
(insn 86 85 87 8 (set (reg:DI 82 [ D.5101 ])
        (sign_extend:DI (reg:SI 118))) mUtility.c:151 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 87 86 88 8 (parallel [
            (set (reg:DI 83 [ D.5101 ])
                (ashift:DI (reg:DI 82 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:151 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 8 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:151 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 8 (parallel [
            (set (reg/f:DI 84 [ D.5102 ])
                (plus:DI (reg:DI 83 [ D.5101 ])
                    (reg/f:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:151 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (expr_list:REG_DEAD (reg:DI 83 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 83 [ D.5101 ]))
                    (nil))))))
(insn 90 89 91 8 (set (reg/f:DI 120)
        (mem/f:DI (reg/f:DI 84 [ D.5102 ]) [0 *_37+0 S8 A64])) mUtility.c:151 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.5102 ])
        (nil)))
(insn 91 90 92 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp+0 S8 A64])
        (reg/f:DI 120)) mUtility.c:151 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 92 91 93 8 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:152 89 {*movsi_internal}
     (nil))
(insn 93 92 94 8 (set (reg:DI 85 [ D.5101 ])
        (sign_extend:DI (reg:SI 121))) mUtility.c:152 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 86 [ D.5101 ])
                (ashift:DI (reg:DI 85 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:152 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 85 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 8 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 8 (parallel [
            (set (reg/f:DI 87 [ D.5102 ])
                (plus:DI (reg:DI 86 [ D.5101 ])
                    (reg/f:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:152 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_DEAD (reg:DI 86 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 86 [ D.5101 ]))
                    (nil))))))
(insn 97 96 98 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:152 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 8 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:152 89 {*movsi_internal}
     (nil))
(insn 99 98 100 8 (set (reg:DI 88 [ D.5101 ])
        (sign_extend:DI (reg:SI 123))) mUtility.c:152 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 100 99 101 8 (parallel [
            (set (reg:DI 89 [ D.5101 ])
                (ashift:DI (reg:DI 88 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:152 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 8 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:152 87 {*movdi_internal_rex64}
     (nil))
(insn 102 101 103 8 (parallel [
            (set (reg/f:DI 90 [ D.5102 ])
                (plus:DI (reg:DI 89 [ D.5101 ])
                    (reg/f:DI 124)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:152 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (expr_list:REG_DEAD (reg:DI 89 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 89 [ D.5101 ]))
                    (nil))))))
(insn 103 102 104 8 (set (reg/f:DI 91 [ D.5103 ])
        (mem/f:DI (reg/f:DI 90 [ D.5102 ]) [0 *_45+0 S8 A64])) mUtility.c:152 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.5102 ])
        (nil)))
(insn 104 103 105 8 (set (mem/f:DI (reg/f:DI 87 [ D.5102 ]) [0 *_41+0 S8 A64])
        (reg/f:DI 91 [ D.5103 ])) mUtility.c:152 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.5103 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.5102 ])
            (nil))))
(insn 105 104 106 8 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:153 89 {*movsi_internal}
     (nil))
(insn 106 105 107 8 (set (reg:DI 92 [ D.5101 ])
        (sign_extend:DI (reg:SI 125))) mUtility.c:153 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 107 106 108 8 (parallel [
            (set (reg:DI 93 [ D.5101 ])
                (ashift:DI (reg:DI 92 [ D.5101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:153 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.5101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 8 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 110 8 (parallel [
            (set (reg/f:DI 94 [ D.5102 ])
                (plus:DI (reg:DI 93 [ D.5101 ])
                    (reg/f:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:153 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (expr_list:REG_DEAD (reg:DI 93 [ D.5101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])
                        (reg:DI 93 [ D.5101 ]))
                    (nil))))))
(insn 110 109 111 8 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp+0 S8 A64])) mUtility.c:153 87 {*movdi_internal_rex64}
     (nil))
(insn 111 110 112 8 (set (mem/f:DI (reg/f:DI 94 [ D.5102 ]) [0 *_49+0 S8 A64])
        (reg/f:DI 127)) mUtility.c:153 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (expr_list:REG_DEAD (reg/f:DI 94 [ D.5102 ])
            (nil))))
(insn 112 111 113 8 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 l+0 S4 A32])) mUtility.c:155 89 {*movsi_internal}
     (nil))
(insn 113 112 114 8 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 beg+0 S4 A32])) mUtility.c:155 89 {*movsi_internal}
     (nil))
(insn 114 113 115 8 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 115 114 116 8 (set (reg:SI 1 dx)
        (reg:SI 128)) mUtility.c:155 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 116 115 117 8 (set (reg:SI 4 si)
        (reg:SI 129)) mUtility.c:155 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 117 116 118 8 (set (reg:DI 5 di)
        (reg:DI 130)) mUtility.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 118 117 119 8 (call (mem:QI (symbol_ref:DI ("q_sort") [flags 0x3]  <function_decl 0x7f4452e3c600 q_sort>) [0 q_sort S1 A8])
        (const_int 0 [0])) mUtility.c:155 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 119 118 120 8 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 end+0 S4 A32])) mUtility.c:156 89 {*movsi_internal}
     (nil))
(insn 120 119 121 8 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 r+0 S4 A32])) mUtility.c:156 89 {*movsi_internal}
     (nil))
(insn 121 120 122 8 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 arr+0 S8 A64])) mUtility.c:156 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 8 (set (reg:SI 1 dx)
        (reg:SI 131)) mUtility.c:156 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 123 122 124 8 (set (reg:SI 4 si)
        (reg:SI 132)) mUtility.c:156 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 124 123 125 8 (set (reg:DI 5 di)
        (reg:DI 133)) mUtility.c:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 125 124 128 8 (call (mem:QI (symbol_ref:DI ("q_sort") [flags 0x3]  <function_decl 0x7f4452e3c600 q_sort>) [0 q_sort S1 A8])
        (const_int 0 [0])) mUtility.c:156 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 128 125 129 9 36 "" [1 uses])
(note 129 128 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function euclid_dist (euclid_dist, funcdef_no=17, decl_uid=3979, cgraph_uid=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 44.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r87,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a16 (r84,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a24 (r81,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r78,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r77: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a1 (r77,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a3 (r75,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a13 (r68,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a14 (r62,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r78,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r77,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r76,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a3(r75,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r74,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a6(r87,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r73,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r67,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a16(r84,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a17(r66,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r61,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a24(r81,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a25(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r59,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 55(l0): point = 0
   Insn 52(l0): point = 2
   Insn 48(l0): point = 4
   Insn 45(l0): point = 6
   Insn 44(l0): point = 8
   Insn 43(l0): point = 10
   Insn 42(l0): point = 12
   Insn 41(l0): point = 14
   Insn 40(l0): point = 16
   Insn 39(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 36(l0): point = 24
   Insn 35(l0): point = 26
   Insn 34(l0): point = 28
   Insn 33(l0): point = 30
   Insn 32(l0): point = 32
   Insn 31(l0): point = 34
   Insn 30(l0): point = 36
   Insn 29(l0): point = 38
   Insn 28(l0): point = 40
   Insn 27(l0): point = 42
   Insn 26(l0): point = 44
   Insn 25(l0): point = 46
   Insn 24(l0): point = 48
   Insn 23(l0): point = 50
   Insn 22(l0): point = 52
   Insn 21(l0): point = 54
   Insn 20(l0): point = 56
   Insn 19(l0): point = 58
   Insn 18(l0): point = 60
   Insn 17(l0): point = 62
   Insn 16(l0): point = 64
   Insn 15(l0): point = 66
   Insn 14(l0): point = 68
   Insn 13(l0): point = 70
   Insn 12(l0): point = 72
   Insn 11(l0): point = 74
   Insn 10(l0): point = 76
   Insn 9(l0): point = 78
   Insn 8(l0): point = 80
   Insn 7(l0): point = 82
   Insn 3(l0): point = 84
   Insn 2(l0): point = 86
 a0(r78): [3..4]
 a1(r77): [5..6]
 a2(r76): [11..12]
 a3(r75): [13..14]
 a4(r69): [13..38]
 a5(r74): [19..24]
 a6(r87 [0]): [21..22]
 a6(r87 [1]): [21..22]
 a7(r73): [25..26]
 a8(r71): [25..32]
 a9(r72): [27..28]
 a10(r86): [29..30]
 a11(r70): [33..34]
 a12(r85): [35..36]
 a13(r68): [39..40]
 a14(r62): [39..64]
 a15(r67): [45..50]
 a16(r84 [0]): [47..48]
 a16(r84 [1]): [47..48]
 a17(r66): [51..52]
 a18(r64): [51..58]
 a19(r65): [53..54]
 a20(r83): [55..56]
 a21(r63): [59..60]
 a22(r82): [61..62]
 a23(r61): [69..74]
 a24(r81 [0]): [71..72]
 a24(r81 [1]): [71..72]
 a25(r60): [75..76]
 a26(r59): [75..80]
 a27(r80): [77..78]
 a28(r79): [81..82]
Compressing live ranges: from 89 to 42 - 47%
Ranges after the compression:
 a0(r78): [0..1]
 a1(r77): [2..3]
 a2(r76): [4..5]
 a3(r75): [6..7]
 a4(r69): [6..19]
 a5(r74): [8..9]
 a6(r87 [0]): [8..9]
 a6(r87 [1]): [8..9]
 a7(r73): [10..11]
 a8(r71): [10..15]
 a9(r72): [12..13]
 a10(r86): [14..15]
 a11(r70): [16..17]
 a12(r85): [18..19]
 a13(r68): [20..21]
 a14(r62): [20..33]
 a15(r67): [22..23]
 a16(r84 [0]): [22..23]
 a16(r84 [1]): [22..23]
 a17(r66): [24..25]
 a18(r64): [24..29]
 a19(r65): [26..27]
 a20(r83): [28..29]
 a21(r63): [30..31]
 a22(r82): [32..33]
 a23(r61): [34..35]
 a24(r81 [0]): [34..35]
 a24(r81 [1]): [34..35]
 a25(r60): [36..37]
 a26(r59): [36..39]
 a27(r80): [38..39]
 a28(r79): [40..41]
  regions=1, blocks=3, points=42
    allocnos=29 (big 3), copies=0, conflicts=0, ranges=32
Disposition:
   26:r59  l0     9   25:r60  l0     8   23:r61  l0     8   14:r62  l0   mem
   21:r63  l0     0   18:r64  l0     9   19:r65  l0     0   17:r66  l0     8
   15:r67  l0     8   13:r68  l0     8    4:r69  l0   mem   11:r70  l0     0
    8:r71  l0     9    9:r72  l0     0    7:r73  l0     8    5:r74  l0     8
    3:r75  l0     8    2:r76  l0     8    1:r77  l0     8    0:r78  l0     8
   28:r79  l0     0   27:r80  l0     0   24:r81  l0     0   22:r82  l0     0
   20:r83  l0     0   16:r84  l0     0   12:r85  l0     0   10:r86  l0     0
    6:r87  l0     0
+++Costs: overall 36, reg -4, mem 40, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


euclid_dist

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d,1u} r5={5d,1u} r6={1d,2u} r7={1d,20u} r8={5d,6u} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={8d} r18={4d} r19={4d} r20={1d,10u,4e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 303{229d,70u,4e} in 44{40 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:XF 59 [ D.5105 ])
        (mem:XF (reg/f:DI 79) [0 *a_1(D)+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:XF 60 [ D.5105 ])
        (mem:XF (reg/f:DI 80) [0 *b_3(D)+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))
(insn 11 10 12 2 (set (reg:XF 61 [ D.5105 ])
        (minus:XF (reg:XF 59 [ D.5105 ])
            (reg:XF 60 [ D.5105 ]))) mUtility.c:160 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5105 ])
        (expr_list:REG_DEAD (reg:XF 59 [ D.5105 ])
            (nil))))
(insn 12 11 13 2 (set (reg:XF 81)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 81)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 81)
        (nil)))
(insn 14 13 15 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 61 [ D.5105 ])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5105 ])
        (nil)))
(call_insn 15 14 16 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:160 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 16 15 17 2 (set (reg:XF 62 [ D.5105 ])
        (reg:XF 8 st)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 63 [ D.5106 ])
                (plus:DI (reg/f:DI 82)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:160 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 19 18 20 2 (set (reg:XF 64 [ D.5105 ])
        (mem:XF (reg/f:DI 63 [ D.5106 ]) [0 *_7+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5106 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 65 [ D.5106 ])
                (plus:DI (reg/f:DI 83)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:160 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 22 21 23 2 (set (reg:XF 66 [ D.5105 ])
        (mem:XF (reg/f:DI 65 [ D.5106 ]) [0 *_9+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.5106 ])
        (nil)))
(insn 23 22 24 2 (set (reg:XF 67 [ D.5105 ])
        (minus:XF (reg:XF 64 [ D.5105 ])
            (reg:XF 66 [ D.5105 ]))) mUtility.c:160 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5105 ])
        (expr_list:REG_DEAD (reg:XF 64 [ D.5105 ])
            (nil))))
(insn 24 23 25 2 (set (reg:XF 84)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (nil))
(insn 25 24 26 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 84)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 84)
        (nil)))
(insn 26 25 27 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 67 [ D.5105 ])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5105 ])
        (nil)))
(call_insn 27 26 28 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:160 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 28 27 29 2 (set (reg:XF 68 [ D.5105 ])
        (reg:XF 8 st)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 29 28 30 2 (set (reg:XF 69 [ D.5105 ])
        (plus:XF (reg:XF 62 [ D.5105 ])
            (reg:XF 68 [ D.5105 ]))) mUtility.c:160 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 68 [ D.5105 ])
        (expr_list:REG_DEAD (reg:XF 62 [ D.5105 ])
            (nil))))
(insn 30 29 31 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg/f:DI 70 [ D.5106 ])
                (plus:DI (reg/f:DI 85)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:160 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 a+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 32 31 33 2 (set (reg:XF 71 [ D.5105 ])
        (mem:XF (reg/f:DI 70 [ D.5106 ]) [0 *_14+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5106 ])
        (nil)))
(insn 33 32 34 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) mUtility.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 72 [ D.5106 ])
                (plus:DI (reg/f:DI 86)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:160 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 35 34 36 2 (set (reg:XF 73 [ D.5105 ])
        (mem:XF (reg/f:DI 72 [ D.5106 ]) [0 *_16+0 S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.5106 ])
        (nil)))
(insn 36 35 37 2 (set (reg:XF 74 [ D.5105 ])
        (minus:XF (reg:XF 71 [ D.5105 ])
            (reg:XF 73 [ D.5105 ]))) mUtility.c:160 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5105 ])
        (expr_list:REG_DEAD (reg:XF 71 [ D.5105 ])
            (nil))))
(insn 37 36 38 2 (set (reg:XF 87)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:160 131 {*movxf_internal_rex64}
     (nil))
(insn 38 37 39 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 87)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 87)
        (nil)))
(insn 39 38 40 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 74 [ D.5105 ])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 74 [ D.5105 ])
        (nil)))
(call_insn 40 39 41 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:160 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 41 40 42 2 (set (reg:XF 75 [ D.5105 ])
        (reg:XF 8 st)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 42 41 43 2 (set (reg:XF 76 [ D.5105 ])
        (plus:XF (reg:XF 69 [ D.5105 ])
            (reg:XF 75 [ D.5105 ]))) mUtility.c:160 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5105 ])
        (expr_list:REG_DEAD (reg:XF 69 [ D.5105 ])
            (nil))))
(insn 43 42 44 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 76 [ D.5105 ])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5105 ])
        (nil)))
(call_insn 44 43 45 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sqrtl") [flags 0x41]  <function_decl 0x7f4452d75400 sqrtl>) [0 __builtin_sqrtl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:160 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 45 44 48 2 (set (reg:XF 77 [ D.5105 ])
        (reg:XF 8 st)) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 48 45 52 2 (set (reg:XF 78 [ <retval> ])
        (reg:XF 77 [ D.5105 ])) mUtility.c:160 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5105 ])
        (nil)))
(insn 52 48 55 2 (set (reg/i:XF 8 st)
        (reg:XF 78 [ <retval> ])) mUtility.c:161 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 78 [ <retval> ])
        (nil)))
(insn 55 52 0 2 (use (reg/i:XF 8 st)) mUtility.c:161 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _min (_min, funcdef_no=18, decl_uid=3983, cgraph_uid=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a1 (r59,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS

  a0(r60,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r59,l0) costs: AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 INDEX_REGS:6 GENERAL_REGS:6 LEGACY_REGS:6 CLOBBERED_REGS:6 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:65 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:25
  a2(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r61,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 28(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 7
   Insn 35(l0): point = 10
   Insn 13(l0): point = 12
   Insn 8(l0): point = 15
   Insn 7(l0): point = 17
   Insn 6(l0): point = 19
   Insn 5(l0): point = 21
 a0(r60): [3..4]
 a1(r59 [0]): [10..12] [5..7]
 a1(r59 [1]): [10..12] [5..7]
 a2(r62): [18..19]
 a3(r61): [18..21]
Compressing live ranges: from 24 to 8 - 33%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59 [0]): [2..5]
 a1(r59 [1]): [2..5]
 a2(r62): [6..7]
 a3(r61): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 1), copies=0, conflicts=0, ranges=5
Disposition:
    1:r59  l0     0    0:r60  l0     8    3:r61  l0     9    2:r62  l0     8
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_min

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 6[bp] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,5u} r7={1d,5u} r8={1d,2u} r16={1d,8u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} 
;;    total ref usage 56{26d,30u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61 62
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:XF 61)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:164 131 {*movxf_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:XF 62)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:164 131 {*movxf_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 61)
            (reg:XF 62))) mUtility.c:164 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 62)
        (expr_list:REG_DEAD (reg:XF 61)
            (nil))))
(jump_insn 8 7 12 2 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) mUtility.c:164 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 12 8 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 35 3 (set (reg:XF 59 [ D.5107 ])
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:164 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 35 13 36 3 (set (pc)
        (label_ref 19)) mUtility.c:164 650 {jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 36 35 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 34 36 17 4 51 "" [1 uses])
(note 17 34 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:XF 59 [ D.5107 ])
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:165 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 8 [st] 60
(code_label 19 18 20 5 49 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 25 5 (set (reg:XF 60 [ <retval> ])
        (reg:XF 59 [ D.5107 ])) 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5107 ])
        (nil)))
(insn 25 21 28 5 (set (reg/i:XF 8 st)
        (reg:XF 60 [ <retval> ])) mUtility.c:166 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ <retval> ])
        (nil)))
(insn 28 25 0 5 (use (reg/i:XF 8 st)) mUtility.c:166 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _max (_max, funcdef_no=19, decl_uid=3987, cgraph_uid=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a1 (r59,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS

  a0(r60,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r59,l0) costs: AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 INDEX_REGS:6 GENERAL_REGS:6 LEGACY_REGS:6 CLOBBERED_REGS:6 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:65 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:25
  a2(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r61,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 28(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 7
   Insn 35(l0): point = 10
   Insn 13(l0): point = 12
   Insn 8(l0): point = 15
   Insn 7(l0): point = 17
   Insn 6(l0): point = 19
   Insn 5(l0): point = 21
 a0(r60): [3..4]
 a1(r59 [0]): [10..12] [5..7]
 a1(r59 [1]): [10..12] [5..7]
 a2(r62): [18..19]
 a3(r61): [18..21]
Compressing live ranges: from 24 to 8 - 33%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59 [0]): [2..5]
 a1(r59 [1]): [2..5]
 a2(r62): [6..7]
 a3(r61): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 1), copies=0, conflicts=0, ranges=5
Disposition:
    1:r59  l0     0    0:r60  l0     8    3:r61  l0     9    2:r62  l0     8
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_max

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 6[bp] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,5u} r7={1d,5u} r8={1d,2u} r16={1d,8u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} 
;;    total ref usage 56{26d,30u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61 62
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:XF 61)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:168 131 {*movxf_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:XF 62)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:168 131 {*movxf_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 61)
            (reg:XF 62))) mUtility.c:168 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 62)
        (expr_list:REG_DEAD (reg:XF 61)
            (nil))))
(jump_insn 8 7 12 2 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) mUtility.c:168 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 12 8 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 35 3 (set (reg:XF 59 [ D.5108 ])
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:168 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 35 13 36 3 (set (pc)
        (label_ref 19)) mUtility.c:168 650 {jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 36 35 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 34 36 17 4 57 "" [1 uses])
(note 17 34 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:XF 59 [ D.5108 ])
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:169 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 8 [st] 60
(code_label 19 18 20 5 55 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 25 5 (set (reg:XF 60 [ <retval> ])
        (reg:XF 59 [ D.5108 ])) 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5108 ])
        (nil)))
(insn 25 21 28 5 (set (reg/i:XF 8 st)
        (reg:XF 60 [ <retval> ])) mUtility.c:170 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ <retval> ])
        (nil)))
(insn 28 25 0 5 (use (reg/i:XF 8 st)) mUtility.c:170 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function segments_intersect (segments_intersect, funcdef_no=20, decl_uid=1743, cgraph_uid=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r72,l0) best SIREG, allocno GENERAL_REGS
    r71: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r71,l0) best DREG, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r69,l0) best SIREG, allocno GENERAL_REGS
    r68: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best DREG, allocno GENERAL_REGS
    r67: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r67,l0) best DIREG, allocno GENERAL_REGS
    r66: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r66,l0) best SIREG, allocno GENERAL_REGS
    r65: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r65,l0) best DREG, allocno GENERAL_REGS
    r64: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r64,l0) best CREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best AREG, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r61,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r71,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r68,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r65,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r64,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 59(l0): point = 0
   Insn 56(l0): point = 2
   Insn 52(l0): point = 4
   Insn 47(l0): point = 7
   Insn 62(l0): point = 10
   Insn 42(l0): point = 12
   Insn 40(l0): point = 15
   Insn 39(l0): point = 17
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 29(l0): point = 36
   Insn 28(l0): point = 38
   Insn 27(l0): point = 40
   Insn 26(l0): point = 42
   Insn 25(l0): point = 44
   Insn 24(l0): point = 46
   Insn 23(l0): point = 48
   Insn 22(l0): point = 50
   Insn 21(l0): point = 52
   Insn 20(l0): point = 54
   Insn 19(l0): point = 56
   Insn 18(l0): point = 58
   Insn 17(l0): point = 60
   Insn 16(l0): point = 62
   Insn 15(l0): point = 64
   Insn 14(l0): point = 66
   Insn 13(l0): point = 68
   Insn 12(l0): point = 70
   Insn 11(l0): point = 72
   Insn 10(l0): point = 74
   Insn 9(l0): point = 76
   Insn 5(l0): point = 78
   Insn 4(l0): point = 80
   Insn 3(l0): point = 82
   Insn 2(l0): point = 84
 a0(r62): [3..4]
 a1(r59): [10..12] [5..7]
 a2(r61): [18..19]
 a3(r73): [24..29]
 a4(r72): [26..31]
 a5(r71): [28..33]
 a6(r60): [39..40]
 a7(r70): [45..50]
 a8(r69): [47..52]
 a9(r68): [49..54]
 a10(r67): [59..68]
 a11(r66): [61..70]
 a12(r65): [63..72]
 a13(r64): [65..74]
 a14(r63): [67..76]
Compressing live ranges: from 87 to 16 - 18%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r59): [2..5]
 a2(r61): [6..7]
 a3(r73): [8..9]
 a4(r72): [8..9]
 a5(r71): [8..9]
 a6(r60): [10..11]
 a7(r70): [12..13]
 a8(r69): [12..13]
 a9(r68): [12..13]
 a10(r67): [14..15]
 a11(r66): [14..15]
 a12(r65): [14..15]
 a13(r64): [14..15]
 a14(r63): [14..15]
  regions=1, blocks=7, points=16
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
    1:r59  l0     0    6:r60  l0     0    2:r61  l0     0    0:r62  l0     0
   14:r63  l0     5   13:r64  l0     2   12:r65  l0     1   11:r66  l0     4
   10:r67  l0     0    9:r68  l0     1    8:r69  l0     2    7:r70  l0     0
    5:r71  l0     1    4:r72  l0     2    3:r73  l0     0
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


segments_intersect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,4u} r1={7d,4u} r2={5d,2u} r4={7d,4u} r5={7d,4u} r6={1d,6u} r7={1d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,5u} r17={8d,2u} r18={3d} r19={3d} r20={1d,21u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} 
;;    total ref usage 261{184d,77u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 63 64 65 66 67 68 69 70
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 c+0 S8 A64])
        (reg:DI 1 dx [ c ])) mUtility.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ c ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 d+0 S8 A64])
        (reg:DI 2 cx [ d ])) mUtility.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ d ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (parallel [
            (set (reg:DI 63)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:174 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 d+0 S8 A64])) mUtility.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 c+0 S8 A64])) mUtility.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:DI 37 r8)
        (reg:DI 63)) mUtility.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 63)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (reg:DI 64)) mUtility.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 65)) mUtility.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 66)) mUtility.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 67)) mUtility.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_intersection") [flags 0x3]  <function_decl 0x7f4452e3cc00 find_intersection>) [0 find_intersection S1 A8])
            (const_int 0 [0]))) mUtility.c:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 68)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:177 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg:DI 68)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg:DI 69)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69)
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 70)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x3]  <function_decl 0x7f4452e3cb00 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mUtility.c:177 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg:SI 60 [ D.5109 ])
        (reg:SI 0 ax)) mUtility.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.5109 ])
            (const_int 0 [0]))) mUtility.c:177 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.5109 ])
        (nil)))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) mUtility.c:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 71 72 73
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (parallel [
            (set (reg:DI 71)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:177 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 3 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 d+0 S8 A64])) mUtility.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 c+0 S8 A64])) mUtility.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 3 (set (reg:DI 1 dx)
        (reg:DI 71)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(insn 35 34 36 3 (set (reg:DI 4 si)
        (reg:DI 72)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(insn 36 35 37 3 (set (reg:DI 5 di)
        (reg:DI 73)) mUtility.c:177 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(call_insn 37 36 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x3]  <function_decl 0x7f4452e3cb00 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mUtility.c:177 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 38 37 39 3 (set (reg:SI 61 [ D.5109 ])
        (reg:SI 0 ax)) mUtility.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 39 38 40 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.5109 ])
            (const_int 0 [0]))) mUtility.c:177 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.5109 ])
        (nil)))
(jump_insn 40 39 41 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) mUtility.c:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 62 4 (set (reg:SI 59 [ D.5109 ])
        (const_int 1 [0x1])) mUtility.c:177 89 {*movsi_internal}
     (nil))
(jump_insn 62 42 63 4 (set (pc)
        (label_ref 50)) mUtility.c:177 650 {jump}
     (nil)
 -> 50)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 63 62 45)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 45 63 46 5 59 "" [2 uses])
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 50 5 (set (reg:SI 59 [ D.5109 ])
        (const_int 0 [0])) mUtility.c:178 89 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 62
(code_label 50 47 51 6 61 "" [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 6 (set (reg:SI 62 [ <retval> ])
        (reg:SI 59 [ D.5109 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5109 ])
        (nil)))
(insn 56 52 59 6 (set (reg/i:SI 0 ax)
        (reg:SI 62 [ <retval> ])) mUtility.c:196 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ <retval> ])
        (nil)))
(insn 59 56 0 6 (use (reg/i:SI 0 ax)) mUtility.c:196 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _den (_den, funcdef_no=21, decl_uid=4002, cgraph_uid=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 70.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r121,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r120: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a8 (r120,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r118,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r117: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r117,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r116: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r116,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r115: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r115,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r114: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r114,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r113: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r113,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r112: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a22 (r112,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r111: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r111,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r110: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r110,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r109: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r109,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r108: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r108,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r107: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r107,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r106: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r106,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r105: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r105,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r104: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r104,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a44 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r99,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a59 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a61 (r93,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a62 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r91,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r90: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a1 (r90,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a5 (r87,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a9 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a24 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a60 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r91,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r90,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r89,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a3(r121,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r88,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r87,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r83,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r86,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r120,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a9(r85,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a10(r84,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a11(r119,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r118,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r117,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r116,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r82,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a17(r115,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r81,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r114,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r113,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r112,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r78,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a24(r75,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a25(r111,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r77,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r110,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r76,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r109,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a30(r108,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r70,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r107,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r106,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r105,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a38(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r104,l0) costs: AD_REGS:84 Q_REGS:84 NON_Q_REGS:84 INDEX_REGS:84 GENERAL_REGS:84 LEGACY_REGS:84 CLOBBERED_REGS:84 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a40(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r65,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r103,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a44(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a45(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r101,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r100,l0) costs: AD_REGS:84 Q_REGS:84 NON_Q_REGS:84 INDEX_REGS:84 GENERAL_REGS:84 LEGACY_REGS:84 CLOBBERED_REGS:84 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a49(r64,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r99,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r98,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r97,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r96,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r95,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r60,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a60(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a61(r93,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a62(r92,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 81(l0): point = 0
   Insn 78(l0): point = 2
   Insn 74(l0): point = 4
   Insn 71(l0): point = 6
   Insn 70(l0): point = 8
   Insn 69(l0): point = 10
   Insn 68(l0): point = 12
   Insn 67(l0): point = 14
   Insn 66(l0): point = 16
   Insn 65(l0): point = 18
   Insn 64(l0): point = 20
   Insn 63(l0): point = 22
   Insn 62(l0): point = 24
   Insn 61(l0): point = 26
   Insn 60(l0): point = 28
   Insn 59(l0): point = 30
   Insn 58(l0): point = 32
   Insn 57(l0): point = 34
   Insn 56(l0): point = 36
   Insn 55(l0): point = 38
   Insn 54(l0): point = 40
   Insn 53(l0): point = 42
   Insn 52(l0): point = 44
   Insn 51(l0): point = 46
   Insn 50(l0): point = 48
   Insn 49(l0): point = 50
   Insn 48(l0): point = 52
   Insn 47(l0): point = 54
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 44(l0): point = 60
   Insn 43(l0): point = 62
   Insn 42(l0): point = 64
   Insn 41(l0): point = 66
   Insn 40(l0): point = 68
   Insn 39(l0): point = 70
   Insn 38(l0): point = 72
   Insn 37(l0): point = 74
   Insn 36(l0): point = 76
   Insn 35(l0): point = 78
   Insn 34(l0): point = 80
   Insn 33(l0): point = 82
   Insn 32(l0): point = 84
   Insn 31(l0): point = 86
   Insn 30(l0): point = 88
   Insn 29(l0): point = 90
   Insn 28(l0): point = 92
   Insn 27(l0): point = 94
   Insn 26(l0): point = 96
   Insn 25(l0): point = 98
   Insn 24(l0): point = 100
   Insn 23(l0): point = 102
   Insn 22(l0): point = 104
   Insn 21(l0): point = 106
   Insn 20(l0): point = 108
   Insn 19(l0): point = 110
   Insn 18(l0): point = 112
   Insn 17(l0): point = 114
   Insn 16(l0): point = 116
   Insn 15(l0): point = 118
   Insn 14(l0): point = 120
   Insn 13(l0): point = 122
   Insn 12(l0): point = 124
   Insn 11(l0): point = 126
   Insn 10(l0): point = 128
   Insn 9(l0): point = 130
   Insn 8(l0): point = 132
   Insn 7(l0): point = 134
   Insn 6(l0): point = 136
   Insn 5(l0): point = 138
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r89): [11..12]
 a3(r121): [13..14]
 a4(r88): [13..16]
 a5(r87): [17..18]
 a6(r83): [17..42]
 a7(r86): [23..28]
 a8(r120 [0]): [25..26]
 a8(r120 [1]): [25..26]
 a9(r85): [29..30]
 a10(r84): [29..36]
 a11(r119): [31..32]
 a12(r118): [31..34]
 a13(r117): [37..38]
 a14(r116): [37..40]
 a15(r82): [43..44]
 a16(r79): [43..58]
 a17(r115): [45..46]
 a18(r81): [45..48]
 a19(r114): [49..50]
 a20(r80): [49..52]
 a21(r113): [53..54]
 a22(r112): [53..56]
 a23(r78): [59..60]
 a24(r75): [59..74]
 a25(r111): [61..62]
 a26(r77): [61..64]
 a27(r110): [65..66]
 a28(r76): [65..68]
 a29(r109): [69..70]
 a30(r108): [69..72]
 a31(r74): [75..76]
 a32(r70): [75..92]
 a33(r107): [77..78]
 a34(r73): [77..80]
 a35(r106): [81..82]
 a36(r72): [81..84]
 a37(r105): [85..86]
 a38(r71): [85..88]
 a39(r104): [89..90]
 a40(r69): [93..94]
 a41(r65): [93..110]
 a42(r103): [95..96]
 a43(r68): [95..98]
 a44(r102): [99..100]
 a45(r67): [99..102]
 a46(r101): [103..104]
 a47(r66): [103..106]
 a48(r100): [107..108]
 a49(r64): [111..112]
 a50(r61): [111..126]
 a51(r99): [113..114]
 a52(r63): [113..116]
 a53(r98): [117..118]
 a54(r62): [117..120]
 a55(r97): [121..122]
 a56(r96): [121..124]
 a57(r95): [127..128]
 a58(r60): [127..130]
 a59(r94): [131..132]
 a60(r59): [131..134]
 a61(r93): [135..136]
 a62(r92): [135..138]
Compressing live ranges: from 141 to 68 - 48%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r121): [6..7]
 a4(r88): [6..7]
 a5(r87): [8..9]
 a6(r83): [8..17]
 a7(r86): [10..11]
 a8(r120 [0]): [10..11]
 a8(r120 [1]): [10..11]
 a9(r85): [12..13]
 a10(r84): [12..15]
 a11(r119): [14..15]
 a12(r118): [14..15]
 a13(r117): [16..17]
 a14(r116): [16..17]
 a15(r82): [18..19]
 a16(r79): [18..25]
 a17(r115): [20..21]
 a18(r81): [20..21]
 a19(r114): [22..23]
 a20(r80): [22..23]
 a21(r113): [24..25]
 a22(r112): [24..25]
 a23(r78): [26..27]
 a24(r75): [26..33]
 a25(r111): [28..29]
 a26(r77): [28..29]
 a27(r110): [30..31]
 a28(r76): [30..31]
 a29(r109): [32..33]
 a30(r108): [32..33]
 a31(r74): [34..35]
 a32(r70): [34..43]
 a33(r107): [36..37]
 a34(r73): [36..37]
 a35(r106): [38..39]
 a36(r72): [38..39]
 a37(r105): [40..41]
 a38(r71): [40..41]
 a39(r104): [42..43]
 a40(r69): [44..45]
 a41(r65): [44..53]
 a42(r103): [46..47]
 a43(r68): [46..47]
 a44(r102): [48..49]
 a45(r67): [48..49]
 a46(r101): [50..51]
 a47(r66): [50..51]
 a48(r100): [52..53]
 a49(r64): [54..55]
 a50(r61): [54..61]
 a51(r99): [56..57]
 a52(r63): [56..57]
 a53(r98): [58..59]
 a54(r62): [58..59]
 a55(r97): [60..61]
 a56(r96): [60..61]
 a57(r95): [62..63]
 a58(r60): [62..63]
 a59(r94): [64..65]
 a60(r59): [64..65]
 a61(r93): [66..67]
 a62(r92): [66..67]
  regions=1, blocks=3, points=68
    allocnos=63 (big 1), copies=0, conflicts=0, ranges=64
Disposition:
   60:r59  l0     9   58:r60  l0     9   50:r61  l0     9   54:r62  l0    10
   52:r63  l0    10   49:r64  l0     8   41:r65  l0     9   47:r66  l0    10
   45:r67  l0    10   43:r68  l0    10   40:r69  l0     8   32:r70  l0     9
   38:r71  l0    10   36:r72  l0    10   34:r73  l0    10   31:r74  l0     8
   24:r75  l0     9   28:r76  l0    10   26:r77  l0    10   23:r78  l0     8
   16:r79  l0     9   20:r80  l0    10   18:r81  l0    10   15:r82  l0     8
    6:r83  l0   mem   10:r84  l0     9    9:r85  l0     8    7:r86  l0     8
    5:r87  l0     8    4:r88  l0     9    2:r89  l0     8    1:r90  l0     8
    0:r91  l0     8   62:r92  l0     9   61:r93  l0     8   59:r94  l0     8
   57:r95  l0     8   56:r96  l0    10   55:r97  l0     8   53:r98  l0     8
   51:r99  l0     8   48:r100 l0     8   46:r101 l0     8   44:r102 l0     8
   42:r103 l0     8   39:r104 l0     8   37:r105 l0     8   35:r106 l0     8
   33:r107 l0     8   30:r108 l0    10   29:r109 l0     8   27:r110 l0     8
   25:r111 l0     8   22:r112 l0    10   21:r113 l0     8   19:r114 l0     8
   17:r115 l0     8   14:r116 l0     9   13:r117 l0     8   12:r118 l0    10
   11:r119 l0     8    8:r120 l0     0    3:r121 l0     8
+++Costs: overall 17, reg -3, mem 20, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_den

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 6[bp] 7[sp] 8[st]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={3d} r6={1d,2u} r7={1d,10u} r8={3d,4u} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,29u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 283{171d,112u,0e} in 70{68 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:XF 92)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:XF 93)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:XF 59 [ D.5110 ])
        (mult:XF (reg:XF 92)
            (reg:XF 93))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 93)
        (expr_list:REG_DEAD (reg:XF 92)
            (nil))))
(insn 8 7 9 2 (set (reg:XF 94)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 d+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 60 [ D.5110 ])
        (mult:XF (reg:XF 59 [ D.5110 ])
            (reg:XF 94))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 94)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5110 ])
            (nil))))
(insn 10 9 11 2 (set (reg:XF 95)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 d+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:XF 61 [ D.5110 ])
        (mult:XF (reg:XF 60 [ D.5110 ])
            (reg:XF 95))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 95)
        (expr_list:REG_DEAD (reg:XF 60 [ D.5110 ])
            (nil))))
(insn 12 11 13 2 (set (reg:XF 96)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:XF 97)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:XF 62 [ D.5110 ])
        (mult:XF (reg:XF 96)
            (reg:XF 97))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 97)
        (expr_list:REG_DEAD (reg:XF 96)
            (nil))))
(insn 15 14 16 2 (set (reg:XF 98)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [0 e+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:XF 63 [ D.5110 ])
        (mult:XF (reg:XF 62 [ D.5110 ])
            (reg:XF 98))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 98)
        (expr_list:REG_DEAD (reg:XF 62 [ D.5110 ])
            (nil))))
(insn 17 16 18 2 (set (reg:XF 99)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [0 e+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:XF 64 [ D.5110 ])
        (mult:XF (reg:XF 63 [ D.5110 ])
            (reg:XF 99))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 99)
        (expr_list:REG_DEAD (reg:XF 63 [ D.5110 ])
            (nil))))
(insn 19 18 20 2 (set (reg:XF 65 [ D.5110 ])
        (plus:XF (reg:XF 61 [ D.5110 ])
            (reg:XF 64 [ D.5110 ]))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 61 [ D.5110 ])
            (nil))))
(insn 20 19 21 2 (set (reg:XF 100)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:XF 66 [ D.5110 ])
        (plus:XF (reg:XF 100)
            (reg:XF 100))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 100)
        (nil)))
(insn 22 21 23 2 (set (reg:XF 101)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:XF 67 [ D.5110 ])
        (mult:XF (reg:XF 66 [ D.5110 ])
            (reg:XF 101))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 101)
        (expr_list:REG_DEAD (reg:XF 66 [ D.5110 ])
            (nil))))
(insn 24 23 25 2 (set (reg:XF 102)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 d+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 25 24 26 2 (set (reg:XF 68 [ D.5110 ])
        (mult:XF (reg:XF 67 [ D.5110 ])
            (reg:XF 102))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 102)
        (expr_list:REG_DEAD (reg:XF 67 [ D.5110 ])
            (nil))))
(insn 26 25 27 2 (set (reg:XF 103)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:XF 69 [ D.5110 ])
        (mult:XF (reg:XF 68 [ D.5110 ])
            (reg:XF 103))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 103)
        (expr_list:REG_DEAD (reg:XF 68 [ D.5110 ])
            (nil))))
(insn 28 27 29 2 (set (reg:XF 70 [ D.5110 ])
        (minus:XF (reg:XF 65 [ D.5110 ])
            (reg:XF 69 [ D.5110 ]))) mUtility.c:199 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5110 ])
            (nil))))
(insn 29 28 30 2 (set (reg:XF 104)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:XF 71 [ D.5110 ])
        (plus:XF (reg:XF 104)
            (reg:XF 104))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 104)
        (nil)))
(insn 31 30 32 2 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 c+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:XF 72 [ D.5110 ])
        (mult:XF (reg:XF 71 [ D.5110 ])
            (reg:XF 105))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 105)
        (expr_list:REG_DEAD (reg:XF 71 [ D.5110 ])
            (nil))))
(insn 33 32 34 2 (set (reg:XF 106)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [0 e+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:XF 73 [ D.5110 ])
        (mult:XF (reg:XF 72 [ D.5110 ])
            (reg:XF 106))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 106)
        (expr_list:REG_DEAD (reg:XF 72 [ D.5110 ])
            (nil))))
(insn 35 34 36 2 (set (reg:XF 107)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:XF 74 [ D.5110 ])
        (mult:XF (reg:XF 73 [ D.5110 ])
            (reg:XF 107))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 107)
        (expr_list:REG_DEAD (reg:XF 73 [ D.5110 ])
            (nil))))
(insn 37 36 38 2 (set (reg:XF 75 [ D.5110 ])
        (minus:XF (reg:XF 70 [ D.5110 ])
            (reg:XF 74 [ D.5110 ]))) mUtility.c:199 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 74 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5110 ])
            (nil))))
(insn 38 37 39 2 (set (reg:XF 108)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 39 38 40 2 (set (reg:XF 109)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 40 39 41 2 (set (reg:XF 76 [ D.5110 ])
        (mult:XF (reg:XF 108)
            (reg:XF 109))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 109)
        (expr_list:REG_DEAD (reg:XF 108)
            (nil))))
(insn 41 40 42 2 (set (reg:XF 110)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:XF 77 [ D.5110 ])
        (mult:XF (reg:XF 76 [ D.5110 ])
            (reg:XF 110))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 110)
        (expr_list:REG_DEAD (reg:XF 76 [ D.5110 ])
            (nil))))
(insn 43 42 44 2 (set (reg:XF 111)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg:XF 78 [ D.5110 ])
        (mult:XF (reg:XF 77 [ D.5110 ])
            (reg:XF 111))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 111)
        (expr_list:REG_DEAD (reg:XF 77 [ D.5110 ])
            (nil))))
(insn 45 44 46 2 (set (reg:XF 79 [ D.5110 ])
        (plus:XF (reg:XF 75 [ D.5110 ])
            (reg:XF 78 [ D.5110 ]))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 78 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 75 [ D.5110 ])
            (nil))))
(insn 46 45 47 2 (set (reg:XF 112)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 47 46 48 2 (set (reg:XF 113)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 48 47 49 2 (set (reg:XF 80 [ D.5110 ])
        (mult:XF (reg:XF 112)
            (reg:XF 113))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 113)
        (expr_list:REG_DEAD (reg:XF 112)
            (nil))))
(insn 49 48 50 2 (set (reg:XF 114)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (reg:XF 81 [ D.5110 ])
        (mult:XF (reg:XF 80 [ D.5110 ])
            (reg:XF 114))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 114)
        (expr_list:REG_DEAD (reg:XF 80 [ D.5110 ])
            (nil))))
(insn 51 50 52 2 (set (reg:XF 115)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 80 [0x50])) [0 f+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:XF 82 [ D.5110 ])
        (mult:XF (reg:XF 81 [ D.5110 ])
            (reg:XF 115))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 115)
        (expr_list:REG_DEAD (reg:XF 81 [ D.5110 ])
            (nil))))
(insn 53 52 54 2 (set (reg:XF 83 [ D.5110 ])
        (plus:XF (reg:XF 79 [ D.5110 ])
            (reg:XF 82 [ D.5110 ]))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 82 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 79 [ D.5110 ])
            (nil))))
(insn 54 53 55 2 (set (reg:XF 116)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 b+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:XF 117)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 d+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 56 55 57 2 (set (reg:XF 84 [ D.5110 ])
        (mult:XF (reg:XF 116)
            (reg:XF 117))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 117)
        (expr_list:REG_DEAD (reg:XF 116)
            (nil))))
(insn 57 56 58 2 (set (reg:XF 118)
        (mem/c:XF (reg/f:DI 16 argp) [0 a+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (reg:XF 119)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 64 [0x40])) [0 e+0 S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (reg:XF 85 [ D.5110 ])
        (mult:XF (reg:XF 118)
            (reg:XF 119))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 119)
        (expr_list:REG_DEAD (reg:XF 118)
            (nil))))
(insn 60 59 61 2 (set (reg:XF 86 [ D.5110 ])
        (minus:XF (reg:XF 84 [ D.5110 ])
            (reg:XF 85 [ D.5110 ]))) mUtility.c:199 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 85 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 84 [ D.5110 ])
            (nil))))
(insn 61 60 62 2 (set (reg:XF 120)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (nil))
(insn 62 61 63 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 120)) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 120)
        (nil)))
(insn 63 62 64 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 86 [ D.5110 ])) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 86 [ D.5110 ])
        (nil)))
(call_insn 64 63 65 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("powl") [flags 0x41]  <function_decl 0x7f4452d6c000 powl>) [0 __builtin_powl S1 A8])
            (const_int 32 [0x20]))) mUtility.c:199 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 65 64 66 2 (set (reg:XF 87 [ D.5110 ])
        (reg:XF 8 st)) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 66 65 67 2 (set (reg:XF 88 [ D.5110 ])
        (div:XF (reg:XF 83 [ D.5110 ])
            (reg:XF 87 [ D.5110 ]))) mUtility.c:199 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 87 [ D.5110 ])
        (expr_list:REG_DEAD (reg:XF 83 [ D.5110 ])
            (nil))))
(insn 67 66 68 2 (set (reg:XF 121)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S16 A128])) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 68 67 69 2 (set (reg:XF 89 [ D.5110 ])
        (plus:XF (reg:XF 88 [ D.5110 ])
            (reg:XF 121))) mUtility.c:199 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 121)
        (expr_list:REG_DEAD (reg:XF 88 [ D.5110 ])
            (nil))))
(insn 69 68 70 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 89 [ D.5110 ])) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5110 ])
        (nil)))
(call_insn 70 69 71 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sqrtl") [flags 0x41]  <function_decl 0x7f4452d75400 sqrtl>) [0 __builtin_sqrtl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:199 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 71 70 74 2 (set (reg:XF 90 [ D.5110 ])
        (reg:XF 8 st)) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 74 71 78 2 (set (reg:XF 91 [ <retval> ])
        (reg:XF 90 [ D.5110 ])) mUtility.c:199 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 90 [ D.5110 ])
        (nil)))
(insn 78 74 81 2 (set (reg/i:XF 8 st)
        (reg:XF 91 [ <retval> ])) mUtility.c:200 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 91 [ <retval> ])
        (nil)))
(insn 81 78 0 2 (use (reg/i:XF 8 st)) mUtility.c:200 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function _maxim (_maxim, funcdef_no=22, decl_uid=4006, cgraph_uid=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r78,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a18 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r70,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a1 (r69,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r70,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r69,l0) costs: AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r78,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r75,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a11(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a16(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a19(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 57(l0): point = 0
   Insn 54(l0): point = 2
   Insn 50(l0): point = 4
   Insn 47(l0): point = 6
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 22(l0): point = 13
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 19(l0): point = 19
   Insn 18(l0): point = 21
   Insn 17(l0): point = 23
   Insn 16(l0): point = 25
   Insn 15(l0): point = 27
   Insn 45(l0): point = 30
   Insn 44(l0): point = 32
   Insn 43(l0): point = 34
   Insn 39(l0): point = 37
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 32(l0): point = 48
   Insn 31(l0): point = 50
   Insn 30(l0): point = 52
   Insn 29(l0): point = 54
   Insn 63(l0): point = 57
   Insn 11(l0): point = 59
   Insn 10(l0): point = 61
   Insn 9(l0): point = 63
   Insn 8(l0): point = 65
   Insn 7(l0): point = 67
   Insn 3(l0): point = 69
   Insn 2(l0): point = 71
 a0(r70): [3..4]
 a1(r69 [0]): [5..6]
 a1(r69 [1]): [5..6]
 a2(r79): [33..34]
 a3(r78 [0]): [41..42]
 a3(r78 [1]): [41..42]
 a4(r68): [43..44]
 a5(r67): [45..46]
 a6(r77): [47..48]
 a7(r66): [47..50]
 a8(r65): [51..52]
 a9(r76): [53..54]
 a10(r75): [12..13]
 a11(r64): [12..15]
 a12(r63): [16..17]
 a13(r62): [18..19]
 a14(r74): [20..21]
 a15(r61): [20..23]
 a16(r60): [24..25]
 a17(r73): [26..27]
 a18(r72 [0]): [60..61]
 a18(r72 [1]): [60..61]
 a19(r59): [62..63]
 a20(r71): [64..65]
Compressing live ranges: from 74 to 36 - 48%
Ranges after the compression:
 a0(r70): [0..1]
 a1(r69 [0]): [2..3]
 a1(r69 [1]): [2..3]
 a2(r79): [16..17]
 a3(r78 [0]): [18..19]
 a3(r78 [1]): [18..19]
 a4(r68): [20..21]
 a5(r67): [22..23]
 a6(r77): [24..25]
 a7(r66): [24..25]
 a8(r65): [26..27]
 a9(r76): [28..29]
 a10(r75): [4..5]
 a11(r64): [4..5]
 a12(r63): [6..7]
 a13(r62): [8..9]
 a14(r74): [10..11]
 a15(r61): [10..11]
 a16(r60): [12..13]
 a17(r73): [14..15]
 a18(r72 [0]): [30..31]
 a18(r72 [1]): [30..31]
 a19(r59): [32..33]
 a20(r71): [34..35]
  regions=1, blocks=8, points=36
    allocnos=21 (big 3), copies=0, conflicts=0, ranges=24
Disposition:
   19:r59  l0     0   16:r60  l0     0   15:r61  l0     1   13:r62  l0     0
   12:r63  l0     0   11:r64  l0     9    8:r65  l0     0    7:r66  l0     1
    5:r67  l0     0    4:r68  l0     0    1:r69  l0     0    0:r70  l0     8
   20:r71  l0     0   18:r72  l0     0   17:r73  l0     0   14:r74  l0     0
   10:r75  l0     8    9:r76  l0     0    6:r77  l0     0    3:r78  l0     0
    2:r79  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_maxim

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 8[st] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,7u} r7={1d,7u} r8={1d,2u} r16={1d,6u} r17={7d,2u} r20={1d,23u,2e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} 
;;    total ref usage 122{48d,70u,4e} in 34{34 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 71 72
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])
        (reg:DI 5 di [ poly ])) mUtility.c:203 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ poly ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mUtility.c:203 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) mUtility.c:206 89 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 59 [ D.5111 ])
        (mem/f:DI (reg/f:DI 71) [0 *poly_5(D)+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 10 9 11 2 (set (reg:XF 72)
        (mem:XF (reg/f:DI 59 [ D.5111 ]) [0 *_6+0 S16 A128])) mUtility.c:206 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.5111 ])
        (nil)))
(insn 11 10 63 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 M+0 S16 A128])
        (reg:XF 72)) mUtility.c:206 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72)
        (nil)))
(jump_insn 63 11 64 2 (set (pc)
        (label_ref 40)) mUtility.c:206 650 {jump}
     (nil)
 -> 40)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 64 63 42)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 73 74 75
(code_label 42 64 14 3 68 "" [1 uses])
(note 14 42 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:206 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 60 [ D.5112 ])
        (sign_extend:DI (reg:SI 73))) mUtility.c:206 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 61 [ D.5112 ])
                (ashift:DI (reg:DI 60 [ D.5112 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:206 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5112 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg/f:DI 62 [ D.5113 ])
                (plus:DI (reg:DI 61 [ D.5112 ])
                    (reg/f:DI 74)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:206 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_DEAD (reg:DI 61 [ D.5112 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])
                        (reg:DI 61 [ D.5112 ]))
                    (nil))))))
(insn 20 19 21 3 (set (reg/f:DI 63 [ D.5111 ])
        (mem/f:DI (reg/f:DI 62 [ D.5113 ]) [0 *_11+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5113 ])
        (nil)))
(insn 21 20 22 3 (set (reg:XF 64 [ D.5114 ])
        (mem:XF (reg/f:DI 63 [ D.5111 ]) [0 *_12+0 S16 A128])) mUtility.c:206 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5111 ])
        (nil)))
(insn 22 21 23 3 (set (reg:XF 75)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 M+0 S16 A128])) mUtility.c:206 131 {*movxf_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 64 [ D.5114 ])
            (reg:XF 75))) mUtility.c:206 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 75)
        (expr_list:REG_DEAD (reg:XF 64 [ D.5114 ])
            (nil))))
(jump_insn 24 23 28 3 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) mUtility.c:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 37)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 66 67 68 76 77 78
(note 28 24 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:206 89 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 65 [ D.5112 ])
        (sign_extend:DI (reg:SI 76))) mUtility.c:206 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 66 [ D.5112 ])
                (ashift:DI (reg:DI 65 [ D.5112 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:206 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.5112 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 67 [ D.5113 ])
                (plus:DI (reg:DI 66 [ D.5112 ])
                    (reg/f:DI 77)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:206 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_DEAD (reg:DI 66 [ D.5112 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 poly+0 S8 A64])
                        (reg:DI 66 [ D.5112 ]))
                    (nil))))))
(insn 34 33 35 4 (set (reg/f:DI 68 [ D.5111 ])
        (mem/f:DI (reg/f:DI 67 [ D.5113 ]) [0 *_16+0 S8 A64])) mUtility.c:206 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.5113 ])
        (nil)))
(insn 35 34 36 4 (set (reg:XF 78)
        (mem:XF (reg/f:DI 68 [ D.5111 ]) [0 *_17+0 S16 A128])) mUtility.c:206 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.5111 ])
        (nil)))
(insn 36 35 37 4 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 M+0 S16 A128])
        (reg:XF 78)) mUtility.c:206 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 78)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 37 36 38 5 66 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:206 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 79
(code_label 40 39 41 6 65 "" [1 uses])
(note 41 40 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 44 6 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) mUtility.c:206 89 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 79)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 N+0 S4 A32]))) mUtility.c:206 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) mUtility.c:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 8 [st] 69 70
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 50 7 (set (reg:XF 69 [ D.5114 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 M+0 S16 A128])) mUtility.c:208 131 {*movxf_internal_rex64}
     (nil))
(insn 50 47 54 7 (set (reg:XF 70 [ <retval> ])
        (reg:XF 69 [ D.5114 ])) mUtility.c:208 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5114 ])
        (nil)))
(insn 54 50 57 7 (set (reg/i:XF 8 st)
        (reg:XF 70 [ <retval> ])) mUtility.c:209 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 70 [ <retval> ])
        (nil)))
(insn 57 54 0 7 (use (reg/i:XF 8 st)) mUtility.c:209 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function find_intersection (find_intersection, funcdef_no=23, decl_uid=1762, cgraph_uid=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 194.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 211.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r202,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a12 (r198,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r196,l0) best DIREG, allocno GENERAL_REGS
    r195: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r195,l0) best SIREG, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r193,l0) best SIREG, allocno GENERAL_REGS
    r192: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r192,l0) best DIREG, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r190,l0) best DIREG, allocno GENERAL_REGS
    r189: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r189,l0) best SIREG, allocno GENERAL_REGS
    r188: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a31 (r188,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r187: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r187,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r186: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r186,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r185: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r185,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r184: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r184,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r183: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r183,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r182: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r182,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r181: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r181,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r180: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r180,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r179: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r179,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r178: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r178,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r177: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r177,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r176: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a59 (r176,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r175: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a60 (r175,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r174: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a61 (r174,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r173: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r173,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r172: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a65 (r172,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r171: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a66 (r171,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r170: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a67 (r170,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r169: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a69 (r169,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r168: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a73 (r168,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r167: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a74 (r167,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r166: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a75 (r166,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r165: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a76 (r165,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r164: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a78 (r164,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r163: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a79 (r163,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r162: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a80 (r162,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r161: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a81 (r161,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r160: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a82 (r160,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r159: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a83 (r159,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r158: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a84 (r158,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r157: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a87 (r157,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r156: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a85 (r156,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r155: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a88 (r155,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r154: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a89 (r154,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r153: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a90 (r153,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r152: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a91 (r152,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r151: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a92 (r151,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r150: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a93 (r150,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r149: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a94 (r149,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r148: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a101 (r148,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r147: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a109 (r147,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r146: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a116 (r146,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r145: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a123 (r145,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r144: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a131 (r144,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r143: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r143,l0) best DIREG, allocno GENERAL_REGS
    r142: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r142,l0) best SIREG, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r140,l0) best SIREG, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r138,l0) best SIREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r136,l0) best SIREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a3 (r133,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a9 (r131,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a14 (r129,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r128: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a15 (r128,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r125,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r124: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r124,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r123: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r123,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r122: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r122,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r121: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r121,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r120: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r120,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r118,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r117: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r117,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r116: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r116,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r115: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r115,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r114: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r114,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r113: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a44 (r113,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r112: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r112,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r111: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r111,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r110: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r110,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r109: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r109,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r108: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r108,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r107: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r107,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r106: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r106,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r105: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r105,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r104: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a62 (r104,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a68 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a70 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a71 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a72 (r99,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r98: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a77 (r98,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r97: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a86 (r97,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a95 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a97 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a98 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a96 (r93,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a99 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a100 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a102 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a103 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a105 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a106 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a104 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a107 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a108 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a110 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a112 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a113 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a111 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a114 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a115 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a117 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a119 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a120 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a118 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a121 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a122 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a124 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a125 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a127 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a128 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a126 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a129 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a130 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a132 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a134 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a135 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a133 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a136 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a137 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r135,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r133,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r202,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r131,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a10(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r198,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a13(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r129,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r128,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a22(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r126,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a26(r125,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r124,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a28(r123,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r122,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a30(r121,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r188,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a32(r120,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a33(r187,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r119,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r118,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r117,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r114,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a38(r116,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r115,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r186,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r185,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r184,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r183,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a44(r113,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a45(r112,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r182,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r181,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r180,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a49(r179,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r111,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a51(r178,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r110,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r109,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r108,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r105,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r107,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r106,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r177,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r176,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a60(r175,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a61(r174,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a62(r104,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a63(r103,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a64(r173,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r172,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a66(r171,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a67(r170,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a68(r102,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a69(r169,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a70(r101,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a71(r100,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a72(r99,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a73(r168,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a74(r167,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a75(r166,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a76(r165,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a77(r98,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a78(r164,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a79(r163,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a80(r162,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a81(r161,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a82(r160,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a83(r159,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a84(r158,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a85(r156,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a86(r97,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a87(r157,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a88(r155,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a89(r154,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a90(r153,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a91(r152,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a92(r151,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a93(r150,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a94(r149,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a95(r96,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a96(r93,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a97(r95,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a98(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a99(r92,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a100(r91,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a101(r148,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a102(r90,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a103(r89,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a104(r86,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a105(r88,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a106(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a107(r85,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a108(r84,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a109(r147,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a110(r83,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a111(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a112(r82,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a113(r81,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a114(r79,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a115(r78,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a116(r146,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a117(r77,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a118(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a119(r76,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a120(r75,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a121(r73,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a122(r72,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a123(r145,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a124(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a125(r70,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a126(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a127(r69,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a128(r68,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a129(r66,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a130(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a131(r144,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a132(r64,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a133(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a134(r63,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a135(r62,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a136(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a137(r59,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a138(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a139(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a140(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a141(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a142(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a143(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a144(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a145(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 247(l0): point = 0
   Insn 244(l0): point = 2
   Insn 240(l0): point = 4
   Insn 237(l0): point = 6
   Insn 234(l0): point = 9
   Insn 233(l0): point = 11
   Insn 232(l0): point = 13
   Insn 231(l0): point = 15
   Insn 230(l0): point = 17
   Insn 229(l0): point = 19
   Insn 228(l0): point = 21
   Insn 227(l0): point = 23
   Insn 226(l0): point = 25
   Insn 225(l0): point = 27
   Insn 224(l0): point = 29
   Insn 223(l0): point = 31
   Insn 222(l0): point = 33
   Insn 221(l0): point = 35
   Insn 220(l0): point = 37
   Insn 219(l0): point = 39
   Insn 214(l0): point = 42
   Insn 213(l0): point = 44
   Insn 212(l0): point = 46
   Insn 211(l0): point = 48
   Insn 210(l0): point = 50
   Insn 209(l0): point = 52
   Insn 208(l0): point = 54
   Insn 207(l0): point = 56
   Insn 206(l0): point = 58
   Insn 205(l0): point = 60
   Insn 204(l0): point = 62
   Insn 203(l0): point = 64
   Insn 202(l0): point = 66
   Insn 201(l0): point = 68
   Insn 200(l0): point = 70
   Insn 199(l0): point = 72
   Insn 198(l0): point = 74
   Insn 197(l0): point = 76
   Insn 196(l0): point = 78
   Insn 195(l0): point = 80
   Insn 194(l0): point = 82
   Insn 193(l0): point = 84
   Insn 192(l0): point = 86
   Insn 191(l0): point = 88
   Insn 190(l0): point = 90
   Insn 189(l0): point = 92
   Insn 188(l0): point = 94
   Insn 187(l0): point = 96
   Insn 186(l0): point = 98
   Insn 185(l0): point = 100
   Insn 184(l0): point = 102
   Insn 183(l0): point = 104
   Insn 182(l0): point = 106
   Insn 181(l0): point = 108
   Insn 180(l0): point = 110
   Insn 179(l0): point = 112
   Insn 178(l0): point = 114
   Insn 177(l0): point = 116
   Insn 176(l0): point = 118
   Insn 175(l0): point = 120
   Insn 174(l0): point = 122
   Insn 173(l0): point = 124
   Insn 172(l0): point = 126
   Insn 171(l0): point = 128
   Insn 170(l0): point = 130
   Insn 169(l0): point = 132
   Insn 168(l0): point = 134
   Insn 167(l0): point = 136
   Insn 166(l0): point = 138
   Insn 165(l0): point = 140
   Insn 164(l0): point = 142
   Insn 163(l0): point = 144
   Insn 162(l0): point = 146
   Insn 161(l0): point = 148
   Insn 160(l0): point = 150
   Insn 159(l0): point = 152
   Insn 158(l0): point = 154
   Insn 157(l0): point = 156
   Insn 156(l0): point = 158
   Insn 155(l0): point = 160
   Insn 154(l0): point = 162
   Insn 153(l0): point = 164
   Insn 152(l0): point = 166
   Insn 151(l0): point = 168
   Insn 150(l0): point = 170
   Insn 149(l0): point = 172
   Insn 148(l0): point = 174
   Insn 147(l0): point = 176
   Insn 146(l0): point = 178
   Insn 145(l0): point = 180
   Insn 144(l0): point = 182
   Insn 143(l0): point = 184
   Insn 142(l0): point = 186
   Insn 141(l0): point = 188
   Insn 138(l0): point = 191
   Insn 137(l0): point = 193
   Insn 132(l0): point = 196
   Insn 131(l0): point = 198
   Insn 130(l0): point = 200
   Insn 129(l0): point = 202
   Insn 128(l0): point = 204
   Insn 127(l0): point = 206
   Insn 126(l0): point = 208
   Insn 125(l0): point = 210
   Insn 124(l0): point = 212
   Insn 123(l0): point = 214
   Insn 122(l0): point = 216
   Insn 119(l0): point = 219
   Insn 118(l0): point = 221
   Insn 113(l0): point = 224
   Insn 112(l0): point = 226
   Insn 111(l0): point = 228
   Insn 110(l0): point = 230
   Insn 109(l0): point = 232
   Insn 108(l0): point = 234
   Insn 107(l0): point = 236
   Insn 106(l0): point = 238
   Insn 105(l0): point = 240
   Insn 104(l0): point = 242
   Insn 103(l0): point = 244
   Insn 102(l0): point = 246
   Insn 101(l0): point = 248
   Insn 100(l0): point = 250
   Insn 99(l0): point = 252
   Insn 98(l0): point = 254
   Insn 97(l0): point = 256
   Insn 96(l0): point = 258
   Insn 95(l0): point = 260
   Insn 94(l0): point = 262
   Insn 93(l0): point = 264
   Insn 92(l0): point = 266
   Insn 91(l0): point = 268
   Insn 90(l0): point = 270
   Insn 89(l0): point = 272
   Insn 88(l0): point = 274
   Insn 87(l0): point = 276
   Insn 86(l0): point = 278
   Insn 85(l0): point = 280
   Insn 84(l0): point = 282
   Insn 83(l0): point = 284
   Insn 82(l0): point = 286
   Insn 81(l0): point = 288
   Insn 80(l0): point = 290
   Insn 79(l0): point = 292
   Insn 78(l0): point = 294
   Insn 77(l0): point = 296
   Insn 76(l0): point = 298
   Insn 75(l0): point = 300
   Insn 74(l0): point = 302
   Insn 73(l0): point = 304
   Insn 72(l0): point = 306
   Insn 71(l0): point = 308
   Insn 70(l0): point = 310
   Insn 69(l0): point = 312
   Insn 68(l0): point = 314
   Insn 67(l0): point = 316
   Insn 66(l0): point = 318
   Insn 65(l0): point = 320
   Insn 64(l0): point = 322
   Insn 63(l0): point = 324
   Insn 62(l0): point = 326
   Insn 61(l0): point = 328
   Insn 60(l0): point = 330
   Insn 59(l0): point = 332
   Insn 58(l0): point = 334
   Insn 57(l0): point = 336
   Insn 56(l0): point = 338
   Insn 55(l0): point = 340
   Insn 54(l0): point = 342
   Insn 53(l0): point = 344
   Insn 52(l0): point = 346
   Insn 51(l0): point = 348
   Insn 50(l0): point = 350
   Insn 49(l0): point = 352
   Insn 48(l0): point = 354
   Insn 47(l0): point = 356
   Insn 46(l0): point = 358
   Insn 45(l0): point = 360
   Insn 44(l0): point = 362
   Insn 43(l0): point = 364
   Insn 42(l0): point = 366
   Insn 41(l0): point = 368
   Insn 40(l0): point = 370
   Insn 39(l0): point = 372
   Insn 38(l0): point = 374
   Insn 37(l0): point = 376
   Insn 36(l0): point = 378
   Insn 35(l0): point = 380
   Insn 34(l0): point = 382
   Insn 33(l0): point = 384
   Insn 32(l0): point = 386
   Insn 31(l0): point = 388
   Insn 30(l0): point = 390
   Insn 29(l0): point = 392
   Insn 28(l0): point = 394
   Insn 27(l0): point = 396
   Insn 26(l0): point = 398
   Insn 25(l0): point = 400
   Insn 24(l0): point = 402
   Insn 23(l0): point = 404
   Insn 22(l0): point = 406
   Insn 21(l0): point = 408
   Insn 20(l0): point = 410
   Insn 19(l0): point = 412
   Insn 18(l0): point = 414
   Insn 17(l0): point = 416
   Insn 16(l0): point = 418
   Insn 15(l0): point = 420
   Insn 14(l0): point = 422
   Insn 13(l0): point = 424
   Insn 12(l0): point = 426
   Insn 11(l0): point = 428
   Insn 10(l0): point = 430
   Insn 6(l0): point = 432
   Insn 5(l0): point = 434
   Insn 4(l0): point = 436
   Insn 3(l0): point = 438
   Insn 2(l0): point = 440
 a0(r135): [3..4]
 a1(r134): [5..6]
 a2(r132): [10..15]
 a3(r133 [0]): [10..11]
 a3(r133 [1]): [10..11]
 a4(r204): [12..13]
 a5(r203): [16..17]
 a6(r202 [0]): [20..21]
 a6(r202 [1]): [20..21]
 a7(r201): [22..23]
 a8(r130): [26..31]
 a9(r131 [0]): [26..27]
 a9(r131 [1]): [26..27]
 a10(r200): [28..29]
 a11(r199): [32..33]
 a12(r198 [0]): [36..37]
 a12(r198 [1]): [36..37]
 a13(r197): [38..39]
 a14(r129): [45..46]
 a15(r128): [45..58]
 a16(r196): [51..54]
 a17(r195): [53..56]
 a18(r194): [63..66]
 a19(r193): [65..68]
 a20(r192): [73..76]
 a21(r127): [75..78]
 a22(r191): [79..80]
 a23(r190): [85..88]
 a24(r189): [87..90]
 a25(r126): [93..94]
 a26(r125): [95..96]
 a27(r124): [99..100]
 a28(r123): [101..102]
 a29(r122): [105..106]
 a30(r121): [107..108]
 a31(r188 [0]): [111..112]
 a31(r188 [1]): [111..112]
 a32(r120): [115..116]
 a33(r187): [117..118]
 a34(r119): [117..120]
 a35(r118): [121..122]
 a36(r117): [123..124]
 a37(r114): [123..138]
 a38(r116): [125..126]
 a39(r115): [125..132]
 a40(r186): [127..128]
 a41(r185): [127..130]
 a42(r184): [133..134]
 a43(r183): [133..136]
 a44(r113): [139..140]
 a45(r112): [139..146]
 a46(r182): [141..142]
 a47(r181): [141..144]
 a48(r180): [147..148]
 a49(r179): [147..150]
 a50(r111): [153..154]
 a51(r178): [155..156]
 a52(r110): [155..158]
 a53(r109): [159..160]
 a54(r108): [161..162]
 a55(r105): [161..176]
 a56(r107): [163..164]
 a57(r106): [163..170]
 a58(r177): [165..166]
 a59(r176): [165..168]
 a60(r175): [171..172]
 a61(r174): [171..174]
 a62(r104): [177..178]
 a63(r103): [177..184]
 a64(r173): [179..180]
 a65(r172): [179..182]
 a66(r171): [185..186]
 a67(r170): [185..188]
 a68(r102): [199..202]
 a69(r169): [199..200]
 a70(r101): [203..204]
 a71(r100): [205..206]
 a72(r99): [205..212]
 a73(r168): [207..208]
 a74(r167): [207..210]
 a75(r166): [213..214]
 a76(r165): [213..216]
 a77(r98): [227..230]
 a78(r164): [227..228]
 a79(r163 [0]): [235..236]
 a79(r163 [1]): [235..236]
 a80(r162 [0]): [239..240]
 a80(r162 [1]): [239..240]
 a81(r161 [0]): [243..244]
 a81(r161 [1]): [243..244]
 a82(r160 [0]): [247..248]
 a82(r160 [1]): [247..248]
 a83(r159 [0]): [251..252]
 a83(r159 [1]): [251..252]
 a84(r158 [0]): [255..256]
 a84(r158 [1]): [255..256]
 a85(r156): [259..260]
 a86(r97): [261..264]
 a87(r157): [261..262]
 a88(r155 [0]): [269..270]
 a88(r155 [1]): [269..270]
 a89(r154 [0]): [273..274]
 a89(r154 [1]): [273..274]
 a90(r153 [0]): [277..278]
 a90(r153 [1]): [277..278]
 a91(r152 [0]): [281..282]
 a91(r152 [1]): [281..282]
 a92(r151 [0]): [285..286]
 a92(r151 [1]): [285..286]
 a93(r150 [0]): [289..290]
 a93(r150 [1]): [289..290]
 a94(r149): [293..294]
 a95(r96): [295..296]
 a96(r93): [295..302]
 a97(r95): [297..298]
 a98(r94): [297..300]
 a99(r92): [303..304]
 a100(r91): [303..306]
 a101(r148): [309..310]
 a102(r90): [311..312]
 a103(r89): [313..314]
 a104(r86): [313..320]
 a105(r88): [315..316]
 a106(r87): [315..318]
 a107(r85): [321..322]
 a108(r84): [321..324]
 a109(r147): [327..328]
 a110(r83): [329..330]
 a111(r80): [329..336]
 a112(r82): [331..332]
 a113(r81): [331..334]
 a114(r79): [337..338]
 a115(r78): [337..340]
 a116(r146): [343..344]
 a117(r77): [345..346]
 a118(r74): [345..352]
 a119(r76): [347..348]
 a120(r75): [347..350]
 a121(r73): [353..354]
 a122(r72): [353..356]
 a123(r145): [359..360]
 a124(r71): [361..362]
 a125(r70): [363..364]
 a126(r67): [363..370]
 a127(r69): [365..366]
 a128(r68): [365..368]
 a129(r66): [371..372]
 a130(r65): [371..374]
 a131(r144): [377..378]
 a132(r64): [379..380]
 a133(r61): [379..386]
 a134(r63): [381..382]
 a135(r62): [381..384]
 a136(r60): [387..388]
 a137(r59): [387..390]
 a138(r143): [395..398]
 a139(r142): [397..400]
 a140(r141): [405..408]
 a141(r140): [407..410]
 a142(r139): [415..418]
 a143(r138): [417..420]
 a144(r137): [425..428]
 a145(r136): [427..430]
Compressing live ranges: from 443 to 190 - 42%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
 a2(r132): [4..7]
 a3(r133 [0]): [4..5]
 a3(r133 [1]): [4..5]
 a4(r204): [6..7]
 a5(r203): [8..9]
 a6(r202 [0]): [10..11]
 a6(r202 [1]): [10..11]
 a7(r201): [12..13]
 a8(r130): [14..17]
 a9(r131 [0]): [14..15]
 a9(r131 [1]): [14..15]
 a10(r200): [16..17]
 a11(r199): [18..19]
 a12(r198 [0]): [20..21]
 a12(r198 [1]): [20..21]
 a13(r197): [22..23]
 a14(r129): [24..25]
 a15(r128): [24..27]
 a16(r196): [26..27]
 a17(r195): [26..27]
 a18(r194): [28..29]
 a19(r193): [28..29]
 a20(r192): [30..31]
 a21(r127): [30..31]
 a22(r191): [32..33]
 a23(r190): [34..35]
 a24(r189): [34..35]
 a25(r126): [36..37]
 a26(r125): [38..39]
 a27(r124): [40..41]
 a28(r123): [42..43]
 a29(r122): [44..45]
 a30(r121): [46..47]
 a31(r188 [0]): [48..49]
 a31(r188 [1]): [48..49]
 a32(r120): [50..51]
 a33(r187): [52..53]
 a34(r119): [52..53]
 a35(r118): [54..55]
 a36(r117): [56..57]
 a37(r114): [56..63]
 a38(r116): [58..59]
 a39(r115): [58..61]
 a40(r186): [60..61]
 a41(r185): [60..61]
 a42(r184): [62..63]
 a43(r183): [62..63]
 a44(r113): [64..65]
 a45(r112): [64..67]
 a46(r182): [66..67]
 a47(r181): [66..67]
 a48(r180): [68..69]
 a49(r179): [68..69]
 a50(r111): [70..71]
 a51(r178): [72..73]
 a52(r110): [72..73]
 a53(r109): [74..75]
 a54(r108): [76..77]
 a55(r105): [76..83]
 a56(r107): [78..79]
 a57(r106): [78..81]
 a58(r177): [80..81]
 a59(r176): [80..81]
 a60(r175): [82..83]
 a61(r174): [82..83]
 a62(r104): [84..85]
 a63(r103): [84..87]
 a64(r173): [86..87]
 a65(r172): [86..87]
 a66(r171): [88..89]
 a67(r170): [88..89]
 a68(r102): [90..91]
 a69(r169): [90..91]
 a70(r101): [92..93]
 a71(r100): [94..95]
 a72(r99): [94..97]
 a73(r168): [96..97]
 a74(r167): [96..97]
 a75(r166): [98..99]
 a76(r165): [98..99]
 a77(r98): [100..101]
 a78(r164): [100..101]
 a79(r163 [0]): [102..103]
 a79(r163 [1]): [102..103]
 a80(r162 [0]): [104..105]
 a80(r162 [1]): [104..105]
 a81(r161 [0]): [106..107]
 a81(r161 [1]): [106..107]
 a82(r160 [0]): [108..109]
 a82(r160 [1]): [108..109]
 a83(r159 [0]): [110..111]
 a83(r159 [1]): [110..111]
 a84(r158 [0]): [112..113]
 a84(r158 [1]): [112..113]
 a85(r156): [114..115]
 a86(r97): [116..117]
 a87(r157): [116..117]
 a88(r155 [0]): [118..119]
 a88(r155 [1]): [118..119]
 a89(r154 [0]): [120..121]
 a89(r154 [1]): [120..121]
 a90(r153 [0]): [122..123]
 a90(r153 [1]): [122..123]
 a91(r152 [0]): [124..125]
 a91(r152 [1]): [124..125]
 a92(r151 [0]): [126..127]
 a92(r151 [1]): [126..127]
 a93(r150 [0]): [128..129]
 a93(r150 [1]): [128..129]
 a94(r149): [130..131]
 a95(r96): [132..133]
 a96(r93): [132..135]
 a97(r95): [134..135]
 a98(r94): [134..135]
 a99(r92): [136..137]
 a100(r91): [136..137]
 a101(r148): [138..139]
 a102(r90): [140..141]
 a103(r89): [142..143]
 a104(r86): [142..145]
 a105(r88): [144..145]
 a106(r87): [144..145]
 a107(r85): [146..147]
 a108(r84): [146..147]
 a109(r147): [148..149]
 a110(r83): [150..151]
 a111(r80): [150..153]
 a112(r82): [152..153]
 a113(r81): [152..153]
 a114(r79): [154..155]
 a115(r78): [154..155]
 a116(r146): [156..157]
 a117(r77): [158..159]
 a118(r74): [158..161]
 a119(r76): [160..161]
 a120(r75): [160..161]
 a121(r73): [162..163]
 a122(r72): [162..163]
 a123(r145): [164..165]
 a124(r71): [166..167]
 a125(r70): [168..169]
 a126(r67): [168..171]
 a127(r69): [170..171]
 a128(r68): [170..171]
 a129(r66): [172..173]
 a130(r65): [172..173]
 a131(r144): [174..175]
 a132(r64): [176..177]
 a133(r61): [176..179]
 a134(r63): [178..179]
 a135(r62): [178..179]
 a136(r60): [180..181]
 a137(r59): [180..181]
 a138(r143): [182..183]
 a139(r142): [182..183]
 a140(r141): [184..185]
 a141(r140): [184..185]
 a142(r139): [186..187]
 a143(r138): [186..187]
 a144(r137): [188..189]
 a145(r136): [188..189]
  regions=1, blocks=9, points=190
    allocnos=146 (big 17), copies=0, conflicts=0, ranges=163
Disposition:
  137:r59  l0     9  136:r60  l0     8  133:r61  l0     9  135:r62  l0    10
  134:r63  l0     8  132:r64  l0     8  130:r65  l0     9  129:r66  l0     8
  126:r67  l0     9  128:r68  l0    10  127:r69  l0     8  125:r70  l0     8
  124:r71  l0     8  122:r72  l0     9  121:r73  l0     8  118:r74  l0     9
  120:r75  l0    10  119:r76  l0     8  117:r77  l0     8  115:r78  l0     9
  114:r79  l0     8  111:r80  l0     9  113:r81  l0    10  112:r82  l0     8
  110:r83  l0     8  108:r84  l0     9  107:r85  l0     8  104:r86  l0     9
  106:r87  l0    10  105:r88  l0     8  103:r89  l0     8  102:r90  l0     8
  100:r91  l0     9   99:r92  l0     8   96:r93  l0     9   98:r94  l0    10
   97:r95  l0     8   95:r96  l0     8   86:r97  l0     8   77:r98  l0     8
   72:r99  l0     9   71:r100 l0     8   70:r101 l0     8   68:r102 l0     8
   63:r103 l0     9   62:r104 l0     8   55:r105 l0     9   57:r106 l0    10
   56:r107 l0     8   54:r108 l0     8   53:r109 l0     8   52:r110 l0     9
   50:r111 l0     8   45:r112 l0     9   44:r113 l0     8   37:r114 l0     9
   39:r115 l0    10   38:r116 l0     8   36:r117 l0     8   35:r118 l0     8
   34:r119 l0     9   32:r120 l0     8   30:r121 l0     8   29:r122 l0     8
   28:r123 l0     8   27:r124 l0     8   26:r125 l0     8   25:r126 l0     8
   21:r127 l0     1   15:r128 l0   mem   14:r129 l0     8    8:r130 l0     2
    9:r131 l0     0    2:r132 l0     2    3:r133 l0     0    1:r134 l0     0
    0:r135 l0     0  145:r136 l0     1  144:r137 l0     0  143:r138 l0     1
  142:r139 l0     0  141:r140 l0     1  140:r141 l0     0  139:r142 l0     1
  138:r143 l0     0  131:r144 l0     8  123:r145 l0     8  116:r146 l0     8
  109:r147 l0     8  101:r148 l0     8   94:r149 l0     8   93:r150 l0     0
   92:r151 l0     0   91:r152 l0     0   90:r153 l0     0   89:r154 l0     0
   88:r155 l0     0   85:r156 l0     8   87:r157 l0     9   84:r158 l0     0
   83:r159 l0     0   82:r160 l0     0   81:r161 l0     0   80:r162 l0     0
   79:r163 l0     0   78:r164 l0     9   76:r165 l0     9   75:r166 l0     8
   74:r167 l0    10   73:r168 l0     8   69:r169 l0     9   67:r170 l0     9
   66:r171 l0     8   65:r172 l0    10   64:r173 l0     8   61:r174 l0    10
   60:r175 l0     8   59:r176 l0    11   58:r177 l0     8   51:r178 l0     8
   49:r179 l0     9   48:r180 l0     8   47:r181 l0    10   46:r182 l0     8
   43:r183 l0    10   42:r184 l0     8   41:r185 l0    11   40:r186 l0     8
   33:r187 l0     8   31:r188 l0     0   24:r189 l0     1   23:r190 l0     0
   22:r191 l0     0   20:r192 l0     0   19:r193 l0     1   18:r194 l0     0
   17:r195 l0     1   16:r196 l0     0   13:r197 l0     0   12:r198 l0     0
   11:r199 l0     0   10:r200 l0     0    7:r201 l0     0    6:r202 l0     0
    5:r203 l0     0    4:r204 l0     0
+++Costs: overall 0, reg -20, mem 20, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


find_intersection

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 37[r8]
;;  ref usage 	r0={14d,2u} r1={13d,1u} r2={13d,1u} r4={21d,9u} r5={23d,11u} r6={1d,8u} r7={1d,44u} r8={12d,4u} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,7u} r17={28d,3u} r18={12d} r19={12d} r20={1d,112u,3e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d,1u} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} 
;;    total ref usage 1080{728d,349u,3e} in 218{206 regular + 12 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [0 p0+0 S8 A64])
        (reg:DI 5 di [ p0 ])) mUtility.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p0 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 p1+0 S8 A64])
        (reg:DI 4 si [ p1 ])) mUtility.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ p1 ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -440 [0xfffffffffffffe48])) [0 p2+0 S8 A64])
        (reg:DI 1 dx [ p2 ])) mUtility.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p2 ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 p3+0 S8 A64])
        (reg:DI 2 cx [ p3 ])) mUtility.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ p3 ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])
        (reg:DI 37 r8 [ p ])) mUtility.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ p ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:216 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [0 p0+0 S8 A64])) mUtility.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 136)) mUtility.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 137)) mUtility.c:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:216 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:217 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 p1+0 S8 A64])) mUtility.c:217 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 138)) mUtility.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 138)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 139)) mUtility.c:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:218 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -440 [0xfffffffffffffe48])) [0 p2+0 S8 A64])) mUtility.c:218 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 140)) mUtility.c:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 141)) mUtility.c:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:218 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:219 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 p3+0 S8 A64])) mUtility.c:219 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 142)) mUtility.c:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 143)) mUtility.c:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:219 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 2 (set (reg:XF 59 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 P0+16 S16 A128])) mUtility.c:221 131 {*movxf_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg:XF 60 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 P1+32 S16 A128])) mUtility.c:221 131 {*movxf_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:XF 61 [ D.5115 ])
        (mult:XF (reg:XF 59 [ D.5115 ])
            (reg:XF 60 [ D.5115 ]))) mUtility.c:221 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 59 [ D.5115 ])
            (nil))))
(insn 33 32 34 2 (set (reg:XF 62 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 P1+16 S16 A128])) mUtility.c:221 131 {*movxf_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg:XF 63 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 P0+32 S16 A128])) mUtility.c:221 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:XF 64 [ D.5115 ])
        (mult:XF (reg:XF 62 [ D.5115 ])
            (reg:XF 63 [ D.5115 ]))) mUtility.c:221 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 63 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 62 [ D.5115 ])
            (nil))))
(insn 36 35 37 2 (set (reg:XF 144)
        (minus:XF (reg:XF 61 [ D.5115 ])
            (reg:XF 64 [ D.5115 ]))) mUtility.c:221 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 61 [ D.5115 ])
            (nil))))
(insn 37 36 38 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])
        (reg:XF 144)) mUtility.c:221 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 144)
        (nil)))
(insn 38 37 39 2 (set (reg:XF 65 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 P0+0 S16 A128])) mUtility.c:222 131 {*movxf_internal_rex64}
     (nil))
(insn 39 38 40 2 (set (reg:XF 66 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 P1+32 S16 A128])) mUtility.c:222 131 {*movxf_internal_rex64}
     (nil))
(insn 40 39 41 2 (set (reg:XF 67 [ D.5115 ])
        (mult:XF (reg:XF 65 [ D.5115 ])
            (reg:XF 66 [ D.5115 ]))) mUtility.c:222 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5115 ])
            (nil))))
(insn 41 40 42 2 (set (reg:XF 68 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 P1+0 S16 A128])) mUtility.c:222 131 {*movxf_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:XF 69 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 P0+32 S16 A128])) mUtility.c:222 131 {*movxf_internal_rex64}
     (nil))
(insn 43 42 44 2 (set (reg:XF 70 [ D.5115 ])
        (mult:XF (reg:XF 68 [ D.5115 ])
            (reg:XF 69 [ D.5115 ]))) mUtility.c:222 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 68 [ D.5115 ])
            (nil))))
(insn 44 43 45 2 (set (reg:XF 71 [ D.5115 ])
        (minus:XF (reg:XF 67 [ D.5115 ])
            (reg:XF 70 [ D.5115 ]))) mUtility.c:222 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 70 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 67 [ D.5115 ])
            (nil))))
(insn 45 44 46 2 (set (reg:XF 145)
        (neg:XF (reg:XF 71 [ D.5115 ]))) mUtility.c:222 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5115 ])
        (nil)))
(insn 46 45 47 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])
        (reg:XF 145)) mUtility.c:222 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 145)
        (nil)))
(insn 47 46 48 2 (set (reg:XF 72 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 P0+0 S16 A128])) mUtility.c:223 131 {*movxf_internal_rex64}
     (nil))
(insn 48 47 49 2 (set (reg:XF 73 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 P1+16 S16 A128])) mUtility.c:223 131 {*movxf_internal_rex64}
     (nil))
(insn 49 48 50 2 (set (reg:XF 74 [ D.5115 ])
        (mult:XF (reg:XF 72 [ D.5115 ])
            (reg:XF 73 [ D.5115 ]))) mUtility.c:223 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 72 [ D.5115 ])
            (nil))))
(insn 50 49 51 2 (set (reg:XF 75 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 P1+0 S16 A128])) mUtility.c:223 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (reg:XF 76 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 P0+16 S16 A128])) mUtility.c:223 131 {*movxf_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:XF 77 [ D.5115 ])
        (mult:XF (reg:XF 75 [ D.5115 ])
            (reg:XF 76 [ D.5115 ]))) mUtility.c:223 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 75 [ D.5115 ])
            (nil))))
(insn 53 52 54 2 (set (reg:XF 146)
        (minus:XF (reg:XF 74 [ D.5115 ])
            (reg:XF 77 [ D.5115 ]))) mUtility.c:223 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5115 ])
            (nil))))
(insn 54 53 55 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 c+0 S16 A128])
        (reg:XF 146)) mUtility.c:223 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 146)
        (nil)))
(insn 55 54 56 2 (set (reg:XF 78 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 P2+16 S16 A128])) mUtility.c:224 131 {*movxf_internal_rex64}
     (nil))
(insn 56 55 57 2 (set (reg:XF 79 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 P3+32 S16 A128])) mUtility.c:224 131 {*movxf_internal_rex64}
     (nil))
(insn 57 56 58 2 (set (reg:XF 80 [ D.5115 ])
        (mult:XF (reg:XF 78 [ D.5115 ])
            (reg:XF 79 [ D.5115 ]))) mUtility.c:224 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 78 [ D.5115 ])
            (nil))))
(insn 58 57 59 2 (set (reg:XF 81 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 P3+16 S16 A128])) mUtility.c:224 131 {*movxf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (reg:XF 82 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 P2+32 S16 A128])) mUtility.c:224 131 {*movxf_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:XF 83 [ D.5115 ])
        (mult:XF (reg:XF 81 [ D.5115 ])
            (reg:XF 82 [ D.5115 ]))) mUtility.c:224 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 82 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 81 [ D.5115 ])
            (nil))))
(insn 61 60 62 2 (set (reg:XF 147)
        (minus:XF (reg:XF 80 [ D.5115 ])
            (reg:XF 83 [ D.5115 ]))) mUtility.c:224 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 83 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 80 [ D.5115 ])
            (nil))))
(insn 62 61 63 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])
        (reg:XF 147)) mUtility.c:224 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 147)
        (nil)))
(insn 63 62 64 2 (set (reg:XF 84 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 P2+0 S16 A128])) mUtility.c:225 131 {*movxf_internal_rex64}
     (nil))
(insn 64 63 65 2 (set (reg:XF 85 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 P3+32 S16 A128])) mUtility.c:225 131 {*movxf_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (reg:XF 86 [ D.5115 ])
        (mult:XF (reg:XF 84 [ D.5115 ])
            (reg:XF 85 [ D.5115 ]))) mUtility.c:225 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 85 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 84 [ D.5115 ])
            (nil))))
(insn 66 65 67 2 (set (reg:XF 87 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 P3+0 S16 A128])) mUtility.c:225 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (reg:XF 88 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 P2+32 S16 A128])) mUtility.c:225 131 {*movxf_internal_rex64}
     (nil))
(insn 68 67 69 2 (set (reg:XF 89 [ D.5115 ])
        (mult:XF (reg:XF 87 [ D.5115 ])
            (reg:XF 88 [ D.5115 ]))) mUtility.c:225 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 87 [ D.5115 ])
            (nil))))
(insn 69 68 70 2 (set (reg:XF 90 [ D.5115 ])
        (minus:XF (reg:XF 86 [ D.5115 ])
            (reg:XF 89 [ D.5115 ]))) mUtility.c:225 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 86 [ D.5115 ])
            (nil))))
(insn 70 69 71 2 (set (reg:XF 148)
        (neg:XF (reg:XF 90 [ D.5115 ]))) mUtility.c:225 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 90 [ D.5115 ])
        (nil)))
(insn 71 70 72 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])
        (reg:XF 148)) mUtility.c:225 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 148)
        (nil)))
(insn 72 71 73 2 (set (reg:XF 91 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 P2+0 S16 A128])) mUtility.c:226 131 {*movxf_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (reg:XF 92 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 P3+16 S16 A128])) mUtility.c:226 131 {*movxf_internal_rex64}
     (nil))
(insn 74 73 75 2 (set (reg:XF 93 [ D.5115 ])
        (mult:XF (reg:XF 91 [ D.5115 ])
            (reg:XF 92 [ D.5115 ]))) mUtility.c:226 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 92 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 91 [ D.5115 ])
            (nil))))
(insn 75 74 76 2 (set (reg:XF 94 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 P3+0 S16 A128])) mUtility.c:226 131 {*movxf_internal_rex64}
     (nil))
(insn 76 75 77 2 (set (reg:XF 95 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 P2+16 S16 A128])) mUtility.c:226 131 {*movxf_internal_rex64}
     (nil))
(insn 77 76 78 2 (set (reg:XF 96 [ D.5115 ])
        (mult:XF (reg:XF 94 [ D.5115 ])
            (reg:XF 95 [ D.5115 ]))) mUtility.c:226 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 95 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 94 [ D.5115 ])
            (nil))))
(insn 78 77 79 2 (set (reg:XF 149)
        (minus:XF (reg:XF 93 [ D.5115 ])
            (reg:XF 96 [ D.5115 ]))) mUtility.c:226 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 96 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 93 [ D.5115 ])
            (nil))))
(insn 79 78 80 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 f+0 S16 A128])
        (reg:XF 149)) mUtility.c:226 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 149)
        (nil)))
(insn 80 79 81 2 (set (reg:XF 150)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 f+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 81 80 82 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:XF 150)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 150)
        (nil)))
(insn 82 81 83 2 (set (reg:XF 151)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 83 82 84 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:XF 151)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 151)
        (nil)))
(insn 84 83 85 2 (set (reg:XF 152)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 85 84 86 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:XF 152)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 152)
        (nil)))
(insn 86 85 87 2 (set (reg:XF 153)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 c+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 87 86 88 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S16 A128])
        (reg:XF 153)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 153)
        (nil)))
(insn 88 87 89 2 (set (reg:XF 154)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 154)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 154)
        (nil)))
(insn 90 89 91 2 (set (reg:XF 155)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (nil))
(insn 91 90 92 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 155)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 155)
        (nil)))
(call_insn 92 91 93 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_den") [flags 0x3]  <function_decl 0x7f4452bcd800 _den>) [0 _den S1 A8])
            (const_int 96 [0x60]))) mUtility.c:231 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                            (const_int 32 [0x20])) [0  S16 A128]))
                (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                (const_int 48 [0x30])) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 64 [0x40])) [0  S16 A128]))
                        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                        (const_int 80 [0x50])) [0  S16 A128]))
                            (nil))))))))
(insn 93 92 94 2 (set (reg:XF 97 [ D.5115 ])
        (reg:XF 8 st)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 94 93 95 2 (set (reg:XF 157)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 95 94 96 2 (set (reg:XF 156)
        (div:XF (reg:XF 157)
            (reg:XF 97 [ D.5115 ]))) mUtility.c:231 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 157)
        (expr_list:REG_DEAD (reg:XF 97 [ D.5115 ])
            (nil))))
(insn 96 95 97 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 t+0 S16 A128])
        (reg:XF 156)) mUtility.c:231 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 156)
        (nil)))
(insn 97 96 98 2 (set (reg:XF 158)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 f+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 98 97 99 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:XF 158)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 158)
        (nil)))
(insn 99 98 100 2 (set (reg:XF 159)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 100 99 101 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:XF 159)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 159)
        (nil)))
(insn 101 100 102 2 (set (reg:XF 160)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 102 101 103 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:XF 160)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 160)
        (nil)))
(insn 103 102 104 2 (set (reg:XF 161)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 c+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 104 103 105 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S16 A128])
        (reg:XF 161)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 161)
        (nil)))
(insn 105 104 106 2 (set (reg:XF 162)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 106 105 107 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 162)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 162)
        (nil)))
(insn 107 106 108 2 (set (reg:XF 163)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (nil))
(insn 108 107 109 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 163)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 163)
        (nil)))
(call_insn 109 108 110 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_den") [flags 0x3]  <function_decl 0x7f4452bcd800 _den>) [0 _den S1 A8])
            (const_int 96 [0x60]))) mUtility.c:233 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                            (const_int 32 [0x20])) [0  S16 A128]))
                (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                (const_int 48 [0x30])) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 64 [0x40])) [0  S16 A128]))
                        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                        (const_int 80 [0x50])) [0  S16 A128]))
                            (nil))))))))
(insn 110 109 111 2 (set (reg:XF 98 [ D.5115 ])
        (reg:XF 8 st)) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 111 110 112 2 (set (reg:XF 164)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:233 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 112 111 113 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 164)
            (reg:XF 98 [ D.5115 ]))) mUtility.c:233 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 164)
        (expr_list:REG_DEAD (reg:XF 98 [ D.5115 ])
            (nil))))
(jump_insn 113 112 117 2 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 120)
            (pc))) mUtility.c:233 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 120)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 117 113 118 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f4452922260 *.LC10>)) mUtility.c:233 87 {*movdi_internal_rex64}
     (nil))
(call_insn 119 118 120 3 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x3]  <function_decl 0x7f4452e3c300 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mUtility.c:233 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 102 165 166 167 168 169
(code_label 120 119 121 4 72 "" [1 uses])
(note 121 120 122 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 4 (set (reg:XF 165)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:234 131 {*movxf_internal_rex64}
     (nil))
(insn 123 122 124 4 (set (reg:XF 166)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:234 131 {*movxf_internal_rex64}
     (nil))
(insn 124 123 125 4 (set (reg:XF 99 [ D.5115 ])
        (mult:XF (reg:XF 165)
            (reg:XF 166))) mUtility.c:234 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 166)
        (expr_list:REG_DEAD (reg:XF 165)
            (nil))))
(insn 125 124 126 4 (set (reg:XF 167)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:234 131 {*movxf_internal_rex64}
     (nil))
(insn 126 125 127 4 (set (reg:XF 168)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:234 131 {*movxf_internal_rex64}
     (nil))
(insn 127 126 128 4 (set (reg:XF 100 [ D.5115 ])
        (mult:XF (reg:XF 167)
            (reg:XF 168))) mUtility.c:234 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 168)
        (expr_list:REG_DEAD (reg:XF 167)
            (nil))))
(insn 128 127 129 4 (set (reg:XF 101 [ D.5115 ])
        (minus:XF (reg:XF 99 [ D.5115 ])
            (reg:XF 100 [ D.5115 ]))) mUtility.c:234 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 100 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 99 [ D.5115 ])
            (nil))))
(insn 129 128 130 4 (set (reg:XF 102 [ D.5115 ])
        (abs:XF (reg:XF 101 [ D.5115 ]))) mUtility.c:234 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 101 [ D.5115 ])
        (nil)))
(insn 130 129 131 4 (set (reg:XF 169)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:234 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 131 130 132 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 169)
            (reg:XF 102 [ D.5115 ]))) mUtility.c:234 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 169)
        (expr_list:REG_DEAD (reg:XF 102 [ D.5115 ])
            (nil))))
(jump_insn 132 131 136 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) mUtility.c:234 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 139)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 136 132 137 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f44529222f8 *.LC11>)) mUtility.c:234 87 {*movdi_internal_rex64}
     (nil))
(call_insn 138 137 139 5 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x3]  <function_decl 0x7f4452e3c300 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mUtility.c:234 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196
(code_label 139 138 140 6 74 "" [1 uses])
(note 140 139 141 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 6 (set (reg:XF 170)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 142 141 143 6 (set (reg:XF 171)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 f+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 143 142 144 6 (set (reg:XF 103 [ D.5115 ])
        (mult:XF (reg:XF 170)
            (reg:XF 171))) mUtility.c:236 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 171)
        (expr_list:REG_DEAD (reg:XF 170)
            (nil))))
(insn 144 143 145 6 (set (reg:XF 172)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 c+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 145 144 146 6 (set (reg:XF 173)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 146 145 147 6 (set (reg:XF 104 [ D.5115 ])
        (mult:XF (reg:XF 172)
            (reg:XF 173))) mUtility.c:236 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 173)
        (expr_list:REG_DEAD (reg:XF 172)
            (nil))))
(insn 147 146 148 6 (set (reg:XF 105 [ D.5115 ])
        (minus:XF (reg:XF 103 [ D.5115 ])
            (reg:XF 104 [ D.5115 ]))) mUtility.c:236 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 104 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 103 [ D.5115 ])
            (nil))))
(insn 148 147 149 6 (set (reg:XF 174)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 149 148 150 6 (set (reg:XF 175)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 150 149 151 6 (set (reg:XF 106 [ D.5115 ])
        (mult:XF (reg:XF 174)
            (reg:XF 175))) mUtility.c:236 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 175)
        (expr_list:REG_DEAD (reg:XF 174)
            (nil))))
(insn 151 150 152 6 (set (reg:XF 176)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 152 151 153 6 (set (reg:XF 177)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 153 152 154 6 (set (reg:XF 107 [ D.5115 ])
        (mult:XF (reg:XF 176)
            (reg:XF 177))) mUtility.c:236 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 177)
        (expr_list:REG_DEAD (reg:XF 176)
            (nil))))
(insn 154 153 155 6 (set (reg:XF 108 [ D.5115 ])
        (minus:XF (reg:XF 106 [ D.5115 ])
            (reg:XF 107 [ D.5115 ]))) mUtility.c:236 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 107 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 106 [ D.5115 ])
            (nil))))
(insn 155 154 156 6 (set (reg:XF 109 [ D.5115 ])
        (div:XF (reg:XF 105 [ D.5115 ])
            (reg:XF 108 [ D.5115 ]))) mUtility.c:236 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 108 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 105 [ D.5115 ])
            (nil))))
(insn 156 155 157 6 (set (reg:XF 110 [ D.5115 ])
        (neg:XF (reg:XF 109 [ D.5115 ]))) mUtility.c:236 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 109 [ D.5115 ])
        (nil)))
(insn 157 156 158 6 (set (reg:XF 178)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 t+0 S16 A128])) mUtility.c:236 131 {*movxf_internal_rex64}
     (nil))
(insn 158 157 159 6 (set (reg:XF 111 [ D.5115 ])
        (mult:XF (reg:XF 110 [ D.5115 ])
            (reg:XF 178))) mUtility.c:236 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 178)
        (expr_list:REG_DEAD (reg:XF 110 [ D.5115 ])
            (nil))))
(insn 159 158 160 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 X1+0 S16 A128])
        (reg:XF 111 [ D.5115 ])) mUtility.c:236 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 111 [ D.5115 ])
        (nil)))
(insn 160 159 161 6 (set (reg:XF 179)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 c+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 161 160 162 6 (set (reg:XF 180)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 162 161 163 6 (set (reg:XF 112 [ D.5115 ])
        (mult:XF (reg:XF 179)
            (reg:XF 180))) mUtility.c:237 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 180)
        (expr_list:REG_DEAD (reg:XF 179)
            (nil))))
(insn 163 162 164 6 (set (reg:XF 181)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 164 163 165 6 (set (reg:XF 182)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 f+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 165 164 166 6 (set (reg:XF 113 [ D.5115 ])
        (mult:XF (reg:XF 181)
            (reg:XF 182))) mUtility.c:237 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 182)
        (expr_list:REG_DEAD (reg:XF 181)
            (nil))))
(insn 166 165 167 6 (set (reg:XF 114 [ D.5115 ])
        (minus:XF (reg:XF 112 [ D.5115 ])
            (reg:XF 113 [ D.5115 ]))) mUtility.c:237 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 113 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 112 [ D.5115 ])
            (nil))))
(insn 167 166 168 6 (set (reg:XF 183)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 b+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 168 167 169 6 (set (reg:XF 184)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 d+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 169 168 170 6 (set (reg:XF 115 [ D.5115 ])
        (mult:XF (reg:XF 183)
            (reg:XF 184))) mUtility.c:237 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 184)
        (expr_list:REG_DEAD (reg:XF 183)
            (nil))))
(insn 170 169 171 6 (set (reg:XF 185)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 a+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 171 170 172 6 (set (reg:XF 186)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 e+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 172 171 173 6 (set (reg:XF 116 [ D.5115 ])
        (mult:XF (reg:XF 185)
            (reg:XF 186))) mUtility.c:237 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 186)
        (expr_list:REG_DEAD (reg:XF 185)
            (nil))))
(insn 173 172 174 6 (set (reg:XF 117 [ D.5115 ])
        (minus:XF (reg:XF 115 [ D.5115 ])
            (reg:XF 116 [ D.5115 ]))) mUtility.c:237 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 116 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 115 [ D.5115 ])
            (nil))))
(insn 174 173 175 6 (set (reg:XF 118 [ D.5115 ])
        (div:XF (reg:XF 114 [ D.5115 ])
            (reg:XF 117 [ D.5115 ]))) mUtility.c:237 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 117 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 114 [ D.5115 ])
            (nil))))
(insn 175 174 176 6 (set (reg:XF 119 [ D.5115 ])
        (neg:XF (reg:XF 118 [ D.5115 ]))) mUtility.c:237 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 118 [ D.5115 ])
        (nil)))
(insn 176 175 177 6 (set (reg:XF 187)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 t+0 S16 A128])) mUtility.c:237 131 {*movxf_internal_rex64}
     (nil))
(insn 177 176 178 6 (set (reg:XF 120 [ D.5115 ])
        (mult:XF (reg:XF 119 [ D.5115 ])
            (reg:XF 187))) mUtility.c:237 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 187)
        (expr_list:REG_DEAD (reg:XF 119 [ D.5115 ])
            (nil))))
(insn 178 177 179 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 X1+16 S16 A128])
        (reg:XF 120 [ D.5115 ])) mUtility.c:237 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 120 [ D.5115 ])
        (nil)))
(insn 179 178 180 6 (set (reg:XF 188)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 t+0 S16 A128])) mUtility.c:238 131 {*movxf_internal_rex64}
     (nil))
(insn 180 179 181 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 X1+32 S16 A128])
        (reg:XF 188)) mUtility.c:238 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 188)
        (nil)))
(insn 181 180 182 6 (set (reg:XF 121 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 X1+0 S16 A128])) mUtility.c:240 131 {*movxf_internal_rex64}
     (nil))
(insn 182 181 183 6 (set (reg:XF 122 [ D.5115 ])
        (neg:XF (reg:XF 121 [ D.5115 ]))) mUtility.c:240 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 121 [ D.5115 ])
        (nil)))
(insn 183 182 184 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 X2+0 S16 A128])
        (reg:XF 122 [ D.5115 ])) mUtility.c:240 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 122 [ D.5115 ])
        (nil)))
(insn 184 183 185 6 (set (reg:XF 123 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 X1+16 S16 A128])) mUtility.c:241 131 {*movxf_internal_rex64}
     (nil))
(insn 185 184 186 6 (set (reg:XF 124 [ D.5115 ])
        (neg:XF (reg:XF 123 [ D.5115 ]))) mUtility.c:241 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 123 [ D.5115 ])
        (nil)))
(insn 186 185 187 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 X2+16 S16 A128])
        (reg:XF 124 [ D.5115 ])) mUtility.c:241 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 124 [ D.5115 ])
        (nil)))
(insn 187 186 188 6 (set (reg:XF 125 [ D.5115 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 X1+32 S16 A128])) mUtility.c:242 131 {*movxf_internal_rex64}
     (nil))
(insn 188 187 189 6 (set (reg:XF 126 [ D.5115 ])
        (neg:XF (reg:XF 125 [ D.5115 ]))) mUtility.c:242 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 125 [ D.5115 ])
        (nil)))
(insn 189 188 190 6 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 X2+32 S16 A128])
        (reg:XF 126 [ D.5115 ])) mUtility.c:242 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 126 [ D.5115 ])
        (nil)))
(insn 190 189 191 6 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:244 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 6 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:244 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 192 191 193 6 (set (reg:DI 4 si)
        (reg:DI 189)) mUtility.c:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 193 192 194 6 (set (reg:DI 5 di)
        (reg:DI 190)) mUtility.c:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(call_insn 194 193 195 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_sphere") [flags 0x3]  <function_decl 0x7f4452bbaa00 _to_sphere>) [0 _to_sphere S1 A8])
            (const_int 0 [0]))) mUtility.c:244 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 195 194 196 6 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:245 87 {*movdi_internal_rex64}
     (nil))
(insn 196 195 197 6 (parallel [
            (set (reg/f:DI 127 [ D.5116 ])
                (plus:DI (reg/f:DI 191)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:245 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 197 196 198 6 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:245 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 198 197 199 6 (set (reg:DI 4 si)
        (reg/f:DI 127 [ D.5116 ])) mUtility.c:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.5116 ])
        (nil)))
(insn 199 198 200 6 (set (reg:DI 5 di)
        (reg:DI 192)) mUtility.c:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(call_insn 200 199 201 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_sphere") [flags 0x3]  <function_decl 0x7f4452bbaa00 _to_sphere>) [0 _to_sphere S1 A8])
            (const_int 0 [0]))) mUtility.c:245 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 201 200 202 6 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:247 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 202 201 203 6 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:247 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 203 202 204 6 (set (reg:DI 4 si)
        (reg:DI 193)) mUtility.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 204 203 205 6 (set (reg:DI 5 di)
        (reg:DI 194)) mUtility.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 205 204 206 6 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("euclid_dist") [flags 0x3]  <function_decl 0x7f4452bcd400 euclid_dist>) [0 euclid_dist S1 A8])
            (const_int 0 [0]))) mUtility.c:247 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 206 205 207 6 (set (reg:XF 128 [ D.5115 ])
        (reg:XF 8 st)) mUtility.c:247 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 207 206 208 6 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:247 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 208 207 209 6 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:247 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 209 208 210 6 (set (reg:DI 4 si)
        (reg:DI 195)) mUtility.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(insn 210 209 211 6 (set (reg:DI 5 di)
        (reg:DI 196)) mUtility.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 196)
        (nil)))
(call_insn 211 210 212 6 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("euclid_dist") [flags 0x3]  <function_decl 0x7f4452bcd400 euclid_dist>) [0 euclid_dist S1 A8])
            (const_int 0 [0]))) mUtility.c:247 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 212 211 213 6 (set (reg:XF 129 [ D.5115 ])
        (reg:XF 8 st)) mUtility.c:247 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 213 212 214 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 128 [ D.5115 ])
            (reg:XF 129 [ D.5115 ]))) mUtility.c:247 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 129 [ D.5115 ])
        (expr_list:REG_DEAD (reg:XF 128 [ D.5115 ])
            (nil))))
(jump_insn 214 213 218 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 235)
            (pc))) mUtility.c:247 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 235)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 132 133 197 198 199 200 201 202 203 204
(note 218 214 219 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 7 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 220 219 221 7 (set (reg:XF 198)
        (mem:XF (plus:DI (reg/f:DI 197)
                (const_int 32 [0x20])) [0 MEM[(long double *)p_80(D) + 32B]+0 S16 A128])) mUtility.c:249 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (nil)))
(insn 221 220 222 7 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 comodo+0 S16 A128])
        (reg:XF 198)) mUtility.c:249 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 198)
        (nil)))
(insn 222 221 223 7 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:250 87 {*movdi_internal_rex64}
     (nil))
(insn 223 222 224 7 (parallel [
            (set (reg/f:DI 130 [ D.5116 ])
                (plus:DI (reg/f:DI 199)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:250 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 224 223 225 7 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:250 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 7 (set (reg:XF 131 [ D.5115 ])
        (mem:XF (reg/f:DI 200) [0 *p_80(D)+0 S16 A128])) mUtility.c:250 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (nil)))
(insn 226 225 227 7 (set (mem:XF (reg/f:DI 130 [ D.5116 ]) [0 *_85+0 S16 A128])
        (reg:XF 131 [ D.5115 ])) mUtility.c:250 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 131 [ D.5115 ])
        (expr_list:REG_DEAD (reg/f:DI 130 [ D.5116 ])
            (nil))))
(insn 227 226 228 7 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:252 87 {*movdi_internal_rex64}
     (nil))
(insn 228 227 229 7 (set (reg:XF 202)
        (mem:XF (plus:DI (reg/f:DI 201)
                (const_int 48 [0x30])) [0 MEM[(long double *)p_80(D) + 48B]+0 S16 A128])) mUtility.c:252 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 229 228 230 7 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 comodo+0 S16 A128])
        (reg:XF 202)) mUtility.c:252 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 202)
        (nil)))
(insn 230 229 231 7 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:253 87 {*movdi_internal_rex64}
     (nil))
(insn 231 230 232 7 (parallel [
            (set (reg/f:DI 132 [ D.5116 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:253 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 232 231 233 7 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -456 [0xfffffffffffffe38])) [0 p+0 S8 A64])) mUtility.c:253 87 {*movdi_internal_rex64}
     (nil))
(insn 233 232 234 7 (set (reg:XF 133 [ D.5115 ])
        (mem:XF (plus:DI (reg/f:DI 204)
                (const_int 16 [0x10])) [0 MEM[(long double *)p_80(D) + 16B]+0 S16 A128])) mUtility.c:253 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (nil)))
(insn 234 233 235 7 (set (mem:XF (reg/f:DI 132 [ D.5116 ]) [0 *_88+0 S16 A128])
        (reg:XF 133 [ D.5115 ])) mUtility.c:253 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 133 [ D.5115 ])
        (expr_list:REG_DEAD (reg/f:DI 132 [ D.5116 ])
            (nil))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 134 135
(code_label 235 234 236 8 76 "" [1 uses])
(note 236 235 237 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 240 8 (set (reg:SI 134 [ D.5117 ])
        (const_int 1 [0x1])) mUtility.c:256 89 {*movsi_internal}
     (nil))
(insn 240 237 244 8 (set (reg:SI 135 [ <retval> ])
        (reg:SI 134 [ D.5117 ])) mUtility.c:256 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ D.5117 ])
        (nil)))
(insn 244 240 247 8 (set (reg/i:SI 0 ax)
        (reg:SI 135 [ <retval> ])) mUtility.c:257 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135 [ <retval> ])
        (nil)))
(insn 247 244 0 8 (use (reg/i:SI 0 ax)) mUtility.c:257 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function point_in_polygon (point_in_polygon, funcdef_no=24, decl_uid=1747, cgraph_uid=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best SIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r76,l0) best SIREG, allocno GENERAL_REGS
    r75: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r75,l0) best AREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r72,l0) best AREG, allocno GENERAL_REGS
    r71: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r71,l0) best DREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r67,l0) best CREG, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a22 (r61,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a24 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r75,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r72,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r71,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r67,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a14(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a19(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a20(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r61,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a23(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r60,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a25(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 76(l0): point = 0
   Insn 73(l0): point = 2
   Insn 69(l0): point = 4
   Insn 64(l0): point = 7
   Insn 81(l0): point = 10
   Insn 59(l0): point = 12
   Insn 57(l0): point = 15
   Insn 56(l0): point = 17
   Insn 55(l0): point = 19
   Insn 54(l0): point = 21
   Insn 45(l0): point = 24
   Insn 44(l0): point = 26
   Insn 43(l0): point = 28
   Insn 42(l0): point = 30
   Insn 41(l0): point = 32
   Insn 40(l0): point = 34
   Insn 39(l0): point = 36
   Insn 38(l0): point = 38
   Insn 37(l0): point = 40
   Insn 36(l0): point = 42
   Insn 35(l0): point = 44
   Insn 34(l0): point = 46
   Insn 33(l0): point = 48
   Insn 32(l0): point = 50
   Insn 31(l0): point = 52
   Insn 30(l0): point = 54
   Insn 29(l0): point = 56
   Insn 28(l0): point = 58
   Insn 27(l0): point = 60
   Insn 26(l0): point = 62
   Insn 25(l0): point = 64
   Insn 24(l0): point = 66
   Insn 23(l0): point = 68
   Insn 52(l0): point = 71
   Insn 51(l0): point = 73
   Insn 49(l0): point = 75
   Insn 48(l0): point = 77
   Insn 79(l0): point = 80
   Insn 19(l0): point = 82
   Insn 18(l0): point = 84
   Insn 17(l0): point = 86
   Insn 16(l0): point = 88
   Insn 15(l0): point = 90
   Insn 14(l0): point = 92
   Insn 13(l0): point = 94
   Insn 12(l0): point = 96
   Insn 11(l0): point = 98
   Insn 10(l0): point = 100
   Insn 9(l0): point = 102
   Insn 8(l0): point = 104
   Insn 4(l0): point = 106
   Insn 3(l0): point = 108
   Insn 2(l0): point = 110
 a0(r75): [3..4]
 a1(r59): [10..12] [5..7]
 a2(r74): [18..19]
 a3(r73): [20..21]
 a4(r62): [74..75]
 a5(r85): [76..77]
 a6(r72): [27..28]
 a7(r84): [33..40]
 a8(r83): [35..42]
 a9(r71): [37..44]
 a10(r67): [39..56]
 a11(r70): [45..46]
 a12(r82): [47..48]
 a13(r69): [47..50]
 a14(r68): [51..52]
 a15(r81): [53..54]
 a16(r66): [57..58]
 a17(r80): [59..60]
 a18(r65): [59..62]
 a19(r64): [63..64]
 a20(r63): [65..66]
 a21(r79): [67..68]
 a22(r61 [0]): [87..88]
 a22(r61 [1]): [87..88]
 a23(r78): [89..90]
 a24(r60): [93..94]
 a25(r77): [99..102]
 a26(r76): [101..104]
Compressing live ranges: from 113 to 44 - 38%
Ranges after the compression:
 a0(r75): [0..1]
 a1(r59): [2..5]
 a2(r74): [6..7]
 a3(r73): [8..9]
 a4(r62): [32..33]
 a5(r85): [34..35]
 a6(r72): [10..11]
 a7(r84): [12..13]
 a8(r83): [12..13]
 a9(r71): [12..13]
 a10(r67): [12..21]
 a11(r70): [14..15]
 a12(r82): [16..17]
 a13(r69): [16..17]
 a14(r68): [18..19]
 a15(r81): [20..21]
 a16(r66): [22..23]
 a17(r80): [24..25]
 a18(r65): [24..25]
 a19(r64): [26..27]
 a20(r63): [28..29]
 a21(r79): [30..31]
 a22(r61 [0]): [36..37]
 a22(r61 [1]): [36..37]
 a23(r78): [38..39]
 a24(r60): [40..41]
 a25(r77): [42..43]
 a26(r76): [42..43]
  regions=1, blocks=9, points=44
    allocnos=27 (big 1), copies=0, conflicts=0, ranges=28
Disposition:
    1:r59  l0     0   24:r60  l0     8   22:r61  l0     0    4:r62  l0     0
   20:r63  l0     0   19:r64  l0     0   18:r65  l0     1   16:r66  l0     0
   10:r67  l0     2   14:r68  l0     0   13:r69  l0     1   11:r70  l0     0
    9:r71  l0     1    6:r72  l0     0    3:r73  l0     0    2:r74  l0     0
    0:r75  l0     0   26:r76  l0     1   25:r77  l0     0   23:r78  l0     0
   21:r79  l0     0   17:r80  l0     0   15:r81  l0     0   12:r82  l0     0
    8:r83  l0     4    7:r84  l0     0    5:r85  l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


point_in_polygon

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={4d,3u} r1={4d,2u} r2={4d,1u} r4={5d,3u} r5={5d,3u} r6={1d,8u} r7={1d,10u} r8={2d,1u} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={14d,2u} r18={2d} r19={2d} r20={1d,31u,3e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u,1e} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u,1e} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 257{154d,98u,5e} in 53{51 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 77 78
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) mUtility.c:259 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])
        (reg:DI 4 si [ poly ])) mUtility.c:259 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ poly ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 Np+0 S4 A32])
        (reg:SI 1 dx [ Np ])) mUtility.c:259 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ Np ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 Np+0 S4 A32])) mUtility.c:262 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])) mUtility.c:262 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 76)) mUtility.c:262 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 77)) mUtility.c:262 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(call_insn 12 11 13 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_maxim") [flags 0x3]  <function_decl 0x7f4452bcd900 _maxim>) [0 _maxim S1 A8])
            (const_int 0 [0]))) mUtility.c:262 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:XF 60 [ D.5121 ])
        (reg:XF 8 st)) mUtility.c:262 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 14 13 15 2 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 M+0 S16 A128])
        (reg:XF 60 [ D.5121 ])) mUtility.c:262 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ D.5121 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mUtility.c:262 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:XF 61 [ D.5121 ])
        (mem:XF (plus:DI (reg/f:DI 78)
                (const_int 16 [0x10])) [0 MEM[(long double *)p_7(D) + 16B]+0 S16 A128])) mUtility.c:262 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 17 16 18 2 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 M+16 S16 A128])
        (reg:XF 61 [ D.5121 ])) mUtility.c:262 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5121 ])
        (nil)))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:264 89 {*movsi_internal}
     (nil))
(insn 19 18 79 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 inter+0 S4 A32])
        (const_int 0 [0])) mUtility.c:264 89 {*movsi_internal}
     (nil))
(jump_insn 79 19 80 2 (set (pc)
        (label_ref 46)) mUtility.c:264 650 {jump}
     (nil)
 -> 46)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 50)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 66 67 68 69 70 71 72 79 80 81 82 83 84
(code_label 50 80 22 3 84 "" [1 uses])
(note 22 50 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mUtility.c:264 89 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 63 [ D.5122 ])
        (sign_extend:DI (reg:SI 79))) mUtility.c:264 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 64 [ D.5122 ])
                (plus:DI (reg:DI 63 [ D.5122 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.5122 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (parallel [
            (set (reg:DI 65 [ D.5122 ])
                (ashift:DI (reg:DI 64 [ D.5122 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.5122 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 3 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])) mUtility.c:264 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 66 [ D.5123 ])
                (plus:DI (reg:DI 65 [ D.5122 ])
                    (reg/f:DI 80)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_DEAD (reg:DI 65 [ D.5122 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])
                        (reg:DI 65 [ D.5122 ]))
                    (nil))))))
(insn 29 28 30 3 (set (reg/f:DI 67 [ D.5124 ])
        (mem/f:DI (reg/f:DI 66 [ D.5123 ]) [0 *_15+0 S8 A64])) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5123 ])
        (nil)))
(insn 30 29 31 3 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) mUtility.c:264 89 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 68 [ D.5125 ])
        (sign_extend:DI (reg:SI 81))) mUtility.c:264 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:DI 69 [ D.5125 ])
                (ashift:DI (reg:DI 68 [ D.5125 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.5125 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 3 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])) mUtility.c:264 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 3 (parallel [
            (set (reg/f:DI 70 [ D.5123 ])
                (plus:DI (reg:DI 69 [ D.5125 ])
                    (reg/f:DI 82)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_DEAD (reg:DI 69 [ D.5125 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 poly+0 S8 A64])
                        (reg:DI 69 [ D.5125 ]))
                    (nil))))))
(insn 35 34 36 3 (set (reg/f:DI 71 [ D.5124 ])
        (mem/f:DI (reg/f:DI 70 [ D.5123 ]) [0 *_19+0 S8 A64])) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5123 ])
        (nil)))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 p+0 S8 A64])) mUtility.c:264 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 3 (set (reg:DI 2 cx)
        (reg/f:DI 67 [ D.5124 ])) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.5124 ])
        (nil)))
(insn 39 38 40 3 (set (reg:DI 1 dx)
        (reg/f:DI 71 [ D.5124 ])) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5124 ])
        (nil)))
(insn 40 39 41 3 (set (reg:DI 4 si)
        (reg:DI 83)) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (reg:DI 84)) mUtility.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 42 41 43 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("segments_intersect") [flags 0x3]  <function_decl 0x7f4452e3c700 segments_intersect>) [0 segments_intersect S1 A8])
            (const_int 0 [0]))) mUtility.c:264 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 43 42 44 3 (set (reg:SI 72 [ D.5120 ])
        (reg:SI 0 ax)) mUtility.c:264 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 44 43 45 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 inter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 inter+0 S4 A32])
                    (reg:SI 72 [ D.5120 ])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 72 [ D.5120 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 85
(code_label 46 45 47 4 83 "" [1 uses])
(note 47 46 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 4 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 Np+0 S4 A32])) mUtility.c:264 89 {*movsi_internal}
     (nil))
(insn 49 48 51 4 (parallel [
            (set (reg:SI 62 [ D.5120 ])
                (plus:SI (reg:SI 85)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:264 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 Np+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 51 49 52 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 62 [ D.5120 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) mUtility.c:264 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 62 [ D.5120 ])
        (nil)))
(jump_insn 52 51 53 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) mUtility.c:264 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 50)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 73 74
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg:SI 73 [ inter.0 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 inter+0 S4 A32])) mUtility.c:266 89 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (parallel [
            (set (reg:SI 74 [ D.5126 ])
                (and:SI (reg:SI 73 [ inter.0 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:266 393 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 73 [ inter.0 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74 [ D.5126 ])
            (const_int 0 [0]))) mUtility.c:266 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 74 [ D.5126 ])
        (nil)))
(jump_insn 57 56 58 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) mUtility.c:266 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 81 6 (set (reg:SI 59 [ D.5120 ])
        (const_int 0 [0])) mUtility.c:266 89 {*movsi_internal}
     (nil))
(jump_insn 81 59 82 6 (set (pc)
        (label_ref 67)) mUtility.c:266 650 {jump}
     (nil)
 -> 67)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 82 81 62)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 62 82 63 7 85 "" [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 67 7 (set (reg:SI 59 [ D.5120 ])
        (const_int 1 [0x1])) mUtility.c:268 89 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 75
(code_label 67 64 68 8 87 "" [1 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 73 8 (set (reg:SI 75 [ <retval> ])
        (reg:SI 59 [ D.5120 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5120 ])
        (nil)))
(insn 73 69 76 8 (set (reg/i:SI 0 ax)
        (reg:SI 75 [ <retval> ])) mUtility.c:269 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 75 [ <retval> ])
        (nil)))
(insn 76 73 0 8 (use (reg/i:SI 0 ax)) mUtility.c:269 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function frand (frand, funcdef_no=25, decl_uid=1750, cgraph_uid=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a9 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r64,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a1 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r64,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r63,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r70,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r69,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r68,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r67,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r65,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a9(r66,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a10(r60,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a11(r59,l0) costs: AREG:1 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10

   Insn 27(l0): point = 0
   Insn 24(l0): point = 2
   Insn 20(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 30(l0): point = 26
   Insn 6(l0): point = 28
   Insn 5(l0): point = 30
 a0(r64): [3..4]
 a1(r63): [5..6]
 a2(r70): [7..8]
 a3(r62): [7..10]
 a4(r69): [11..12]
 a5(r61): [11..14]
 a6(r68): [15..16]
 a7(r67): [15..18]
 a8(r65): [21..22]
 a9(r66): [23..24]
 a10(r60): [23..26]
 a11(r59): [27..28]
Compressing live ranges: from 33 to 16 - 48%
Ranges after the compression:
 a0(r64): [0..1]
 a1(r63): [2..3]
 a2(r70): [4..5]
 a3(r62): [4..5]
 a4(r69): [6..7]
 a5(r61): [6..7]
 a6(r68): [8..9]
 a7(r67): [8..9]
 a8(r65): [10..11]
 a9(r66): [12..13]
 a10(r60): [12..13]
 a11(r59): [14..15]
  regions=1, blocks=3, points=16
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
   11:r59  l0     0   10:r60  l0     9    5:r61  l0     9    3:r62  l0     9
    1:r63  l0     8    0:r64  l0     8    8:r65  l0     8    9:r66  l0     8
    7:r67  l0     9    6:r68  l0     8    4:r69  l0     8    2:r70  l0     8
+++Costs: overall 2, reg 2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


frand

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 8[st]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={2d} r6={1d,2u} r7={1d,3u} r8={2d,2u} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d} r18={1d} r19={1d} r20={1d,5u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} 
;;    total ref usage 105{76d,29u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f4452ec8600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) mUtility.c:272 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 6 5 30 2 (set (reg:SI 59 [ D.5127 ])
        (reg:SI 0 ax)) mUtility.c:272 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 30 6 8 2 (parallel [
            (set (reg:XF 60 [ D.5128 ])
                (float:XF (reg:SI 59 [ D.5127 ])))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0  S4 A32]))
        ]) mUtility.c:272 250 {*floatsixf2_i387_with_temp}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5127 ])
        (nil)))
(insn 8 30 9 2 (set (reg:XF 66)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) mUtility.c:272 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))
(insn 9 8 10 2 (set (reg:XF 65)
        (div:XF (reg:XF 60 [ D.5128 ])
            (reg:XF 66))) mUtility.c:272 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 66)
        (expr_list:REG_DEAD (reg:XF 60 [ D.5128 ])
            (nil))))
(insn 10 9 11 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 f+0 S16 A128])
        (reg:XF 65)) mUtility.c:272 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65)
        (nil)))
(insn 11 10 12 2 (set (reg:XF 67)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 fMax+0 S16 A128])) mUtility.c:273 131 {*movxf_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:XF 68)
        (mem/c:XF (reg/f:DI 16 argp) [0 fMin+0 S16 A128])) mUtility.c:273 131 {*movxf_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:XF 61 [ D.5128 ])
        (minus:XF (reg:XF 67)
            (reg:XF 68))) mUtility.c:273 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 68)
        (expr_list:REG_DEAD (reg:XF 67)
            (nil))))
(insn 14 13 15 2 (set (reg:XF 69)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 f+0 S16 A128])) mUtility.c:273 131 {*movxf_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:XF 62 [ D.5128 ])
        (mult:XF (reg:XF 61 [ D.5128 ])
            (reg:XF 69))) mUtility.c:273 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 69)
        (expr_list:REG_DEAD (reg:XF 61 [ D.5128 ])
            (nil))))
(insn 16 15 17 2 (set (reg:XF 70)
        (mem/c:XF (reg/f:DI 16 argp) [0 fMin+0 S16 A128])) mUtility.c:273 131 {*movxf_internal_rex64}
     (nil))
(insn 17 16 20 2 (set (reg:XF 63 [ D.5128 ])
        (plus:XF (reg:XF 62 [ D.5128 ])
            (reg:XF 70))) mUtility.c:273 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 70)
        (expr_list:REG_DEAD (reg:XF 62 [ D.5128 ])
            (nil))))
(insn 20 17 24 2 (set (reg:XF 64 [ <retval> ])
        (reg:XF 63 [ D.5128 ])) mUtility.c:273 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 63 [ D.5128 ])
        (nil)))
(insn 24 20 27 2 (set (reg/i:XF 8 st)
        (reg:XF 64 [ <retval> ])) mUtility.c:274 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ <retval> ])
        (nil)))
(insn 27 24 0 2 (use (reg/i:XF 8 st)) mUtility.c:274 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function irand (irand, funcdef_no=26, decl_uid=1752, cgraph_uid=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r66: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r66,l0) best SSE_REGS, allocno SSE_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r65,l0) best AREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r63,l0) best SSE_REGS, allocno SSE_REGS
    r62: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r62,l0) best SSE_REGS, allocno SSE_REGS
    r61: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r61,l0) best SSE_REGS, allocno SSE_REGS
    r60: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r60,l0) best SSE_REGS, allocno SSE_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r65,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r63,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:16
  a3(r62,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a4(r61,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a5(r66,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a6(r60,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:16
  a7(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r65): [3..4]
 a1(r64): [5..6]
 a2(r63): [7..8]
 a3(r62): [9..10]
 a4(r61): [9..12]
 a5(r66): [13..14]
 a6(r60): [13..16]
 a7(r59): [17..18]
Compressing live ranges: from 25 to 12 - 48%
Ranges after the compression:
 a0(r65): [0..1]
 a1(r64): [2..3]
 a2(r63): [4..5]
 a3(r62): [6..7]
 a4(r61): [6..7]
 a5(r66): [8..9]
 a6(r60): [8..9]
 a7(r59): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r59  l0     0    6:r60  l0    21    4:r61  l0    22    3:r62  l0    21
    2:r63  l0    21    1:r64  l0     0    0:r65  l0     0    5:r66  l0    22
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


irand

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={2d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 94{72d,22u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 max+0 S4 A32])
        (reg:SI 5 di [ max ])) mUtility.c:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ max ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f4452ec8600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) mUtility.c:277 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg:SI 59 [ D.5129 ])
        (reg:SI 0 ax)) mUtility.c:277 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (reg:DF 60 [ D.5130 ])
        (float:DF (reg:SI 59 [ D.5129 ]))) mUtility.c:277 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5129 ])
        (nil)))
(insn 9 8 10 2 (set (reg:DF 66)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S8 A64])) mUtility.c:277 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.147483648e+9 [0x0.8p+32])
        (nil)))
(insn 10 9 11 2 (set (reg:DF 61 [ D.5130 ])
        (div:DF (reg:DF 60 [ D.5130 ])
            (reg:DF 66))) mUtility.c:277 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 66)
        (expr_list:REG_DEAD (reg:DF 60 [ D.5130 ])
            (nil))))
(insn 11 10 12 2 (set (reg:DF 62 [ D.5130 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 max+0 S4 A32]))) mUtility.c:277 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 12 11 13 2 (set (reg:DF 63 [ D.5130 ])
        (mult:DF (reg:DF 61 [ D.5130 ])
            (reg:DF 62 [ D.5130 ]))) mUtility.c:277 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 62 [ D.5130 ])
        (expr_list:REG_DEAD (reg:DF 61 [ D.5130 ])
            (nil))))
(insn 13 12 16 2 (set (reg:SI 64 [ D.5129 ])
        (fix:SI (reg:DF 63 [ D.5130 ]))) mUtility.c:277 179 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 63 [ D.5130 ])
        (nil)))
(insn 16 13 20 2 (set (reg:SI 65 [ <retval> ])
        (reg:SI 64 [ D.5129 ])) mUtility.c:277 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 64 [ D.5129 ])
        (nil)))
(insn 20 16 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 65 [ <retval> ])) mUtility.c:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ <retval> ])
        (nil)))
(insn 23 20 0 2 (use (reg/i:SI 0 ax)) mUtility.c:278 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function isbetween (isbetween, funcdef_no=27, decl_uid=1756, cgraph_uid=27)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 15 (    1)
Building IRA IR
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 140.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r128: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r128,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r127: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r127,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r125,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r124: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a6 (r124,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r122,l0) best SIREG, allocno GENERAL_REGS
    r121: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a9 (r121,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r119,l0) best SIREG, allocno GENERAL_REGS
    r118: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a12 (r118,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r115,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r114: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r114,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r113: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r113,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a22 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a24 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a65 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a66 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a67 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:78 SSE_REGS:78 MMX_REGS:78 FP_TOP_SSE_REGS:393210 FP_SECOND_SSE_REGS:393210 FLOAT_SSE_REGS:393210 FLOAT_INT_REGS:393210 INT_SSE_REGS:78 FLOAT_INT_SSE_REGS:393210 ALL_REGS:393210 MEM:23
  a2(r128,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r127,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r126,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r125,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r124,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r121,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a10(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r118,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a13(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r115,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r90,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a17(r114,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r113,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a19(r89,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r86,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r88,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r85,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a24(r82,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a25(r84,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r83,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r81,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r80,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r110,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a35(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a36(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a37(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r103,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r78,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r77,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r75,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a44(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a46(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a47(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r100,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a49(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r70,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a53(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a54(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r97,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r67,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r65,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a60(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a61(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a64(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a66(r61,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a67(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a68(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a69(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 176(l0): point = 0
   Insn 173(l0): point = 2
   Insn 169(l0): point = 4
   Insn 164(l0): point = 7
   Insn 207(l0): point = 10
   Insn 159(l0): point = 12
   Insn 154(l0): point = 15
   Insn 153(l0): point = 17
   Insn 152(l0): point = 19
   Insn 151(l0): point = 21
   Insn 146(l0): point = 24
   Insn 145(l0): point = 26
   Insn 144(l0): point = 28
   Insn 143(l0): point = 30
   Insn 142(l0): point = 32
   Insn 141(l0): point = 34
   Insn 140(l0): point = 36
   Insn 139(l0): point = 38
   Insn 138(l0): point = 40
   Insn 137(l0): point = 42
   Insn 136(l0): point = 44
   Insn 135(l0): point = 46
   Insn 134(l0): point = 48
   Insn 133(l0): point = 50
   Insn 132(l0): point = 52
   Insn 131(l0): point = 54
   Insn 130(l0): point = 56
   Insn 129(l0): point = 58
   Insn 128(l0): point = 60
   Insn 127(l0): point = 62
   Insn 126(l0): point = 64
   Insn 125(l0): point = 66
   Insn 124(l0): point = 68
   Insn 123(l0): point = 70
   Insn 122(l0): point = 72
   Insn 205(l0): point = 75
   Insn 117(l0): point = 77
   Insn 112(l0): point = 80
   Insn 111(l0): point = 82
   Insn 110(l0): point = 84
   Insn 109(l0): point = 86
   Insn 108(l0): point = 88
   Insn 107(l0): point = 90
   Insn 106(l0): point = 92
   Insn 105(l0): point = 94
   Insn 104(l0): point = 96
   Insn 103(l0): point = 98
   Insn 102(l0): point = 100
   Insn 101(l0): point = 102
   Insn 100(l0): point = 104
   Insn 99(l0): point = 106
   Insn 98(l0): point = 108
   Insn 97(l0): point = 110
   Insn 96(l0): point = 112
   Insn 95(l0): point = 114
   Insn 94(l0): point = 116
   Insn 93(l0): point = 118
   Insn 92(l0): point = 120
   Insn 91(l0): point = 122
   Insn 90(l0): point = 124
   Insn 89(l0): point = 126
   Insn 88(l0): point = 128
   Insn 87(l0): point = 130
   Insn 86(l0): point = 132
   Insn 85(l0): point = 134
   Insn 84(l0): point = 136
   Insn 83(l0): point = 138
   Insn 82(l0): point = 140
   Insn 81(l0): point = 142
   Insn 80(l0): point = 144
   Insn 79(l0): point = 146
   Insn 78(l0): point = 148
   Insn 77(l0): point = 150
   Insn 76(l0): point = 152
   Insn 75(l0): point = 154
   Insn 74(l0): point = 156
   Insn 202(l0): point = 159
   Insn 69(l0): point = 161
   Insn 64(l0): point = 164
   Insn 63(l0): point = 166
   Insn 62(l0): point = 168
   Insn 61(l0): point = 170
   Insn 60(l0): point = 172
   Insn 59(l0): point = 174
   Insn 58(l0): point = 176
   Insn 57(l0): point = 178
   Insn 56(l0): point = 180
   Insn 55(l0): point = 182
   Insn 54(l0): point = 184
   Insn 49(l0): point = 187
   Insn 48(l0): point = 189
   Insn 47(l0): point = 191
   Insn 46(l0): point = 193
   Insn 45(l0): point = 195
   Insn 44(l0): point = 197
   Insn 43(l0): point = 199
   Insn 42(l0): point = 201
   Insn 41(l0): point = 203
   Insn 200(l0): point = 206
   Insn 36(l0): point = 208
   Insn 31(l0): point = 211
   Insn 30(l0): point = 213
   Insn 29(l0): point = 215
   Insn 28(l0): point = 217
   Insn 27(l0): point = 219
   Insn 26(l0): point = 221
   Insn 25(l0): point = 223
   Insn 24(l0): point = 225
   Insn 23(l0): point = 227
   Insn 22(l0): point = 229
   Insn 21(l0): point = 231
   Insn 16(l0): point = 234
   Insn 15(l0): point = 236
   Insn 14(l0): point = 238
   Insn 13(l0): point = 240
   Insn 12(l0): point = 242
   Insn 11(l0): point = 244
   Insn 10(l0): point = 246
   Insn 9(l0): point = 248
   Insn 8(l0): point = 250
   Insn 4(l0): point = 252
   Insn 3(l0): point = 254
   Insn 2(l0): point = 256
 a0(r91): [3..4]
 a1(r59): [206..208] [159..161] [75..77] [10..12] [5..7]
 a2(r128): [18..19]
 a3(r127): [18..21]
 a4(r126): [27..28]
 a5(r125): [27..30]
 a6(r124): [33..34]
 a7(r123): [39..42]
 a8(r122): [41..44]
 a9(r121): [47..48]
 a10(r120): [53..56]
 a11(r119): [55..58]
 a12(r118): [61..62]
 a13(r117): [67..70]
 a14(r116): [69..72]
 a15(r115): [83..84]
 a16(r90): [83..86]
 a17(r114): [87..88]
 a18(r113): [91..92]
 a19(r89): [93..94]
 a20(r86): [93..100]
 a21(r88): [95..96]
 a22(r87): [95..98]
 a23(r85): [101..102]
 a24(r82): [101..108]
 a25(r84): [103..104]
 a26(r83): [103..106]
 a27(r81): [109..110]
 a28(r80): [109..112]
 a29(r112): [117..122]
 a30(r111): [119..124]
 a31(r110): [121..126]
 a32(r109): [131..134]
 a33(r108): [133..136]
 a34(r107): [141..144]
 a35(r106): [143..146]
 a36(r105): [151..154]
 a37(r104): [153..156]
 a38(r79): [167..170]
 a39(r103): [167..168]
 a40(r78): [171..172]
 a41(r77): [173..174]
 a42(r75): [173..180]
 a43(r76): [175..176]
 a44(r102): [177..178]
 a45(r74): [181..182]
 a46(r101): [183..184]
 a47(r73): [190..193]
 a48(r100): [190..191]
 a49(r72): [194..195]
 a50(r71): [196..197]
 a51(r70): [196..201]
 a52(r99): [198..199]
 a53(r98): [202..203]
 a54(r69): [214..217]
 a55(r97): [214..215]
 a56(r68): [218..219]
 a57(r67): [220..221]
 a58(r65): [220..227]
 a59(r66): [222..223]
 a60(r96): [224..225]
 a61(r64): [228..229]
 a62(r95): [230..231]
 a63(r63): [237..240]
 a64(r94): [237..238]
 a65(r62): [241..242]
 a66(r61): [243..244]
 a67(r60): [243..248]
 a68(r93): [245..246]
 a69(r92): [249..250]
Compressing live ranges: from 259 to 100 - 38%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r59): [74..75] [48..49] [22..23] [2..5]
 a2(r128): [6..7]
 a3(r127): [6..7]
 a4(r126): [8..9]
 a5(r125): [8..9]
 a6(r124): [10..11]
 a7(r123): [12..13]
 a8(r122): [12..13]
 a9(r121): [14..15]
 a10(r120): [16..17]
 a11(r119): [16..17]
 a12(r118): [18..19]
 a13(r117): [20..21]
 a14(r116): [20..21]
 a15(r115): [24..25]
 a16(r90): [24..25]
 a17(r114): [26..27]
 a18(r113): [28..29]
 a19(r89): [30..31]
 a20(r86): [30..33]
 a21(r88): [32..33]
 a22(r87): [32..33]
 a23(r85): [34..35]
 a24(r82): [34..37]
 a25(r84): [36..37]
 a26(r83): [36..37]
 a27(r81): [38..39]
 a28(r80): [38..39]
 a29(r112): [40..41]
 a30(r111): [40..41]
 a31(r110): [40..41]
 a32(r109): [42..43]
 a33(r108): [42..43]
 a34(r107): [44..45]
 a35(r106): [44..45]
 a36(r105): [46..47]
 a37(r104): [46..47]
 a38(r79): [50..51]
 a39(r103): [50..51]
 a40(r78): [52..53]
 a41(r77): [54..55]
 a42(r75): [54..59]
 a43(r76): [56..57]
 a44(r102): [58..59]
 a45(r74): [60..61]
 a46(r101): [62..63]
 a47(r73): [64..65]
 a48(r100): [64..65]
 a49(r72): [66..67]
 a50(r71): [68..69]
 a51(r70): [68..71]
 a52(r99): [70..71]
 a53(r98): [72..73]
 a54(r69): [76..77]
 a55(r97): [76..77]
 a56(r68): [78..79]
 a57(r67): [80..81]
 a58(r65): [80..85]
 a59(r66): [82..83]
 a60(r96): [84..85]
 a61(r64): [86..87]
 a62(r95): [88..89]
 a63(r63): [90..91]
 a64(r94): [90..91]
 a65(r62): [92..93]
 a66(r61): [94..95]
 a67(r60): [94..97]
 a68(r93): [96..97]
 a69(r92): [98..99]
  regions=1, blocks=15, points=100
    allocnos=70 (big 0), copies=0, conflicts=0, ranges=73
Disposition:
    1:r59  l0     0   67:r60  l0     9   66:r61  l0     8   65:r62  l0     8
   63:r63  l0     8   61:r64  l0     0   58:r65  l0     9   59:r66  l0     0
   57:r67  l0     8   56:r68  l0     8   54:r69  l0     8   51:r70  l0     9
   50:r71  l0     8   49:r72  l0     8   47:r73  l0     8   45:r74  l0     0
   42:r75  l0     9   43:r76  l0     0   41:r77  l0     8   40:r78  l0     8
   38:r79  l0     8   28:r80  l0     9   27:r81  l0     8   24:r82  l0     9
   26:r83  l0    10   25:r84  l0     8   23:r85  l0     8   20:r86  l0     9
   22:r87  l0    10   21:r88  l0     8   19:r89  l0     8   16:r90  l0     9
    0:r91  l0     0   69:r92  l0     0   68:r93  l0     0   64:r94  l0     9
   62:r95  l0     0   60:r96  l0     0   55:r97  l0     9   53:r98  l0     0
   52:r99  l0     0   48:r100 l0     9   46:r101 l0     0   44:r102 l0     0
   39:r103 l0     9   37:r104 l0     1   36:r105 l0     0   35:r106 l0     1
   34:r107 l0     0   33:r108 l0     1   32:r109 l0     0   31:r110 l0     1
   30:r111 l0     2   29:r112 l0     0   18:r113 l0     8   17:r114 l0     8
   15:r115 l0     8   14:r116 l0     1   13:r117 l0     0   12:r118 l0     8
   11:r119 l0     1   10:r120 l0     0    9:r121 l0     8    8:r122 l0     1
    7:r123 l0     0    6:r124 l0     8    5:r125 l0     9    4:r126 l0     8
    3:r127 l0     9    2:r128 l0     8
+++Costs: overall -19, reg -19, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


isbetween

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={9d,2u} r1={9d,2u} r2={8d} r4={15d,8u} r5={15d,8u} r6={1d,14u} r7={1d,21u} r8={7d,3u} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,13u} r17={30d,7u} r18={7d} r19={7d} r20={1d,55u,4e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r59={5d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} 
;;    total ref usage 647{440d,203u,4e} in 123{116 regular + 7 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:281 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:281 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])
        (reg:DI 1 dx [ x ])) mUtility.c:281 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ x ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])) mUtility.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 60 [ D.5132 ])
        (mem:XF (reg/f:DI 92) [0 *x_2(D)+0 S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 a+0 S8 A64])) mUtility.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:XF 61 [ D.5132 ])
        (mem:XF (reg/f:DI 93) [0 *a_4(D)+0 S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 12 11 13 2 (set (reg:XF 62 [ D.5132 ])
        (minus:XF (reg:XF 60 [ D.5132 ])
            (reg:XF 61 [ D.5132 ]))) mUtility.c:283 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5132 ])
            (nil))))
(insn 13 12 14 2 (set (reg:XF 63 [ D.5132 ])
        (abs:XF (reg:XF 62 [ D.5132 ]))) mUtility.c:283 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5132 ])
        (nil)))
(insn 14 13 15 2 (set (reg:XF 94)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 15 14 16 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 94)
            (reg:XF 63 [ D.5132 ]))) mUtility.c:283 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 94)
        (expr_list:REG_DEAD (reg:XF 63 [ D.5132 ])
            (nil))))
(jump_insn 16 15 20 2 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) mUtility.c:283 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 39)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66 67 68 69 95 96 97
(note 20 16 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])) mUtility.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 64 [ D.5133 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:283 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 23 22 24 3 (set (reg:XF 65 [ D.5132 ])
        (mem:XF (reg/f:DI 64 [ D.5133 ]) [0 *_8+0 S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.5133 ])
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 a+0 S8 A64])) mUtility.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 66 [ D.5133 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:283 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -264 [0xfffffffffffffef8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 26 25 27 3 (set (reg:XF 67 [ D.5132 ])
        (mem:XF (reg/f:DI 66 [ D.5133 ]) [0 *_10+0 S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5133 ])
        (nil)))
(insn 27 26 28 3 (set (reg:XF 68 [ D.5132 ])
        (minus:XF (reg:XF 65 [ D.5132 ])
            (reg:XF 67 [ D.5132 ]))) mUtility.c:283 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5132 ])
            (nil))))
(insn 28 27 29 3 (set (reg:XF 69 [ D.5132 ])
        (abs:XF (reg:XF 68 [ D.5132 ]))) mUtility.c:283 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 68 [ D.5132 ])
        (nil)))
(insn 29 28 30 3 (set (reg:XF 97)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:283 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 30 29 31 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 97)
            (reg:XF 69 [ D.5132 ]))) mUtility.c:283 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 97)
        (expr_list:REG_DEAD (reg:XF 69 [ D.5132 ])
            (nil))))
(jump_insn 31 30 35 3 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) mUtility.c:283 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 39)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 35 31 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 200 4 (set (reg:SI 59 [ D.5131 ])
        (const_int 1 [0x1])) mUtility.c:283 89 {*movsi_internal}
     (nil))
(jump_insn 200 36 201 4 (set (pc)
        (label_ref 167)) mUtility.c:283 650 {jump}
     (nil)
 -> 167)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 201 200 39)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72 73 98 99 100
(code_label 39 201 40 5 93 "" [2 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])) mUtility.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg:XF 70 [ D.5132 ])
        (mem:XF (reg/f:DI 98) [0 *x_2(D)+0 S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 43 42 44 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 b+0 S8 A64])) mUtility.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 5 (set (reg:XF 71 [ D.5132 ])
        (mem:XF (reg/f:DI 99) [0 *b_16(D)+0 S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 45 44 46 5 (set (reg:XF 72 [ D.5132 ])
        (minus:XF (reg:XF 70 [ D.5132 ])
            (reg:XF 71 [ D.5132 ]))) mUtility.c:284 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5132 ])
            (nil))))
(insn 46 45 47 5 (set (reg:XF 73 [ D.5132 ])
        (abs:XF (reg:XF 72 [ D.5132 ]))) mUtility.c:284 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5132 ])
        (nil)))
(insn 47 46 48 5 (set (reg:XF 100)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 48 47 49 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 100)
            (reg:XF 73 [ D.5132 ]))) mUtility.c:284 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 100)
        (expr_list:REG_DEAD (reg:XF 73 [ D.5132 ])
            (nil))))
(jump_insn 49 48 53 5 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) mUtility.c:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 72)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 75 76 77 78 79 101 102 103
(note 53 49 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])) mUtility.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg/f:DI 74 [ D.5133 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:284 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 56 55 57 6 (set (reg:XF 75 [ D.5132 ])
        (mem:XF (reg/f:DI 74 [ D.5133 ]) [0 *_20+0 S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.5133 ])
        (nil)))
(insn 57 56 58 6 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 b+0 S8 A64])) mUtility.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg/f:DI 76 [ D.5133 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:284 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -272 [0xfffffffffffffef0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 59 58 60 6 (set (reg:XF 77 [ D.5132 ])
        (mem:XF (reg/f:DI 76 [ D.5133 ]) [0 *_22+0 S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.5133 ])
        (nil)))
(insn 60 59 61 6 (set (reg:XF 78 [ D.5132 ])
        (minus:XF (reg:XF 75 [ D.5132 ])
            (reg:XF 77 [ D.5132 ]))) mUtility.c:284 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 75 [ D.5132 ])
            (nil))))
(insn 61 60 62 6 (set (reg:XF 79 [ D.5132 ])
        (abs:XF (reg:XF 78 [ D.5132 ]))) mUtility.c:284 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 78 [ D.5132 ])
        (nil)))
(insn 62 61 63 6 (set (reg:XF 103)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:284 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 63 62 64 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 103)
            (reg:XF 79 [ D.5132 ]))) mUtility.c:284 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 103)
        (expr_list:REG_DEAD (reg:XF 79 [ D.5132 ])
            (nil))))
(jump_insn 64 63 68 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) mUtility.c:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 72)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 68 64 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 202 7 (set (reg:SI 59 [ D.5131 ])
        (const_int 1 [0x1])) mUtility.c:284 89 {*movsi_internal}
     (nil))
(jump_insn 202 69 203 7 (set (pc)
        (label_ref 167)) mUtility.c:284 650 {jump}
     (nil)
 -> 167)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 203 202 72)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 80 81 82 83 84 85 86 87 88 89 90 104 105 106 107 108 109 110 111 112 113 114 115
(code_label 72 203 73 8 97 "" [2 uses])
(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 8 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:287 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 75 74 76 8 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 a+0 S8 A64])) mUtility.c:287 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (set (reg:DI 4 si)
        (reg:DI 104)) mUtility.c:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 77 76 78 8 (set (reg:DI 5 di)
        (reg:DI 105)) mUtility.c:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 78 77 79 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 79 78 80 8 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:288 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 79 81 8 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 b+0 S8 A64])) mUtility.c:288 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 8 (set (reg:DI 4 si)
        (reg:DI 106)) mUtility.c:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(insn 82 81 83 8 (set (reg:DI 5 di)
        (reg:DI 107)) mUtility.c:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 83 82 84 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:288 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 84 83 85 8 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:289 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 8 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 x+0 S8 A64])) mUtility.c:289 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 8 (set (reg:DI 4 si)
        (reg:DI 108)) mUtility.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 87 86 88 8 (set (reg:DI 5 di)
        (reg:DI 109)) mUtility.c:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 88 87 89 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:289 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 89 88 90 8 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:292 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 90 89 91 8 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:292 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 90 92 8 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:292 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 92 91 93 8 (set (reg:DI 1 dx)
        (reg:DI 110)) mUtility.c:292 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 93 92 94 8 (set (reg:DI 4 si)
        (reg:DI 111)) mUtility.c:292 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(insn 94 93 95 8 (set (reg:DI 5 di)
        (reg:DI 112)) mUtility.c:292 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(call_insn 95 94 96 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_cross_prod") [flags 0x3]  <function_decl 0x7f4452bcd100 _cross_prod>) [0 _cross_prod S1 A8])
            (const_int 0 [0]))) mUtility.c:292 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 96 95 97 8 (set (reg:XF 80 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 S+0 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 97 96 98 8 (set (reg:XF 81 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 P2+0 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 98 97 99 8 (set (reg:XF 82 [ D.5132 ])
        (mult:XF (reg:XF 80 [ D.5132 ])
            (reg:XF 81 [ D.5132 ]))) mUtility.c:293 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 81 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 80 [ D.5132 ])
            (nil))))
(insn 99 98 100 8 (set (reg:XF 83 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 S+16 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 100 99 101 8 (set (reg:XF 84 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 P2+16 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 101 100 102 8 (set (reg:XF 85 [ D.5132 ])
        (mult:XF (reg:XF 83 [ D.5132 ])
            (reg:XF 84 [ D.5132 ]))) mUtility.c:293 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 84 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 83 [ D.5132 ])
            (nil))))
(insn 102 101 103 8 (set (reg:XF 86 [ D.5132 ])
        (plus:XF (reg:XF 82 [ D.5132 ])
            (reg:XF 85 [ D.5132 ]))) mUtility.c:293 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 85 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 82 [ D.5132 ])
            (nil))))
(insn 103 102 104 8 (set (reg:XF 87 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 S+32 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 104 103 105 8 (set (reg:XF 88 [ D.5132 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 P2+32 S16 A128])) mUtility.c:293 131 {*movxf_internal_rex64}
     (nil))
(insn 105 104 106 8 (set (reg:XF 89 [ D.5132 ])
        (mult:XF (reg:XF 87 [ D.5132 ])
            (reg:XF 88 [ D.5132 ]))) mUtility.c:293 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 87 [ D.5132 ])
            (nil))))
(insn 106 105 107 8 (set (reg:XF 113)
        (plus:XF (reg:XF 86 [ D.5132 ])
            (reg:XF 89 [ D.5132 ]))) mUtility.c:293 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5132 ])
        (expr_list:REG_DEAD (reg:XF 86 [ D.5132 ])
            (nil))))
(insn 107 106 108 8 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 gc+0 S16 A128])
        (reg:XF 113)) mUtility.c:293 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 113)
        (nil)))
(insn 108 107 109 8 (set (reg:XF 114)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 gc+0 S16 A128])) mUtility.c:295 131 {*movxf_internal_rex64}
     (nil))
(insn 109 108 110 8 (set (reg:XF 90 [ D.5132 ])
        (abs:XF (reg:XF 114))) mUtility.c:295 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 114)
        (nil)))
(insn 110 109 111 8 (set (reg:XF 115)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) mUtility.c:295 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 9.9999999999999995474811182588625868561393872369080782e-8 [0x0.d6bf94d5e57a4p-23])
        (nil)))
(insn 111 110 112 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 90 [ D.5132 ])
            (reg:XF 115))) mUtility.c:295 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 115)
        (expr_list:REG_DEAD (reg:XF 90 [ D.5132 ])
            (nil))))
(jump_insn 112 111 116 8 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 204)
            (pc))) mUtility.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 204)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 116 112 117 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 205 9 (set (reg:SI 59 [ D.5131 ])
        (const_int 0 [0])) mUtility.c:295 89 {*movsi_internal}
     (nil))
(jump_insn 205 117 206 9 (set (pc)
        (label_ref 167)) mUtility.c:295 650 {jump}
     (nil)
 -> 167)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 206 205 204)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 116 117 118 119 120 121 122 123 124 125 126
(code_label 204 206 121 10 113 "" [1 uses])
(note 121 204 122 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 10 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:297 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 10 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:297 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 125 10 (set (reg:DI 4 si)
        (reg:DI 116)) mUtility.c:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 125 124 126 10 (set (reg:DI 5 di)
        (reg:DI 117)) mUtility.c:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 126 125 127 10 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:297 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 127 126 128 10 (set (reg:XF 118)
        (reg:XF 8 st)) mUtility.c:297 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 128 127 129 10 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 ax+0 S16 A128])
        (reg:XF 118)) mUtility.c:297 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 118)
        (nil)))
(insn 129 128 130 10 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:298 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 10 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:298 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 10 (set (reg:DI 4 si)
        (reg:DI 119)) mUtility.c:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(insn 132 131 133 10 (set (reg:DI 5 di)
        (reg:DI 120)) mUtility.c:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(call_insn 133 132 134 10 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:298 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 134 133 135 10 (set (reg:XF 121)
        (reg:XF 8 st)) mUtility.c:298 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 135 134 136 10 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 bx+0 S16 A128])
        (reg:XF 121)) mUtility.c:298 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 121)
        (nil)))
(insn 136 135 137 10 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:299 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 137 136 138 10 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:299 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 138 137 139 10 (set (reg:DI 4 si)
        (reg:DI 122)) mUtility.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(insn 139 138 140 10 (set (reg:DI 5 di)
        (reg:DI 123)) mUtility.c:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(call_insn 140 139 141 10 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:299 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 141 140 142 10 (set (reg:XF 124)
        (reg:XF 8 st)) mUtility.c:299 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 142 141 143 10 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 ab+0 S16 A128])
        (reg:XF 124)) mUtility.c:299 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 124)
        (nil)))
(insn 143 142 144 10 (set (reg:XF 125)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 ab+0 S16 A128])) mUtility.c:301 131 {*movxf_internal_rex64}
     (nil))
(insn 144 143 145 10 (set (reg:XF 126)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 ax+0 S16 A128])) mUtility.c:301 131 {*movxf_internal_rex64}
     (nil))
(insn 145 144 146 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 125)
            (reg:XF 126))) mUtility.c:301 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 126)
        (expr_list:REG_DEAD (reg:XF 125)
            (nil))))
(jump_insn 146 145 150 10 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 162)
            (pc))) mUtility.c:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 162)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127 128
(note 150 146 151 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 11 (set (reg:XF 127)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 ab+0 S16 A128])) mUtility.c:301 131 {*movxf_internal_rex64}
     (nil))
(insn 152 151 153 11 (set (reg:XF 128)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 bx+0 S16 A128])) mUtility.c:301 131 {*movxf_internal_rex64}
     (nil))
(insn 153 152 154 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 127)
            (reg:XF 128))) mUtility.c:301 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 128)
        (expr_list:REG_DEAD (reg:XF 127)
            (nil))))
(jump_insn 154 153 158 11 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 162)
            (pc))) mUtility.c:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 162)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 158 154 159 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 207 12 (set (reg:SI 59 [ D.5131 ])
        (const_int 1 [0x1])) mUtility.c:301 89 {*movsi_internal}
     (nil))
(jump_insn 207 159 208 12 (set (pc)
        (label_ref 167)) mUtility.c:301 650 {jump}
     (nil)
 -> 167)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 208 207 162)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 162 208 163 13 102 "" [2 uses])
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 167 13 (set (reg:SI 59 [ D.5131 ])
        (const_int 0 [0])) mUtility.c:302 89 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              9 [100.0%] 
;;              4 [100.0%] 
;;              7 [100.0%] 
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 91
(code_label 167 164 168 14 105 "" [4 uses])
(note 168 167 169 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 173 14 (set (reg:SI 91 [ <retval> ])
        (reg:SI 59 [ D.5131 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5131 ])
        (nil)))
(insn 173 169 176 14 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) mUtility.c:303 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ <retval> ])
        (nil)))
(insn 176 173 0 14 (use (reg/i:SI 0 ax)) mUtility.c:303 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function freeTouch (freeTouch, funcdef_no=28, decl_uid=4067, cgraph_uid=28)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 16(l0): point = 1
   Insn 15(l0): point = 3
   Insn 14(l0): point = 5
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r63): [2..3]
 a1(r60): [8..9]
 a2(r62): [10..11]
 a3(r59): [17..18]
 a4(r61): [19..20]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r63): [0..1]
 a1(r60): [2..3]
 a2(r62): [4..5]
 a3(r59): [6..7]
 a4(r61): [8..9]
  regions=1, blocks=5, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r59  l0     0    1:r60  l0     0    4:r61  l0     0    2:r62  l0     0
    0:r63  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


freeTouch

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 98{70d,28u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 61
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mUtility.c:304 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 61)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:305 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 59 [ D.5134 ])
        (mem/f:DI (reg/f:DI 61) [0 *f_1(D)+0 S8 A64])) mUtility.c:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.5134 ])
            (const_int 0 [0]))) mUtility.c:305 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.5134 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) mUtility.c:305 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 63
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:306 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ D.5134 ])
        (mem/f:DI (reg/f:DI 62) [0 *f_1(D)+0 S8 A64])) mUtility.c:306 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 60 [ D.5134 ])) mUtility.c:306 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.5134 ])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f4452db1000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mUtility.c:306 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:307 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 19 3 (set (mem/f:DI (reg/f:DI 63) [0 *f_1(D)+0 S8 A64])
        (const_int 0 [0])) mUtility.c:307 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 19 16 20 4 114 "" [1 uses])
(note 20 19 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function freeTouch2 (freeTouch2, funcdef_no=29, decl_uid=4070, cgraph_uid=29)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 16(l0): point = 1
   Insn 15(l0): point = 3
   Insn 14(l0): point = 5
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r63): [2..3]
 a1(r60): [8..9]
 a2(r62): [10..11]
 a3(r59): [17..18]
 a4(r61): [19..20]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r63): [0..1]
 a1(r60): [2..3]
 a2(r62): [4..5]
 a3(r59): [6..7]
 a4(r61): [8..9]
  regions=1, blocks=5, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r59  l0     0    1:r60  l0     0    4:r61  l0     0    2:r62  l0     0
    0:r63  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


freeTouch2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 98{70d,28u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 61
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) mUtility.c:310 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 61)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:311 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 59 [ D.5135 ])
        (mem/f:DI (reg/f:DI 61) [0 *f_1(D)+0 S8 A64])) mUtility.c:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.5135 ])
            (const_int 0 [0]))) mUtility.c:311 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.5135 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) mUtility.c:311 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 63
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:312 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ D.5135 ])
        (mem/f:DI (reg/f:DI 62) [0 *f_1(D)+0 S8 A64])) mUtility.c:312 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 60 [ D.5135 ])) mUtility.c:312 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.5135 ])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f4452db1000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mUtility.c:312 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 f+0 S8 A64])) mUtility.c:313 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 19 3 (set (mem/f:DI (reg/f:DI 63) [0 *f_1(D)+0 S8 A64])
        (const_int 0 [0])) mUtility.c:313 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 19 16 20 4 116 "" [1 uses])
(note 20 19 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function ffree_2D (ffree_2D, funcdef_no=30, decl_uid=1765, cgraph_uid=30)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r62,l0) best DIREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a3(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 33(l0): point = 0
   Insn 28(l0): point = 2
   Insn 27(l0): point = 4
   Insn 26(l0): point = 6
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 34(l0): point = 33
   Insn 7(l0): point = 35
   Insn 3(l0): point = 37
   Insn 2(l0): point = 39
 a0(r65): [5..6]
 a1(r64): [29..30]
 a2(r62): [14..15]
 a3(r61): [16..17]
 a4(r59): [16..23]
 a5(r60): [18..19]
 a6(r63): [20..21]
Compressing live ranges: from 42 to 12 - 28%
Ranges after the compression:
 a0(r65): [0..1]
 a1(r64): [10..11]
 a2(r62): [2..3]
 a3(r61): [4..5]
 a4(r59): [4..9]
 a5(r60): [6..7]
 a6(r63): [8..9]
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    4:r59  l0     0    5:r60  l0     1    3:r61  l0     1    2:r62  l0     0
    6:r63  l0     1    1:r64  l0     0    0:r65  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


ffree_2D

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={7d,1u} r18={2d} r19={2d} r20={1d,15u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} 
;;    total ref usage 164{121d,43u,0e} in 19{17 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])
        (reg:DI 5 di [ x ])) mUtility.c:318 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mUtility.c:318 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:320 89 {*movsi_internal}
     (nil))
(jump_insn 34 7 35 2 (set (pc)
        (label_ref 19)) mUtility.c:320 650 {jump}
     (nil)
 -> 19)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 35 34 21)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63
(code_label 21 35 10 3 120 "" [1 uses])
(note 10 21 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 59 [ x.1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])) mUtility.c:322 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mUtility.c:322 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 60 [ D.5136 ])
        (sign_extend:DI (reg:SI 63))) mUtility.c:322 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 61 [ D.5136 ])
                (ashift:DI (reg:DI 60 [ D.5136 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:322 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5136 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 3 (parallel [
            (set (reg/f:DI 62 [ D.5137 ])
                (plus:DI (reg/f:DI 59 [ x.1 ])
                    (reg:DI 61 [ D.5136 ])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:322 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.5136 ])
        (expr_list:REG_DEAD (reg/f:DI 59 [ x.1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 62 [ D.5137 ])) mUtility.c:322 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5137 ])
        (nil)))
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("freeTouch") [flags 0x3]  <function_decl 0x7f4452bcdf00 freeTouch>) [0 freeTouch S1 A8])
        (const_int 0 [0])) mUtility.c:322 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:320 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64
(code_label 19 18 20 4 119 "" [1 uses])
(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 4 (set (reg:SI 64)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) mUtility.c:320 89 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mUtility.c:320 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 64)
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mUtility.c:320 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg:DI 65)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:325 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg:DI 65)) mUtility.c:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(call_insn 28 27 33 5 (call (mem:QI (symbol_ref:DI ("freeTouch2") [flags 0x3]  <function_decl 0x7f4452bbad00 freeTouch2>) [0 freeTouch2 S1 A8])
        (const_int 0 [0])) mUtility.c:325 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 33 28 0 5 (const_int 0 [0]) mUtility.c:326 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function ffree_3D (ffree_3D, funcdef_no=31, decl_uid=1769, cgraph_uid=31)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r79: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r79,l0) best DIREG, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a6(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a13(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a19(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 67(l0): point = 0
   Insn 66(l0): point = 2
   Insn 65(l0): point = 4
   Insn 57(l0): point = 7
   Insn 56(l0): point = 9
   Insn 55(l0): point = 11
   Insn 54(l0): point = 13
   Insn 53(l0): point = 15
   Insn 52(l0): point = 17
   Insn 51(l0): point = 19
   Insn 50(l0): point = 21
   Insn 49(l0): point = 23
   Insn 63(l0): point = 26
   Insn 62(l0): point = 28
   Insn 61(l0): point = 30
   Insn 74(l0): point = 33
   Insn 45(l0): point = 35
   Insn 72(l0): point = 38
   Insn 12(l0): point = 40
   Insn 43(l0): point = 43
   Insn 42(l0): point = 45
   Insn 41(l0): point = 47
   Insn 37(l0): point = 50
   Insn 35(l0): point = 53
   Insn 34(l0): point = 55
   Insn 33(l0): point = 57
   Insn 29(l0): point = 60
   Insn 28(l0): point = 62
   Insn 27(l0): point = 64
   Insn 26(l0): point = 66
   Insn 25(l0): point = 68
   Insn 24(l0): point = 70
   Insn 23(l0): point = 72
   Insn 22(l0): point = 74
   Insn 21(l0): point = 76
   Insn 20(l0): point = 78
   Insn 19(l0): point = 80
   Insn 18(l0): point = 82
   Insn 17(l0): point = 84
   Insn 16(l0): point = 86
   Insn 70(l0): point = 89
   Insn 8(l0): point = 91
   Insn 4(l0): point = 93
   Insn 3(l0): point = 95
   Insn 2(l0): point = 97
 a0(r79): [3..4]
 a1(r78): [29..30]
 a2(r70): [12..13]
 a3(r69): [14..15]
 a4(r77): [16..17]
 a5(r68): [16..19]
 a6(r67): [20..21]
 a7(r76): [22..23]
 a8(r75): [46..47]
 a9(r74): [56..57]
 a10(r66): [65..66]
 a11(r65): [67..68]
 a12(r64): [69..70]
 a13(r62): [69..76]
 a14(r63): [71..72]
 a15(r73): [73..74]
 a16(r61): [77..78]
 a17(r72): [79..80]
 a18(r60): [79..82]
 a19(r59): [83..84]
 a20(r71): [85..86]
Compressing live ranges: from 100 to 36 - 36%
Ranges after the compression:
 a0(r79): [0..1]
 a1(r78): [12..13]
 a2(r70): [2..3]
 a3(r69): [4..5]
 a4(r77): [6..7]
 a5(r68): [6..7]
 a6(r67): [8..9]
 a7(r76): [10..11]
 a8(r75): [14..15]
 a9(r74): [16..17]
 a10(r66): [18..19]
 a11(r65): [20..21]
 a12(r64): [22..23]
 a13(r62): [22..27]
 a14(r63): [24..25]
 a15(r73): [26..27]
 a16(r61): [28..29]
 a17(r72): [30..31]
 a18(r60): [30..31]
 a19(r59): [32..33]
 a20(r71): [34..35]
  regions=1, blocks=12, points=36
    allocnos=21 (big 0), copies=0, conflicts=0, ranges=21
Disposition:
   19:r59  l0     0   18:r60  l0     1   16:r61  l0     0   13:r62  l0     0
   14:r63  l0     1   12:r64  l0     1   11:r65  l0     0   10:r66  l0     0
    6:r67  l0     0    5:r68  l0     1    3:r69  l0     0    2:r70  l0     0
   20:r71  l0     0   17:r72  l0     0   15:r73  l0     1    9:r74  l0     0
    8:r75  l0     0    7:r76  l0     0    4:r77  l0     0    1:r78  l0     0
    0:r79  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


ffree_3D

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d,1u} r2={4d} r4={4d,1u} r5={7d,4u} r6={1d,11u} r7={1d,14u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,10u} r17={15d,3u} r18={3d} r19={3d} r20={1d,35u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u,1e} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} 
;;    total ref usage 291{187d,100u,4e} in 45{42 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])
        (reg:DI 5 di [ x ])) mUtility.c:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mUtility.c:328 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) mUtility.c:328 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 70 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(jump_insn 70 8 71 2 (set (pc)
        (label_ref 38)) mUtility.c:330 650 {jump}
     (nil)
 -> 38)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 40)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 40 71 11 3 126 "" [1 uses])
(note 11 40 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 72 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(jump_insn 72 12 73 3 (set (pc)
        (label_ref 30)) mUtility.c:330 650 {jump}
     (nil)
 -> 30)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 73 72 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 71 72 73
(code_label 32 73 15 4 125 "" [1 uses])
(note 15 32 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 59 [ D.5138 ])
        (sign_extend:DI (reg:SI 71))) mUtility.c:330 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 60 [ D.5138 ])
                (ashift:DI (reg:DI 59 [ D.5138 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5138 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])) mUtility.c:330 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 61 [ D.5139 ])
                (plus:DI (reg:DI 60 [ D.5138 ])
                    (reg/f:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_DEAD (reg:DI 60 [ D.5138 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])
                        (reg:DI 60 [ D.5138 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg/f:DI 62 [ D.5140 ])
        (mem/f:DI (reg/f:DI 61 [ D.5139 ]) [0 *_11+0 S8 A64])) mUtility.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.5139 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 63 [ D.5138 ])
        (sign_extend:DI (reg:SI 73))) mUtility.c:330 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 64 [ D.5138 ])
                (ashift:DI (reg:DI 63 [ D.5138 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.5138 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (reg/f:DI 65 [ D.5140 ])
                (plus:DI (reg/f:DI 62 [ D.5140 ])
                    (reg:DI 64 [ D.5138 ])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.5138 ])
        (expr_list:REG_DEAD (reg/f:DI 62 [ D.5140 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 26 25 27 4 (set (reg/f:DI 66 [ D.5141 ])
        (mem/f:DI (reg/f:DI 65 [ D.5140 ]) [0 *_15+0 S8 A64])) mUtility.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.5140 ])
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 66 [ D.5141 ])) mUtility.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.5141 ])
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f4452db1000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mUtility.c:330 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74
(code_label 30 29 31 5 124 "" [1 uses])
(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 5 (set (reg:SI 74)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 74)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 M+0 S4 A32]))) mUtility.c:330 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) mUtility.c:330 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 32)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:330 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 75
(code_label 38 37 39 7 123 "" [1 uses])
(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 39 42 7 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:330 89 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 75)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mUtility.c:330 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) mUtility.c:330 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 74 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:331 89 {*movsi_internal}
     (nil))
(jump_insn 74 45 75 8 (set (pc)
        (label_ref 58)) mUtility.c:331 650 {jump}
     (nil)
 -> 58)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 75 74 60)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68 69 70 76 77
(code_label 60 75 48 9 128 "" [1 uses])
(note 48 60 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:331 89 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (set (reg:DI 67 [ D.5138 ])
        (sign_extend:DI (reg:SI 76))) mUtility.c:331 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 51 50 52 9 (parallel [
            (set (reg:DI 68 [ D.5138 ])
                (ashift:DI (reg:DI 67 [ D.5138 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:331 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 67 [ D.5138 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 9 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])) mUtility.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 9 (parallel [
            (set (reg/f:DI 69 [ D.5139 ])
                (plus:DI (reg:DI 68 [ D.5138 ])
                    (reg/f:DI 77)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:331 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_DEAD (reg:DI 68 [ D.5138 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])
                        (reg:DI 68 [ D.5138 ]))
                    (nil))))))
(insn 54 53 55 9 (set (reg/f:DI 70 [ D.5140 ])
        (mem/f:DI (reg/f:DI 69 [ D.5139 ]) [0 *_22+0 S8 A64])) mUtility.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.5139 ])
        (nil)))
(insn 55 54 56 9 (set (reg:DI 5 di)
        (reg/f:DI 70 [ D.5140 ])) mUtility.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.5140 ])
        (nil)))
(call_insn 56 55 57 9 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f4452db1000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mUtility.c:331 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:331 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 78
(code_label 58 57 59 10 127 "" [1 uses])
(note 59 58 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 59 62 10 (set (reg:SI 78)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:331 89 {*movsi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 78)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mUtility.c:331 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 78)
        (nil)))
(jump_insn 63 62 64 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) mUtility.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 60)
;;  succ:       9
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 x+0 S8 A64])) mUtility.c:332 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 11 (set (reg:DI 5 di)
        (reg:DI 79)) mUtility.c:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 79)
        (nil)))
(call_insn 67 66 0 11 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f4452db1000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) mUtility.c:332 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function find_st_indx (find_st_indx, funcdef_no=32, decl_uid=1775, cgraph_uid=32)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 62.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r82,l0) best DREG, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r75,l0) best AREG, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r69,l0) best SIREG, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r64,l0) best AREG, allocno GENERAL_REGS
    r63: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r63,l0) best SIREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r75,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:14
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r89,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a16(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a17(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r64,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r82,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a27(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 91(l0): point = 0
   Insn 88(l0): point = 2
   Insn 84(l0): point = 4
   Insn 81(l0): point = 7
   Insn 98(l0): point = 10
   Insn 68(l0): point = 12
   Insn 67(l0): point = 14
   Insn 65(l0): point = 17
   Insn 64(l0): point = 19
   Insn 63(l0): point = 21
   Insn 62(l0): point = 23
   Insn 61(l0): point = 25
   Insn 60(l0): point = 27
   Insn 59(l0): point = 29
   Insn 58(l0): point = 31
   Insn 57(l0): point = 33
   Insn 56(l0): point = 35
   Insn 55(l0): point = 37
   Insn 54(l0): point = 39
   Insn 53(l0): point = 41
   Insn 52(l0): point = 43
   Insn 51(l0): point = 45
   Insn 50(l0): point = 47
   Insn 49(l0): point = 49
   Insn 48(l0): point = 51
   Insn 47(l0): point = 53
   Insn 46(l0): point = 55
   Insn 45(l0): point = 57
   Insn 79(l0): point = 60
   Insn 78(l0): point = 62
   Insn 77(l0): point = 64
   Insn 73(l0): point = 67
   Insn 96(l0): point = 70
   Insn 41(l0): point = 72
   Insn 40(l0): point = 74
   Insn 94(l0): point = 77
   Insn 35(l0): point = 79
   Insn 33(l0): point = 82
   Insn 32(l0): point = 84
   Insn 31(l0): point = 86
   Insn 30(l0): point = 88
   Insn 29(l0): point = 90
   Insn 28(l0): point = 92
   Insn 27(l0): point = 94
   Insn 26(l0): point = 96
   Insn 25(l0): point = 98
   Insn 24(l0): point = 100
   Insn 23(l0): point = 102
   Insn 22(l0): point = 104
   Insn 21(l0): point = 106
   Insn 20(l0): point = 108
   Insn 19(l0): point = 110
   Insn 17(l0): point = 113
   Insn 16(l0): point = 115
   Insn 15(l0): point = 117
   Insn 14(l0): point = 119
   Insn 13(l0): point = 121
   Insn 6(l0): point = 123
   Insn 5(l0): point = 125
   Insn 4(l0): point = 127
   Insn 3(l0): point = 129
   Insn 2(l0): point = 131
 a0(r75): [3..4]
 a1(r59): [77..79] [10..12] [5..7]
 a2(r91): [63..64]
 a3(r90): [13..14]
 a4(r74): [20..21]
 a5(r73): [26..33]
 a6(r69): [28..45]
 a7(r89): [30..31]
 a8(r72): [34..35]
 a9(r88): [36..37]
 a10(r71): [36..39]
 a11(r70): [40..41]
 a12(r87): [42..43]
 a13(r68): [46..47]
 a14(r86): [48..49]
 a15(r67): [48..51]
 a16(r66): [52..53]
 a17(r65): [54..55]
 a18(r85): [56..57]
 a19(r84): [73..74]
 a20(r64): [85..86]
 a21(r83): [91..96]
 a22(r63): [93..100]
 a23(r82): [95..98]
 a24(r62): [101..102]
 a25(r81): [103..104]
 a26(r61): [103..106]
 a27(r60): [107..108]
 a28(r80): [109..110]
 a29(r78): [118..119]
 a30(r79): [120..121]
Compressing live ranges: from 134 to 52 - 38%
Ranges after the compression:
 a0(r75): [0..1]
 a1(r59): [34..35] [2..5]
 a2(r91): [30..31]
 a3(r90): [6..7]
 a4(r74): [8..9]
 a5(r73): [10..11]
 a6(r69): [10..19]
 a7(r89): [10..11]
 a8(r72): [12..13]
 a9(r88): [14..15]
 a10(r71): [14..15]
 a11(r70): [16..17]
 a12(r87): [18..19]
 a13(r68): [20..21]
 a14(r86): [22..23]
 a15(r67): [22..23]
 a16(r66): [24..25]
 a17(r65): [26..27]
 a18(r85): [28..29]
 a19(r84): [32..33]
 a20(r64): [36..37]
 a21(r83): [38..39]
 a22(r63): [38..39]
 a23(r82): [38..39]
 a24(r62): [40..41]
 a25(r81): [42..43]
 a26(r61): [42..43]
 a27(r60): [44..45]
 a28(r80): [46..47]
 a29(r78): [48..49]
 a30(r79): [50..51]
  regions=1, blocks=12, points=52
    allocnos=31 (big 0), copies=0, conflicts=0, ranges=32
Disposition:
    1:r59  l0     0   27:r60  l0     0   26:r61  l0     1   24:r62  l0     0
   22:r63  l0     2   20:r64  l0     0   17:r65  l0     0   16:r66  l0     0
   15:r67  l0     1   13:r68  l0     0    6:r69  l0     2   11:r70  l0     0
   10:r71  l0     1    8:r72  l0     0    5:r73  l0     0    4:r74  l0     0
    0:r75  l0     0   29:r78  l0     0   30:r79  l0     0   28:r80  l0     0
   25:r81  l0     0   23:r82  l0     1   21:r83  l0     0   19:r84  l0     0
   18:r85  l0     0   14:r86  l0     0   12:r87  l0     0    9:r88  l0     0
    7:r89  l0     1    3:r90  l0     0    2:r91  l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


find_st_indx

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,4u} r1={5d,3u} r2={3d,1u} r4={5d,3u} r5={5d,3u} r6={1d,11u} r7={1d,13u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,10u} r17={16d,4u} r18={2d} r19={2d} r20={1d,36u,5e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={3d,1u} r60={1d,1u} r61={1d,1u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u,1e} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u,1e} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 289{161d,120u,8e} in 62{60 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 78 79
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])
        (reg:DI 5 di [ nvp ])) mUtility.c:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ nvp ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 n_nvp+0 S4 A32])
        (reg:SI 4 si [ n_nvp ])) mUtility.c:335 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n_nvp ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 st_point+0 S8 A64])
        (reg:DI 1 dx [ st_point ])) mUtility.c:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ st_point ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 st_indx+0 S4 A32])
        (reg:SI 2 cx [ st_indx ])) mUtility.c:335 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ st_indx ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 old_st_point+0 S8 A64])
        (reg:DI 37 r8 [ old_st_point ])) mUtility.c:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ old_st_point ])
        (nil)))
(note 7 6 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 7 14 2 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 n_nvp+0 S4 A32])) mUtility.c:336 89 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 78)
                (plus:SI (reg:SI 79)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:336 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 79)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 n_nvp+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32])
        (reg:SI 78)) mUtility.c:336 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 78)
        (nil)))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 st_indx+0 S4 A32])
            (const_int 0 [0]))) mUtility.c:337 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) mUtility.c:337 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 80 81 82 83
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 st_indx+0 S4 A32])) mUtility.c:337 89 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 60 [ D.5143 ])
        (sign_extend:DI (reg:SI 80))) mUtility.c:337 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 80)
        (nil)))
(insn 21 20 22 3 (parallel [
            (set (reg:DI 61 [ D.5143 ])
                (ashift:DI (reg:DI 60 [ D.5143 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:337 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.5143 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])) mUtility.c:337 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg/f:DI 62 [ D.5144 ])
                (plus:DI (reg:DI 61 [ D.5143 ])
                    (reg/f:DI 81)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:337 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_DEAD (reg:DI 61 [ D.5143 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])
                        (reg:DI 61 [ D.5143 ]))
                    (nil))))))
(insn 24 23 25 3 (set (reg/f:DI 63 [ D.5145 ])
        (mem/f:DI (reg/f:DI 62 [ D.5144 ]) [0 *_9+0 S8 A64])) mUtility.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.5144 ])
        (nil)))
(insn 25 24 26 3 (set (reg:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 st_point+0 S8 A64])) mUtility.c:337 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 old_st_point+0 S8 A64])) mUtility.c:337 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (set (reg:DI 1 dx)
        (reg:DI 82)) mUtility.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 4 si)
        (reg/f:DI 63 [ D.5145 ])) mUtility.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.5145 ])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 5 di)
        (reg:DI 83)) mUtility.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 30 29 31 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x3]  <function_decl 0x7f4452e3cb00 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mUtility.c:337 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 3 (set (reg:SI 64 [ D.5142 ])
        (reg:SI 0 ax)) mUtility.c:337 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 32 31 33 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.5142 ])
            (const_int 0 [0]))) mUtility.c:337 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.5142 ])
        (nil)))
(jump_insn 33 32 34 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) mUtility.c:337 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 94 4 (set (reg:SI 59 [ D.5142 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 st_indx+0 S4 A32])) mUtility.c:337 89 {*movsi_internal}
     (nil))
(jump_insn 94 35 95 4 (set (pc)
        (label_ref 82)) mUtility.c:337 650 {jump}
     (nil)
 -> 82)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 95 94 38)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 84
(code_label 38 95 39 5 130 "" [2 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 st_indx+0 S4 A32])) mUtility.c:338 89 {*movsi_internal}
     (nil))
(insn 41 40 96 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 84)) mUtility.c:338 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(jump_insn 96 41 97 5 (set (pc)
        (label_ref 74)) mUtility.c:338 650 {jump}
     (nil)
 -> 74)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 97 96 76)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 72 73 74 85 86 87 88 89
(code_label 76 97 44 6 134 "" [1 uses])
(note 44 76 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:339 89 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:DI 65 [ D.5146 ])
        (sign_extend:DI (reg:SI 85))) mUtility.c:339 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 66 [ D.5146 ])
                (plus:DI (reg:DI 65 [ D.5146 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.5146 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 67 [ D.5146 ])
                (ashift:DI (reg:DI 66 [ D.5146 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.5146 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 6 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])) mUtility.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg/f:DI 68 [ D.5144 ])
                (plus:DI (reg:DI 67 [ D.5146 ])
                    (reg/f:DI 86)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_DEAD (reg:DI 67 [ D.5146 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])
                        (reg:DI 67 [ D.5146 ]))
                    (nil))))))
(insn 51 50 52 6 (set (reg/f:DI 69 [ D.5145 ])
        (mem/f:DI (reg/f:DI 68 [ D.5144 ]) [0 *_19+0 S8 A64])) mUtility.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.5144 ])
        (nil)))
(insn 52 51 53 6 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:339 89 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 70 [ D.5143 ])
        (sign_extend:DI (reg:SI 87))) mUtility.c:339 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 54 53 55 6 (parallel [
            (set (reg:DI 71 [ D.5143 ])
                (ashift:DI (reg:DI 70 [ D.5143 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 70 [ D.5143 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 55 54 56 6 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])) mUtility.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg/f:DI 72 [ D.5144 ])
                (plus:DI (reg:DI 71 [ D.5143 ])
                    (reg/f:DI 88)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg:DI 71 [ D.5143 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 nvp+0 S8 A64])
                        (reg:DI 71 [ D.5143 ]))
                    (nil))))))
(insn 57 56 58 6 (set (reg/f:DI 73 [ D.5145 ])
        (mem/f:DI (reg/f:DI 72 [ D.5144 ]) [0 *_23+0 S8 A64])) mUtility.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.5144 ])
        (nil)))
(insn 58 57 59 6 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 st_point+0 S8 A64])) mUtility.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 6 (set (reg:DI 1 dx)
        (reg:DI 89)) mUtility.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 60 59 61 6 (set (reg:DI 4 si)
        (reg/f:DI 69 [ D.5145 ])) mUtility.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.5145 ])
        (nil)))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (reg/f:DI 73 [ D.5145 ])) mUtility.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.5145 ])
        (nil)))
(call_insn 62 61 63 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isbetween") [flags 0x3]  <function_decl 0x7f4452e3cb00 isbetween>) [0 isbetween S1 A8])
            (const_int 0 [0]))) mUtility.c:339 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 63 62 64 6 (set (reg:SI 74 [ D.5142 ])
        (reg:SI 0 ax)) mUtility.c:339 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 64 63 65 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74 [ D.5142 ])
            (const_int 0 [0]))) mUtility.c:339 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 74 [ D.5142 ])
        (nil)))
(jump_insn 65 64 66 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) mUtility.c:339 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 90
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:339 89 {*movsi_internal}
     (nil))
(insn 68 67 98 7 (parallel [
            (set (reg:SI 59 [ D.5142 ])
                (plus:SI (reg:SI 90)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:339 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(jump_insn 98 68 99 7 (set (pc)
        (label_ref 82)) mUtility.c:339 650 {jump}
     (nil)
 -> 82)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 71)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 99 72 8 133 "" [1 uses])
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:338 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(code_label 74 73 75 9 132 "" [1 uses])
(note 75 74 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 75 78 9 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) mUtility.c:338 89 {*movsi_internal}
     (nil))
(insn 78 77 79 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 N+0 S4 A32]))) mUtility.c:338 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) mUtility.c:338 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 76)
;;  succ:       6
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 59 [ D.5142 ])
        (const_int -1 [0xffffffffffffffff])) mUtility.c:342 89 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              4 [100.0%] 
;;              7 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 75
(code_label 82 81 83 11 131 "" [2 uses])
(note 83 82 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 88 11 (set (reg:SI 75 [ <retval> ])
        (reg:SI 59 [ D.5142 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.5142 ])
        (nil)))
(insn 88 84 91 11 (set (reg/i:SI 0 ax)
        (reg:SI 75 [ <retval> ])) mUtility.c:344 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 75 [ <retval> ])
        (nil)))
(insn 91 88 0 11 (use (reg/i:SI 0 ax)) mUtility.c:344 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function mischia (mischia, funcdef_no=33, decl_uid=1778, cgraph_uid=33)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r62,l0) best DIREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a15(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a21(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r85,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a25(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a33(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 78(l0): point = 0
   Insn 67(l0): point = 3
   Insn 66(l0): point = 5
   Insn 65(l0): point = 7
   Insn 64(l0): point = 9
   Insn 63(l0): point = 11
   Insn 62(l0): point = 13
   Insn 61(l0): point = 15
   Insn 60(l0): point = 17
   Insn 59(l0): point = 19
   Insn 58(l0): point = 21
   Insn 57(l0): point = 23
   Insn 56(l0): point = 25
   Insn 55(l0): point = 27
   Insn 54(l0): point = 29
   Insn 53(l0): point = 31
   Insn 52(l0): point = 33
   Insn 51(l0): point = 35
   Insn 50(l0): point = 37
   Insn 49(l0): point = 39
   Insn 48(l0): point = 41
   Insn 47(l0): point = 43
   Insn 46(l0): point = 45
   Insn 45(l0): point = 47
   Insn 44(l0): point = 49
   Insn 43(l0): point = 51
   Insn 42(l0): point = 53
   Insn 41(l0): point = 55
   Insn 40(l0): point = 57
   Insn 39(l0): point = 59
   Insn 38(l0): point = 61
   Insn 37(l0): point = 63
   Insn 36(l0): point = 65
   Insn 35(l0): point = 67
   Insn 72(l0): point = 70
   Insn 71(l0): point = 72
   Insn 81(l0): point = 75
   Insn 31(l0): point = 77
   Insn 30(l0): point = 79
   Insn 29(l0): point = 81
   Insn 18(l0): point = 84
   Insn 17(l0): point = 86
   Insn 16(l0): point = 88
   Insn 15(l0): point = 90
   Insn 14(l0): point = 92
   Insn 13(l0): point = 94
   Insn 12(l0): point = 96
   Insn 11(l0): point = 98
   Insn 24(l0): point = 101
   Insn 23(l0): point = 103
   Insn 22(l0): point = 105
   Insn 79(l0): point = 108
   Insn 7(l0): point = 110
   Insn 3(l0): point = 112
   Insn 2(l0): point = 114
 a0(r75): [6..9]
 a1(r95): [6..7]
 a2(r94): [10..11]
 a3(r74): [10..13]
 a4(r73): [14..15]
 a5(r93): [16..17]
 a6(r68): [20..33]
 a7(r72): [20..21]
 a8(r71): [22..23]
 a9(r92): [24..25]
 a10(r70): [24..27]
 a11(r69): [28..29]
 a12(r91): [30..31]
 a13(r90): [34..35]
 a14(r67): [34..37]
 a15(r66): [38..39]
 a16(r89): [40..41]
 a17(r88): [44..45]
 a18(r65): [46..47]
 a19(r87): [48..49]
 a20(r64): [48..51]
 a21(r63): [52..53]
 a22(r86): [54..55]
 a23(r85): [58..59]
 a24(r62): [64..65]
 a25(r84): [66..67]
 a26(r82): [78..79]
 a27(r83): [80..81]
 a28(r79): [104..105]
 a29(r61): [87..90]
 a30(r78): [87..88]
 a31(r77): [91..92]
 a32(r60): [91..94]
 a33(r59): [95..96]
 a34(r76): [97..98]
Compressing live ranges: from 117 to 54 - 46%
Ranges after the compression:
 a0(r75): [0..1]
 a1(r95): [0..1]
 a2(r94): [2..3]
 a3(r74): [2..3]
 a4(r73): [4..5]
 a5(r93): [6..7]
 a6(r68): [8..17]
 a7(r72): [8..9]
 a8(r71): [10..11]
 a9(r92): [12..13]
 a10(r70): [12..13]
 a11(r69): [14..15]
 a12(r91): [16..17]
 a13(r90): [18..19]
 a14(r67): [18..19]
 a15(r66): [20..21]
 a16(r89): [22..23]
 a17(r88): [24..25]
 a18(r65): [26..27]
 a19(r87): [28..29]
 a20(r64): [28..29]
 a21(r63): [30..31]
 a22(r86): [32..33]
 a23(r85): [34..35]
 a24(r62): [36..37]
 a25(r84): [38..39]
 a26(r82): [40..41]
 a27(r83): [42..43]
 a28(r79): [52..53]
 a29(r61): [44..45]
 a30(r78): [44..45]
 a31(r77): [46..47]
 a32(r60): [46..47]
 a33(r59): [48..49]
 a34(r76): [50..51]
  regions=1, blocks=9, points=54
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=35
Disposition:
   33:r59  l0     0   32:r60  l0     1   29:r61  l0     1   24:r62  l0     0
   21:r63  l0     0   20:r64  l0     1   18:r65  l0     0   15:r66  l0     0
   14:r67  l0     1    6:r68  l0     1   11:r69  l0     0   10:r70  l0     2
    8:r71  l0     0    7:r72  l0     0    4:r73  l0     0    3:r74  l0     1
    0:r75  l0     1   34:r76  l0     0   31:r77  l0     0   30:r78  l0     0
   28:r79  l0     0   26:r82  l0     0   27:r83  l0     0   25:r84  l0     0
   23:r85  l0     0   22:r86  l0     0   19:r87  l0     0   17:r88  l0     0
   16:r89  l0     0   13:r90  l0     0   12:r91  l0     0    9:r92  l0     0
    5:r93  l0     0    2:r94  l0     0    1:r95  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mischia

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={17d,2u} r18={1d} r19={1d} r20={1d,35u,7e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u,1e} r65={1d,1u} r66={1d,1u} r67={1d,1u,1e} r68={1d,1u} r69={1d,1u} r70={1d,1u,1e} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u,1e} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 227{115d,100u,12e} in 55{54 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
        (reg:DI 5 di [ carte ])) mUtility.c:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ carte ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
        (reg:SI 4 si [ N ])) mUtility.c:345 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 79 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) mUtility.c:348 89 {*movsi_internal}
     (nil))
(jump_insn 79 7 80 2 (set (pc)
        (label_ref 19)) mUtility.c:348 650 {jump}
     (nil)
 -> 19)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 21)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 76 77 78
(code_label 21 80 10 3 137 "" [1 uses])
(note 10 21 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:348 89 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 59 [ D.5147 ])
        (sign_extend:DI (reg:SI 76))) mUtility.c:348 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg:DI 60 [ D.5147 ])
                (ashift:DI (reg:DI 59 [ D.5147 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:348 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.5147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 3 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])) mUtility.c:348 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:DI 61 [ D.5148 ])
                (plus:DI (reg:DI 60 [ D.5147 ])
                    (reg/f:DI 77)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:348 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_DEAD (reg:DI 60 [ D.5147 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
                        (reg:DI 60 [ D.5147 ]))
                    (nil))))))
(insn 16 15 17 3 (set (reg:SI 78)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:348 89 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (mem:SI (reg/f:DI 61 [ D.5148 ]) [0 *_8+0 S4 A32])
        (reg:SI 78)) mUtility.c:348 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 78)
        (expr_list:REG_DEAD (reg/f:DI 61 [ D.5148 ])
            (nil))))
(insn 18 17 19 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:348 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 79
(code_label 19 18 20 4 136 "" [1 uses])
(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 4 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:348 89 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 79)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32]))) mUtility.c:348 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) mUtility.c:348 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 82 83
(note 25 24 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 25 30 5 (set (reg:SI 83)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])) mUtility.c:349 89 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg:SI 83)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:349 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 N+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 31 30 81 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 82)) mUtility.c:349 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(jump_insn 81 31 82 5 (set (pc)
        (label_ref 68)) mUtility.c:349 650 {jump}
     (nil)
 -> 68)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 82 81 70)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 65 66 67 68 69 70 71 72 73 74 75 84 85 86 87 88 89 90 91 92 93 94 95
(code_label 70 82 34 6 139 "" [1 uses])
(note 34 70 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:350 89 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg:SI 62 [ D.5149 ])
                (plus:SI (reg:SI 84)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:350 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 84)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 37 36 38 6 (set (reg:SI 5 di)
        (reg:SI 62 [ D.5149 ])) mUtility.c:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ D.5149 ])
        (nil)))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("irand") [flags 0x3]  <function_decl 0x7f4452e3ca00 irand>) [0 irand S1 A8])
            (const_int 0 [0]))) mUtility.c:350 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 39 38 40 6 (set (reg:SI 85)
        (reg:SI 0 ax)) mUtility.c:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 40 39 41 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 85)) mUtility.c:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 41 40 42 6 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:351 89 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 63 [ D.5147 ])
        (sign_extend:DI (reg:SI 86))) mUtility.c:351 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 64 [ D.5147 ])
                (ashift:DI (reg:DI 63 [ D.5147 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:351 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.5147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 6 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])) mUtility.c:351 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg/f:DI 65 [ D.5148 ])
                (plus:DI (reg:DI 64 [ D.5147 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:351 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_DEAD (reg:DI 64 [ D.5147 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
                        (reg:DI 64 [ D.5147 ]))
                    (nil))))))
(insn 46 45 47 6 (set (reg:SI 88)
        (mem:SI (reg/f:DI 65 [ D.5148 ]) [0 *_15+0 S4 A32])) mUtility.c:351 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.5148 ])
        (nil)))
(insn 47 46 48 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 comodo+0 S4 A32])
        (reg:SI 88)) mUtility.c:351 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 48 47 49 6 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) mUtility.c:352 89 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:DI 66 [ D.5147 ])
        (sign_extend:DI (reg:SI 89))) mUtility.c:352 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 67 [ D.5147 ])
                (ashift:DI (reg:DI 66 [ D.5147 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:352 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.5147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 6 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])) mUtility.c:352 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg/f:DI 68 [ D.5148 ])
                (plus:DI (reg:DI 67 [ D.5147 ])
                    (reg/f:DI 90)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:352 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg:DI 67 [ D.5147 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
                        (reg:DI 67 [ D.5147 ]))
                    (nil))))))
(insn 53 52 54 6 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) mUtility.c:352 89 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:DI 69 [ D.5147 ])
        (sign_extend:DI (reg:SI 91))) mUtility.c:352 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 70 [ D.5147 ])
                (ashift:DI (reg:DI 69 [ D.5147 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:352 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.5147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 6 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])) mUtility.c:352 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg/f:DI 71 [ D.5148 ])
                (plus:DI (reg:DI 70 [ D.5147 ])
                    (reg/f:DI 92)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:352 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg:DI 70 [ D.5147 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
                        (reg:DI 70 [ D.5147 ]))
                    (nil))))))
(insn 58 57 59 6 (set (reg:SI 72 [ D.5149 ])
        (mem:SI (reg/f:DI 71 [ D.5148 ]) [0 *_22+0 S4 A32])) mUtility.c:352 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5148 ])
        (nil)))
(insn 59 58 60 6 (set (mem:SI (reg/f:DI 68 [ D.5148 ]) [0 *_19+0 S4 A32])
        (reg:SI 72 [ D.5149 ])) mUtility.c:352 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 72 [ D.5149 ])
        (expr_list:REG_DEAD (reg/f:DI 68 [ D.5148 ])
            (nil))))
(insn 60 59 61 6 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) mUtility.c:353 89 {*movsi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:DI 73 [ D.5147 ])
        (sign_extend:DI (reg:SI 93))) mUtility.c:353 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 74 [ D.5147 ])
                (ashift:DI (reg:DI 73 [ D.5147 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:353 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 73 [ D.5147 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 62 64 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])) mUtility.c:353 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 75 [ D.5148 ])
                (plus:DI (reg:DI 74 [ D.5147 ])
                    (reg/f:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:353 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_DEAD (reg:DI 74 [ D.5147 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 carte+0 S8 A64])
                        (reg:DI 74 [ D.5147 ]))
                    (nil))))))
(insn 65 64 66 6 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 comodo+0 S4 A32])) mUtility.c:353 89 {*movsi_internal}
     (nil))
(insn 66 65 67 6 (set (mem:SI (reg/f:DI 75 [ D.5148 ]) [0 *_26+0 S4 A32])
        (reg:SI 95)) mUtility.c:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg/f:DI 75 [ D.5148 ])
            (nil))))
(insn 67 66 68 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:349 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 68 67 69 7 138 "" [1 uses])
(note 69 68 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 69 72 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) mUtility.c:349 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 73 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) mUtility.c:349 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 70)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 73 72 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 73 0 8 (const_int 0 [0]) mUtility.c:355 676 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function coord (coord, funcdef_no=34, decl_uid=1790, cgraph_uid=34)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 146.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r174,l0) best DIREG, allocno GENERAL_REGS
    r173: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r173,l0) best SIREG, allocno GENERAL_REGS
    r172: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r172,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r171: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r171,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r170: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r170,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r169: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a62 (r169,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r168: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a67 (r168,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r167: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a91 (r167,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r166: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a93 (r166,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r165: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a96 (r165,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r164: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a98 (r164,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r163: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a100 (r163,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r162: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a101 (r162,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r161: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a102 (r161,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r160: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a103 (r160,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r159: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a105 (r159,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r158: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a104 (r158,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r157: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a107 (r157,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r156: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a108 (r156,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r155: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a109 (r155,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r153,l0) best SIREG, allocno GENERAL_REGS
    r152: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r152,l0) best DIREG, allocno GENERAL_REGS
    r151: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r151,l0) best SIREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r149,l0) best SIREG, allocno GENERAL_REGS
    r148: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r148,l0) best AREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r146,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r145: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r145,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r144: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r144,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r143: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a9 (r143,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r142: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r142,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r141: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r141,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r140: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r140,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r139: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r139,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r138: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r138,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r137: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r137,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r136: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r136,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r135: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r135,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r134: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r134,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r133: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r133,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r132: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r132,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r131: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r131,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r130: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r130,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r129: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a24 (r129,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r128: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r128,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r127: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r127,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a22 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r125,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r124: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r124,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r123: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r123,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r122: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r122,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r121: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r121,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r120: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r120,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r118,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r117: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r117,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r116: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r116,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r115: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r115,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r114: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r114,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r113: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r113,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r112: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r112,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r111: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a44 (r111,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r110: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r110,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r109: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r109,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r108: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r108,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r107: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r107,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r106: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r106,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r105: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r105,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r104: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r104,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r99,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a59 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a60 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a61 (r93,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a65 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a68 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a69 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a71 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a72 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a73 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a74 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a70 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a75 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a77 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a78 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a79 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a80 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a76 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a81 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a83 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a84 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a85 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a86 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a82 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a87 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a88 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a89 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a90 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a66 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a92 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a94 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a97 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a99 (r61,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a95 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a106 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r148,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r146,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r145,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r120,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r172,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r144,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r143,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a10(r138,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a11(r142,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r141,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r140,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r139,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a15(r137,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r132,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a17(r136,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r135,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r134,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r133,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r131,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r126,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r130,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a24(r129,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a25(r128,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r127,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r125,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r124,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r123,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a30(r122,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r121,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r171,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r119,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r118,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a35(r117,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r92,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r170,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a38(r116,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r115,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r110,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r114,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r113,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r112,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a44(r111,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a45(r109,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r104,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r108,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r107,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a49(r106,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r105,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r103,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r98,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r101,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r100,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r99,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a57(r97,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r96,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r95,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a60(r94,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a61(r93,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a62(r169,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a63(r91,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a64(r90,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a65(r89,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a66(r65,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a67(r168,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a68(r88,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a69(r87,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a70(r82,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a71(r86,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a72(r85,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a73(r84,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a74(r83,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a75(r81,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a76(r76,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a77(r80,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a78(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a79(r78,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a80(r77,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a81(r75,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a82(r70,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a83(r74,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a84(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a85(r72,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a86(r71,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a87(r69,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a88(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a89(r67,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a90(r66,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a91(r167,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a92(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a93(r166,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a94(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a95(r60,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a96(r165,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a97(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a98(r164,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a99(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a100(r163,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a101(r162,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a102(r161,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a103(r160,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a104(r158,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a105(r159,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a106(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a107(r157,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a108(r156,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a109(r155,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a110(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a111(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a112(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a113(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a114(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a115(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 157(l0): point = 0
   Insn 154(l0): point = 2
   Insn 150(l0): point = 4
   Insn 147(l0): point = 6
   Insn 146(l0): point = 8
   Insn 145(l0): point = 10
   Insn 144(l0): point = 12
   Insn 143(l0): point = 14
   Insn 142(l0): point = 16
   Insn 141(l0): point = 18
   Insn 140(l0): point = 20
   Insn 139(l0): point = 22
   Insn 138(l0): point = 24
   Insn 137(l0): point = 26
   Insn 136(l0): point = 28
   Insn 135(l0): point = 30
   Insn 134(l0): point = 32
   Insn 133(l0): point = 34
   Insn 132(l0): point = 36
   Insn 131(l0): point = 38
   Insn 130(l0): point = 40
   Insn 129(l0): point = 42
   Insn 128(l0): point = 44
   Insn 127(l0): point = 46
   Insn 126(l0): point = 48
   Insn 125(l0): point = 50
   Insn 124(l0): point = 52
   Insn 123(l0): point = 54
   Insn 122(l0): point = 56
   Insn 121(l0): point = 58
   Insn 120(l0): point = 60
   Insn 119(l0): point = 62
   Insn 118(l0): point = 64
   Insn 117(l0): point = 66
   Insn 116(l0): point = 68
   Insn 115(l0): point = 70
   Insn 114(l0): point = 72
   Insn 113(l0): point = 74
   Insn 112(l0): point = 76
   Insn 111(l0): point = 78
   Insn 110(l0): point = 80
   Insn 109(l0): point = 82
   Insn 108(l0): point = 84
   Insn 107(l0): point = 86
   Insn 106(l0): point = 88
   Insn 105(l0): point = 90
   Insn 104(l0): point = 92
   Insn 103(l0): point = 94
   Insn 102(l0): point = 96
   Insn 101(l0): point = 98
   Insn 100(l0): point = 100
   Insn 99(l0): point = 102
   Insn 98(l0): point = 104
   Insn 97(l0): point = 106
   Insn 96(l0): point = 108
   Insn 95(l0): point = 110
   Insn 94(l0): point = 112
   Insn 93(l0): point = 114
   Insn 92(l0): point = 116
   Insn 91(l0): point = 118
   Insn 90(l0): point = 120
   Insn 89(l0): point = 122
   Insn 88(l0): point = 124
   Insn 87(l0): point = 126
   Insn 86(l0): point = 128
   Insn 85(l0): point = 130
   Insn 84(l0): point = 132
   Insn 83(l0): point = 134
   Insn 82(l0): point = 136
   Insn 81(l0): point = 138
   Insn 80(l0): point = 140
   Insn 79(l0): point = 142
   Insn 78(l0): point = 144
   Insn 77(l0): point = 146
   Insn 76(l0): point = 148
   Insn 75(l0): point = 150
   Insn 74(l0): point = 152
   Insn 73(l0): point = 154
   Insn 72(l0): point = 156
   Insn 71(l0): point = 158
   Insn 70(l0): point = 160
   Insn 69(l0): point = 162
   Insn 68(l0): point = 164
   Insn 67(l0): point = 166
   Insn 66(l0): point = 168
   Insn 65(l0): point = 170
   Insn 64(l0): point = 172
   Insn 63(l0): point = 174
   Insn 62(l0): point = 176
   Insn 61(l0): point = 178
   Insn 60(l0): point = 180
   Insn 59(l0): point = 182
   Insn 58(l0): point = 184
   Insn 57(l0): point = 186
   Insn 56(l0): point = 188
   Insn 55(l0): point = 190
   Insn 54(l0): point = 192
   Insn 53(l0): point = 194
   Insn 52(l0): point = 196
   Insn 51(l0): point = 198
   Insn 50(l0): point = 200
   Insn 49(l0): point = 202
   Insn 48(l0): point = 204
   Insn 47(l0): point = 206
   Insn 46(l0): point = 208
   Insn 45(l0): point = 210
   Insn 44(l0): point = 212
   Insn 43(l0): point = 214
   Insn 42(l0): point = 216
   Insn 41(l0): point = 218
   Insn 40(l0): point = 220
   Insn 39(l0): point = 222
   Insn 38(l0): point = 224
   Insn 37(l0): point = 226
   Insn 36(l0): point = 228
   Insn 35(l0): point = 230
   Insn 34(l0): point = 232
   Insn 33(l0): point = 234
   Insn 32(l0): point = 236
   Insn 31(l0): point = 238
   Insn 30(l0): point = 240
   Insn 29(l0): point = 242
   Insn 28(l0): point = 244
   Insn 27(l0): point = 246
   Insn 26(l0): point = 248
   Insn 25(l0): point = 250
   Insn 24(l0): point = 252
   Insn 23(l0): point = 254
   Insn 22(l0): point = 256
   Insn 21(l0): point = 258
   Insn 20(l0): point = 260
   Insn 19(l0): point = 262
   Insn 18(l0): point = 264
   Insn 17(l0): point = 266
   Insn 16(l0): point = 268
   Insn 15(l0): point = 270
   Insn 14(l0): point = 272
   Insn 13(l0): point = 274
   Insn 12(l0): point = 276
   Insn 11(l0): point = 278
   Insn 10(l0): point = 280
   Insn 9(l0): point = 282
   Insn 8(l0): point = 284
   Insn 4(l0): point = 286
   Insn 3(l0): point = 288
   Insn 2(l0): point = 290
 a0(r148): [3..4]
 a1(r147): [5..6]
 a2(r174): [11..14]
 a3(r173): [13..16]
 a4(r146): [19..20]
 a5(r145): [21..22]
 a6(r120): [21..74]
 a7(r172): [23..24]
 a8(r144): [23..26]
 a9(r143): [27..28]
 a10(r138): [27..38]
 a11(r142): [29..30]
 a12(r141): [29..32]
 a13(r140): [33..34]
 a14(r139): [33..36]
 a15(r137): [39..40]
 a16(r132): [39..50]
 a17(r136): [41..42]
 a18(r135): [41..44]
 a19(r134): [45..46]
 a20(r133): [45..48]
 a21(r131): [51..52]
 a22(r126): [51..62]
 a23(r130): [53..54]
 a24(r129): [53..56]
 a25(r128): [57..58]
 a26(r127): [57..60]
 a27(r125): [63..64]
 a28(r124): [63..66]
 a29(r123): [67..68]
 a30(r122): [67..70]
 a31(r121): [71..72]
 a32(r171): [75..76]
 a33(r119): [75..78]
 a34(r118): [81..82]
 a35(r117): [83..84]
 a36(r92): [83..136]
 a37(r170): [85..86]
 a38(r116): [85..88]
 a39(r115): [89..90]
 a40(r110): [89..100]
 a41(r114): [91..92]
 a42(r113): [91..94]
 a43(r112): [95..96]
 a44(r111): [95..98]
 a45(r109): [101..102]
 a46(r104): [101..112]
 a47(r108): [103..104]
 a48(r107): [103..106]
 a49(r106): [107..108]
 a50(r105): [107..110]
 a51(r103): [113..114]
 a52(r98): [113..124]
 a53(r102): [115..116]
 a54(r101): [115..118]
 a55(r100): [119..120]
 a56(r99): [119..122]
 a57(r97): [125..126]
 a58(r96): [125..128]
 a59(r95): [129..130]
 a60(r94): [129..132]
 a61(r93): [133..134]
 a62(r169): [137..138]
 a63(r91): [137..140]
 a64(r90): [143..144]
 a65(r89): [145..146]
 a66(r65): [145..196]
 a67(r168): [147..148]
 a68(r88): [147..150]
 a69(r87): [151..152]
 a70(r82): [151..162]
 a71(r86): [153..154]
 a72(r85): [153..156]
 a73(r84): [157..158]
 a74(r83): [157..160]
 a75(r81): [163..164]
 a76(r76): [163..174]
 a77(r80): [165..166]
 a78(r79): [165..168]
 a79(r78): [169..170]
 a80(r77): [169..172]
 a81(r75): [175..176]
 a82(r70): [175..186]
 a83(r74): [177..178]
 a84(r73): [177..180]
 a85(r72): [181..182]
 a86(r71): [181..184]
 a87(r69): [187..188]
 a88(r68): [187..190]
 a89(r67): [191..192]
 a90(r66): [191..194]
 a91(r167): [197..198]
 a92(r64): [197..200]
 a93(r166): [203..204]
 a94(r63): [205..206]
 a95(r60): [205..222]
 a96(r165): [207..208]
 a97(r62): [207..210]
 a98(r164): [211..212]
 a99(r61): [211..214]
 a100(r163 [0]): [219..220]
 a100(r163 [1]): [219..220]
 a101(r162 [0]): [227..228]
 a101(r162 [1]): [227..228]
 a102(r161): [231..232]
 a103(r160 [0]): [237..238]
 a103(r160 [1]): [237..238]
 a104(r158): [241..242]
 a105(r159): [243..244]
 a106(r59): [243..246]
 a107(r157): [247..248]
 a108(r156): [247..250]
 a109(r155): [253..254]
 a110(r154): [259..262]
 a111(r153): [261..264]
 a112(r152): [269..272]
 a113(r151): [271..274]
 a114(r150): [279..282]
 a115(r149): [281..284]
Compressing live ranges: from 293 to 130 - 44%
Ranges after the compression:
 a0(r148): [0..1]
 a1(r147): [2..3]
 a2(r174): [4..5]
 a3(r173): [4..5]
 a4(r146): [6..7]
 a5(r145): [8..9]
 a6(r120): [8..35]
 a7(r172): [10..11]
 a8(r144): [10..11]
 a9(r143): [12..13]
 a10(r138): [12..17]
 a11(r142): [14..15]
 a12(r141): [14..15]
 a13(r140): [16..17]
 a14(r139): [16..17]
 a15(r137): [18..19]
 a16(r132): [18..23]
 a17(r136): [20..21]
 a18(r135): [20..21]
 a19(r134): [22..23]
 a20(r133): [22..23]
 a21(r131): [24..25]
 a22(r126): [24..29]
 a23(r130): [26..27]
 a24(r129): [26..27]
 a25(r128): [28..29]
 a26(r127): [28..29]
 a27(r125): [30..31]
 a28(r124): [30..31]
 a29(r123): [32..33]
 a30(r122): [32..33]
 a31(r121): [34..35]
 a32(r171): [36..37]
 a33(r119): [36..37]
 a34(r118): [38..39]
 a35(r117): [40..41]
 a36(r92): [40..67]
 a37(r170): [42..43]
 a38(r116): [42..43]
 a39(r115): [44..45]
 a40(r110): [44..49]
 a41(r114): [46..47]
 a42(r113): [46..47]
 a43(r112): [48..49]
 a44(r111): [48..49]
 a45(r109): [50..51]
 a46(r104): [50..55]
 a47(r108): [52..53]
 a48(r107): [52..53]
 a49(r106): [54..55]
 a50(r105): [54..55]
 a51(r103): [56..57]
 a52(r98): [56..61]
 a53(r102): [58..59]
 a54(r101): [58..59]
 a55(r100): [60..61]
 a56(r99): [60..61]
 a57(r97): [62..63]
 a58(r96): [62..63]
 a59(r95): [64..65]
 a60(r94): [64..65]
 a61(r93): [66..67]
 a62(r169): [68..69]
 a63(r91): [68..69]
 a64(r90): [70..71]
 a65(r89): [72..73]
 a66(r65): [72..97]
 a67(r168): [74..75]
 a68(r88): [74..75]
 a69(r87): [76..77]
 a70(r82): [76..81]
 a71(r86): [78..79]
 a72(r85): [78..79]
 a73(r84): [80..81]
 a74(r83): [80..81]
 a75(r81): [82..83]
 a76(r76): [82..87]
 a77(r80): [84..85]
 a78(r79): [84..85]
 a79(r78): [86..87]
 a80(r77): [86..87]
 a81(r75): [88..89]
 a82(r70): [88..93]
 a83(r74): [90..91]
 a84(r73): [90..91]
 a85(r72): [92..93]
 a86(r71): [92..93]
 a87(r69): [94..95]
 a88(r68): [94..95]
 a89(r67): [96..97]
 a90(r66): [96..97]
 a91(r167): [98..99]
 a92(r64): [98..99]
 a93(r166): [100..101]
 a94(r63): [102..103]
 a95(r60): [102..109]
 a96(r165): [104..105]
 a97(r62): [104..105]
 a98(r164): [106..107]
 a99(r61): [106..107]
 a100(r163 [0]): [108..109]
 a100(r163 [1]): [108..109]
 a101(r162 [0]): [110..111]
 a101(r162 [1]): [110..111]
 a102(r161): [112..113]
 a103(r160 [0]): [114..115]
 a103(r160 [1]): [114..115]
 a104(r158): [116..117]
 a105(r159): [118..119]
 a106(r59): [118..119]
 a107(r157): [120..121]
 a108(r156): [120..121]
 a109(r155): [122..123]
 a110(r154): [124..125]
 a111(r153): [124..125]
 a112(r152): [126..127]
 a113(r151): [126..127]
 a114(r150): [128..129]
 a115(r149): [128..129]
  regions=1, blocks=3, points=130
    allocnos=116 (big 3), copies=0, conflicts=0, ranges=119
Disposition:
  106:r59  l0     9   95:r60  l0   mem   99:r61  l0     8   97:r62  l0     9
   94:r63  l0     8   92:r64  l0     9   66:r65  l0     9   90:r66  l0    10
   89:r67  l0     8   88:r68  l0    10   87:r69  l0     8   82:r70  l0    10
   86:r71  l0    11   85:r72  l0     8   84:r73  l0    11   83:r74  l0     8
   81:r75  l0     8   76:r76  l0    10   80:r77  l0    11   79:r78  l0     8
   78:r79  l0    11   77:r80  l0     8   75:r81  l0     8   70:r82  l0    10
   74:r83  l0    11   73:r84  l0     8   72:r85  l0    11   71:r86  l0     8
   69:r87  l0     8   68:r88  l0    10   65:r89  l0     8   64:r90  l0     8
   63:r91  l0     9   36:r92  l0     9   61:r93  l0     8   60:r94  l0    10
   59:r95  l0     8   58:r96  l0    10   57:r97  l0     8   52:r98  l0    10
   56:r99  l0    11   55:r100 l0     8   54:r101 l0    11   53:r102 l0     8
   51:r103 l0     8   46:r104 l0    10   50:r105 l0    11   49:r106 l0     8
   48:r107 l0    11   47:r108 l0     8   45:r109 l0     8   40:r110 l0    10
   44:r111 l0    11   43:r112 l0     8   42:r113 l0    11   41:r114 l0     8
   39:r115 l0     8   38:r116 l0    10   35:r117 l0     8   34:r118 l0     8
   33:r119 l0     9    6:r120 l0     9   31:r121 l0     8   30:r122 l0    10
   29:r123 l0     8   28:r124 l0    10   27:r125 l0     8   22:r126 l0    10
   26:r127 l0    11   25:r128 l0     8   24:r129 l0    11   23:r130 l0     8
   21:r131 l0     8   16:r132 l0    10   20:r133 l0    11   19:r134 l0     8
   18:r135 l0    11   17:r136 l0     8   15:r137 l0     8   10:r138 l0    10
   14:r139 l0    11   13:r140 l0     8   12:r141 l0    11   11:r142 l0     8
    9:r143 l0     8    8:r144 l0    10    5:r145 l0     8    4:r146 l0     8
    1:r147 l0     0    0:r148 l0     0  115:r149 l0     1  114:r150 l0     0
  113:r151 l0     1  112:r152 l0     0  111:r153 l0     1  110:r154 l0     0
  109:r155 l0     8  108:r156 l0     9  107:r157 l0     8  104:r158 l0     8
  105:r159 l0     8  103:r160 l0     0  102:r161 l0     8  101:r162 l0     0
  100:r163 l0     0   98:r164 l0     9   96:r165 l0     8   93:r166 l0     8
   91:r167 l0     8   67:r168 l0     8   62:r169 l0     8   37:r170 l0     8
   32:r171 l0     8    7:r172 l0     8    3:r173 l0     1    2:r174 l0     0
+++Costs: overall 8, reg -12, mem 20, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


coord

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={9d,2u} r1={8d,1u} r2={8d} r4={12d,5u} r5={12d,5u} r6={1d,2u} r7={1d,15u} r8={7d,4u} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,3u} r17={12d} r18={7d} r19={7d} r20={1d,68u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} 
;;    total ref usage 678{457d,221u,0e} in 146{139 regular + 7 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -216 [0xffffffffffffff28])) [0 pa+0 S8 A64])
        (reg:DI 5 di [ pa ])) mUtility.c:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pa ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 pb+0 S8 A64])
        (reg:DI 4 si [ pb ])) mUtility.c:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pb ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 p+0 S8 A64])
        (reg:DI 1 dx [ p ])) mUtility.c:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:360 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -216 [0xffffffffffffff28])) [0 pa+0 S8 A64])) mUtility.c:360 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 149)) mUtility.c:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 150)) mUtility.c:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:360 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:361 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 pb+0 S8 A64])) mUtility.c:361 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 151)) mUtility.c:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 152)) mUtility.c:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:361 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:363 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:363 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 153)) mUtility.c:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 154)) mUtility.c:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 154)
        (nil)))
(call_insn 22 21 23 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:363 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 2 (set (reg:XF 155)
        (reg:XF 8 st)) mUtility.c:363 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 24 23 25 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 AB+0 S16 A128])
        (reg:XF 155)) mUtility.c:363 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 155)
        (nil)))
(insn 25 24 26 2 (set (reg:XF 156)
        (mem/c:XF (reg/f:DI 16 argp) [0 vel+0 S16 A128])) mUtility.c:364 131 {*movxf_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:XF 157)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 t+0 S16 A128])) mUtility.c:364 131 {*movxf_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:XF 59 [ D.5150 ])
        (mult:XF (reg:XF 156)
            (reg:XF 157))) mUtility.c:364 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 157)
        (expr_list:REG_DEAD (reg:XF 156)
            (nil))))
(insn 28 27 29 2 (set (reg:XF 159)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:364 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 29 28 30 2 (set (reg:XF 158)
        (div:XF (reg:XF 59 [ D.5150 ])
            (reg:XF 159))) mUtility.c:364 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 159)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5150 ])
            (nil))))
(insn 30 29 31 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 AP+0 S16 A128])
        (reg:XF 158)) mUtility.c:364 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 158)
        (nil)))
(insn 31 30 32 2 (set (reg:XF 160)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 AP+0 S16 A128])) mUtility.c:366 131 {*movxf_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 160)) mUtility.c:366 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 160)
        (nil)))
(call_insn/u 33 32 34 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("cosl") [flags 0x41]  <function_decl 0x7f4452d47d00 cosl>) [0 __builtin_cosl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:366 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 34 33 35 2 (set (reg:XF 161)
        (reg:XF 8 st)) mUtility.c:366 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 35 34 36 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 cos_ap+0 S16 A128])
        (reg:XF 161)) mUtility.c:366 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 161)
        (nil)))
(insn 36 35 37 2 (set (reg:XF 162)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 AP+0 S16 A128])) mUtility.c:367 131 {*movxf_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 162)) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 162)
        (nil)))
(call_insn/u 38 37 39 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:367 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 39 38 40 2 (set (reg:XF 60 [ D.5150 ])
        (reg:XF 8 st)) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 40 39 41 2 (set (reg:XF 163)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 AB+0 S16 A128])) mUtility.c:367 131 {*movxf_internal_rex64}
     (nil))
(insn 41 40 42 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 163)) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 163)
        (nil)))
(call_insn/u 42 41 43 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:367 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 43 42 44 2 (set (reg:XF 61 [ D.5150 ])
        (reg:XF 8 st)) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 44 43 45 2 (set (reg:XF 164)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 45 44 46 2 (set (reg:XF 62 [ D.5150 ])
        (mult:XF (reg:XF 61 [ D.5150 ])
            (reg:XF 164))) mUtility.c:367 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 164)
        (expr_list:REG_DEAD (reg:XF 61 [ D.5150 ])
            (nil))))
(insn 46 45 47 2 (set (reg:XF 165)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 47 46 48 2 (set (reg:XF 63 [ D.5150 ])
        (mult:XF (reg:XF 62 [ D.5150 ])
            (reg:XF 165))) mUtility.c:367 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 165)
        (expr_list:REG_DEAD (reg:XF 62 [ D.5150 ])
            (nil))))
(insn 48 47 49 2 (set (reg:XF 166)
        (div:XF (reg:XF 60 [ D.5150 ])
            (reg:XF 63 [ D.5150 ]))) mUtility.c:367 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 63 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5150 ])
            (nil))))
(insn 49 48 50 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 sin_rap+0 S16 A128])
        (reg:XF 166)) mUtility.c:367 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 166)
        (nil)))
(insn 50 49 51 2 (set (reg:XF 64 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (reg:XF 167)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 cos_ap+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:XF 65 [ D.5150 ])
        (mult:XF (reg:XF 64 [ D.5150 ])
            (reg:XF 167))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 167)
        (expr_list:REG_DEAD (reg:XF 64 [ D.5150 ])
            (nil))))
(insn 53 52 54 2 (set (reg:XF 66 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 54 53 55 2 (set (reg:XF 67 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:XF 68 [ D.5150 ])
        (mult:XF (reg:XF 66 [ D.5150 ])
            (reg:XF 67 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 66 [ D.5150 ])
            (nil))))
(insn 56 55 57 2 (set (reg:XF 69 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 B+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 57 56 58 2 (set (reg:XF 70 [ D.5150 ])
        (mult:XF (reg:XF 68 [ D.5150 ])
            (reg:XF 69 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 69 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 68 [ D.5150 ])
            (nil))))
(insn 58 57 59 2 (set (reg:XF 71 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (reg:XF 72 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 60 59 61 2 (set (reg:XF 73 [ D.5150 ])
        (mult:XF (reg:XF 71 [ D.5150 ])
            (reg:XF 72 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 71 [ D.5150 ])
            (nil))))
(insn 61 60 62 2 (set (reg:XF 74 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 B+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 62 61 63 2 (set (reg:XF 75 [ D.5150 ])
        (mult:XF (reg:XF 73 [ D.5150 ])
            (reg:XF 74 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 74 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 73 [ D.5150 ])
            (nil))))
(insn 63 62 64 2 (set (reg:XF 76 [ D.5150 ])
        (plus:XF (reg:XF 70 [ D.5150 ])
            (reg:XF 75 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5150 ])
            (nil))))
(insn 64 63 65 2 (set (reg:XF 77 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (reg:XF 78 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 66 65 67 2 (set (reg:XF 79 [ D.5150 ])
        (mult:XF (reg:XF 77 [ D.5150 ])
            (reg:XF 78 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 78 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 77 [ D.5150 ])
            (nil))))
(insn 67 66 68 2 (set (reg:XF 80 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 B+16 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 68 67 69 2 (set (reg:XF 81 [ D.5150 ])
        (mult:XF (reg:XF 79 [ D.5150 ])
            (reg:XF 80 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 80 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 79 [ D.5150 ])
            (nil))))
(insn 69 68 70 2 (set (reg:XF 82 [ D.5150 ])
        (minus:XF (reg:XF 76 [ D.5150 ])
            (reg:XF 81 [ D.5150 ]))) mUtility.c:369 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 81 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 76 [ D.5150 ])
            (nil))))
(insn 70 69 71 2 (set (reg:XF 83 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 71 70 72 2 (set (reg:XF 84 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 72 71 73 2 (set (reg:XF 85 [ D.5150 ])
        (mult:XF (reg:XF 83 [ D.5150 ])
            (reg:XF 84 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 84 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 83 [ D.5150 ])
            (nil))))
(insn 73 72 74 2 (set (reg:XF 86 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 B+32 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 74 73 75 2 (set (reg:XF 87 [ D.5150 ])
        (mult:XF (reg:XF 85 [ D.5150 ])
            (reg:XF 86 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 86 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 85 [ D.5150 ])
            (nil))))
(insn 75 74 76 2 (set (reg:XF 88 [ D.5150 ])
        (minus:XF (reg:XF 82 [ D.5150 ])
            (reg:XF 87 [ D.5150 ]))) mUtility.c:369 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 87 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 82 [ D.5150 ])
            (nil))))
(insn 76 75 77 2 (set (reg:XF 168)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 sin_rap+0 S16 A128])) mUtility.c:369 131 {*movxf_internal_rex64}
     (nil))
(insn 77 76 78 2 (set (reg:XF 89 [ D.5150 ])
        (mult:XF (reg:XF 88 [ D.5150 ])
            (reg:XF 168))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 168)
        (expr_list:REG_DEAD (reg:XF 88 [ D.5150 ])
            (nil))))
(insn 78 77 79 2 (set (reg:XF 90 [ D.5150 ])
        (plus:XF (reg:XF 65 [ D.5150 ])
            (reg:XF 89 [ D.5150 ]))) mUtility.c:369 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 65 [ D.5150 ])
            (nil))))
(insn 79 78 80 2 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 P+0 S16 A128])
        (reg:XF 90 [ D.5150 ])) mUtility.c:369 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 90 [ D.5150 ])
        (nil)))
(insn 80 79 81 2 (set (reg:XF 91 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 81 80 82 2 (set (reg:XF 169)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 cos_ap+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (reg:XF 92 [ D.5150 ])
        (mult:XF (reg:XF 91 [ D.5150 ])
            (reg:XF 169))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 169)
        (expr_list:REG_DEAD (reg:XF 91 [ D.5150 ])
            (nil))))
(insn 83 82 84 2 (set (reg:XF 93 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 84 83 85 2 (set (reg:XF 94 [ D.5150 ])
        (neg:XF (reg:XF 93 [ D.5150 ]))) mUtility.c:371 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 93 [ D.5150 ])
        (nil)))
(insn 85 84 86 2 (set (reg:XF 95 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 86 85 87 2 (set (reg:XF 96 [ D.5150 ])
        (mult:XF (reg:XF 94 [ D.5150 ])
            (reg:XF 95 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 95 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 94 [ D.5150 ])
            (nil))))
(insn 87 86 88 2 (set (reg:XF 97 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 B+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 88 87 89 2 (set (reg:XF 98 [ D.5150 ])
        (mult:XF (reg:XF 96 [ D.5150 ])
            (reg:XF 97 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 97 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 96 [ D.5150 ])
            (nil))))
(insn 89 88 90 2 (set (reg:XF 99 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 90 89 91 2 (set (reg:XF 100 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 91 90 92 2 (set (reg:XF 101 [ D.5150 ])
        (mult:XF (reg:XF 99 [ D.5150 ])
            (reg:XF 100 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 100 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 99 [ D.5150 ])
            (nil))))
(insn 92 91 93 2 (set (reg:XF 102 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 B+16 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 93 92 94 2 (set (reg:XF 103 [ D.5150 ])
        (mult:XF (reg:XF 101 [ D.5150 ])
            (reg:XF 102 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 102 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 101 [ D.5150 ])
            (nil))))
(insn 94 93 95 2 (set (reg:XF 104 [ D.5150 ])
        (plus:XF (reg:XF 98 [ D.5150 ])
            (reg:XF 103 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 103 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 98 [ D.5150 ])
            (nil))))
(insn 95 94 96 2 (set (reg:XF 105 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 96 95 97 2 (set (reg:XF 106 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 97 96 98 2 (set (reg:XF 107 [ D.5150 ])
        (mult:XF (reg:XF 105 [ D.5150 ])
            (reg:XF 106 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 106 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 105 [ D.5150 ])
            (nil))))
(insn 98 97 99 2 (set (reg:XF 108 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 B+16 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 99 98 100 2 (set (reg:XF 109 [ D.5150 ])
        (mult:XF (reg:XF 107 [ D.5150 ])
            (reg:XF 108 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 108 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 107 [ D.5150 ])
            (nil))))
(insn 100 99 101 2 (set (reg:XF 110 [ D.5150 ])
        (plus:XF (reg:XF 104 [ D.5150 ])
            (reg:XF 109 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 109 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 104 [ D.5150 ])
            (nil))))
(insn 101 100 102 2 (set (reg:XF 111 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 102 101 103 2 (set (reg:XF 112 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 103 102 104 2 (set (reg:XF 113 [ D.5150 ])
        (mult:XF (reg:XF 111 [ D.5150 ])
            (reg:XF 112 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 112 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 111 [ D.5150 ])
            (nil))))
(insn 104 103 105 2 (set (reg:XF 114 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 B+32 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 105 104 106 2 (set (reg:XF 115 [ D.5150 ])
        (mult:XF (reg:XF 113 [ D.5150 ])
            (reg:XF 114 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 114 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 113 [ D.5150 ])
            (nil))))
(insn 106 105 107 2 (set (reg:XF 116 [ D.5150 ])
        (minus:XF (reg:XF 110 [ D.5150 ])
            (reg:XF 115 [ D.5150 ]))) mUtility.c:371 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 115 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 110 [ D.5150 ])
            (nil))))
(insn 107 106 108 2 (set (reg:XF 170)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 sin_rap+0 S16 A128])) mUtility.c:371 131 {*movxf_internal_rex64}
     (nil))
(insn 108 107 109 2 (set (reg:XF 117 [ D.5150 ])
        (mult:XF (reg:XF 116 [ D.5150 ])
            (reg:XF 170))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 170)
        (expr_list:REG_DEAD (reg:XF 116 [ D.5150 ])
            (nil))))
(insn 109 108 110 2 (set (reg:XF 118 [ D.5150 ])
        (plus:XF (reg:XF 92 [ D.5150 ])
            (reg:XF 117 [ D.5150 ]))) mUtility.c:371 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 117 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 92 [ D.5150 ])
            (nil))))
(insn 110 109 111 2 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 P+16 S16 A128])
        (reg:XF 118 [ D.5150 ])) mUtility.c:371 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 118 [ D.5150 ])
        (nil)))
(insn 111 110 112 2 (set (reg:XF 119 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 112 111 113 2 (set (reg:XF 171)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 cos_ap+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 113 112 114 2 (set (reg:XF 120 [ D.5150 ])
        (mult:XF (reg:XF 119 [ D.5150 ])
            (reg:XF 171))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 171)
        (expr_list:REG_DEAD (reg:XF 119 [ D.5150 ])
            (nil))))
(insn 114 113 115 2 (set (reg:XF 121 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 115 114 116 2 (set (reg:XF 122 [ D.5150 ])
        (neg:XF (reg:XF 121 [ D.5150 ]))) mUtility.c:373 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 121 [ D.5150 ])
        (nil)))
(insn 116 115 117 2 (set (reg:XF 123 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 117 116 118 2 (set (reg:XF 124 [ D.5150 ])
        (mult:XF (reg:XF 122 [ D.5150 ])
            (reg:XF 123 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 123 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 122 [ D.5150 ])
            (nil))))
(insn 118 117 119 2 (set (reg:XF 125 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 B+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 119 118 120 2 (set (reg:XF 126 [ D.5150 ])
        (mult:XF (reg:XF 124 [ D.5150 ])
            (reg:XF 125 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 125 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 124 [ D.5150 ])
            (nil))))
(insn 120 119 121 2 (set (reg:XF 127 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 121 120 122 2 (set (reg:XF 128 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 A+32 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 122 121 123 2 (set (reg:XF 129 [ D.5150 ])
        (mult:XF (reg:XF 127 [ D.5150 ])
            (reg:XF 128 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 128 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 127 [ D.5150 ])
            (nil))))
(insn 123 122 124 2 (set (reg:XF 130 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 B+16 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 124 123 125 2 (set (reg:XF 131 [ D.5150 ])
        (mult:XF (reg:XF 129 [ D.5150 ])
            (reg:XF 130 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 130 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 129 [ D.5150 ])
            (nil))))
(insn 125 124 126 2 (set (reg:XF 132 [ D.5150 ])
        (minus:XF (reg:XF 126 [ D.5150 ])
            (reg:XF 131 [ D.5150 ]))) mUtility.c:373 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 131 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 126 [ D.5150 ])
            (nil))))
(insn 126 125 127 2 (set (reg:XF 133 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 127 126 128 2 (set (reg:XF 134 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 A+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 128 127 129 2 (set (reg:XF 135 [ D.5150 ])
        (mult:XF (reg:XF 133 [ D.5150 ])
            (reg:XF 134 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 134 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 133 [ D.5150 ])
            (nil))))
(insn 129 128 130 2 (set (reg:XF 136 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 B+32 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 130 129 131 2 (set (reg:XF 137 [ D.5150 ])
        (mult:XF (reg:XF 135 [ D.5150 ])
            (reg:XF 136 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 136 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 135 [ D.5150 ])
            (nil))))
(insn 131 130 132 2 (set (reg:XF 138 [ D.5150 ])
        (plus:XF (reg:XF 132 [ D.5150 ])
            (reg:XF 137 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 137 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 132 [ D.5150 ])
            (nil))))
(insn 132 131 133 2 (set (reg:XF 139 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 133 132 134 2 (set (reg:XF 140 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 A+16 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 134 133 135 2 (set (reg:XF 141 [ D.5150 ])
        (mult:XF (reg:XF 139 [ D.5150 ])
            (reg:XF 140 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 140 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 139 [ D.5150 ])
            (nil))))
(insn 135 134 136 2 (set (reg:XF 142 [ D.5150 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 B+32 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 136 135 137 2 (set (reg:XF 143 [ D.5150 ])
        (mult:XF (reg:XF 141 [ D.5150 ])
            (reg:XF 142 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 142 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 141 [ D.5150 ])
            (nil))))
(insn 137 136 138 2 (set (reg:XF 144 [ D.5150 ])
        (plus:XF (reg:XF 138 [ D.5150 ])
            (reg:XF 143 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 143 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 138 [ D.5150 ])
            (nil))))
(insn 138 137 139 2 (set (reg:XF 172)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 sin_rap+0 S16 A128])) mUtility.c:373 131 {*movxf_internal_rex64}
     (nil))
(insn 139 138 140 2 (set (reg:XF 145 [ D.5150 ])
        (mult:XF (reg:XF 144 [ D.5150 ])
            (reg:XF 172))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 172)
        (expr_list:REG_DEAD (reg:XF 144 [ D.5150 ])
            (nil))))
(insn 140 139 141 2 (set (reg:XF 146 [ D.5150 ])
        (plus:XF (reg:XF 120 [ D.5150 ])
            (reg:XF 145 [ D.5150 ]))) mUtility.c:373 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 145 [ D.5150 ])
        (expr_list:REG_DEAD (reg:XF 120 [ D.5150 ])
            (nil))))
(insn 141 140 142 2 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 P+32 S16 A128])
        (reg:XF 146 [ D.5150 ])) mUtility.c:373 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 146 [ D.5150 ])
        (nil)))
(insn 142 141 143 2 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 p+0 S8 A64])) mUtility.c:375 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 2 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:375 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 2 (set (reg:DI 4 si)
        (reg:DI 173)) mUtility.c:375 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 145 144 146 2 (set (reg:DI 5 di)
        (reg:DI 174)) mUtility.c:375 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(call_insn 146 145 147 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_sphere") [flags 0x3]  <function_decl 0x7f4452bbaa00 _to_sphere>) [0 _to_sphere S1 A8])
            (const_int 0 [0]))) mUtility.c:375 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 147 146 150 2 (set (reg:SI 147 [ D.5151 ])
        (const_int 1 [0x1])) mUtility.c:377 89 {*movsi_internal}
     (nil))
(insn 150 147 154 2 (set (reg:SI 148 [ <retval> ])
        (reg:SI 147 [ D.5151 ])) mUtility.c:377 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 147 [ D.5151 ])
        (nil)))
(insn 154 150 157 2 (set (reg/i:SI 0 ax)
        (reg:SI 148 [ <retval> ])) mUtility.c:380 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148 [ <retval> ])
        (nil)))
(insn 157 154 0 2 (use (reg/i:SI 0 ax)) mUtility.c:380 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function coord3 (coord3, funcdef_no=35, decl_uid=1784, cgraph_uid=35)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 87.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r111: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a6 (r111,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a14 (r107,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r105,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r104: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a18 (r104,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r100,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r99: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r99,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r95,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r94: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r94,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r93: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r93,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r91,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r90: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a42 (r90,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a46 (r89,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r88: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a47 (r88,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a4 (r80,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a11 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a12 (r75,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a22 (r73,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a25 (r71,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a26 (r68,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a24 (r65,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r63,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r62,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r61: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a44 (r61,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a45 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r83,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r81,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a4(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a5(r79,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r111,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a7(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r76,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a12(r75,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r74,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r107,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a15(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r103,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a17(r105,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r104,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r101,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r100,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a22(r73,l0) costs: AD_REGS:103 Q_REGS:103 NON_Q_REGS:103 INDEX_REGS:103 GENERAL_REGS:103 LEGACY_REGS:103 CLOBBERED_REGS:103 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a23(r72,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a24(r65,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a25(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r70,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a28(r99,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a30(r98,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r97,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r67,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a33(r96,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r95,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r94,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r64,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a38(r93,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r92,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r91,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r90,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a43(r62,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a44(r61,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a45(r60,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r89,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a47(r88,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a48(r86,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a49(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r85,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r84,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 101(l0): point = 0
   Insn 98(l0): point = 2
   Insn 94(l0): point = 4
   Insn 91(l0): point = 6
   Insn 90(l0): point = 8
   Insn 89(l0): point = 10
   Insn 88(l0): point = 12
   Insn 87(l0): point = 14
   Insn 86(l0): point = 16
   Insn 85(l0): point = 18
   Insn 84(l0): point = 20
   Insn 83(l0): point = 22
   Insn 82(l0): point = 24
   Insn 81(l0): point = 26
   Insn 80(l0): point = 28
   Insn 79(l0): point = 30
   Insn 78(l0): point = 32
   Insn 77(l0): point = 34
   Insn 76(l0): point = 36
   Insn 75(l0): point = 38
   Insn 74(l0): point = 40
   Insn 73(l0): point = 42
   Insn 72(l0): point = 44
   Insn 71(l0): point = 46
   Insn 68(l0): point = 49
   Insn 67(l0): point = 51
   Insn 66(l0): point = 53
   Insn 65(l0): point = 55
   Insn 60(l0): point = 58
   Insn 59(l0): point = 60
   Insn 58(l0): point = 62
   Insn 57(l0): point = 64
   Insn 56(l0): point = 66
   Insn 55(l0): point = 68
   Insn 54(l0): point = 70
   Insn 53(l0): point = 72
   Insn 52(l0): point = 74
   Insn 51(l0): point = 76
   Insn 50(l0): point = 78
   Insn 49(l0): point = 80
   Insn 48(l0): point = 82
   Insn 47(l0): point = 84
   Insn 46(l0): point = 86
   Insn 45(l0): point = 88
   Insn 44(l0): point = 90
   Insn 43(l0): point = 92
   Insn 42(l0): point = 94
   Insn 41(l0): point = 96
   Insn 40(l0): point = 98
   Insn 39(l0): point = 100
   Insn 38(l0): point = 102
   Insn 37(l0): point = 104
   Insn 36(l0): point = 106
   Insn 35(l0): point = 108
   Insn 34(l0): point = 110
   Insn 33(l0): point = 112
   Insn 32(l0): point = 114
   Insn 31(l0): point = 116
   Insn 30(l0): point = 118
   Insn 29(l0): point = 120
   Insn 28(l0): point = 122
   Insn 27(l0): point = 124
   Insn 26(l0): point = 126
   Insn 25(l0): point = 128
   Insn 24(l0): point = 130
   Insn 23(l0): point = 132
   Insn 22(l0): point = 134
   Insn 21(l0): point = 136
   Insn 20(l0): point = 138
   Insn 19(l0): point = 140
   Insn 18(l0): point = 142
   Insn 17(l0): point = 144
   Insn 16(l0): point = 146
   Insn 15(l0): point = 148
   Insn 14(l0): point = 150
   Insn 13(l0): point = 152
   Insn 12(l0): point = 154
   Insn 11(l0): point = 156
   Insn 10(l0): point = 158
   Insn 9(l0): point = 160
   Insn 8(l0): point = 162
   Insn 7(l0): point = 164
   Insn 3(l0): point = 166
   Insn 2(l0): point = 168
 a0(r83): [3..4]
 a1(r82): [5..6]
 a2(r77): [9..26]
 a3(r81): [9..10]
 a4(r80): [11..12]
 a5(r79): [11..20]
 a6(r111 [0]): [17..18]
 a6(r111 [1]): [17..18]
 a7(r78): [21..22]
 a8(r110): [23..24]
 a9(r109): [27..28]
 a10(r108): [31..32]
 a11(r76): [31..34]
 a12(r75): [35..36]
 a13(r74): [35..44]
 a14(r107 [0]): [41..42]
 a14(r107 [1]): [41..42]
 a15(r106): [45..46]
 a16(r103): [50..51]
 a17(r105): [52..53]
 a18(r104): [52..55]
 a19(r102): [61..62]
 a20(r101): [61..64]
 a21(r100): [67..68]
 a22(r73): [69..70]
 a23(r72): [75..78]
 a24(r65): [77..112]
 a25(r71): [79..80]
 a26(r68): [79..96]
 a27(r70): [85..86]
 a28(r99): [87..88]
 a29(r69): [87..90]
 a30(r98): [91..92]
 a31(r97): [91..94]
 a32(r67): [101..102]
 a33(r96): [103..104]
 a34(r66): [103..106]
 a35(r95): [107..108]
 a36(r94): [107..110]
 a37(r64): [117..118]
 a38(r93): [119..120]
 a39(r63): [119..122]
 a40(r92): [123..124]
 a41(r91): [123..126]
 a42(r90): [129..130]
 a43(r62): [135..136]
 a44(r61): [137..138]
 a45(r60): [137..146]
 a46(r89 [0]): [143..144]
 a46(r89 [1]): [143..144]
 a47(r88 [0]): [151..152]
 a47(r88 [1]): [151..152]
 a48(r86): [155..156]
 a49(r87): [157..158]
 a50(r59): [157..160]
 a51(r85): [161..162]
 a52(r84): [161..164]
Compressing live ranges: from 171 to 72 - 42%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
 a2(r77): [4..13]
 a3(r81): [4..5]
 a4(r80): [6..7]
 a5(r79): [6..9]
 a6(r111 [0]): [8..9]
 a6(r111 [1]): [8..9]
 a7(r78): [10..11]
 a8(r110): [12..13]
 a9(r109): [14..15]
 a10(r108): [16..17]
 a11(r76): [16..17]
 a12(r75): [18..19]
 a13(r74): [18..21]
 a14(r107 [0]): [20..21]
 a14(r107 [1]): [20..21]
 a15(r106): [22..23]
 a16(r103): [24..25]
 a17(r105): [26..27]
 a18(r104): [26..27]
 a19(r102): [28..29]
 a20(r101): [28..29]
 a21(r100): [30..31]
 a22(r73): [32..33]
 a23(r72): [34..35]
 a24(r65): [34..49]
 a25(r71): [36..37]
 a26(r68): [36..43]
 a27(r70): [38..39]
 a28(r99): [40..41]
 a29(r69): [40..41]
 a30(r98): [42..43]
 a31(r97): [42..43]
 a32(r67): [44..45]
 a33(r96): [46..47]
 a34(r66): [46..47]
 a35(r95): [48..49]
 a36(r94): [48..49]
 a37(r64): [50..51]
 a38(r93): [52..53]
 a39(r63): [52..53]
 a40(r92): [54..55]
 a41(r91): [54..55]
 a42(r90): [56..57]
 a43(r62): [58..59]
 a44(r61): [60..61]
 a45(r60): [60..63]
 a46(r89 [0]): [62..63]
 a46(r89 [1]): [62..63]
 a47(r88 [0]): [64..65]
 a47(r88 [1]): [64..65]
 a48(r86): [66..67]
 a49(r87): [68..69]
 a50(r59): [68..69]
 a51(r85): [70..71]
 a52(r84): [70..71]
  regions=1, blocks=5, points=72
    allocnos=53 (big 4), copies=0, conflicts=0, ranges=57
Disposition:
   50:r59  l0     9   45:r60  l0   mem   44:r61  l0     8   43:r62  l0     8
   39:r63  l0     9   37:r64  l0     8   24:r65  l0   mem   34:r66  l0     9
   32:r67  l0     8   26:r68  l0   mem   29:r69  l0     9   27:r70  l0     8
   25:r71  l0     8   23:r72  l0     8   22:r73  l0     8   13:r74  l0   mem
   12:r75  l0     8   11:r76  l0     8    2:r77  l0     3    7:r78  l0     0
    5:r79  l0   mem    4:r80  l0     8    3:r81  l0     8    1:r82  l0     0
    0:r83  l0     0   52:r84  l0     9   51:r85  l0     8   48:r86  l0     8
   49:r87  l0     8   47:r88  l0     0   46:r89  l0     0   42:r90  l0     8
   41:r91  l0     9   40:r92  l0     8   38:r93  l0     8   36:r94  l0     9
   35:r95  l0     8   33:r96  l0     8   31:r97  l0     9   30:r98  l0     8
   28:r99  l0     8   21:r100 l0     8   20:r101 l0     9   19:r102 l0     8
   16:r103 l0     8   18:r104 l0     9   17:r105 l0     8   15:r106 l0     0
   14:r107 l0     0   10:r108 l0     0    9:r109 l0     0    8:r110 l0     0
    6:r111 l0     0
+++Costs: overall 89, reg -7, mem 96, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


coord3

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={11d,2u} r1={10d} r2={10d} r4={10d,1u} r5={10d,1u} r6={1d,4u} r7={1d,33u} r8={9d,9u} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,8u} r17={12d,1u} r18={9d} r19={9d} r20={1d,21u,2e} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,2u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 608{472d,134u,2e} in 84{75 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 pos+0 S8 A64])
        (reg:DI 5 di [ pos ])) mUtility.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pos ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 p+0 S8 A64])
        (reg:DI 4 si [ p ])) mUtility.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ p ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:XF 84)
        (mem/c:XF (reg/f:DI 16 argp) [0 vel+0 S16 A128])) mUtility.c:383 131 {*movxf_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:XF 85)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 t+0 S16 A128])) mUtility.c:383 131 {*movxf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:XF 59 [ D.5152 ])
        (mult:XF (reg:XF 84)
            (reg:XF 85))) mUtility.c:383 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 85)
        (expr_list:REG_DEAD (reg:XF 84)
            (nil))))
(insn 10 9 11 2 (set (reg:XF 87)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:383 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 11 10 12 2 (set (reg:XF 86)
        (div:XF (reg:XF 59 [ D.5152 ])
            (reg:XF 87))) mUtility.c:383 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 87)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5152 ])
            (nil))))
(insn 12 11 13 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 a+0 S16 A128])
        (reg:XF 86)) mUtility.c:383 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 86)
        (nil)))
(insn 13 12 14 2 (set (reg:XF 88)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 a+0 S16 A128])) mUtility.c:384 131 {*movxf_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 88)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 88)
        (nil)))
(call_insn/u 15 14 16 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:384 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 16 15 17 2 (set (reg:XF 60 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 17 16 18 2 (set (reg:XF 89)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 beta+0 S16 A128])) mUtility.c:384 131 {*movxf_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 89)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 89)
        (nil)))
(call_insn/u 19 18 20 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:384 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 20 19 21 2 (set (reg:XF 61 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 21 20 22 2 (set (reg:XF 62 [ D.5152 ])
        (mult:XF (reg:XF 60 [ D.5152 ])
            (reg:XF 61 [ D.5152 ]))) mUtility.c:384 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5152 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5152 ])
            (nil))))
(insn 22 21 23 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 62 [ D.5152 ])) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5152 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("asinl") [flags 0x41]  <function_decl 0x7f4452d40d00 asinl>) [0 __builtin_asinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:384 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 24 23 25 2 (set (reg:XF 90)
        (reg:XF 8 st)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 25 24 26 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S16 A128])
        (reg:XF 90)) mUtility.c:384 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 90)
        (nil)))
(insn 26 25 27 2 (set (reg:XF 91)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 27 26 28 2 (set (reg:XF 92)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 beta+0 S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:XF 63 [ D.5152 ])
        (minus:XF (reg:XF 91)
            (reg:XF 92))) mUtility.c:386 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 92)
        (expr_list:REG_DEAD (reg:XF 91)
            (nil))))
(insn 29 28 30 2 (set (reg:XF 93)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 30 29 31 2 (set (reg:XF 64 [ D.5152 ])
        (mult:XF (reg:XF 63 [ D.5152 ])
            (reg:XF 93))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 93)
        (expr_list:REG_DEAD (reg:XF 63 [ D.5152 ])
            (nil))))
(insn 31 30 32 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 64 [ D.5152 ])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 64 [ D.5152 ])
        (nil)))
(call_insn/u 32 31 33 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:386 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 33 32 34 2 (set (reg:XF 65 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 34 33 35 2 (set (reg:XF 94)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 a+0 S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:XF 95)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:XF 66 [ D.5152 ])
        (minus:XF (reg:XF 94)
            (reg:XF 95))) mUtility.c:386 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 95)
        (expr_list:REG_DEAD (reg:XF 94)
            (nil))))
(insn 37 36 38 2 (set (reg:XF 96)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 38 37 39 2 (set (reg:XF 67 [ D.5152 ])
        (mult:XF (reg:XF 66 [ D.5152 ])
            (reg:XF 96))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 96)
        (expr_list:REG_DEAD (reg:XF 66 [ D.5152 ])
            (nil))))
(insn 39 38 40 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 67 [ D.5152 ])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5152 ])
        (nil)))
(call_insn/u 40 39 41 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("tanl") [flags 0x41]  <function_decl 0x7f4452d77000 tanl>) [0 __builtin_tanl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:386 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 41 40 42 2 (set (reg:XF 68 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 42 41 43 2 (set (reg:XF 97)
        (mem/c:XF (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 beta+0 S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (nil))
(insn 43 42 44 2 (set (reg:XF 98)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 44 43 45 2 (set (reg:XF 69 [ D.5152 ])
        (plus:XF (reg:XF 97)
            (reg:XF 98))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 98)
        (expr_list:REG_DEAD (reg:XF 97)
            (nil))))
(insn 45 44 46 2 (set (reg:XF 99)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S16 A128])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 46 45 47 2 (set (reg:XF 70 [ D.5152 ])
        (mult:XF (reg:XF 69 [ D.5152 ])
            (reg:XF 99))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 99)
        (expr_list:REG_DEAD (reg:XF 69 [ D.5152 ])
            (nil))))
(insn 47 46 48 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 70 [ D.5152 ])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 70 [ D.5152 ])
        (nil)))
(call_insn/u 48 47 49 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("sinl") [flags 0x41]  <function_decl 0x7f4452d73e00 sinl>) [0 __builtin_sinl S1 A8])
            (const_int 16 [0x10]))) mUtility.c:386 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 49 48 50 2 (set (reg:XF 71 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 50 49 51 2 (set (reg:XF 72 [ D.5152 ])
        (mult:XF (reg:XF 68 [ D.5152 ])
            (reg:XF 71 [ D.5152 ]))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5152 ])
        (expr_list:REG_DEAD (reg:XF 68 [ D.5152 ])
            (nil))))
(insn 51 50 52 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 65 [ D.5152 ])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5152 ])
        (nil)))
(insn 52 51 53 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.5152 ])) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5152 ])
        (nil)))
(call_insn 53 52 54 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("atan2l") [flags 0x41]  <function_decl 0x7f4452d42500 atan2l>) [0 __builtin_atan2l S1 A8])
            (const_int 32 [0x20]))) mUtility.c:386 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 54 53 55 2 (set (reg:XF 73 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 55 54 56 2 (set (reg:XF 100)
        (plus:XF (reg:XF 73 [ D.5152 ])
            (reg:XF 73 [ D.5152 ]))) mUtility.c:386 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5152 ])
        (nil)))
(insn 56 55 57 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S16 A128])
        (reg:XF 100)) mUtility.c:386 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 100)
        (nil)))
(insn 57 56 58 2 (set (reg:XF 101)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S16 A128])) mUtility.c:387 131 {*movxf_internal_rex64}
     (nil))
(insn 58 57 59 2 (set (reg:XF 102)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) mUtility.c:387 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 59 58 60 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 101)
            (reg:XF 102))) mUtility.c:387 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 102)
        (expr_list:REG_DEAD (reg:XF 101)
            (nil))))
(jump_insn 60 59 64 2 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) mUtility.c:387 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 69)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 103 104 105
(note 64 60 65 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 3 (set (reg:XF 104)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) mUtility.c:387 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.28318530717958623199592693708837032318115234375e+0 [0x0.c90fdaa22168cp+3])
        (nil)))
(insn 66 65 67 3 (set (reg:XF 105)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S16 A128])) mUtility.c:387 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 68 3 (set (reg:XF 103)
        (minus:XF (reg:XF 104)
            (reg:XF 105))) mUtility.c:387 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 105)
        (expr_list:REG_DEAD (reg:XF 104)
            (nil))))
(insn 68 67 69 3 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S16 A128])
        (reg:XF 103)) mUtility.c:387 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 103)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 77 78 79 80 81 82 83 106 107 108 109 110 111
(code_label 69 68 70 4 144 "" [1 uses])
(note 70 69 71 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 pos+0 S8 A64])) mUtility.c:388 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 4 (set (reg:XF 74 [ D.5152 ])
        (mem:XF (reg/f:DI 106) [0 *pos_24(D)+0 S16 A128])) mUtility.c:388 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 73 72 74 4 (set (reg:XF 107)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 c+0 S16 A128])) mUtility.c:388 131 {*movxf_internal_rex64}
     (nil))
(insn 74 73 75 4 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 107)) mUtility.c:388 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 107)
        (nil)))
(call_insn 75 74 76 4 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("deg") [flags 0x3]  <function_decl 0x7f4452e41600 deg>) [0 deg S1 A8])
            (const_int 16 [0x10]))) mUtility.c:388 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 76 75 77 4 (set (reg:XF 75 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:388 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 77 76 78 4 (set (reg:XF 76 [ D.5152 ])
        (plus:XF (reg:XF 74 [ D.5152 ])
            (reg:XF 75 [ D.5152 ]))) mUtility.c:388 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5152 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5152 ])
            (nil))))
(insn 78 77 79 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 p+0 S8 A64])) mUtility.c:388 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 4 (set (mem:XF (reg/f:DI 108) [0 *p_28(D)+0 S16 A128])
        (reg:XF 76 [ D.5152 ])) mUtility.c:388 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_DEAD (reg:XF 76 [ D.5152 ])
            (nil))))
(insn 80 79 81 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 p+0 S8 A64])) mUtility.c:389 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 4 (parallel [
            (set (reg/f:DI 77 [ D.5153 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:389 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 p+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 82 81 83 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 pos+0 S8 A64])) mUtility.c:389 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 4 (parallel [
            (set (reg/f:DI 78 [ D.5153 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:389 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 pos+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 84 83 85 4 (set (reg:XF 79 [ D.5152 ])
        (mem:XF (reg/f:DI 78 [ D.5153 ]) [0 *_30+0 S16 A128])) mUtility.c:389 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ D.5153 ])
        (nil)))
(insn 85 84 86 4 (set (reg:XF 111)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S16 A128])) mUtility.c:389 131 {*movxf_internal_rex64}
     (nil))
(insn 86 85 87 4 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 111)) mUtility.c:389 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 111)
        (nil)))
(call_insn 87 86 88 4 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("deg") [flags 0x3]  <function_decl 0x7f4452e41600 deg>) [0 deg S1 A8])
            (const_int 16 [0x10]))) mUtility.c:389 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (nil)))
(insn 88 87 89 4 (set (reg:XF 80 [ D.5152 ])
        (reg:XF 8 st)) mUtility.c:389 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 89 88 90 4 (set (reg:XF 81 [ D.5152 ])
        (plus:XF (reg:XF 79 [ D.5152 ])
            (reg:XF 80 [ D.5152 ]))) mUtility.c:389 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 80 [ D.5152 ])
        (expr_list:REG_DEAD (reg:XF 79 [ D.5152 ])
            (nil))))
(insn 90 89 91 4 (set (mem:XF (reg/f:DI 77 [ D.5153 ]) [0 *_29+0 S16 A128])
        (reg:XF 81 [ D.5152 ])) mUtility.c:389 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 81 [ D.5152 ])
        (expr_list:REG_DEAD (reg/f:DI 77 [ D.5153 ])
            (nil))))
(insn 91 90 94 4 (set (reg:SI 82 [ D.5154 ])
        (const_int 0 [0])) mUtility.c:391 89 {*movsi_internal}
     (nil))
(insn 94 91 98 4 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ D.5154 ])) mUtility.c:391 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ D.5154 ])
        (nil)))
(insn 98 94 101 4 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) mUtility.c:392 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 101 98 0 4 (use (reg/i:SI 0 ax)) mUtility.c:392 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function angle_direction (angle_direction, funcdef_no=36, decl_uid=1794, cgraph_uid=36)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r74: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r74,l0) best DIREG, allocno GENERAL_REGS
    r73: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r73,l0) best SIREG, allocno GENERAL_REGS
    r72: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r72,l0) best DIREG, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r71,l0) best SIREG, allocno GENERAL_REGS
    r70: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r70,l0) best DREG, allocno GENERAL_REGS
    r69: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r69,l0) best DIREG, allocno GENERAL_REGS
    r68: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r68,l0) best SIREG, allocno GENERAL_REGS
    r67: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r67,l0) best DREG, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r65,l0) best SIREG, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r64,l0) best DIREG, allocno GENERAL_REGS
    r63: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r63,l0) best SIREG, allocno GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r62,l0) best DIREG, allocno GENERAL_REGS
    r61: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r61,l0) best SIREG, allocno GENERAL_REGS
    r60: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r60,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r59: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a1 (r59,l0) best FP_TOP_REG, allocno FLOAT_REGS

  a0(r60,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r59,l0) costs: AD_REGS:23 Q_REGS:23 NON_Q_REGS:23 INDEX_REGS:23 GENERAL_REGS:23 LEGACY_REGS:23 CLOBBERED_REGS:23 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:44 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:17
  a2(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r70,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r67,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 52(l0): point = 0
   Insn 49(l0): point = 2
   Insn 45(l0): point = 4
   Insn 42(l0): point = 6
   Insn 41(l0): point = 8
   Insn 40(l0): point = 10
   Insn 39(l0): point = 12
   Insn 38(l0): point = 14
   Insn 37(l0): point = 16
   Insn 36(l0): point = 18
   Insn 35(l0): point = 20
   Insn 34(l0): point = 22
   Insn 33(l0): point = 24
   Insn 32(l0): point = 26
   Insn 31(l0): point = 28
   Insn 30(l0): point = 30
   Insn 29(l0): point = 32
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 26(l0): point = 38
   Insn 25(l0): point = 40
   Insn 24(l0): point = 42
   Insn 23(l0): point = 44
   Insn 22(l0): point = 46
   Insn 21(l0): point = 48
   Insn 20(l0): point = 50
   Insn 19(l0): point = 52
   Insn 18(l0): point = 54
   Insn 17(l0): point = 56
   Insn 16(l0): point = 58
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 13(l0): point = 64
   Insn 12(l0): point = 66
   Insn 11(l0): point = 68
   Insn 10(l0): point = 70
   Insn 9(l0): point = 72
   Insn 8(l0): point = 74
   Insn 4(l0): point = 76
   Insn 3(l0): point = 78
   Insn 2(l0): point = 80
 a0(r60): [3..4]
 a1(r59): [5..6]
 a2(r74): [11..14]
 a3(r73): [13..16]
 a4(r72): [21..26]
 a5(r71): [23..28]
 a6(r70): [25..30]
 a7(r69): [35..40]
 a8(r68): [37..42]
 a9(r67): [39..44]
 a10(r66): [49..52]
 a11(r65): [51..54]
 a12(r64): [59..62]
 a13(r63): [61..64]
 a14(r62): [69..72]
 a15(r61): [71..74]
Compressing live ranges: from 83 to 16 - 19%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
 a2(r74): [4..5]
 a3(r73): [4..5]
 a4(r72): [6..7]
 a5(r71): [6..7]
 a6(r70): [6..7]
 a7(r69): [8..9]
 a8(r68): [8..9]
 a9(r67): [8..9]
 a10(r66): [10..11]
 a11(r65): [10..11]
 a12(r64): [12..13]
 a13(r63): [12..13]
 a14(r62): [14..15]
 a15(r61): [14..15]
  regions=1, blocks=3, points=16
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
    1:r59  l0     8    0:r60  l0     8   15:r61  l0     1   14:r62  l0     0
   13:r63  l0     1   12:r64  l0     0   11:r65  l0     1   10:r66  l0     0
    9:r67  l0     1    8:r68  l0     2    7:r69  l0     0    6:r70  l0     1
    5:r71  l0     2    4:r72  l0     0    3:r73  l0     1    2:r74  l0     0
+++Costs: overall -16, reg -16, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


angle_direction

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags]
;;  ref usage 	r0={7d} r1={9d,3u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,2u} r7={1d,8u} r8={7d,3u} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={17d} r18={6d} r19={6d} r20={1d,19u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} 
;;    total ref usage 391{325d,66u,0e} in 41{35 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -248 [0xffffffffffffff08])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:394 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:394 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 c+0 S8 A64])
        (reg:DI 1 dx [ c ])) mUtility.c:394 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ c ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 61)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:400 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -248 [0xffffffffffffff08])) [0 a+0 S8 A64])) mUtility.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 61)) mUtility.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 61)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 62)) mUtility.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62)
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:400 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 63)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:401 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 b+0 S8 A64])) mUtility.c:401 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 63)) mUtility.c:401 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 63)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 64)) mUtility.c:401 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:401 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 65)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:402 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [0 c+0 S8 A64])) mUtility.c:402 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 65)) mUtility.c:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 66)) mUtility.c:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:402 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:406 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 68)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:406 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:406 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg:DI 67)) mUtility.c:406 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 68)) mUtility.c:406 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 69)) mUtility.c:406 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69)
        (nil)))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_cross_prod") [flags 0x3]  <function_decl 0x7f4452bcd100 _cross_prod>) [0 _cross_prod S1 A8])
            (const_int 0 [0]))) mUtility.c:406 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 2 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:407 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 71)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:407 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 72)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:407 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 2 (set (reg:DI 1 dx)
        (reg:DI 70)) mUtility.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(insn 34 33 35 2 (set (reg:DI 4 si)
        (reg:DI 71)) mUtility.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 72)) mUtility.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_cross_prod") [flags 0x3]  <function_decl 0x7f4452bcd100 _cross_prod>) [0 _cross_prod S1 A8])
            (const_int 0 [0]))) mUtility.c:407 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 73)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:409 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:409 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 2 (set (reg:DI 4 si)
        (reg:DI 73)) mUtility.c:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg:DI 74)) mUtility.c:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74)
        (nil)))
(call_insn 41 40 42 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:409 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 42 41 45 2 (set (reg:XF 59 [ D.5155 ])
        (reg:XF 8 st)) mUtility.c:409 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 45 42 49 2 (set (reg:XF 60 [ <retval> ])
        (reg:XF 59 [ D.5155 ])) mUtility.c:409 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5155 ])
        (nil)))
(insn 49 45 52 2 (set (reg/i:XF 8 st)
        (reg:XF 60 [ <retval> ])) mUtility.c:411 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 60 [ <retval> ])
        (nil)))
(insn 52 49 0 2 (use (reg/i:XF 8 st)) mUtility.c:411 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function proj_point_to_circle (proj_point_to_circle, funcdef_no=37, decl_uid=1804, cgraph_uid=37)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 212.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r168,l0) best DIREG, allocno GENERAL_REGS
    r167: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r167,l0) best SIREG, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r165,l0) best SIREG, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r163,l0) best SIREG, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r161,l0) best SIREG, allocno GENERAL_REGS
    r160: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a18 (r160,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r159: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r159,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r158: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a27 (r158,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r157: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a28 (r157,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r156: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a29 (r156,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r155: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r155,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r154: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r154,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r153: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a34 (r153,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r152: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a35 (r152,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r151: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a36 (r151,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r150: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a38 (r150,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r149: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a45 (r149,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r148: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a46 (r148,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r147: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a47 (r147,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r146: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a48 (r146,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r145: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r145,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r144: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r144,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r143: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r143,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r142: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a54 (r142,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r141: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a55 (r141,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r140: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a57 (r140,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r139: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a60 (r139,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r138: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a61 (r138,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r137: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a62 (r137,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r136: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a63 (r136,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r135: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r135,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r134: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a66 (r134,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r133: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a67 (r133,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r132: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a68 (r132,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r131: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a69 (r131,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r130: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a70 (r130,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r129: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a71 (r129,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r128: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a72 (r128,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r127: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a75 (r127,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r126: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a73 (r126,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r125: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a76 (r125,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r124: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a77 (r124,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r123: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a78 (r123,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r122: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a79 (r122,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r121: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a80 (r121,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r120: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a81 (r120,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r119: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a82 (r119,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r118: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a83 (r118,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r117: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a84 (r117,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r116: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a85 (r116,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r115: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a86 (r115,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r114: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a87 (r114,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r113,l0) best DIREG, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r112,l0) best SIREG, allocno GENERAL_REGS
    r111: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r111,l0) best DREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a93 (r109,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r108: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a95 (r108,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r107: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a97 (r107,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r106: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a96 (r106,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a7 (r92,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r91: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a6 (r91,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r90: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r90,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r89: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r89,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r88: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a14 (r88,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a15 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a16 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a17 (r85,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r84: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r84,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r83: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r83,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r82: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a22 (r82,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a23 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a25 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a24 (r78,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r77: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r77,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r76: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r76,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r75: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a37 (r75,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a41 (r72,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r71: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a43 (r71,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r70: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a44 (r70,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r69: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a42 (r69,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a56 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a58 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a59 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a65 (r63,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r62: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a74 (r62,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r61: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a92 (r61,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a94 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a98 (r59,l0) best FP_TOP_REG, allocno FLOAT_REGS

  a0(r94,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r91,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r92,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a8(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r90,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a13(r89,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r88,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a15(r87,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a16(r86,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a17(r85,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a18(r160,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a19(r84,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a20(r159,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r83,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r82,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a23(r81,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a24(r78,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a25(r80,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a26(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r158,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r157,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a29(r156,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a30(r155,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a31(r77,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r76,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r154,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r153,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a35(r152,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a36(r151,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a37(r75,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a38(r150,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a39(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r72,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a42(r69,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a43(r71,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a44(r70,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a45(r149,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a46(r148,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a47(r147,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a48(r146,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a49(r68,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a50(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r145,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r144,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r143,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r142,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a55(r141,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a56(r66,l0) costs: AD_REGS:103 Q_REGS:103 NON_Q_REGS:103 INDEX_REGS:103 GENERAL_REGS:103 LEGACY_REGS:103 CLOBBERED_REGS:103 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a57(r140,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a58(r65,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a59(r64,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a60(r139,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a61(r138,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a62(r137,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a63(r136,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a64(r135,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r63,l0) costs: AD_REGS:103 Q_REGS:103 NON_Q_REGS:103 INDEX_REGS:103 GENERAL_REGS:103 LEGACY_REGS:103 CLOBBERED_REGS:103 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:103 INT_SSE_REGS:196605 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:32
  a66(r134,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a67(r133,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a68(r132,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a69(r131,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a70(r130,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a71(r129,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a72(r128,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a73(r126,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a74(r62,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a75(r127,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a76(r125,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a77(r124,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a78(r123,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a79(r122,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a80(r121,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a81(r120,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a82(r119,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a83(r118,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a84(r117,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a85(r116,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a86(r115,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a87(r114,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a88(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a89(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a90(r111,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a91(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a92(r61,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a93(r109,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a94(r60,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a95(r108,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a96(r106,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a97(r107,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a98(r59,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a99(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a100(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a101(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a102(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a103(r101,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a104(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a105(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a106(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a107(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a108(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a109(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 225(l0): point = 0
   Insn 222(l0): point = 2
   Insn 218(l0): point = 4
   Insn 215(l0): point = 6
   Insn 212(l0): point = 9
   Insn 211(l0): point = 11
   Insn 210(l0): point = 13
   Insn 209(l0): point = 15
   Insn 208(l0): point = 17
   Insn 240(l0): point = 20
   Insn 203(l0): point = 22
   Insn 202(l0): point = 24
   Insn 201(l0): point = 26
   Insn 200(l0): point = 28
   Insn 199(l0): point = 30
   Insn 194(l0): point = 33
   Insn 193(l0): point = 35
   Insn 192(l0): point = 37
   Insn 191(l0): point = 39
   Insn 190(l0): point = 41
   Insn 189(l0): point = 43
   Insn 188(l0): point = 45
   Insn 187(l0): point = 47
   Insn 186(l0): point = 49
   Insn 185(l0): point = 51
   Insn 184(l0): point = 53
   Insn 183(l0): point = 55
   Insn 182(l0): point = 57
   Insn 181(l0): point = 59
   Insn 180(l0): point = 61
   Insn 179(l0): point = 63
   Insn 178(l0): point = 65
   Insn 177(l0): point = 67
   Insn 176(l0): point = 69
   Insn 175(l0): point = 71
   Insn 174(l0): point = 73
   Insn 173(l0): point = 75
   Insn 172(l0): point = 77
   Insn 171(l0): point = 79
   Insn 170(l0): point = 81
   Insn 169(l0): point = 83
   Insn 168(l0): point = 85
   Insn 167(l0): point = 87
   Insn 166(l0): point = 89
   Insn 165(l0): point = 91
   Insn 164(l0): point = 93
   Insn 163(l0): point = 95
   Insn 162(l0): point = 97
   Insn 161(l0): point = 99
   Insn 160(l0): point = 101
   Insn 159(l0): point = 103
   Insn 158(l0): point = 105
   Insn 157(l0): point = 107
   Insn 156(l0): point = 109
   Insn 155(l0): point = 111
   Insn 154(l0): point = 113
   Insn 153(l0): point = 115
   Insn 152(l0): point = 117
   Insn 151(l0): point = 119
   Insn 150(l0): point = 121
   Insn 149(l0): point = 123
   Insn 148(l0): point = 125
   Insn 147(l0): point = 127
   Insn 146(l0): point = 129
   Insn 145(l0): point = 131
   Insn 144(l0): point = 133
   Insn 143(l0): point = 135
   Insn 142(l0): point = 137
   Insn 141(l0): point = 139
   Insn 140(l0): point = 141
   Insn 139(l0): point = 143
   Insn 138(l0): point = 145
   Insn 137(l0): point = 147
   Insn 136(l0): point = 149
   Insn 135(l0): point = 151
   Insn 134(l0): point = 153
   Insn 133(l0): point = 155
   Insn 132(l0): point = 157
   Insn 129(l0): point = 160
   Insn 128(l0): point = 162
   Insn 123(l0): point = 165
   Insn 122(l0): point = 167
   Insn 121(l0): point = 169
   Insn 120(l0): point = 172
   Insn 119(l0): point = 174
   Insn 118(l0): point = 176
   Insn 117(l0): point = 178
   Insn 116(l0): point = 180
   Insn 115(l0): point = 182
   Insn 114(l0): point = 184
   Insn 113(l0): point = 186
   Insn 112(l0): point = 188
   Insn 111(l0): point = 190
   Insn 108(l0): point = 193
   Insn 107(l0): point = 195
   Insn 102(l0): point = 198
   Insn 101(l0): point = 200
   Insn 100(l0): point = 202
   Insn 99(l0): point = 205
   Insn 98(l0): point = 207
   Insn 97(l0): point = 209
   Insn 96(l0): point = 211
   Insn 95(l0): point = 213
   Insn 94(l0): point = 215
   Insn 93(l0): point = 217
   Insn 92(l0): point = 219
   Insn 91(l0): point = 221
   Insn 90(l0): point = 223
   Insn 89(l0): point = 225
   Insn 88(l0): point = 227
   Insn 87(l0): point = 229
   Insn 86(l0): point = 231
   Insn 85(l0): point = 233
   Insn 84(l0): point = 235
   Insn 83(l0): point = 237
   Insn 82(l0): point = 239
   Insn 81(l0): point = 241
   Insn 80(l0): point = 243
   Insn 79(l0): point = 245
   Insn 78(l0): point = 247
   Insn 77(l0): point = 249
   Insn 76(l0): point = 251
   Insn 75(l0): point = 253
   Insn 74(l0): point = 255
   Insn 73(l0): point = 257
   Insn 72(l0): point = 259
   Insn 71(l0): point = 261
   Insn 70(l0): point = 263
   Insn 69(l0): point = 265
   Insn 68(l0): point = 267
   Insn 67(l0): point = 269
   Insn 66(l0): point = 271
   Insn 65(l0): point = 273
   Insn 64(l0): point = 275
   Insn 63(l0): point = 277
   Insn 62(l0): point = 279
   Insn 61(l0): point = 281
   Insn 60(l0): point = 283
   Insn 59(l0): point = 285
   Insn 58(l0): point = 287
   Insn 57(l0): point = 289
   Insn 56(l0): point = 291
   Insn 55(l0): point = 293
   Insn 54(l0): point = 295
   Insn 53(l0): point = 297
   Insn 52(l0): point = 299
   Insn 51(l0): point = 301
   Insn 50(l0): point = 303
   Insn 49(l0): point = 305
   Insn 48(l0): point = 307
   Insn 47(l0): point = 309
   Insn 46(l0): point = 311
   Insn 45(l0): point = 313
   Insn 44(l0): point = 315
   Insn 43(l0): point = 317
   Insn 42(l0): point = 319
   Insn 41(l0): point = 321
   Insn 40(l0): point = 323
   Insn 39(l0): point = 325
   Insn 38(l0): point = 327
   Insn 37(l0): point = 329
   Insn 36(l0): point = 331
   Insn 35(l0): point = 333
   Insn 34(l0): point = 335
   Insn 33(l0): point = 337
   Insn 32(l0): point = 339
   Insn 31(l0): point = 341
   Insn 30(l0): point = 343
   Insn 29(l0): point = 345
   Insn 28(l0): point = 347
   Insn 27(l0): point = 349
   Insn 26(l0): point = 351
   Insn 25(l0): point = 353
   Insn 24(l0): point = 355
   Insn 23(l0): point = 357
   Insn 22(l0): point = 359
   Insn 21(l0): point = 361
   Insn 20(l0): point = 363
   Insn 19(l0): point = 365
   Insn 18(l0): point = 367
   Insn 17(l0): point = 369
   Insn 16(l0): point = 371
   Insn 15(l0): point = 373
   Insn 14(l0): point = 375
   Insn 13(l0): point = 377
   Insn 12(l0): point = 379
   Insn 11(l0): point = 381
   Insn 10(l0): point = 383
   Insn 6(l0): point = 385
   Insn 5(l0): point = 387
   Insn 4(l0): point = 389
   Insn 3(l0): point = 391
   Insn 2(l0): point = 393
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r168): [12..15]
 a3(r167): [14..17]
 a4(r166): [25..28]
 a5(r165): [27..30]
 a6(r91): [36..49]
 a7(r92): [36..37]
 a8(r164): [42..45]
 a9(r163): [44..47]
 a10(r162): [54..57]
 a11(r161): [56..59]
 a12(r90): [62..63]
 a13(r89): [64..65]
 a14(r88): [68..69]
 a15(r87): [70..71]
 a16(r86): [74..75]
 a17(r85): [76..77]
 a18(r160 [0]): [80..81]
 a18(r160 [1]): [80..81]
 a19(r84): [84..85]
 a20(r159): [86..87]
 a21(r83): [86..89]
 a22(r82): [90..91]
 a23(r81): [92..93]
 a24(r78): [92..107]
 a25(r80): [94..95]
 a26(r79): [94..101]
 a27(r158): [96..97]
 a28(r157): [96..99]
 a29(r156): [102..103]
 a30(r155): [102..105]
 a31(r77): [108..109]
 a32(r76): [108..115]
 a33(r154): [110..111]
 a34(r153): [110..113]
 a35(r152): [116..117]
 a36(r151): [116..119]
 a37(r75): [122..123]
 a38(r150): [124..125]
 a39(r74): [124..127]
 a40(r73): [128..129]
 a41(r72): [130..131]
 a42(r69): [130..145]
 a43(r71): [132..133]
 a44(r70): [132..139]
 a45(r149): [134..135]
 a46(r148): [134..137]
 a47(r147): [140..141]
 a48(r146): [140..143]
 a49(r68): [146..147]
 a50(r67): [146..153]
 a51(r145): [148..149]
 a52(r144): [148..151]
 a53(r143): [154..155]
 a54(r142): [154..157]
 a55(r141): [168..169]
 a56(r66): [168..178]
 a57(r140): [175..176]
 a58(r65): [179..180]
 a59(r64): [179..186]
 a60(r139): [181..182]
 a61(r138): [181..184]
 a62(r137): [187..188]
 a63(r136): [187..190]
 a64(r135): [201..202]
 a65(r63): [201..211]
 a66(r134): [208..209]
 a67(r133 [0]): [216..217]
 a67(r133 [1]): [216..217]
 a68(r132 [0]): [220..221]
 a68(r132 [1]): [220..221]
 a69(r131 [0]): [224..225]
 a69(r131 [1]): [224..225]
 a70(r130 [0]): [228..229]
 a70(r130 [1]): [228..229]
 a71(r129 [0]): [232..233]
 a71(r129 [1]): [232..233]
 a72(r128 [0]): [236..237]
 a72(r128 [1]): [236..237]
 a73(r126): [240..241]
 a74(r62): [242..245]
 a75(r127): [242..243]
 a76(r125 [0]): [250..251]
 a76(r125 [1]): [250..251]
 a77(r124 [0]): [254..255]
 a77(r124 [1]): [254..255]
 a78(r123 [0]): [258..259]
 a78(r123 [1]): [258..259]
 a79(r122 [0]): [262..263]
 a79(r122 [1]): [262..263]
 a80(r121 [0]): [266..267]
 a80(r121 [1]): [266..267]
 a81(r120 [0]): [270..271]
 a81(r120 [1]): [270..271]
 a82(r119 [0]): [274..275]
 a82(r119 [1]): [274..275]
 a83(r118 [0]): [278..279]
 a83(r118 [1]): [278..279]
 a84(r117 [0]): [282..283]
 a84(r117 [1]): [282..283]
 a85(r116 [0]): [286..287]
 a85(r116 [1]): [286..287]
 a86(r115 [0]): [290..291]
 a86(r115 [1]): [290..291]
 a87(r114 [0]): [294..295]
 a87(r114 [1]): [294..295]
 a88(r113): [300..305]
 a89(r112): [302..307]
 a90(r111): [304..309]
 a91(r110): [312..313]
 a92(r61): [312..315]
 a93(r109): [316..317]
 a94(r60): [316..319]
 a95(r108): [320..321]
 a96(r106): [324..325]
 a97(r107): [326..327]
 a98(r59): [326..329]
 a99(r105): [334..337]
 a100(r104): [336..339]
 a101(r103): [344..349]
 a102(r102): [346..351]
 a103(r101): [348..353]
 a104(r100): [358..361]
 a105(r99): [360..363]
 a106(r98): [368..371]
 a107(r97): [370..373]
 a108(r96): [378..381]
 a109(r95): [380..383]
Compressing live ranges: from 396 to 144 - 36%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r168): [4..5]
 a3(r167): [4..5]
 a4(r166): [6..7]
 a5(r165): [6..7]
 a6(r91): [8..11]
 a7(r92): [8..9]
 a8(r164): [10..11]
 a9(r163): [10..11]
 a10(r162): [12..13]
 a11(r161): [12..13]
 a12(r90): [14..15]
 a13(r89): [16..17]
 a14(r88): [18..19]
 a15(r87): [20..21]
 a16(r86): [22..23]
 a17(r85): [24..25]
 a18(r160 [0]): [26..27]
 a18(r160 [1]): [26..27]
 a19(r84): [28..29]
 a20(r159): [30..31]
 a21(r83): [30..31]
 a22(r82): [32..33]
 a23(r81): [34..35]
 a24(r78): [34..41]
 a25(r80): [36..37]
 a26(r79): [36..39]
 a27(r158): [38..39]
 a28(r157): [38..39]
 a29(r156): [40..41]
 a30(r155): [40..41]
 a31(r77): [42..43]
 a32(r76): [42..45]
 a33(r154): [44..45]
 a34(r153): [44..45]
 a35(r152): [46..47]
 a36(r151): [46..47]
 a37(r75): [48..49]
 a38(r150): [50..51]
 a39(r74): [50..51]
 a40(r73): [52..53]
 a41(r72): [54..55]
 a42(r69): [54..61]
 a43(r71): [56..57]
 a44(r70): [56..59]
 a45(r149): [58..59]
 a46(r148): [58..59]
 a47(r147): [60..61]
 a48(r146): [60..61]
 a49(r68): [62..63]
 a50(r67): [62..65]
 a51(r145): [64..65]
 a52(r144): [64..65]
 a53(r143): [66..67]
 a54(r142): [66..67]
 a55(r141): [68..69]
 a56(r66): [68..71]
 a57(r140): [70..71]
 a58(r65): [72..73]
 a59(r64): [72..75]
 a60(r139): [74..75]
 a61(r138): [74..75]
 a62(r137): [76..77]
 a63(r136): [76..77]
 a64(r135): [78..79]
 a65(r63): [78..81]
 a66(r134): [80..81]
 a67(r133 [0]): [82..83]
 a67(r133 [1]): [82..83]
 a68(r132 [0]): [84..85]
 a68(r132 [1]): [84..85]
 a69(r131 [0]): [86..87]
 a69(r131 [1]): [86..87]
 a70(r130 [0]): [88..89]
 a70(r130 [1]): [88..89]
 a71(r129 [0]): [90..91]
 a71(r129 [1]): [90..91]
 a72(r128 [0]): [92..93]
 a72(r128 [1]): [92..93]
 a73(r126): [94..95]
 a74(r62): [96..97]
 a75(r127): [96..97]
 a76(r125 [0]): [98..99]
 a76(r125 [1]): [98..99]
 a77(r124 [0]): [100..101]
 a77(r124 [1]): [100..101]
 a78(r123 [0]): [102..103]
 a78(r123 [1]): [102..103]
 a79(r122 [0]): [104..105]
 a79(r122 [1]): [104..105]
 a80(r121 [0]): [106..107]
 a80(r121 [1]): [106..107]
 a81(r120 [0]): [108..109]
 a81(r120 [1]): [108..109]
 a82(r119 [0]): [110..111]
 a82(r119 [1]): [110..111]
 a83(r118 [0]): [112..113]
 a83(r118 [1]): [112..113]
 a84(r117 [0]): [114..115]
 a84(r117 [1]): [114..115]
 a85(r116 [0]): [116..117]
 a85(r116 [1]): [116..117]
 a86(r115 [0]): [118..119]
 a86(r115 [1]): [118..119]
 a87(r114 [0]): [120..121]
 a87(r114 [1]): [120..121]
 a88(r113): [122..123]
 a89(r112): [122..123]
 a90(r111): [122..123]
 a91(r110): [124..125]
 a92(r61): [124..125]
 a93(r109): [126..127]
 a94(r60): [126..127]
 a95(r108): [128..129]
 a96(r106): [130..131]
 a97(r107): [132..133]
 a98(r59): [132..133]
 a99(r105): [134..135]
 a100(r104): [134..135]
 a101(r103): [136..137]
 a102(r102): [136..137]
 a103(r101): [136..137]
 a104(r100): [138..139]
 a105(r99): [138..139]
 a106(r98): [140..141]
 a107(r97): [140..141]
 a108(r96): [142..143]
 a109(r95): [142..143]
  regions=1, blocks=12, points=144
    allocnos=110 (big 19), copies=0, conflicts=0, ranges=129
Disposition:
   98:r59  l0     8   94:r60  l0     9   92:r61  l0     8   74:r62  l0     8
   65:r63  l0     8   59:r64  l0     9   58:r65  l0     8   56:r66  l0     8
   50:r67  l0     9   49:r68  l0     8   42:r69  l0     9   44:r70  l0    10
   43:r71  l0     8   41:r72  l0     8   40:r73  l0     8   39:r74  l0     9
   37:r75  l0     8   32:r76  l0     9   31:r77  l0     8   24:r78  l0     9
   26:r79  l0    10   25:r80  l0     8   23:r81  l0     8   22:r82  l0     8
   21:r83  l0     9   19:r84  l0     8   17:r85  l0     8   16:r86  l0     8
   15:r87  l0     8   14:r88  l0     8   13:r89  l0     8   12:r90  l0     8
    6:r91  l0   mem    7:r92  l0     8    1:r93  l0     0    0:r94  l0     0
  109:r95  l0     1  108:r96  l0     0  107:r97  l0     1  106:r98  l0     0
  105:r99  l0     1  104:r100 l0     0  103:r101 l0     1  102:r102 l0     2
  101:r103 l0     0  100:r104 l0     1   99:r105 l0     0   96:r106 l0     8
   97:r107 l0     9   95:r108 l0     8   93:r109 l0     8   91:r110 l0     0
   90:r111 l0     1   89:r112 l0     2   88:r113 l0     0   87:r114 l0     0
   86:r115 l0     0   85:r116 l0     0   84:r117 l0     0   83:r118 l0     0
   82:r119 l0     0   81:r120 l0     0   80:r121 l0     0   79:r122 l0     0
   78:r123 l0     0   77:r124 l0     0   76:r125 l0     0   73:r126 l0     8
   75:r127 l0     9   72:r128 l0     0   71:r129 l0     0   70:r130 l0     0
   69:r131 l0     0   68:r132 l0     0   67:r133 l0     0   66:r134 l0     9
   64:r135 l0     9   63:r136 l0     9   62:r137 l0     8   61:r138 l0    10
   60:r139 l0     8   57:r140 l0     9   55:r141 l0     9   54:r142 l0     9
   53:r143 l0     8   52:r144 l0    10   51:r145 l0     8   48:r146 l0    10
   47:r147 l0     8   46:r148 l0    11   45:r149 l0     8   38:r150 l0     8
   36:r151 l0     9   35:r152 l0     8   34:r153 l0    10   33:r154 l0     8
   30:r155 l0    10   29:r156 l0     8   28:r157 l0    11   27:r158 l0     8
   20:r159 l0     8   18:r160 l0     0   11:r161 l0     1   10:r162 l0     0
    9:r163 l0     1    8:r164 l0     0    5:r165 l0     1    4:r166 l0     0
    3:r167 l0     1    2:r168 l0     0
+++Costs: overall -7, reg -27, mem 20, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


proj_point_to_circle

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 37[r8]
;;  ref usage 	r0={16d,2u} r1={17d,3u} r2={15d,1u} r4={25d,11u} r5={27d,13u} r6={1d,11u} r7={1d,49u} r8={14d,5u} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,10u} r17={36d,5u} r18={14d} r19={14d} r20={1d,98u} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={15d,1u} r38={15d} r39={14d} r40={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,2u} r64={1d,1u} r65={1d,1u} r66={1d,2u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 1113{792d,321u,0e} in 193{179 regular + 14 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 p0+0 S8 A64])
        (reg:DI 5 di [ p0 ])) mUtility.c:415 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p0 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -480 [0xfffffffffffffe20])) [0 p1+0 S8 A64])
        (reg:DI 4 si [ p1 ])) mUtility.c:415 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ p1 ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 px+0 S8 A64])
        (reg:DI 1 dx [ px ])) mUtility.c:415 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ px ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 ph+0 S8 A64])
        (reg:DI 2 cx [ ph ])) mUtility.c:415 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ph ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [0 dist+0 S8 A64])
        (reg:DI 37 r8 [ dist ])) mUtility.c:415 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ dist ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:418 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -472 [0xfffffffffffffe28])) [0 p0+0 S8 A64])) mUtility.c:418 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 95)) mUtility.c:418 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 96)) mUtility.c:418 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:418 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:419 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -480 [0xfffffffffffffe20])) [0 p1+0 S8 A64])) mUtility.c:419 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 97)) mUtility.c:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 98)) mUtility.c:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:419 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:420 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 px+0 S8 A64])) mUtility.c:420 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 99)) mUtility.c:420 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 100)) mUtility.c:420 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_cart") [flags 0x3]  <function_decl 0x7f4452bbab00 _to_cart>) [0 _to_cart S1 A8])
            (const_int 0 [0]))) mUtility.c:420 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:424 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:424 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:424 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 1 dx)
        (reg:DI 101)) mUtility.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 102)) mUtility.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 103)) mUtility.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_cross_prod") [flags 0x3]  <function_decl 0x7f4452bcd100 _cross_prod>) [0 _cross_prod S1 A8])
            (const_int 0 [0]))) mUtility.c:424 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:428 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:428 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 2 (set (reg:DI 4 si)
        (reg:DI 104)) mUtility.c:428 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 105)) mUtility.c:428 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 36 35 37 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("angle_betw_0pi") [flags 0x3]  <function_decl 0x7f4452bbae00 angle_betw_0pi>) [0 angle_betw_0pi S1 A8])
            (const_int 0 [0]))) mUtility.c:428 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 2 (set (reg:XF 59 [ D.5156 ])
        (reg:XF 8 st)) mUtility.c:428 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 38 37 39 2 (set (reg:XF 107)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) mUtility.c:428 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 39 38 40 2 (set (reg:XF 106)
        (minus:XF (reg:XF 59 [ D.5156 ])
            (reg:XF 107))) mUtility.c:428 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 107)
        (expr_list:REG_DEAD (reg:XF 59 [ D.5156 ])
            (nil))))
(insn 40 39 41 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [0 theta+0 S16 A128])
        (reg:XF 106)) mUtility.c:428 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 106)
        (nil)))
(insn 41 40 42 2 (set (reg:XF 108)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -464 [0xfffffffffffffe30])) [0 theta+0 S16 A128])) mUtility.c:430 131 {*movxf_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (reg:XF 60 [ D.5156 ])
        (abs:XF (reg:XF 108))) mUtility.c:430 480 {*absxf2_1}
     (expr_list:REG_DEAD (reg:XF 108)
        (nil)))
(insn 43 42 44 2 (set (reg:XF 109)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:430 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 44 43 45 2 (set (reg:XF 61 [ D.5156 ])
        (mult:XF (reg:XF 60 [ D.5156 ])
            (reg:XF 109))) mUtility.c:430 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 109)
        (expr_list:REG_DEAD (reg:XF 60 [ D.5156 ])
            (nil))))
(insn 45 44 46 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -504 [0xfffffffffffffe08])) [0 dist+0 S8 A64])) mUtility.c:430 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (set (mem:XF (reg/f:DI 110) [0 *dist_8(D)+0 S16 A128])
        (reg:XF 61 [ D.5156 ])) mUtility.c:430 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_DEAD (reg:XF 61 [ D.5156 ])
            (nil))))
(insn 47 46 48 2 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:434 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 2 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:434 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 2 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:434 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 2 (set (reg:DI 1 dx)
        (reg:DI 111)) mUtility.c:434 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 4 si)
        (reg:DI 112)) mUtility.c:434 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg:DI 113)) mUtility.c:434 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(call_insn 53 52 54 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_cross_prod") [flags 0x3]  <function_decl 0x7f4452bcd100 _cross_prod>) [0 _cross_prod S1 A8])
            (const_int 0 [0]))) mUtility.c:434 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 2 (set (reg:XF 114)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 N+0 S16 A128])) mUtility.c:436 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])
        (reg:XF 114)) mUtility.c:436 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 114)
        (nil)))
(insn 56 55 57 2 (set (reg:XF 115)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [0 N+16 S16 A128])) mUtility.c:437 131 {*movxf_internal_rex64}
     (nil))
(insn 57 56 58 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])
        (reg:XF 115)) mUtility.c:437 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 115)
        (nil)))
(insn 58 57 59 2 (set (reg:XF 116)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 N+32 S16 A128])) mUtility.c:438 131 {*movxf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 c+0 S16 A128])
        (reg:XF 116)) mUtility.c:438 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 116)
        (nil)))
(insn 60 59 61 2 (set (reg:XF 117)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 T+0 S16 A128])) mUtility.c:439 131 {*movxf_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])
        (reg:XF 117)) mUtility.c:439 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 117)
        (nil)))
(insn 62 61 63 2 (set (reg:XF 118)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 T+16 S16 A128])) mUtility.c:440 131 {*movxf_internal_rex64}
     (nil))
(insn 63 62 64 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])
        (reg:XF 118)) mUtility.c:440 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 118)
        (nil)))
(insn 64 63 65 2 (set (reg:XF 119)
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 T+32 S16 A128])) mUtility.c:441 131 {*movxf_internal_rex64}
     (nil))
(insn 65 64 66 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 f+0 S16 A128])
        (reg:XF 119)) mUtility.c:441 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 119)
        (nil)))
(insn 66 65 67 2 (set (reg:XF 120)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 f+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 68 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:XF 120)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 120)
        (nil)))
(insn 68 67 69 2 (set (reg:XF 121)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 69 68 70 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:XF 121)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 121)
        (nil)))
(insn 70 69 71 2 (set (reg:XF 122)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 71 70 72 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:XF 122)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 122)
        (nil)))
(insn 72 71 73 2 (set (reg:XF 123)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 c+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S16 A128])
        (reg:XF 123)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 123)
        (nil)))
(insn 74 73 75 2 (set (reg:XF 124)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 75 74 76 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 124)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 124)
        (nil)))
(insn 76 75 77 2 (set (reg:XF 125)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (nil))
(insn 77 76 78 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 125)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 125)
        (nil)))
(call_insn 78 77 79 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_den") [flags 0x3]  <function_decl 0x7f4452bcd800 _den>) [0 _den S1 A8])
            (const_int 96 [0x60]))) mUtility.c:444 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                            (const_int 32 [0x20])) [0  S16 A128]))
                (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                (const_int 48 [0x30])) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 64 [0x40])) [0  S16 A128]))
                        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                        (const_int 80 [0x50])) [0  S16 A128]))
                            (nil))))))))
(insn 79 78 80 2 (set (reg:XF 62 [ D.5156 ])
        (reg:XF 8 st)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 80 79 81 2 (set (reg:XF 127)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.371e+6 [0x0.c26d7p+23])
        (nil)))
(insn 81 80 82 2 (set (reg:XF 126)
        (div:XF (reg:XF 127)
            (reg:XF 62 [ D.5156 ]))) mUtility.c:444 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 127)
        (expr_list:REG_DEAD (reg:XF 62 [ D.5156 ])
            (nil))))
(insn 82 81 83 2 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 t+0 S16 A128])
        (reg:XF 126)) mUtility.c:444 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 126)
        (nil)))
(insn 83 82 84 2 (set (reg:XF 128)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 f+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 84 83 85 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:XF 128)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 128)
        (nil)))
(insn 85 84 86 2 (set (reg:XF 129)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 86 85 87 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:XF 129)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 129)
        (nil)))
(insn 87 86 88 2 (set (reg:XF 130)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 88 87 89 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:XF 130)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 130)
        (nil)))
(insn 89 88 90 2 (set (reg:XF 131)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 c+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 90 89 91 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S16 A128])
        (reg:XF 131)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 131)
        (nil)))
(insn 91 90 92 2 (set (reg:XF 132)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 92 91 93 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 132)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 132)
        (nil)))
(insn 93 92 94 2 (set (reg:XF 133)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (nil))
(insn 94 93 95 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 133)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 133)
        (nil)))
(call_insn 95 94 96 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_den") [flags 0x3]  <function_decl 0x7f4452bcd800 _den>) [0 _den S1 A8])
            (const_int 96 [0x60]))) mUtility.c:446 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                            (const_int 32 [0x20])) [0  S16 A128]))
                (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                (const_int 48 [0x30])) [0  S16 A128]))
                    (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                    (const_int 64 [0x40])) [0  S16 A128]))
                        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                                        (const_int 80 [0x50])) [0  S16 A128]))
                            (nil))))))))
(insn 96 95 97 2 (set (reg:XF 63 [ D.5156 ])
        (reg:XF 8 st)) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 97 96 98 2 (set (reg:XF 134)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 98 97 99 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 63 [ D.5156 ])
            (reg:XF 134))) mUtility.c:446 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 134)
        (nil)))
(jump_insn 99 98 227 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) mUtility.c:446 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 109)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 17 [flags] 135
(note 227 99 100 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 100 227 101 3 (set (reg:XF 135)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mUtility.c:446 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 101 100 102 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 63 [ D.5156 ])
            (reg:XF 135))) mUtility.c:446 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 135)
        (expr_list:REG_DEAD (reg:XF 63 [ D.5156 ])
            (nil))))
(jump_insn 102 101 106 3 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 109)
            (pc))) mUtility.c:446 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 109)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 106 102 107 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f4452922260 *.LC10>)) mUtility.c:446 87 {*movdi_internal_rex64}
     (nil))
(call_insn 108 107 109 4 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x3]  <function_decl 0x7f4452e3c300 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mUtility.c:446 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66 136 137 138 139 140
(code_label 109 108 110 5 151 "" [2 uses])
(note 110 109 111 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 5 (set (reg:XF 136)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (nil))
(insn 112 111 113 5 (set (reg:XF 137)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (nil))
(insn 113 112 114 5 (set (reg:XF 64 [ D.5156 ])
        (mult:XF (reg:XF 136)
            (reg:XF 137))) mUtility.c:447 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 137)
        (expr_list:REG_DEAD (reg:XF 136)
            (nil))))
(insn 114 113 115 5 (set (reg:XF 138)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (nil))
(insn 115 114 116 5 (set (reg:XF 139)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (nil))
(insn 116 115 117 5 (set (reg:XF 65 [ D.5156 ])
        (mult:XF (reg:XF 138)
            (reg:XF 139))) mUtility.c:447 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 139)
        (expr_list:REG_DEAD (reg:XF 138)
            (nil))))
(insn 117 116 118 5 (set (reg:XF 66 [ D.5156 ])
        (minus:XF (reg:XF 64 [ D.5156 ])
            (reg:XF 65 [ D.5156 ]))) mUtility.c:447 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 64 [ D.5156 ])
            (nil))))
(insn 118 117 119 5 (set (reg:XF 140)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 119 118 120 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 66 [ D.5156 ])
            (reg:XF 140))) mUtility.c:447 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 140)
        (nil)))
(jump_insn 120 119 230 5 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) mUtility.c:447 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 130)
;;  succ:       8
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  def 	 17 [flags] 141
(note 230 120 121 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 121 230 122 6 (set (reg:XF 141)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S16 A128])) mUtility.c:447 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 122 121 123 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 66 [ D.5156 ])
            (reg:XF 141))) mUtility.c:447 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 141)
        (expr_list:REG_DEAD (reg:XF 66 [ D.5156 ])
            (nil))))
(jump_insn 123 122 127 6 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 130)
            (pc))) mUtility.c:447 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 130)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 127 123 128 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f44529222f8 *.LC11>)) mUtility.c:447 87 {*movdi_internal_rex64}
     (nil))
(call_insn 129 128 130 7 (call (mem:QI (symbol_ref:DI ("BuG") [flags 0x3]  <function_decl 0x7f4452e3c300 BuG>) [0 BuG S1 A8])
        (const_int 0 [0])) mUtility.c:447 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
(code_label 130 129 131 8 153 "" [2 uses])
(note 131 130 132 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 8 (set (reg:XF 142)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 133 132 134 8 (set (reg:XF 143)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 f+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 134 133 135 8 (set (reg:XF 67 [ D.5156 ])
        (mult:XF (reg:XF 142)
            (reg:XF 143))) mUtility.c:451 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 143)
        (expr_list:REG_DEAD (reg:XF 142)
            (nil))))
(insn 135 134 136 8 (set (reg:XF 144)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 c+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 136 135 137 8 (set (reg:XF 145)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 137 136 138 8 (set (reg:XF 68 [ D.5156 ])
        (mult:XF (reg:XF 144)
            (reg:XF 145))) mUtility.c:451 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 145)
        (expr_list:REG_DEAD (reg:XF 144)
            (nil))))
(insn 138 137 139 8 (set (reg:XF 69 [ D.5156 ])
        (minus:XF (reg:XF 67 [ D.5156 ])
            (reg:XF 68 [ D.5156 ]))) mUtility.c:451 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 68 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 67 [ D.5156 ])
            (nil))))
(insn 139 138 140 8 (set (reg:XF 146)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 140 139 141 8 (set (reg:XF 147)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 141 140 142 8 (set (reg:XF 70 [ D.5156 ])
        (mult:XF (reg:XF 146)
            (reg:XF 147))) mUtility.c:451 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 147)
        (expr_list:REG_DEAD (reg:XF 146)
            (nil))))
(insn 142 141 143 8 (set (reg:XF 148)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 143 142 144 8 (set (reg:XF 149)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 144 143 145 8 (set (reg:XF 71 [ D.5156 ])
        (mult:XF (reg:XF 148)
            (reg:XF 149))) mUtility.c:451 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 149)
        (expr_list:REG_DEAD (reg:XF 148)
            (nil))))
(insn 145 144 146 8 (set (reg:XF 72 [ D.5156 ])
        (minus:XF (reg:XF 70 [ D.5156 ])
            (reg:XF 71 [ D.5156 ]))) mUtility.c:451 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 71 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 70 [ D.5156 ])
            (nil))))
(insn 146 145 147 8 (set (reg:XF 73 [ D.5156 ])
        (div:XF (reg:XF 69 [ D.5156 ])
            (reg:XF 72 [ D.5156 ]))) mUtility.c:451 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 69 [ D.5156 ])
            (nil))))
(insn 147 146 148 8 (set (reg:XF 74 [ D.5156 ])
        (neg:XF (reg:XF 73 [ D.5156 ]))) mUtility.c:451 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5156 ])
        (nil)))
(insn 148 147 149 8 (set (reg:XF 150)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 t+0 S16 A128])) mUtility.c:451 131 {*movxf_internal_rex64}
     (nil))
(insn 149 148 150 8 (set (reg:XF 75 [ D.5156 ])
        (mult:XF (reg:XF 74 [ D.5156 ])
            (reg:XF 150))) mUtility.c:451 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 150)
        (expr_list:REG_DEAD (reg:XF 74 [ D.5156 ])
            (nil))))
(insn 150 149 151 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 X1+0 S16 A128])
        (reg:XF 75 [ D.5156 ])) mUtility.c:451 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 75 [ D.5156 ])
        (nil)))
(insn 151 150 152 8 (set (reg:XF 151)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 c+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 152 151 153 8 (set (reg:XF 152)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 153 152 154 8 (set (reg:XF 76 [ D.5156 ])
        (mult:XF (reg:XF 151)
            (reg:XF 152))) mUtility.c:452 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 152)
        (expr_list:REG_DEAD (reg:XF 151)
            (nil))))
(insn 154 153 155 8 (set (reg:XF 153)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 155 154 156 8 (set (reg:XF 154)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 f+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 156 155 157 8 (set (reg:XF 77 [ D.5156 ])
        (mult:XF (reg:XF 153)
            (reg:XF 154))) mUtility.c:452 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 154)
        (expr_list:REG_DEAD (reg:XF 153)
            (nil))))
(insn 157 156 158 8 (set (reg:XF 78 [ D.5156 ])
        (minus:XF (reg:XF 76 [ D.5156 ])
            (reg:XF 77 [ D.5156 ]))) mUtility.c:452 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 77 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 76 [ D.5156 ])
            (nil))))
(insn 158 157 159 8 (set (reg:XF 155)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 b+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 159 158 160 8 (set (reg:XF 156)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 d+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 160 159 161 8 (set (reg:XF 79 [ D.5156 ])
        (mult:XF (reg:XF 155)
            (reg:XF 156))) mUtility.c:452 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 156)
        (expr_list:REG_DEAD (reg:XF 155)
            (nil))))
(insn 161 160 162 8 (set (reg:XF 157)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -448 [0xfffffffffffffe40])) [0 a+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 162 161 163 8 (set (reg:XF 158)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [0 e+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 163 162 164 8 (set (reg:XF 80 [ D.5156 ])
        (mult:XF (reg:XF 157)
            (reg:XF 158))) mUtility.c:452 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 158)
        (expr_list:REG_DEAD (reg:XF 157)
            (nil))))
(insn 164 163 165 8 (set (reg:XF 81 [ D.5156 ])
        (minus:XF (reg:XF 79 [ D.5156 ])
            (reg:XF 80 [ D.5156 ]))) mUtility.c:452 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 80 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 79 [ D.5156 ])
            (nil))))
(insn 165 164 166 8 (set (reg:XF 82 [ D.5156 ])
        (div:XF (reg:XF 78 [ D.5156 ])
            (reg:XF 81 [ D.5156 ]))) mUtility.c:452 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 81 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 78 [ D.5156 ])
            (nil))))
(insn 166 165 167 8 (set (reg:XF 83 [ D.5156 ])
        (neg:XF (reg:XF 82 [ D.5156 ]))) mUtility.c:452 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 82 [ D.5156 ])
        (nil)))
(insn 167 166 168 8 (set (reg:XF 159)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 t+0 S16 A128])) mUtility.c:452 131 {*movxf_internal_rex64}
     (nil))
(insn 168 167 169 8 (set (reg:XF 84 [ D.5156 ])
        (mult:XF (reg:XF 83 [ D.5156 ])
            (reg:XF 159))) mUtility.c:452 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 159)
        (expr_list:REG_DEAD (reg:XF 83 [ D.5156 ])
            (nil))))
(insn 169 168 170 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 X1+16 S16 A128])
        (reg:XF 84 [ D.5156 ])) mUtility.c:452 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 84 [ D.5156 ])
        (nil)))
(insn 170 169 171 8 (set (reg:XF 160)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 t+0 S16 A128])) mUtility.c:453 131 {*movxf_internal_rex64}
     (nil))
(insn 171 170 172 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 X1+32 S16 A128])
        (reg:XF 160)) mUtility.c:453 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 160)
        (nil)))
(insn 172 171 173 8 (set (reg:XF 85 [ D.5156 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 X1+0 S16 A128])) mUtility.c:455 131 {*movxf_internal_rex64}
     (nil))
(insn 173 172 174 8 (set (reg:XF 86 [ D.5156 ])
        (neg:XF (reg:XF 85 [ D.5156 ]))) mUtility.c:455 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 85 [ D.5156 ])
        (nil)))
(insn 174 173 175 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 X2+0 S16 A128])
        (reg:XF 86 [ D.5156 ])) mUtility.c:455 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 86 [ D.5156 ])
        (nil)))
(insn 175 174 176 8 (set (reg:XF 87 [ D.5156 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 X1+16 S16 A128])) mUtility.c:456 131 {*movxf_internal_rex64}
     (nil))
(insn 176 175 177 8 (set (reg:XF 88 [ D.5156 ])
        (neg:XF (reg:XF 87 [ D.5156 ]))) mUtility.c:456 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 87 [ D.5156 ])
        (nil)))
(insn 177 176 178 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 X2+16 S16 A128])
        (reg:XF 88 [ D.5156 ])) mUtility.c:456 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 88 [ D.5156 ])
        (nil)))
(insn 178 177 179 8 (set (reg:XF 89 [ D.5156 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 X1+32 S16 A128])) mUtility.c:457 131 {*movxf_internal_rex64}
     (nil))
(insn 179 178 180 8 (set (reg:XF 90 [ D.5156 ])
        (neg:XF (reg:XF 89 [ D.5156 ]))) mUtility.c:457 481 {*negxf2_1}
     (expr_list:REG_DEAD (reg:XF 89 [ D.5156 ])
        (nil)))
(insn 180 179 181 8 (set (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 X2+32 S16 A128])
        (reg:XF 90 [ D.5156 ])) mUtility.c:457 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 90 [ D.5156 ])
        (nil)))
(insn 181 180 182 8 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:459 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 182 181 183 8 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:459 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 183 182 184 8 (set (reg:DI 4 si)
        (reg:DI 161)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161)
        (nil)))
(insn 184 183 185 8 (set (reg:DI 5 di)
        (reg:DI 162)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(call_insn 185 184 186 8 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("euclid_dist") [flags 0x3]  <function_decl 0x7f4452bcd400 euclid_dist>) [0 euclid_dist S1 A8])
            (const_int 0 [0]))) mUtility.c:459 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 186 185 187 8 (set (reg:XF 91 [ D.5156 ])
        (reg:XF 8 st)) mUtility.c:459 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 187 186 188 8 (parallel [
            (set (reg:DI 163)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:459 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 188 187 189 8 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:459 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 189 188 190 8 (set (reg:DI 4 si)
        (reg:DI 163)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 163)
        (nil)))
(insn 190 189 191 8 (set (reg:DI 5 di)
        (reg:DI 164)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(call_insn 191 190 192 8 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("euclid_dist") [flags 0x3]  <function_decl 0x7f4452bcd400 euclid_dist>) [0 euclid_dist S1 A8])
            (const_int 0 [0]))) mUtility.c:459 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 192 191 193 8 (set (reg:XF 92 [ D.5156 ])
        (reg:XF 8 st)) mUtility.c:459 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 193 192 194 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 92 [ D.5156 ])
            (reg:XF 91 [ D.5156 ]))) mUtility.c:459 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 92 [ D.5156 ])
        (expr_list:REG_DEAD (reg:XF 91 [ D.5156 ])
            (nil))))
(jump_insn 194 193 198 8 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 239)
            (pc))) mUtility.c:459 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 239)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 165 166
(note 198 194 199 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 9 (set (reg:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 ph+0 S8 A64])) mUtility.c:459 87 {*movdi_internal_rex64}
     (nil))
(insn 200 199 201 9 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:459 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 201 200 202 9 (set (reg:DI 4 si)
        (reg:DI 165)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 202 201 203 9 (set (reg:DI 5 di)
        (reg:DI 166)) mUtility.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(call_insn 203 202 240 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_sphere") [flags 0x3]  <function_decl 0x7f4452bbaa00 _to_sphere>) [0 _to_sphere S1 A8])
            (const_int 0 [0]))) mUtility.c:459 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(jump_insn 240 203 241 9 (set (pc)
        (label_ref 213)) 650 {jump}
     (nil)
 -> 213)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 241 240 239)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 167 168
(code_label 239 241 207 10 162 "" [1 uses])
(note 207 239 208 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 10 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 ph+0 S8 A64])) mUtility.c:460 87 {*movdi_internal_rex64}
     (nil))
(insn 209 208 210 10 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:460 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 210 209 211 10 (set (reg:DI 4 si)
        (reg:DI 167)) mUtility.c:460 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 167)
        (nil)))
(insn 211 210 212 10 (set (reg:DI 5 di)
        (reg:DI 168)) mUtility.c:460 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(call_insn 212 211 213 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_to_sphere") [flags 0x3]  <function_decl 0x7f4452bbaa00 _to_sphere>) [0 _to_sphere S1 A8])
            (const_int 0 [0]))) mUtility.c:460 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 93 94
(code_label 213 212 214 11 157 "" [1 uses])
(note 214 213 215 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 218 11 (set (reg:SI 93 [ D.5157 ])
        (const_int 1 [0x1])) mUtility.c:462 89 {*movsi_internal}
     (nil))
(insn 218 215 222 11 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.5157 ])) mUtility.c:462 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ D.5157 ])
        (nil)))
(insn 222 218 225 11 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) mUtility.c:463 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ <retval> ])
        (nil)))
(insn 225 222 0 11 (use (reg/i:SI 0 ax)) mUtility.c:463 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function distance_point_segment (distance_point_segment, funcdef_no=38, decl_uid=1798, cgraph_uid=38)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 99.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r101: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a2 (r101,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a7 (r98,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r84,l0) best CREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a0 (r82,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r81: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a3 (r81,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r80: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a4 (r80,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r79: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a11 (r79,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r78: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a12 (r78,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a13 (r76,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a10 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a18 (r73,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r72: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a20 (r72,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a21 (r70,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a19 (r68,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r67: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a27 (r67,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a28 (r66,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r65: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a29 (r65,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r64: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a26 (r64,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r63: preferred FP_TOP_REG, alternative FLOAT_REGS, allocno FLOAT_REGS
    a32 (r63,l0) best FP_TOP_REG, allocno FLOAT_REGS
    r62: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a34 (r62,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r61: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a35 (r61,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS
    r60: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a33 (r60,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r59: preferred FLOAT_REGS, alternative FLOAT_INT_REGS, allocno FLOAT_INT_REGS
    a1 (r59,l0) best FLOAT_REGS, allocno FLOAT_INT_REGS

  a0(r82,l0) costs: AD_REGS:25 Q_REGS:25 NON_Q_REGS:25 INDEX_REGS:25 GENERAL_REGS:25 LEGACY_REGS:25 CLOBBERED_REGS:25 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:19
  a1(r59,l0) costs: AD_REGS:8 Q_REGS:8 NON_Q_REGS:8 INDEX_REGS:8 GENERAL_REGS:8 LEGACY_REGS:8 CLOBBERED_REGS:8 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:86 INT_SSE_REGS:262140 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:33
  a2(r101,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a3(r81,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a4(r80,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a5(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r98,l0) costs: AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 INDEX_REGS:21 GENERAL_REGS:21 LEGACY_REGS:21 CLOBBERED_REGS:21 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r74,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a11(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a12(r78,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a13(r76,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a14(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a19(r68,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a20(r72,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a21(r70,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a22(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r64,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a27(r67,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a28(r66,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a29(r65,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a30(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r63,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:-1 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r60,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a34(r62,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a35(r61,l0) costs: AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:42 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:16
  a36(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a38(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r85,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a41(r84,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a42(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 127(l0): point = 0
   Insn 124(l0): point = 2
   Insn 120(l0): point = 4
   Insn 115(l0): point = 7
   Insn 148(l0): point = 10
   Insn 110(l0): point = 12
   Insn 105(l0): point = 15
   Insn 104(l0): point = 17
   Insn 103(l0): point = 19
   Insn 102(l0): point = 21
   Insn 101(l0): point = 23
   Insn 100(l0): point = 25
   Insn 99(l0): point = 27
   Insn 98(l0): point = 29
   Insn 97(l0): point = 31
   Insn 96(l0): point = 33
   Insn 95(l0): point = 35
   Insn 94(l0): point = 37
   Insn 93(l0): point = 39
   Insn 92(l0): point = 41
   Insn 91(l0): point = 43
   Insn 90(l0): point = 45
   Insn 89(l0): point = 47
   Insn 88(l0): point = 49
   Insn 145(l0): point = 52
   Insn 83(l0): point = 54
   Insn 78(l0): point = 57
   Insn 77(l0): point = 59
   Insn 76(l0): point = 61
   Insn 75(l0): point = 63
   Insn 74(l0): point = 65
   Insn 73(l0): point = 67
   Insn 72(l0): point = 69
   Insn 71(l0): point = 71
   Insn 70(l0): point = 73
   Insn 69(l0): point = 75
   Insn 68(l0): point = 77
   Insn 67(l0): point = 79
   Insn 66(l0): point = 81
   Insn 61(l0): point = 84
   Insn 60(l0): point = 86
   Insn 59(l0): point = 88
   Insn 58(l0): point = 90
   Insn 57(l0): point = 92
   Insn 56(l0): point = 94
   Insn 55(l0): point = 96
   Insn 54(l0): point = 98
   Insn 53(l0): point = 100
   Insn 52(l0): point = 102
   Insn 51(l0): point = 104
   Insn 50(l0): point = 106
   Insn 49(l0): point = 108
   Insn 44(l0): point = 111
   Insn 43(l0): point = 113
   Insn 42(l0): point = 115
   Insn 41(l0): point = 117
   Insn 40(l0): point = 119
   Insn 39(l0): point = 121
   Insn 38(l0): point = 123
   Insn 37(l0): point = 125
   Insn 36(l0): point = 127
   Insn 35(l0): point = 129
   Insn 34(l0): point = 131
   Insn 29(l0): point = 134
   Insn 28(l0): point = 136
   Insn 27(l0): point = 138
   Insn 26(l0): point = 140
   Insn 25(l0): point = 142
   Insn 24(l0): point = 144
   Insn 23(l0): point = 146
   Insn 22(l0): point = 148
   Insn 21(l0): point = 150
   Insn 20(l0): point = 152
   Insn 19(l0): point = 154
   Insn 18(l0): point = 156
   Insn 17(l0): point = 158
   Insn 16(l0): point = 160
   Insn 15(l0): point = 162
   Insn 14(l0): point = 164
   Insn 13(l0): point = 166
   Insn 12(l0): point = 168
   Insn 11(l0): point = 170
   Insn 10(l0): point = 172
   Insn 9(l0): point = 174
   Insn 8(l0): point = 176
   Insn 4(l0): point = 178
   Insn 3(l0): point = 180
   Insn 2(l0): point = 182
 a0(r82): [3..4]
 a1(r59 [0]): [52..54] [10..12] [5..7]
 a1(r59 [1]): [52..54] [10..12] [5..7]
 a2(r101): [18..19]
 a3(r81): [18..21]
 a4(r80): [24..25]
 a5(r100): [30..33]
 a6(r99): [32..35]
 a7(r98): [38..39]
 a8(r97): [44..47]
 a9(r96): [46..49]
 a10(r74): [60..81]
 a11(r79): [60..61]
 a12(r78 [0]): [66..69]
 a12(r78 [1]): [66..69]
 a13(r76 [0]): [68..75]
 a13(r76 [1]): [68..75]
 a14(r77): [70..71]
 a15(r95): [72..73]
 a16(r75): [76..77]
 a17(r94): [78..79]
 a18(r73): [87..88]
 a19(r68): [87..108]
 a20(r72 [0]): [93..96]
 a20(r72 [1]): [93..96]
 a21(r70 [0]): [95..102]
 a21(r70 [1]): [95..102]
 a22(r71): [97..98]
 a23(r93): [99..100]
 a24(r69): [103..104]
 a25(r92): [105..106]
 a26(r64): [114..131]
 a27(r67): [114..115]
 a28(r66 [0]): [120..123]
 a28(r66 [1]): [120..123]
 a29(r65 [0]): [122..127]
 a29(r65 [1]): [122..127]
 a30(r91): [124..125]
 a31(r90): [128..129]
 a32(r63): [137..138]
 a33(r60): [137..154]
 a34(r62 [0]): [143..146]
 a34(r62 [1]): [143..146]
 a35(r61 [0]): [145..150]
 a35(r61 [1]): [145..150]
 a36(r89): [147..148]
 a37(r88): [151..152]
 a38(r87): [159..168]
 a39(r86): [161..170]
 a40(r85): [163..172]
 a41(r84): [165..174]
 a42(r83): [167..176]
Compressing live ranges: from 185 to 60 - 32%
Ranges after the compression:
 a0(r82): [0..1]
 a1(r59 [0]): [16..17] [2..5]
 a1(r59 [1]): [16..17] [2..5]
 a2(r101): [6..7]
 a3(r81): [6..7]
 a4(r80): [8..9]
 a5(r100): [10..11]
 a6(r99): [10..11]
 a7(r98): [12..13]
 a8(r97): [14..15]
 a9(r96): [14..15]
 a10(r74): [18..29]
 a11(r79): [18..19]
 a12(r78 [0]): [20..21]
 a12(r78 [1]): [20..21]
 a13(r76 [0]): [20..25]
 a13(r76 [1]): [20..25]
 a14(r77): [22..23]
 a15(r95): [24..25]
 a16(r75): [26..27]
 a17(r94): [28..29]
 a18(r73): [30..31]
 a19(r68): [30..41]
 a20(r72 [0]): [32..33]
 a20(r72 [1]): [32..33]
 a21(r70 [0]): [32..37]
 a21(r70 [1]): [32..37]
 a22(r71): [34..35]
 a23(r93): [36..37]
 a24(r69): [38..39]
 a25(r92): [40..41]
 a26(r64): [42..49]
 a27(r67): [42..43]
 a28(r66 [0]): [44..45]
 a28(r66 [1]): [44..45]
 a29(r65 [0]): [44..47]
 a29(r65 [1]): [44..47]
 a30(r91): [46..47]
 a31(r90): [48..49]
 a32(r63): [50..51]
 a33(r60): [50..57]
 a34(r62 [0]): [52..53]
 a34(r62 [1]): [52..53]
 a35(r61 [0]): [52..55]
 a35(r61 [1]): [52..55]
 a36(r89): [54..55]
 a37(r88): [56..57]
 a38(r87): [58..59]
 a39(r86): [58..59]
 a40(r85): [58..59]
 a41(r84): [58..59]
 a42(r83): [58..59]
  regions=1, blocks=11, points=60
    allocnos=43 (big 9), copies=0, conflicts=0, ranges=54
Disposition:
    1:r59  l0     0   33:r60  l0   mem   35:r61  l0     2   34:r62  l0     0
   32:r63  l0     8   26:r64  l0   mem   29:r65  l0     2   28:r66  l0     0
   27:r67  l0     8   19:r68  l0   mem   24:r69  l0     0   21:r70  l0     2
   22:r71  l0     0   20:r72  l0     0   18:r73  l0     8   10:r74  l0   mem
   16:r75  l0     0   13:r76  l0     2   14:r77  l0     0   12:r78  l0     0
   11:r79  l0     8    4:r80  l0     8    3:r81  l0     9    0:r82  l0     8
   42:r83  l0     5   41:r84  l0     2   40:r85  l0     1   39:r86  l0     4
   38:r87  l0     0   37:r88  l0     0   36:r89  l0     0   31:r90  l0     0
   30:r91  l0     0   25:r92  l0     0   23:r93  l0     0   17:r94  l0     0
   15:r95  l0     0    9:r96  l0     1    8:r97  l0     0    7:r98  l0     8
    6:r99  l0     1    5:r100 l0     0    2:r101 l0     8
+++Costs: overall 65, reg -15, mem 80, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


distance_point_segment

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 8[st] 17[flags] 37[r8]
;;  ref usage 	r0={8d} r1={9d,2u} r2={9d,1u} r4={11d,4u} r5={11d,4u} r6={1d,10u} r7={1d,33u} r8={8d,8u} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,9u} r17={18d,5u} r18={7d} r19={7d} r20={1d,41u,4e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={9d,1u} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 558{393d,161u,4e} in 88{81 regular + 7 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 83 84 85 86 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])
        (reg:DI 5 di [ a ])) mUtility.c:465 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])
        (reg:DI 4 si [ b ])) mUtility.c:465 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ b ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 p+0 S8 A64])
        (reg:DI 1 dx [ p ])) mUtility.c:465 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:468 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 84)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:468 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 p+0 S8 A64])) mUtility.c:468 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:468 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:468 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 37 r8)
        (reg:DI 83)) mUtility.c:468 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg:DI 84)) mUtility.c:468 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg:DI 85)) mUtility.c:468 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 86)) mUtility.c:468 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 87)) mUtility.c:468 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("proj_point_to_circle") [flags 0x3]  <function_decl 0x7f4452e41500 proj_point_to_circle>) [0 proj_point_to_circle S1 A8])
            (const_int 0 [0]))) mUtility.c:468 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (nil)))))))
(insn 19 18 20 2 (set (reg:XF 60 [ D.5158 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 c+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:XF 61 [ D.5158 ])
        (mem:XF (reg/f:DI 88) [0 *b_3(D)+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:XF 62 [ D.5158 ])
        (mem:XF (reg/f:DI 89) [0 *a_2(D)+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 24 23 25 2 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 61 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 61 [ D.5158 ])
        (nil)))
(insn 25 24 26 2 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 62 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 62 [ D.5158 ])
        (nil)))
(call_insn 26 25 27 2 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_min") [flags 0x3]  <function_decl 0x7f4452bcd500 _min>) [0 _min S1 A8])
            (const_int 32 [0x20]))) mUtility.c:470 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 27 26 28 2 (set (reg:XF 63 [ D.5158 ])
        (reg:XF 8 st)) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 28 27 29 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 60 [ D.5158 ])
            (reg:XF 63 [ D.5158 ]))) mUtility.c:470 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 63 [ D.5158 ])
        (expr_list:REG_DEAD (reg:XF 60 [ D.5158 ])
            (nil))))
(jump_insn 29 28 33 2 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mUtility.c:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 86)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 66 67 90 91
(note 33 29 34 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 3 (set (reg:XF 64 [ D.5158 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 c+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 3 (set (reg:XF 65 [ D.5158 ])
        (mem:XF (reg/f:DI 90) [0 *b_3(D)+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 37 36 38 3 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 3 (set (reg:XF 66 [ D.5158 ])
        (mem:XF (reg/f:DI 91) [0 *a_2(D)+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 39 38 40 3 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 65 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 65 [ D.5158 ])
        (nil)))
(insn 40 39 41 3 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 66 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 66 [ D.5158 ])
        (nil)))
(call_insn 41 40 42 3 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_max") [flags 0x3]  <function_decl 0x7f4452bcd600 _max>) [0 _max S1 A8])
            (const_int 32 [0x20]))) mUtility.c:470 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 42 41 43 3 (set (reg:XF 67 [ D.5158 ])
        (reg:XF 8 st)) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 43 42 44 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 67 [ D.5158 ])
            (reg:XF 64 [ D.5158 ]))) mUtility.c:470 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5158 ])
        (expr_list:REG_DEAD (reg:XF 64 [ D.5158 ])
            (nil))))
(jump_insn 44 43 48 3 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mUtility.c:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 86)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 92 93
(note 48 44 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 4 (set (reg:XF 68 [ D.5158 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+16 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (nil))
(insn 50 49 51 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 4 (parallel [
            (set (reg/f:DI 69 [ D.5159 ])
                (plus:DI (reg/f:DI 92)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:470 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 52 51 53 4 (set (reg:XF 70 [ D.5158 ])
        (mem:XF (reg/f:DI 69 [ D.5159 ]) [0 *_14+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.5159 ])
        (nil)))
(insn 53 52 54 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg/f:DI 71 [ D.5159 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:470 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 55 54 56 4 (set (reg:XF 72 [ D.5158 ])
        (mem:XF (reg/f:DI 71 [ D.5159 ]) [0 *_16+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.5159 ])
        (nil)))
(insn 56 55 57 4 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 70 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 70 [ D.5158 ])
        (nil)))
(insn 57 56 58 4 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 72 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 72 [ D.5158 ])
        (nil)))
(call_insn 58 57 59 4 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_min") [flags 0x3]  <function_decl 0x7f4452bcd500 _min>) [0 _min S1 A8])
            (const_int 32 [0x20]))) mUtility.c:470 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 59 58 60 4 (set (reg:XF 73 [ D.5158 ])
        (reg:XF 8 st)) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 60 59 61 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 68 [ D.5158 ])
            (reg:XF 73 [ D.5158 ]))) mUtility.c:470 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 73 [ D.5158 ])
        (expr_list:REG_DEAD (reg:XF 68 [ D.5158 ])
            (nil))))
(jump_insn 61 60 65 4 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mUtility.c:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 86)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 77 78 79 94 95
(note 65 61 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:XF 74 [ D.5158 ])
        (mem/j/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+16 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (nil))
(insn 67 66 68 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 5 (parallel [
            (set (reg/f:DI 75 [ D.5159 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:470 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 69 68 70 5 (set (reg:XF 76 [ D.5158 ])
        (mem:XF (reg/f:DI 75 [ D.5159 ]) [0 *_20+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75 [ D.5159 ])
        (nil)))
(insn 70 69 71 5 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:470 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 5 (parallel [
            (set (reg/f:DI 77 [ D.5159 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:470 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 72 71 73 5 (set (reg:XF 78 [ D.5158 ])
        (mem:XF (reg/f:DI 77 [ D.5159 ]) [0 *_22+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77 [ D.5159 ])
        (nil)))
(insn 73 72 74 5 (set (mem:XF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S16 A128])
        (reg:XF 76 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 76 [ D.5158 ])
        (nil)))
(insn 74 73 75 5 (set (mem:XF (reg/f:DI 7 sp) [0  S16 A128])
        (reg:XF 78 [ D.5158 ])) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 78 [ D.5158 ])
        (nil)))
(call_insn 75 74 76 5 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("_max") [flags 0x3]  <function_decl 0x7f4452bcd600 _max>) [0 _max S1 A8])
            (const_int 32 [0x20]))) mUtility.c:470 663 {*call_value}
     (nil)
    (expr_list:XF (use (mem:XF (reg/f:DI 7 sp) [0  S16 A128]))
        (expr_list:XF (use (mem:XF (plus:DI (reg/f:DI 7 sp)
                        (const_int 16 [0x10])) [0  S16 A128]))
            (nil))))
(insn 76 75 77 5 (set (reg:XF 79 [ D.5158 ])
        (reg:XF 8 st)) mUtility.c:470 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 77 76 78 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 79 [ D.5158 ])
            (reg:XF 74 [ D.5158 ]))) mUtility.c:470 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5158 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5158 ])
            (nil))))
(jump_insn 78 77 82 5 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) mUtility.c:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 86)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 82 78 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 145 6 (set (reg:XF 59 [ D.5158 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 d+0 S16 A128])) mUtility.c:470 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 145 83 146 6 (set (pc)
        (label_ref 118)) mUtility.c:470 650 {jump}
     (nil)
 -> 118)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 146 145 86)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 80 81 96 97 98 99 100 101
(code_label 86 146 87 7 166 "" [4 uses])
(note 87 86 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 7 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 p+0 S8 A64])) mUtility.c:472 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 7 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 a+0 S8 A64])) mUtility.c:472 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 7 (set (reg:DI 4 si)
        (reg:DI 96)) mUtility.c:472 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 91 90 92 7 (set (reg:DI 5 di)
        (reg:DI 97)) mUtility.c:472 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 92 91 93 7 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x3]  <function_decl 0x7f4452e3c400 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mUtility.c:472 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 93 92 94 7 (set (reg:XF 98)
        (reg:XF 8 st)) mUtility.c:472 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 94 93 95 7 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 d2+0 S16 A128])
        (reg:XF 98)) mUtility.c:472 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 98)
        (nil)))
(insn 95 94 96 7 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 p+0 S8 A64])) mUtility.c:473 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 7 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 b+0 S8 A64])) mUtility.c:473 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 7 (set (reg:DI 4 si)
        (reg:DI 99)) mUtility.c:473 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 98 97 99 7 (set (reg:DI 5 di)
        (reg:DI 100)) mUtility.c:473 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 99 98 100 7 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("haversine_distance") [flags 0x3]  <function_decl 0x7f4452e3c400 haversine_distance>) [0 haversine_distance S1 A8])
            (const_int 0 [0]))) mUtility.c:473 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 7 (set (reg:XF 80 [ d.2 ])
        (reg:XF 8 st)) mUtility.c:473 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))
(insn 101 100 102 7 (set (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 d+0 S16 A128])
        (reg:XF 80 [ d.2 ])) mUtility.c:473 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 80 [ d.2 ])
        (nil)))
(insn 102 101 103 7 (set (reg:XF 81 [ d.3 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 d+0 S16 A128])) mUtility.c:475 131 {*movxf_internal_rex64}
     (nil))
(insn 103 102 104 7 (set (reg:XF 101)
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 d2+0 S16 A128])) mUtility.c:475 131 {*movxf_internal_rex64}
     (nil))
(insn 104 103 105 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 81 [ d.3 ])
            (reg:XF 101))) mUtility.c:475 64 {*cmpiuxf_i387}
     (expr_list:REG_DEAD (reg:XF 101)
        (expr_list:REG_DEAD (reg:XF 81 [ d.3 ])
            (nil))))
(jump_insn 105 104 109 7 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 147)
            (pc))) mUtility.c:475 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 147)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 109 105 110 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 148 8 (set (reg:XF 59 [ D.5158 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 d2+0 S16 A128])) mUtility.c:475 131 {*movxf_internal_rex64}
     (nil))
(jump_insn 148 110 149 8 (set (pc)
        (label_ref 118)) mUtility.c:475 650 {jump}
     (nil)
 -> 118)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 149 148 147)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 147 149 114 9 180 "" [1 uses])
(note 114 147 115 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 118 9 (set (reg:XF 59 [ D.5158 ])
        (mem/c:XF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 d+0 S16 A128])) mUtility.c:476 131 {*movxf_internal_rex64}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              6 [100.0%] 
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 8 [st] 82
(code_label 118 115 119 10 174 "" [2 uses])
(note 119 118 120 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 124 10 (set (reg:XF 82 [ <retval> ])
        (reg:XF 59 [ D.5158 ])) 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5158 ])
        (nil)))
(insn 124 120 127 10 (set (reg/i:XF 8 st)
        (reg:XF 82 [ <retval> ])) mUtility.c:477 131 {*movxf_internal_rex64}
     (expr_list:REG_DEAD (reg:XF 82 [ <retval> ])
        (nil)))
(insn 127 124 0 10 (use (reg/i:XF 8 st)) mUtility.c:477 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


;; Function time_to_int (time_to_int, funcdef_no=39, decl_uid=1812, cgraph_uid=39)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a5 (r123,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a21 (r119,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a40 (r113,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a50 (r109,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r108: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a53 (r108,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a64 (r103,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r102: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a65 (r102,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a4 (r98,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r97: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a6 (r97,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r96: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a7 (r96,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a8 (r93,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r92: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a12 (r92,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r91: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a14 (r91,l0) best NO_REGS, allocno NO_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a13 (r87,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r86: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a20 (r86,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r85: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a22 (r85,l0) best NO_REGS, allocno NO_REGS
    r84: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r84,l0) best SSE_REGS, allocno SSE_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a30 (r80,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r79: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a31 (r79,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r78: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a33 (r78,l0) best NO_REGS, allocno NO_REGS
    r77: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r77,l0) best SSE_REGS, allocno SSE_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a32 (r74,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r73: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a39 (r73,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r72: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a41 (r72,l0) best NO_REGS, allocno NO_REGS
    r71: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r71,l0) best SSE_REGS, allocno SSE_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a49 (r67,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r66: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a51 (r66,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r65: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a52 (r65,l0) best FLOAT_REGS, allocno FLOAT_REGS
    r64: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a54 (r64,l0) best NO_REGS, allocno NO_REGS
    r63: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r63,l0) best SSE_REGS, allocno SSE_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, allocno FLOAT_REGS
    a62 (r59,l0) best FLOAT_REGS, allocno FLOAT_REGS

  a0(r101,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r99,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a4(r98,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a5(r123,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a6(r97,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a7(r96,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a8(r93,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a9(r95,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r92,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a13(r87,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a14(r91,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a15(r121,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a16(r90,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r86,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a21(r119,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a22(r85,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a23(r118,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a24(r84,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a25(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a26(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r81,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a30(r80,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a31(r79,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a32(r74,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a33(r78,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a34(r115,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a35(r77,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a36(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r73,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a40(r113,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a41(r72,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a42(r112,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a43(r71,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a44(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a45(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a46(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a47(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a48(r68,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a49(r67,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a50(r109,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a51(r66,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a52(r65,l0) costs: AD_REGS:62 Q_REGS:62 NON_Q_REGS:62 INDEX_REGS:62 GENERAL_REGS:62 LEGACY_REGS:62 CLOBBERED_REGS:62 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a53(r108,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a54(r64,l0) costs: AREG:30 DREG:30 CREG:30 BREG:30 SIREG:30 DIREG:30 AD_REGS:30 Q_REGS:30 NON_Q_REGS:30 INDEX_REGS:30 GENERAL_REGS:30 LEGACY_REGS:30 CLOBBERED_REGS:30 FP_TOP_REG:21 FP_SECOND_REG:21 FLOAT_REGS:21 SSE_FIRST_REG:21 SSE_REGS:21 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:38 INT_SSE_REGS:34 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:19
  a55(r107,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:13
  a56(r63,l0) costs: AREG:26 DREG:26 CREG:26 BREG:26 SIREG:26 DIREG:26 AD_REGS:26 Q_REGS:26 NON_Q_REGS:26 INDEX_REGS:26 GENERAL_REGS:26 LEGACY_REGS:26 CLOBBERED_REGS:26 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:131070 MEM:15
  a57(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a58(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a59(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a60(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a61(r60,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:28 SSE_REGS:28 MMX_REGS:28 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:131072 INT_SSE_REGS:28 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:10
  a62(r59,l0) costs: AD_REGS:64 Q_REGS:64 NON_Q_REGS:64 INDEX_REGS:64 GENERAL_REGS:64 LEGACY_REGS:64 CLOBBERED_REGS:64 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 FP_TOP_SSE_REGS:131072 FP_SECOND_SSE_REGS:131072 FLOAT_SSE_REGS:131072 FLOAT_INT_REGS:64 INT_SSE_REGS:131072 FLOAT_INT_SSE_REGS:131072 ALL_REGS:131072 MEM:22
  a63(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:262140 INT_SSE_REGS:262140 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:14
  a64(r103,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20
  a65(r102,l0) costs: AD_REGS:43 Q_REGS:43 NON_Q_REGS:43 INDEX_REGS:43 GENERAL_REGS:43 LEGACY_REGS:43 CLOBBERED_REGS:43 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:62 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:20

   Insn 83(l0): point = 0
   Insn 80(l0): point = 2
   Insn 76(l0): point = 4
   Insn 73(l0): point = 6
   Insn 72(l0): point = 8
   Insn 90(l0): point = 10
   Insn 70(l0): point = 12
   Insn 69(l0): point = 14
   Insn 68(l0): point = 16
   Insn 89(l0): point = 18
   Insn 66(l0): point = 20
   Insn 65(l0): point = 22
   Insn 64(l0): point = 24
   Insn 63(l0): point = 26
   Insn 62(l0): point = 28
   Insn 61(l0): point = 30
   Insn 60(l0): point = 32
   Insn 59(l0): point = 34
   Insn 58(l0): point = 36
   Insn 57(l0): point = 38
   Insn 56(l0): point = 40
   Insn 55(l0): point = 42
   Insn 54(l0): point = 44
   Insn 53(l0): point = 46
   Insn 52(l0): point = 48
   Insn 51(l0): point = 50
   Insn 50(l0): point = 52
   Insn 49(l0): point = 54
   Insn 48(l0): point = 56
   Insn 47(l0): point = 58
   Insn 46(l0): point = 60
   Insn 45(l0): point = 62
   Insn 88(l0): point = 64
   Insn 43(l0): point = 66
   Insn 42(l0): point = 68
   Insn 41(l0): point = 70
   Insn 40(l0): point = 72
   Insn 39(l0): point = 74
   Insn 38(l0): point = 76
   Insn 37(l0): point = 78
   Insn 36(l0): point = 80
   Insn 35(l0): point = 82
   Insn 34(l0): point = 84
   Insn 33(l0): point = 86
   Insn 32(l0): point = 88
   Insn 31(l0): point = 90
   Insn 30(l0): point = 92
   Insn 29(l0): point = 94
   Insn 28(l0): point = 96
   Insn 27(l0): point = 98
   Insn 26(l0): point = 100
   Insn 25(l0): point = 102
   Insn 87(l0): point = 104
   Insn 23(l0): point = 106
   Insn 22(l0): point = 108
   Insn 21(l0): point = 110
   Insn 20(l0): point = 112
   Insn 19(l0): point = 114
   Insn 18(l0): point = 116
   Insn 17(l0): point = 118
   Insn 16(l0): point = 120
   Insn 15(l0): point = 122
   Insn 14(l0): point = 124
   Insn 13(l0): point = 126
   Insn 12(l0): point = 128
   Insn 11(l0): point = 130
   Insn 10(l0): point = 132
   Insn 86(l0): point = 134
   Insn 98(l0): point = 136
   Insn 97(l0): point = 138
   Insn 96(l0): point = 140
   Insn 95(l0): point = 142
   Insn 8(l0): point = 144
   Insn 7(l0): point = 146
   Insn 6(l0): point = 148
   Insn 2(l0): point = 150
 a0(r101): [3..4]
 a1(r100): [5..6]
 a2(r82): [9..58]
 a3(r99): [9..10]
 a4(r98): [11..12]
 a5(r123): [13..14]
 a6(r97): [13..16]
 a7(r96): [17..18]
 a8(r93): [17..26]
 a9(r95): [19..20]
 a10(r94): [21..22]
 a11(r122): [23..24]
 a12(r92): [27..28]
 a13(r87): [27..42]
 a14(r91): [29..30]
 a15(r121): [31..32]
 a16(r90): [31..34]
 a17(r89): [35..36]
 a18(r88): [37..38]
 a19(r120): [39..40]
 a20(r86): [43..46]
 a21(r119): [43..44]
 a22(r85): [47..48]
 a23(r118): [49..50]
 a24(r84): [49..52]
 a25(r83): [53..54]
 a26(r117): [55..56]
 a27(r116): [59..60]
 a28(r69): [63..98]
 a29(r81): [63..64]
 a30(r80): [65..66]
 a31(r79): [67..68]
 a32(r74): [67..82]
 a33(r78): [69..70]
 a34(r115): [71..72]
 a35(r77): [71..74]
 a36(r76): [75..76]
 a37(r75): [77..78]
 a38(r114): [79..80]
 a39(r73): [83..86]
 a40(r113): [83..84]
 a41(r72): [87..88]
 a42(r112): [89..90]
 a43(r71): [89..92]
 a44(r70): [93..94]
 a45(r111): [95..96]
 a46(r110): [99..100]
 a47(r61): [103..126]
 a48(r68): [103..104]
 a49(r67): [105..106]
 a50(r109): [107..108]
 a51(r66): [107..110]
 a52(r65): [111..114]
 a53(r108): [111..112]
 a54(r64): [115..116]
 a55(r107): [117..118]
 a56(r63): [117..120]
 a57(r62): [121..122]
 a58(r106): [123..124]
 a59(r105): [127..128]
 a60(r104): [131..132]
 a61(r60): [131..134]
 a62(r59): [135..144]
 a63(r125): [137..140]
 a64(r103): [145..146]
 a65(r102): [145..148]
Compressing live ranges: from 153 to 94 - 61%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [2..3]
 a2(r82): [4..39]
 a3(r99): [4..5]
 a4(r98): [6..7]
 a5(r123): [8..9]
 a6(r97): [8..9]
 a7(r96): [10..11]
 a8(r93): [10..17]
 a9(r95): [12..13]
 a10(r94): [14..15]
 a11(r122): [16..17]
 a12(r92): [18..19]
 a13(r87): [18..29]
 a14(r91): [20..21]
 a15(r121): [22..23]
 a16(r90): [22..23]
 a17(r89): [24..25]
 a18(r88): [26..27]
 a19(r120): [28..29]
 a20(r86): [30..31]
 a21(r119): [30..31]
 a22(r85): [32..33]
 a23(r118): [34..35]
 a24(r84): [34..35]
 a25(r83): [36..37]
 a26(r117): [38..39]
 a27(r116): [40..41]
 a28(r69): [42..67]
 a29(r81): [42..43]
 a30(r80): [44..45]
 a31(r79): [46..47]
 a32(r74): [46..57]
 a33(r78): [48..49]
 a34(r115): [50..51]
 a35(r77): [50..51]
 a36(r76): [52..53]
 a37(r75): [54..55]
 a38(r114): [56..57]
 a39(r73): [58..59]
 a40(r113): [58..59]
 a41(r72): [60..61]
 a42(r112): [62..63]
 a43(r71): [62..63]
 a44(r70): [64..65]
 a45(r111): [66..67]
 a46(r110): [68..69]
 a47(r61): [70..85]
 a48(r68): [70..71]
 a49(r67): [72..73]
 a50(r109): [74..75]
 a51(r66): [74..75]
 a52(r65): [76..77]
 a53(r108): [76..77]
 a54(r64): [78..79]
 a55(r107): [80..81]
 a56(r63): [80..81]
 a57(r62): [82..83]
 a58(r106): [84..85]
 a59(r105): [86..87]
 a60(r104): [88..89]
 a61(r60): [88..89]
 a62(r59): [90..91]
 a63(r125): [90..91]
 a64(r103): [92..93]
 a65(r102): [92..93]
  regions=1, blocks=3, points=94
    allocnos=66 (big 0), copies=0, conflicts=0, ranges=66
Disposition:
   62:r59  l0     8   61:r60  l0     1   47:r61  l0     1   57:r62  l0     0
   56:r63  l0    21   54:r64  l0   mem   52:r65  l0     8   51:r66  l0     9
   49:r67  l0     8   48:r68  l0     0   28:r69  l0     1   44:r70  l0     0
   43:r71  l0    21   41:r72  l0   mem   39:r73  l0     8   32:r74  l0     9
   37:r75  l0     0   36:r76  l0     0   35:r77  l0    21   33:r78  l0   mem
   31:r79  l0     8   30:r80  l0     8   29:r81  l0     0    2:r82  l0     1
   25:r83  l0     0   24:r84  l0    21   22:r85  l0   mem   20:r86  l0     8
   13:r87  l0     9   18:r88  l0     0   17:r89  l0     0   16:r90  l0    21
   14:r91  l0   mem   12:r92  l0     8    8:r93  l0     9   10:r94  l0     0
    9:r95  l0     0    7:r96  l0     8    6:r97  l0     9    4:r98  l0     8
    3:r99  l0     0    1:r100 l0     0    0:r101 l0     0   65:r102 l0     9
   64:r103 l0     8   60:r104 l0     0   59:r105 l0     0   58:r106 l0     0
   55:r107 l0    22   53:r108 l0     9   50:r109 l0     8   46:r110 l0     0
   45:r111 l0     0   42:r112 l0    22   40:r113 l0     9   38:r114 l0     0
   34:r115 l0    22   27:r116 l0     0   26:r117 l0     0   23:r118 l0    22
   21:r119 l0     9   19:r120 l0     0   15:r121 l0    22   11:r122 l0     0
    5:r123 l0     8   63:r125 l0     0
+++Costs: overall 114, reg 19, mem 95, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


time_to_int

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags] 19[fpcr]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,5u} r17={7d} r19={1u} r20={1d,29u,6e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r125={2d,2u} 
;;    total ref usage 209{94d,109u,6e} in 76{76 regular + 0 call} insns.
(note 1 0 91 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [fpcr] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [fpcr] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 125
(note 91 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 91 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
        (reg:DI 5 di [ T ])) mUtility.c:479 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ T ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:XF 102)
        (mem/c:XF (reg/f:DI 16 argp) [0 time+0 S16 A128])) mUtility.c:481 131 {*movxf_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:XF 103)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S16 A128])) mUtility.c:481 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 8 7 95 2 (set (reg:XF 59 [ D.5160 ])
        (div:XF (reg:XF 102)
            (reg:XF 103))) mUtility.c:481 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 103)
        (expr_list:REG_DEAD (reg:XF 102)
            (nil))))
(insn 95 8 96 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0  S2 A16])
        (unspec:HI [
                (reg:HI 19 fpcr)
            ] UNSPEC_FSTCW)) mUtility.c:481 199 {x86_fnstcw_1}
     (expr_list:REG_DEAD (reg:HI 19 fpcr)
        (nil)))
(insn 96 95 97 2 (set (reg:HI 125)
        (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0  S2 A16])) mUtility.c:481 90 {*movhi_internal}
     (nil))
(insn 97 96 98 2 (parallel [
            (set (reg:HI 125)
                (ior:HI (reg:HI 125)
                    (const_int 3072 [0xc00])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:481 410 {*iorhi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 86 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0  S2 A16])
        (reg:HI 125)) mUtility.c:481 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 125)
        (nil)))
(insn 86 98 10 2 (parallel [
            (set (reg:SI 60 [ D.5161 ])
                (fix:SI (reg:XF 59 [ D.5160 ])))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -10 [0xfffffffffffffff6])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S2 A16]))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S4 A32]))
        ]) mUtility.c:481 198 {fix_truncsi_i387_with_temp}
     (expr_list:REG_DEAD (reg:XF 59 [ D.5160 ])
        (nil)))
(insn 10 86 11 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:481 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 104) [0 *T_4(D)+0 S4 A32])
        (reg:SI 60 [ D.5161 ])) mUtility.c:481 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_DEAD (reg:SI 60 [ D.5161 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:482 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 61 [ D.5162 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:482 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:482 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:SI 62 [ D.5161 ])
        (mem:SI (reg/f:DI 106) [0 *T_4(D)+0 S4 A32])) mUtility.c:482 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 16 15 17 2 (set (reg:DF 63 [ D.5163 ])
        (float:DF (reg:SI 62 [ D.5161 ]))) mUtility.c:482 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 62 [ D.5161 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DF 107)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S8 A64])) mUtility.c:482 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 18 17 19 2 (set (reg:DF 64 [ D.5163 ])
        (mult:DF (reg:DF 63 [ D.5163 ])
            (reg:DF 107))) mUtility.c:482 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 107)
        (expr_list:REG_DEAD (reg:DF 63 [ D.5163 ])
            (nil))))
(insn 19 18 20 2 (set (reg:XF 65 [ D.5160 ])
        (float_extend:XF (reg:DF 64 [ D.5163 ]))) mUtility.c:482 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 64 [ D.5163 ])
        (nil)))
(insn 20 19 21 2 (set (reg:XF 108)
        (mem/c:XF (reg/f:DI 16 argp) [0 time+0 S16 A128])) mUtility.c:482 131 {*movxf_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:XF 66 [ D.5160 ])
        (minus:XF (reg:XF 108)
            (reg:XF 65 [ D.5160 ]))) mUtility.c:482 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 108)
        (expr_list:REG_DEAD (reg:XF 65 [ D.5160 ])
            (nil))))
(insn 22 21 23 2 (set (reg:XF 109)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S16 A128])) mUtility.c:482 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 23 22 87 2 (set (reg:XF 67 [ D.5160 ])
        (div:XF (reg:XF 66 [ D.5160 ])
            (reg:XF 109))) mUtility.c:482 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 109)
        (expr_list:REG_DEAD (reg:XF 66 [ D.5160 ])
            (nil))))
(insn 87 23 25 2 (parallel [
            (set (reg:SI 68 [ D.5161 ])
                (fix:SI (reg:XF 67 [ D.5160 ])))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -10 [0xfffffffffffffff6])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S2 A16]))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S4 A32]))
        ]) mUtility.c:482 198 {fix_truncsi_i387_with_temp}
     (expr_list:REG_DEAD (reg:XF 67 [ D.5160 ])
        (nil)))
(insn 25 87 26 2 (set (mem:SI (reg/f:DI 61 [ D.5162 ]) [0 *_5+0 S4 A32])
        (reg:SI 68 [ D.5161 ])) mUtility.c:482 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 68 [ D.5161 ])
        (expr_list:REG_DEAD (reg/f:DI 61 [ D.5162 ])
            (nil))))
(insn 26 25 27 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:483 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 69 [ D.5162 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:483 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 28 27 29 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:483 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:SI 70 [ D.5161 ])
        (mem:SI (reg/f:DI 111) [0 *T_4(D)+0 S4 A32])) mUtility.c:483 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 30 29 31 2 (set (reg:DF 71 [ D.5163 ])
        (float:DF (reg:SI 70 [ D.5161 ]))) mUtility.c:483 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 70 [ D.5161 ])
        (nil)))
(insn 31 30 32 2 (set (reg:DF 112)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S8 A64])) mUtility.c:483 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 32 31 33 2 (set (reg:DF 72 [ D.5163 ])
        (mult:DF (reg:DF 71 [ D.5163 ])
            (reg:DF 112))) mUtility.c:483 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 112)
        (expr_list:REG_DEAD (reg:DF 71 [ D.5163 ])
            (nil))))
(insn 33 32 34 2 (set (reg:XF 73 [ D.5160 ])
        (float_extend:XF (reg:DF 72 [ D.5163 ]))) mUtility.c:483 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 72 [ D.5163 ])
        (nil)))
(insn 34 33 35 2 (set (reg:XF 113)
        (mem/c:XF (reg/f:DI 16 argp) [0 time+0 S16 A128])) mUtility.c:483 131 {*movxf_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:XF 74 [ D.5160 ])
        (minus:XF (reg:XF 113)
            (reg:XF 73 [ D.5160 ]))) mUtility.c:483 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 113)
        (expr_list:REG_DEAD (reg:XF 73 [ D.5160 ])
            (nil))))
(insn 36 35 37 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:483 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg/f:DI 75 [ D.5162 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:483 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 38 37 39 2 (set (reg:SI 76 [ D.5161 ])
        (mem:SI (reg/f:DI 75 [ D.5162 ]) [0 *_19+0 S4 A32])) mUtility.c:483 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 75 [ D.5162 ])
        (nil)))
(insn 39 38 40 2 (set (reg:DF 77 [ D.5163 ])
        (float:DF (reg:SI 76 [ D.5161 ]))) mUtility.c:483 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 76 [ D.5161 ])
        (nil)))
(insn 40 39 41 2 (set (reg:DF 115)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S8 A64])) mUtility.c:483 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 41 40 42 2 (set (reg:DF 78 [ D.5163 ])
        (mult:DF (reg:DF 77 [ D.5163 ])
            (reg:DF 115))) mUtility.c:483 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 115)
        (expr_list:REG_DEAD (reg:DF 77 [ D.5163 ])
            (nil))))
(insn 42 41 43 2 (set (reg:XF 79 [ D.5160 ])
        (float_extend:XF (reg:DF 78 [ D.5163 ]))) mUtility.c:483 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 78 [ D.5163 ])
        (nil)))
(insn 43 42 88 2 (set (reg:XF 80 [ D.5160 ])
        (minus:XF (reg:XF 74 [ D.5160 ])
            (reg:XF 79 [ D.5160 ]))) mUtility.c:483 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 79 [ D.5160 ])
        (expr_list:REG_DEAD (reg:XF 74 [ D.5160 ])
            (nil))))
(insn 88 43 45 2 (parallel [
            (set (reg:SI 81 [ D.5161 ])
                (fix:SI (reg:XF 80 [ D.5160 ])))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -10 [0xfffffffffffffff6])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S2 A16]))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S4 A32]))
        ]) mUtility.c:483 198 {fix_truncsi_i387_with_temp}
     (expr_list:REG_DEAD (reg:XF 80 [ D.5160 ])
        (nil)))
(insn 45 88 46 2 (set (mem:SI (reg/f:DI 69 [ D.5162 ]) [0 *_13+0 S4 A32])
        (reg:SI 81 [ D.5161 ])) mUtility.c:483 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 81 [ D.5161 ])
        (expr_list:REG_DEAD (reg/f:DI 69 [ D.5162 ])
            (nil))))
(insn 46 45 47 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:484 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg/f:DI 82 [ D.5162 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:484 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 48 47 49 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:484 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 2 (set (reg:SI 83 [ D.5161 ])
        (mem:SI (reg/f:DI 117) [0 *T_4(D)+0 S4 A32])) mUtility.c:484 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 50 49 51 2 (set (reg:DF 84 [ D.5163 ])
        (float:DF (reg:SI 83 [ D.5161 ]))) mUtility.c:484 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 83 [ D.5161 ])
        (nil)))
(insn 51 50 52 2 (set (reg:DF 118)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S8 A64])) mUtility.c:484 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 3.6e+3 [0x0.e1p+12])
        (nil)))
(insn 52 51 53 2 (set (reg:DF 85 [ D.5163 ])
        (mult:DF (reg:DF 84 [ D.5163 ])
            (reg:DF 118))) mUtility.c:484 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 118)
        (expr_list:REG_DEAD (reg:DF 84 [ D.5163 ])
            (nil))))
(insn 53 52 54 2 (set (reg:XF 86 [ D.5160 ])
        (float_extend:XF (reg:DF 85 [ D.5163 ]))) mUtility.c:484 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 85 [ D.5163 ])
        (nil)))
(insn 54 53 55 2 (set (reg:XF 119)
        (mem/c:XF (reg/f:DI 16 argp) [0 time+0 S16 A128])) mUtility.c:484 131 {*movxf_internal_rex64}
     (nil))
(insn 55 54 56 2 (set (reg:XF 87 [ D.5160 ])
        (minus:XF (reg:XF 119)
            (reg:XF 86 [ D.5160 ]))) mUtility.c:484 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 119)
        (expr_list:REG_DEAD (reg:XF 86 [ D.5160 ])
            (nil))))
(insn 56 55 57 2 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:484 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 2 (parallel [
            (set (reg/f:DI 88 [ D.5162 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:484 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 58 57 59 2 (set (reg:SI 89 [ D.5161 ])
        (mem:SI (reg/f:DI 88 [ D.5162 ]) [0 *_32+0 S4 A32])) mUtility.c:484 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.5162 ])
        (nil)))
(insn 59 58 60 2 (set (reg:DF 90 [ D.5163 ])
        (float:DF (reg:SI 89 [ D.5161 ]))) mUtility.c:484 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 89 [ D.5161 ])
        (nil)))
(insn 60 59 61 2 (set (reg:DF 121)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S8 A64])) mUtility.c:484 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 6.0e+1 [0x0.fp+6])
        (nil)))
(insn 61 60 62 2 (set (reg:DF 91 [ D.5163 ])
        (mult:DF (reg:DF 90 [ D.5163 ])
            (reg:DF 121))) mUtility.c:484 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 121)
        (expr_list:REG_DEAD (reg:DF 90 [ D.5163 ])
            (nil))))
(insn 62 61 63 2 (set (reg:XF 92 [ D.5160 ])
        (float_extend:XF (reg:DF 91 [ D.5163 ]))) mUtility.c:484 162 {*extenddfxf2_i387}
     (expr_list:REG_DEAD (reg:DF 91 [ D.5163 ])
        (nil)))
(insn 63 62 64 2 (set (reg:XF 93 [ D.5160 ])
        (minus:XF (reg:XF 87 [ D.5160 ])
            (reg:XF 92 [ D.5160 ]))) mUtility.c:484 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 92 [ D.5160 ])
        (expr_list:REG_DEAD (reg:XF 87 [ D.5160 ])
            (nil))))
(insn 64 63 65 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])) mUtility.c:484 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 2 (parallel [
            (set (reg/f:DI 94 [ D.5162 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) mUtility.c:484 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 T+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 66 65 89 2 (set (reg:SI 95 [ D.5161 ])
        (mem:SI (reg/f:DI 94 [ D.5162 ]) [0 *_38+0 S4 A32])) mUtility.c:484 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.5162 ])
        (nil)))
(insn 89 66 68 2 (parallel [
            (set (reg:XF 96 [ D.5160 ])
                (float:XF (reg:SI 95 [ D.5161 ])))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S4 A32]))
        ]) mUtility.c:484 250 {*floatsixf2_i387_with_temp}
     (expr_list:REG_DEAD (reg:SI 95 [ D.5161 ])
        (nil)))
(insn 68 89 69 2 (set (reg:XF 97 [ D.5160 ])
        (minus:XF (reg:XF 93 [ D.5160 ])
            (reg:XF 96 [ D.5160 ]))) mUtility.c:484 800 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 96 [ D.5160 ])
        (expr_list:REG_DEAD (reg:XF 93 [ D.5160 ])
            (nil))))
(insn 69 68 70 2 (set (reg:XF 123)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S16 A128])) mUtility.c:484 131 {*movxf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 70 69 90 2 (set (reg:XF 98 [ D.5160 ])
        (mult:XF (reg:XF 97 [ D.5160 ])
            (reg:XF 123))) mUtility.c:484 799 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 123)
        (expr_list:REG_DEAD (reg:XF 97 [ D.5160 ])
            (nil))))
(insn 90 70 72 2 (parallel [
            (set (reg:SI 99 [ D.5161 ])
                (fix:SI (reg:XF 98 [ D.5160 ])))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -10 [0xfffffffffffffff6])) [0  S2 A16]))
            (use (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0  S2 A16]))
            (clobber (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0  S4 A32]))
        ]) mUtility.c:484 198 {fix_truncsi_i387_with_temp}
     (expr_list:REG_DEAD (reg:XF 98 [ D.5160 ])
        (nil)))
(insn 72 90 73 2 (set (mem:SI (reg/f:DI 82 [ D.5162 ]) [0 *_26+0 S4 A32])
        (reg:SI 99 [ D.5161 ])) mUtility.c:484 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ D.5161 ])
        (expr_list:REG_DEAD (reg/f:DI 82 [ D.5162 ])
            (nil))))
(insn 73 72 76 2 (set (reg:SI 100 [ D.5161 ])
        (const_int 1 [0x1])) mUtility.c:486 89 {*movsi_internal}
     (nil))
(insn 76 73 92 2 (set (reg:SI 101 [ <retval> ])
        (reg:SI 100 [ D.5161 ])) mUtility.c:486 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.5161 ])
        (nil)))
(note 92 76 80 2 NOTE_INSN_DELETED)
(insn 80 92 83 2 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) mUtility.c:487 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ <retval> ])
        (nil)))
(insn 83 80 0 2 (use (reg/i:SI 0 ax)) mUtility.c:487 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

